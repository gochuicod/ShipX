(globalThis["webpackChunkshipx_theme"] = globalThis["webpackChunkshipx_theme"] || []).push([["vendors-node_modules_material-tailwind_react_index_js-node_modules_react-countup_build_index_-791a35"],{

/***/ "./node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _emotion_memoize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/memoize */ "./node_modules/@emotion/memoize/dist/memoize.browser.esm.js");


var reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/; // https://esbench.com/bench/5bfee68a4cd7e6009ef61d23

var index = (0,_emotion_memoize__WEBPACK_IMPORTED_MODULE_0__["default"])(function (prop) {
  return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111
  /* o */
  && prop.charCodeAt(1) === 110
  /* n */
  && prop.charCodeAt(2) < 91;
}
/* Z+1 */
);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (index);


/***/ }),

/***/ "./node_modules/@emotion/memoize/dist/memoize.browser.esm.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@emotion/memoize/dist/memoize.browser.esm.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function memoize(fn) {
  var cache = {};
  return function (arg) {
    if (cache[arg] === undefined) cache[arg] = fn(arg);
    return cache[arg];
  };
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (memoize);


/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Accordion/AccordionBody.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Accordion/AccordionBody.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{AccordionBody:function(){return AccordionBody},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _framerMotion=__webpack_require__(/*! framer-motion */ "./node_modules/framer-motion/dist/cjs/index.js");var _classnames=_interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));var _deepmerge=_interopRequireDefault(__webpack_require__(/*! deepmerge */ "./node_modules/deepmerge/dist/cjs.js"));var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _accordionContext=__webpack_require__(/*! ./AccordionContext */ "./node_modules/@material-tailwind/react/components/Accordion/AccordionContext.js");var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _accordion=__webpack_require__(/*! ../../types/components/accordion */ "./node_modules/@material-tailwind/react/types/components/accordion.js");function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var AccordionBody=_react.default.forwardRef(function(_param,ref){var className=_param.className,children=_param.children,rest=_objectWithoutProperties(_param,["className","children"]);var _useAccordion=(0,_accordionContext.useAccordion)(),open=_useAccordion.open,animate=_useAccordion.animate;var accordion=(0,_theme.useTheme)().accordion;var base=accordion.styles.base;className=className!==null&&className!==void 0?className:"";var bodyClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(base.body)),className);var heightAnimation={unmount:{height:"0px",transition:{duration:.2,times:[.4,0,.2,1]}},mount:{height:"auto",transition:{duration:.2,times:[.4,0,.2,1]}}};var mainAnimation={unmount:{transition:{duration:.3,ease:"linear"}},mount:{transition:{duration:.3,ease:"linear"}}};var appliedAnimation=(0,_deepmerge.default)(heightAnimation,animate);return _react.default.createElement(_framerMotion.LazyMotion,{features:_framerMotion.domAnimation},_react.default.createElement(_framerMotion.m.div,{className:"overflow-hidden",initial:"unmount",exit:"unmount",animate:open?"mount":"unmount",variants:appliedAnimation},_react.default.createElement(_framerMotion.m.div,_extends({},rest,{ref:ref,className:bodyClasses,initial:"unmount",exit:"unmount",animate:open?"mount":"unmount",variants:mainAnimation}),children)))});AccordionBody.propTypes={className:_accordion.propTypesClassName,children:_accordion.propTypesChildren};AccordionBody.displayName="MaterialTailwind.AccordionBody";var _default=AccordionBody;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Accordion/AccordionContext.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Accordion/AccordionContext.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{AccordionContext:function(){return AccordionContext},useAccordion:function(){return useAccordion},AccordionContextProvider:function(){return AccordionContextProvider}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _accordion=__webpack_require__(/*! ../../types/components/accordion */ "./node_modules/@material-tailwind/react/types/components/accordion.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var AccordionContext=_react.default.createContext(null);AccordionContext.displayName="MaterialTailwind.AccordionContext";function useAccordion(){var context=_react.default.useContext(AccordionContext);if(!context){throw new Error("useAccordion() must be used within an Accordion. It happens when you use AccordionHeader or AccordionBody components outside the Accordion component.")}return context}var AccordionContextProvider=function(param){var value=param.value,children=param.children;return _react.default.createElement(AccordionContext.Provider,{value:value},children)};AccordionContextProvider.propTypes={value:_accordion.propTypesValue,children:_accordion.propTypesChildren};AccordionContextProvider.displayName="MaterialTailwind.AccordionContextProvider";

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Accordion/AccordionHeader.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Accordion/AccordionHeader.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{AccordionHeader:function(){return AccordionHeader},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _classnames=_interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _accordionContext=__webpack_require__(/*! ./AccordionContext */ "./node_modules/@material-tailwind/react/components/Accordion/AccordionContext.js");var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _accordion=__webpack_require__(/*! ../../types/components/accordion */ "./node_modules/@material-tailwind/react/types/components/accordion.js");function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var AccordionHeader=_react.default.forwardRef(function(_param,ref){var className=_param.className,children=_param.children,rest=_objectWithoutProperties(_param,["className","children"]);var _useAccordion=(0,_accordionContext.useAccordion)(),open=_useAccordion.open,icon=_useAccordion.icon,disabled=_useAccordion.disabled;var accordion=(0,_theme.useTheme)().accordion;var base=accordion.styles.base;className=className!==null&&className!==void 0?className:"";var buttonStyles=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(base.header.initial),_defineProperty({},(0,_objectsToString.default)(base.header.active),open)),className);var iconClasses=(0,_classnames.default)((0,_objectsToString.default)(base.header.icon));return _react.default.createElement("button",_extends({},rest,{ref:ref,type:"button",disabled:disabled,className:buttonStyles}),children,_react.default.createElement("span",{className:iconClasses},icon!==null&&icon!==void 0?icon:open?_react.default.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 20 20",fill:"currentColor"},_react.default.createElement("path",{fillRule:"evenodd",d:"M5 10a1 1 0 011-1h8a1 1 0 110 2H6a1 1 0 01-1-1z",clipRule:"evenodd"})):_react.default.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 20 20",fill:"currentColor"},_react.default.createElement("path",{fillRule:"evenodd",d:"M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z",clipRule:"evenodd"}))))});AccordionHeader.propTypes={className:_accordion.propTypesClassName,children:_accordion.propTypesChildren};AccordionHeader.displayName="MaterialTailwind.AccordionHeader";var _default=AccordionHeader;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Accordion/index.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Accordion/index.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{Accordion:function(){return Accordion},AccordionHeader:function(){return _accordionHeader.AccordionHeader},AccordionBody:function(){return _accordionBody.AccordionBody},useAccordion:function(){return _accordionContext.useAccordion},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _classnames=_interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _accordionContext=__webpack_require__(/*! ./AccordionContext */ "./node_modules/@material-tailwind/react/components/Accordion/AccordionContext.js");var _accordion=__webpack_require__(/*! ../../types/components/accordion */ "./node_modules/@material-tailwind/react/types/components/accordion.js");var _accordionHeader=__webpack_require__(/*! ./AccordionHeader */ "./node_modules/@material-tailwind/react/components/Accordion/AccordionHeader.js");var _accordionBody=__webpack_require__(/*! ./AccordionBody */ "./node_modules/@material-tailwind/react/components/Accordion/AccordionBody.js");function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var Accordion=_react.default.forwardRef(function(_param,ref){var open=_param.open,icon=_param.icon,animate=_param.animate,className=_param.className,disabled=_param.disabled,children=_param.children,rest=_objectWithoutProperties(_param,["open","icon","animate","className","disabled","children"]);var accordion=(0,_theme.useTheme)().accordion;var defaultProps=accordion.defaultProps,base=accordion.styles.base;icon=icon!==null&&icon!==void 0?icon:defaultProps.icon;animate=animate!==null&&animate!==void 0?animate:defaultProps.animate;disabled=disabled!==null&&disabled!==void 0?disabled:defaultProps.disabled;className=(0,_tailwindMerge.twMerge)(defaultProps.className||"",className);var accordionClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(base.container),_defineProperty({},(0,_objectsToString.default)(base.disabled),disabled)),className);var contextValue=_react.default.useMemo(function(){return{open:open,icon:icon,animate:animate,disabled:disabled}},[open,icon,animate,disabled]);return _react.default.createElement(_accordionContext.AccordionContextProvider,{value:contextValue},_react.default.createElement("div",_extends({},rest,{ref:ref,className:accordionClasses}),children))});Accordion.propTypes={open:_accordion.propTypesOpen,icon:_accordion.propTypesIcon,animate:_accordion.propTypesAnimate,disabled:_accordion.propTypesDisabled,className:_accordion.propTypesClassName,children:_accordion.propTypesChildren};Accordion.displayName="MaterialTailwind.Accordion";var _default=Object.assign(Accordion,{Header:_accordionHeader.AccordionHeader,Body:_accordionBody.AccordionBody});

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Alert/index.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Alert/index.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{Alert:function(){return Alert},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _framerMotion=__webpack_require__(/*! framer-motion */ "./node_modules/framer-motion/dist/cjs/index.js");var _classnames=_interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));var _deepmerge=_interopRequireDefault(__webpack_require__(/*! deepmerge */ "./node_modules/deepmerge/dist/cjs.js"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _findMatch=_interopRequireDefault(__webpack_require__(/*! ../../utils/findMatch */ "./node_modules/@material-tailwind/react/utils/findMatch.js"));var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _alert=__webpack_require__(/*! ../../types/components/alert */ "./node_modules/@material-tailwind/react/types/components/alert.js");var _iconButton=_interopRequireDefault(__webpack_require__(/*! ../IconButton */ "./node_modules/@material-tailwind/react/components/IconButton/index.js"));function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var Alert=_react.default.forwardRef(function(_param,ref){var variant=_param.variant,color=_param.color,icon=_param.icon,open=_param.open,action=_param.action,onClose=_param.onClose,animate=_param.animate,className=_param.className,children=_param.children,rest=_objectWithoutProperties(_param,["variant","color","icon","open","action","onClose","animate","className","children"]);var alert=(0,_theme.useTheme)().alert;var defaultProps=alert.defaultProps,valid=alert.valid,styles=alert.styles;var base=styles.base,variants=styles.variants;variant=variant!==null&&variant!==void 0?variant:defaultProps.variant;color=color!==null&&color!==void 0?color:defaultProps.color;animate=animate!==null&&animate!==void 0?animate:defaultProps.animate;open=open!==null&&open!==void 0?open:defaultProps.open;action=action!==null&&action!==void 0?action:defaultProps.action;onClose=onClose!==null&&onClose!==void 0?onClose:defaultProps.onClose;className=(0,_tailwindMerge.twMerge)(defaultProps.className||"",className);var alertBase=(0,_objectsToString.default)(base.alert);var alertAction=(0,_objectsToString.default)(base.action);var alertVariant=(0,_objectsToString.default)(variants[(0,_findMatch.default)(valid.variants,variant,"filled")][(0,_findMatch.default)(valid.colors,color,"gray")]);var classes=(0,_tailwindMerge.twMerge)((0,_classnames.default)(alertBase,alertVariant),className);var actionClasses=(0,_classnames.default)(alertAction);var mainAnimation={unmount:{opacity:0},mount:{opacity:1}};var appliedAnimation=(0,_deepmerge.default)(mainAnimation,animate);var iconTemplate=_react.default.createElement("div",{className:"shrink-0"},icon);var NewAnimatePresence=_framerMotion.AnimatePresence;return _react.default.createElement(_framerMotion.LazyMotion,{features:_framerMotion.domAnimation},_react.default.createElement(NewAnimatePresence,null,open&&_react.default.createElement(_framerMotion.m.div,_extends({},rest,{ref:ref,role:"alert",className:"".concat(classes," flex"),initial:"unmount",exit:"unmount",animate:open?"mount":"unmount",variants:appliedAnimation}),icon&&iconTemplate,_react.default.createElement("div",{className:"".concat(icon?"ml-3":""," mr-12")},children),onClose&&!action&&_react.default.createElement(_iconButton.default,{onClick:onClose,size:"sm",variant:"text",color:variant==="outlined"||variant==="ghost"?color:"white",className:actionClasses},_react.default.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24",stroke:"currentColor",className:"h-6 w-6",strokeWidth:2},_react.default.createElement("path",{strokeLinecap:"round",strokeLinejoin:"round",d:"M6 18L18 6M6 6l12 12"}))),action||null)))});Alert.propTypes={variant:_propTypes.default.oneOf(_alert.propTypesVariant),color:_propTypes.default.oneOf(_alert.propTypesColor),icon:_alert.propTypesIcon,open:_alert.propTypesOpen,action:_alert.propTypesAction,onClose:_alert.propTypesOnClose,animate:_alert.propTypesAnimate,className:_alert.propTypesClassName,children:_alert.propTypesChildren};Alert.displayName="MaterialTailwind.Alert";var _default=Alert;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Avatar/index.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Avatar/index.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{Avatar:function(){return Avatar},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _classnames=_interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _findMatch=_interopRequireDefault(__webpack_require__(/*! ../../utils/findMatch */ "./node_modules/@material-tailwind/react/utils/findMatch.js"));var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _avatar=__webpack_require__(/*! ../../types/components/avatar */ "./node_modules/@material-tailwind/react/types/components/avatar.js");function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var Avatar=_react.default.forwardRef(function(_param,ref){var variant=_param.variant,size=_param.size,className=_param.className,color=_param.color,withBorder=_param.withBorder,rest=_objectWithoutProperties(_param,["variant","size","className","color","withBorder"]);var avatar=(0,_theme.useTheme)().avatar;var valid=avatar.valid,defaultProps=avatar.defaultProps,styles=avatar.styles;var base=styles.base,variants=styles.variants,sizes=styles.sizes,borderColor=styles.borderColor;variant=variant!==null&&variant!==void 0?variant:defaultProps.variant;size=size!==null&&size!==void 0?size:defaultProps.size;withBorder=withBorder!==null&&withBorder!==void 0?withBorder:defaultProps.withBorder;color=color!==null&&color!==void 0?color:defaultProps.color;className=(0,_tailwindMerge.twMerge)(defaultProps.className||"",className);var avatarVariant=(0,_objectsToString.default)(variants[(0,_findMatch.default)(valid.variants,variant,"rounded")]);var avatarSize=(0,_objectsToString.default)(sizes[(0,_findMatch.default)(valid.sizes,size,"md")]);var avatarBorderColor=(0,_objectsToString.default)(borderColor[(0,_findMatch.default)(valid.colors,color,"gray")]);var _obj;var classes=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(base.initial),avatarVariant,avatarSize,(_obj={},_defineProperty(_obj,(0,_objectsToString.default)(base.withBorder),withBorder),_defineProperty(_obj,avatarBorderColor,withBorder),_obj)),className);return _react.default.createElement("img",_extends({},rest,{ref:ref,className:classes}))});Avatar.propTypes={variant:_propTypes.default.oneOf(_avatar.propTypesVariant),size:_propTypes.default.oneOf(_avatar.propTypesSize),className:_avatar.propTypesClassName,withBorder:_avatar.propTypesWithBorder,color:_propTypes.default.oneOf(_avatar.propTypesColor)};Avatar.displayName="MaterialTailwind.Avatar";var _default=Avatar;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Badge/index.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Badge/index.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{Badge:function(){return Badge},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _deepmerge=_interopRequireDefault(__webpack_require__(/*! deepmerge */ "./node_modules/deepmerge/dist/cjs.js"));var _classnames=_interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _findMatch=_interopRequireDefault(__webpack_require__(/*! ../../utils/findMatch */ "./node_modules/@material-tailwind/react/utils/findMatch.js"));var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _badge=__webpack_require__(/*! ../../types/components/badge */ "./node_modules/@material-tailwind/react/types/components/badge.js");function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var Badge=_react.default.forwardRef(function(_param,ref){var color=_param.color,invisible=_param.invisible,withBorder=_param.withBorder,overlap=_param.overlap,placement=_param.placement,className=_param.className,content=_param.content,children=_param.children,containerProps=_param.containerProps,containerRef=_param.containerRef,rest=_objectWithoutProperties(_param,["color","invisible","withBorder","overlap","placement","className","content","children","containerProps","containerRef"]);var badge=(0,_theme.useTheme)().badge;var valid=badge.valid,defaultProps=badge.defaultProps,styles=badge.styles;var base=styles.base,placements=styles.placements,colors=styles.colors;color=color!==null&&color!==void 0?color:defaultProps.color;invisible=invisible!==null&&invisible!==void 0?invisible:defaultProps.invisible;withBorder=withBorder!==null&&withBorder!==void 0?withBorder:defaultProps.withBorder;overlap=overlap!==null&&overlap!==void 0?overlap:defaultProps.overlap;placement=placement!==null&&placement!==void 0?placement:defaultProps.placement;className=(0,_tailwindMerge.twMerge)(defaultProps.className||"",className);var _merge;containerProps=(_merge=(0,_deepmerge.default)(containerProps,defaultProps.containerProps||{}))!==null&&_merge!==void 0?_merge:defaultProps.containerProps;var badgeInitialClasses=(0,_objectsToString.default)(base.badge.initial);var badgeWithBorderClasses=(0,_objectsToString.default)(base.badge.withBorder);var badgeWithContentClasses=(0,_objectsToString.default)(base.badge.withContent);var badgeColorClasses=(0,_objectsToString.default)(colors[(0,_findMatch.default)(valid.colors,color,"red")]);var badgePlacementClasses=(0,_objectsToString.default)(placements[(0,_findMatch.default)(valid.placements,placement,"top-end")][(0,_findMatch.default)(valid.overlaps,overlap,"square")]);var _obj;var badgeClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)(badgeInitialClasses,badgePlacementClasses,badgeColorClasses,(_obj={},_defineProperty(_obj,badgeWithBorderClasses,withBorder),_defineProperty(_obj,badgeWithContentClasses,content),_obj)),className);var badgeContainerClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(base.container),containerProps===null||containerProps===void 0?void 0:containerProps.className));return _react.default.createElement("div",_extends({ref:containerRef},containerProps,{className:badgeContainerClasses}),children,!invisible&&_react.default.createElement("span",_extends({},rest,{ref:ref,className:badgeClasses}),content))});Badge.propTypes={color:_propTypes.default.oneOf(_badge.propTypesColor),invisible:_badge.propTypesInvisible,withBorder:_badge.propTypesWithBorder,overlap:_propTypes.default.oneOf(_badge.propTypesOverlap),className:_badge.propTypesClassName,content:_badge.propTypesContent,children:_badge.propTypesChildren,placement:_propTypes.default.oneOf(_badge.propTypesPlacement),containerProps:_badge.propTypesContainerProps,containerRef:_badge.propTypesContainerRef};Badge.displayName="MaterialTailwind.Badge";var _default=Badge;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Breadcrumbs/index.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Breadcrumbs/index.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{Breadcrumbs:function(){return Breadcrumbs},default:function(){return _default}});var _react=_interopRequireWildcard(__webpack_require__(/*! react */ "react"));var _classnames=_interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _breadcrumbs=__webpack_require__(/*! ../../types/components/breadcrumbs */ "./node_modules/@material-tailwind/react/types/components/breadcrumbs.js");function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!=="function")return null;var cacheBabelInterop=new WeakMap;var cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj}if(obj===null||typeof obj!=="object"&&typeof obj!=="function"){return{default:obj}}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj)}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!=="default"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc)}else{newObj[key]=obj[key]}}}newObj.default=obj;if(cache){cache.set(obj,newObj)}return newObj}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var Breadcrumbs=(0,_react.forwardRef)(function(_param,ref){var separator=_param.separator,fullWidth=_param.fullWidth,className=_param.className,children=_param.children,rest=_objectWithoutProperties(_param,["separator","fullWidth","className","children"]);var breadcrumbs=(0,_theme.useTheme)().breadcrumbs;var defaultProps=breadcrumbs.defaultProps,base=breadcrumbs.styles.base;separator=separator!==null&&separator!==void 0?separator:defaultProps.separator;fullWidth=fullWidth!==null&&fullWidth!==void 0?fullWidth:defaultProps.fullWidth;className=(0,_tailwindMerge.twMerge)(defaultProps.className||"",className);var breadcrumbsRootClasses=(0,_classnames.default)((0,_objectsToString.default)(base.root.initial),_defineProperty({},(0,_objectsToString.default)(base.root.fullWidth),fullWidth));var breadcrumbsListClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(base.list)),className);var breadcrumbsItemClasses=(0,_classnames.default)((0,_objectsToString.default)(base.item.initial));var breadcrumbsSeparatorClasses=(0,_classnames.default)((0,_objectsToString.default)(base.separator));return _react.default.createElement("nav",{"aria-label":"breadcrumb",className:breadcrumbsRootClasses},_react.default.createElement("ol",_extends({},rest,{ref:ref,className:breadcrumbsListClasses}),_react.Children.map(children,function(child,index){if((0,_react.isValidElement)(child)){var _child_props;return _react.default.createElement("li",{className:(0,_classnames.default)(breadcrumbsItemClasses,_defineProperty({},(0,_objectsToString.default)(base.item.disabled),child===null||child===void 0?void 0:(_child_props=child.props)===null||_child_props===void 0?void 0:_child_props.disabled))},child,index!==_react.Children.count(children)-1&&_react.default.createElement("span",{className:breadcrumbsSeparatorClasses},separator))}return null})))});Breadcrumbs.propTypes={separator:_breadcrumbs.propTypesSeparator,fullWidth:_breadcrumbs.propTypesFullWidth,className:_breadcrumbs.propTypesClassName,children:_breadcrumbs.propTypesChildren};Breadcrumbs.displayName="MaterialTailwind.Breadcrumbs";var _default=Breadcrumbs;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Button/index.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Button/index.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{Button:function(){return Button},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _materialRippleEffects=_interopRequireDefault(__webpack_require__(/*! material-ripple-effects */ "./node_modules/material-ripple-effects/index.js"));var _classnames=_interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _findMatch=_interopRequireDefault(__webpack_require__(/*! ../../utils/findMatch */ "./node_modules/@material-tailwind/react/utils/findMatch.js"));var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _spinner=_interopRequireDefault(__webpack_require__(/*! ../Spinner */ "./node_modules/@material-tailwind/react/components/Spinner/index.js"));var _button=__webpack_require__(/*! ../../types/components/button */ "./node_modules/@material-tailwind/react/types/components/button.js");function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var Button=_react.default.forwardRef(function(_param,ref){var variant=_param.variant,size=_param.size,color=_param.color,fullWidth=_param.fullWidth,ripple=_param.ripple,className=_param.className,children=_param.children,loading=_param.loading,rest=_objectWithoutProperties(_param,["variant","size","color","fullWidth","ripple","className","children","loading"]);var button=(0,_theme.useTheme)().button;var valid=button.valid,defaultProps=button.defaultProps,styles=button.styles;var base=styles.base,variants=styles.variants,sizes=styles.sizes;variant=variant!==null&&variant!==void 0?variant:defaultProps.variant;size=size!==null&&size!==void 0?size:defaultProps.size;color=color!==null&&color!==void 0?color:defaultProps.color;fullWidth=fullWidth!==null&&fullWidth!==void 0?fullWidth:defaultProps.fullWidth;ripple=ripple!==null&&ripple!==void 0?ripple:defaultProps.ripple;className=(0,_tailwindMerge.twMerge)(defaultProps.className||"",className);var rippleEffect=ripple!==undefined&&new _materialRippleEffects.default;var buttonBase=(0,_objectsToString.default)(base.initial);var buttonVariant=(0,_objectsToString.default)(variants[(0,_findMatch.default)(valid.variants,variant,"filled")][(0,_findMatch.default)(valid.colors,color,"gray")]);var buttonSize=(0,_objectsToString.default)(sizes[(0,_findMatch.default)(valid.sizes,size,"md")]);var classes=(0,_tailwindMerge.twMerge)((0,_classnames.default)(buttonBase,buttonSize,buttonVariant,_defineProperty({},(0,_objectsToString.default)(base.fullWidth),fullWidth),{"flex items-center gap-2":loading,"gap-3":size==="lg"}),className);var spinnerClass=(0,_tailwindMerge.twMerge)((0,_classnames.default)({"w-4 h-4":true,"w-5 h-5":size==="lg"}));var _rest_disabled;return _react.default.createElement("button",_extends({},rest,{disabled:(_rest_disabled=rest.disabled)!==null&&_rest_disabled!==void 0?_rest_disabled:loading,ref:ref,className:classes,type:rest.type||"button",onMouseDown:function(e){var onMouseDown=rest===null||rest===void 0?void 0:rest.onMouseDown;if(ripple){rippleEffect.create(e,(variant==="filled"||variant==="gradient")&&color!=="white"?"light":"dark")}return typeof onMouseDown==="function"&&onMouseDown(e)}}),loading&&_react.default.createElement(_spinner.default,{className:spinnerClass}),children)});Button.propTypes={variant:_propTypes.default.oneOf(_button.propTypesVariant),size:_propTypes.default.oneOf(_button.propTypesSize),color:_propTypes.default.oneOf(_button.propTypesColor),fullWidth:_button.propTypesFullWidth,ripple:_button.propTypesRipple,className:_button.propTypesClassName,children:_button.propTypesChildren,loading:_button.propTypesLoading};Button.displayName="MaterialTailwind.Button";var _default=Button;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/ButtonGroup/index.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/ButtonGroup/index.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{ButtonGroup:function(){return ButtonGroup},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _classnames=_interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _findMatch=_interopRequireDefault(__webpack_require__(/*! ../../utils/findMatch */ "./node_modules/@material-tailwind/react/utils/findMatch.js"));var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _button=__webpack_require__(/*! ../../types/components/button */ "./node_modules/@material-tailwind/react/types/components/button.js");function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var ButtonGroup=_react.default.forwardRef(function(_param,ref){var variant=_param.variant,size=_param.size,color=_param.color,fullWidth=_param.fullWidth,ripple=_param.ripple,className=_param.className,children=_param.children,rest=_objectWithoutProperties(_param,["variant","size","color","fullWidth","ripple","className","children"]);var buttonGroup=(0,_theme.useTheme)().buttonGroup;var defaultProps=buttonGroup.defaultProps,styles=buttonGroup.styles,valid=buttonGroup.valid;var base=styles.base,dividerColor=styles.dividerColor;variant=variant!==null&&variant!==void 0?variant:defaultProps.variant;size=size!==null&&size!==void 0?size:defaultProps.size;color=color!==null&&color!==void 0?color:defaultProps.color;ripple=ripple!==null&&ripple!==void 0?ripple:defaultProps.ripple;fullWidth=fullWidth!==null&&fullWidth!==void 0?fullWidth:defaultProps.fullWidth;className=(0,_tailwindMerge.twMerge)(defaultProps.className||"",className);var _obj;var classes=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(base.initial),(_obj={},_defineProperty(_obj,(0,_objectsToString.default)(base.fullWidth),fullWidth),_defineProperty(_obj,"divide-x",variant!=="outlined"),_defineProperty(_obj,(0,_objectsToString.default)(dividerColor[(0,_findMatch.default)(valid.colors,color,"gray")]),variant!=="outlined"),_obj)),className);return _react.default.createElement("div",_extends({},rest,{ref:ref,className:classes}),_react.default.Children.map(children,function(child,index){var _child_props;return _react.default.isValidElement(child)&&_react.default.cloneElement(child,{variant:variant,size:size,color:color,ripple:ripple,fullWidth:fullWidth,className:(0,_tailwindMerge.twMerge)((0,_classnames.default)({"rounded-r-none":index!==_react.default.Children.count(children)-1,"border-r-0":index!==_react.default.Children.count(children)-1,"rounded-l-none":index!==0}),(_child_props=child.props)===null||_child_props===void 0?void 0:_child_props.className)})}))});ButtonGroup.propTypes={variant:_propTypes.default.oneOf(_button.propTypesVariant),size:_propTypes.default.oneOf(_button.propTypesSize),color:_propTypes.default.oneOf(_button.propTypesColor),fullWidth:_button.propTypesFullWidth,ripple:_button.propTypesRipple,className:_button.propTypesClassName,children:_button.propTypesChildren};ButtonGroup.displayName="MaterialTailwind.ButtonGroup";var _default=ButtonGroup;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Card/CardBody.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Card/CardBody.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{CardBody:function(){return CardBody},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _classnames=_interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _card=__webpack_require__(/*! ../../types/components/card */ "./node_modules/@material-tailwind/react/types/components/card.js");function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var CardBody=_react.default.forwardRef(function(_param,ref){var className=_param.className,children=_param.children,rest=_objectWithoutProperties(_param,["className","children"]);var cardBody=(0,_theme.useTheme)().cardBody;var defaultProps=cardBody.defaultProps,base=cardBody.styles.base;className=(0,_tailwindMerge.twMerge)(defaultProps.className||"",className);var cardBodyClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(base)),className);return _react.default.createElement("div",_extends({},rest,{ref:ref,className:cardBodyClasses}),children)});CardBody.propTypes={className:_card.propTypesClassName,children:_card.propTypesChildren};CardBody.displayName="MaterialTailwind.CardBody";var _default=CardBody;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Card/CardFooter.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Card/CardFooter.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{CardFooter:function(){return CardFooter},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _classnames=_interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _card=__webpack_require__(/*! ../../types/components/card */ "./node_modules/@material-tailwind/react/types/components/card.js");function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var CardFooter=_react.default.forwardRef(function(_param,ref){var divider=_param.divider,className=_param.className,children=_param.children,rest=_objectWithoutProperties(_param,["divider","className","children"]);var cardFooter=(0,_theme.useTheme)().cardFooter;var defaultProps=cardFooter.defaultProps,base=cardFooter.styles.base;divider=divider!==null&&divider!==void 0?divider:defaultProps.divider;className=(0,_tailwindMerge.twMerge)(defaultProps.className||"",className);var cardFooterClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(base.initial),_defineProperty({},(0,_objectsToString.default)(base.divider),divider)),className);return _react.default.createElement("div",_extends({},rest,{ref:ref,className:cardFooterClasses}),children)});CardFooter.propTypes={divider:_card.propTypesDivider,className:_card.propTypesClassName,children:_card.propTypesChildren};CardFooter.displayName="MaterialTailwind.CardFooter";var _default=CardFooter;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Card/CardHeader.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Card/CardHeader.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{CardHeader:function(){return CardHeader},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _classnames=_interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _findMatch=_interopRequireDefault(__webpack_require__(/*! ../../utils/findMatch */ "./node_modules/@material-tailwind/react/utils/findMatch.js"));var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _card=__webpack_require__(/*! ../../types/components/card */ "./node_modules/@material-tailwind/react/types/components/card.js");function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var CardHeader=_react.default.forwardRef(function(_param,ref){var variant=_param.variant,color=_param.color,shadow=_param.shadow,floated=_param.floated,className=_param.className,children=_param.children,rest=_objectWithoutProperties(_param,["variant","color","shadow","floated","className","children"]);var cardHeader=(0,_theme.useTheme)().cardHeader;var defaultProps=cardHeader.defaultProps,styles=cardHeader.styles,valid=cardHeader.valid;var base=styles.base,variants=styles.variants;variant=variant!==null&&variant!==void 0?variant:defaultProps.variant;color=color!==null&&color!==void 0?color:defaultProps.color;shadow=shadow!==null&&shadow!==void 0?shadow:defaultProps.shadow;floated=floated!==null&&floated!==void 0?floated:defaultProps.floated;className=(0,_tailwindMerge.twMerge)(defaultProps.className||"",className);var cardHeaderRoot=(0,_objectsToString.default)(base.initial);var cardHeaderVariant=(0,_objectsToString.default)(variants[(0,_findMatch.default)(valid.variants,variant,"filled")][(0,_findMatch.default)(valid.colors,color,"white")]);var classes=(0,_tailwindMerge.twMerge)((0,_classnames.default)(cardHeaderRoot,cardHeaderVariant,_defineProperty({},(0,_objectsToString.default)(base.shadow),shadow),_defineProperty({},(0,_objectsToString.default)(base.floated),floated)),className);return _react.default.createElement("div",_extends({},rest,{ref:ref,className:classes}),children)});CardHeader.propTypes={variant:_propTypes.default.oneOf(_card.propTypesVariant),color:_propTypes.default.oneOf(_card.propTypesColor),shadow:_card.propTypesShadow,floated:_card.propTypesFloated,className:_card.propTypesClassName,children:_card.propTypesChildren};CardHeader.displayName="MaterialTailwind.CardHeader";var _default=CardHeader;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Card/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Card/index.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{Card:function(){return Card},CardHeader:function(){return _cardHeader.CardHeader},CardBody:function(){return _cardBody.CardBody},CardFooter:function(){return _cardFooter.CardFooter},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _classnames=_interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _findMatch=_interopRequireDefault(__webpack_require__(/*! ../../utils/findMatch */ "./node_modules/@material-tailwind/react/utils/findMatch.js"));var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _cardHeader=__webpack_require__(/*! ./CardHeader */ "./node_modules/@material-tailwind/react/components/Card/CardHeader.js");var _cardBody=__webpack_require__(/*! ./CardBody */ "./node_modules/@material-tailwind/react/components/Card/CardBody.js");var _cardFooter=__webpack_require__(/*! ./CardFooter */ "./node_modules/@material-tailwind/react/components/Card/CardFooter.js");var _card=__webpack_require__(/*! ../../types/components/card */ "./node_modules/@material-tailwind/react/types/components/card.js");function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var Card=_react.default.forwardRef(function(_param,ref){var variant=_param.variant,color=_param.color,shadow=_param.shadow,className=_param.className,children=_param.children,rest=_objectWithoutProperties(_param,["variant","color","shadow","className","children"]);var card=(0,_theme.useTheme)().card;var defaultProps=card.defaultProps,styles=card.styles,valid=card.valid;var base=styles.base,variants=styles.variants;variant=variant!==null&&variant!==void 0?variant:defaultProps.variant;color=color!==null&&color!==void 0?color:defaultProps.color;shadow=shadow!==null&&shadow!==void 0?shadow:defaultProps.shadow;className=(0,_tailwindMerge.twMerge)(defaultProps.className||"",className);var cardRoot=(0,_objectsToString.default)(base.initial);var cardVariant=(0,_objectsToString.default)(variants[(0,_findMatch.default)(valid.variants,variant,"filled")][(0,_findMatch.default)(valid.colors,color,"white")]);var classes=(0,_tailwindMerge.twMerge)((0,_classnames.default)(cardRoot,cardVariant,_defineProperty({},(0,_objectsToString.default)(base.shadow),shadow)),className);return _react.default.createElement("div",_extends({},rest,{ref:ref,className:classes}),children)});Card.propTypes={variant:_propTypes.default.oneOf(_card.propTypesVariant),color:_propTypes.default.oneOf(_card.propTypesColor),shadow:_card.propTypesShadow,className:_card.propTypesClassName,children:_card.propTypesChildren};Card.displayName="MaterialTailwind.Card";var _default=Object.assign(Card,{Header:_cardHeader.CardHeader,Body:_cardBody.CardBody,Footer:_cardFooter.CardFooter});

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Carousel/index.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Carousel/index.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{Carousel:function(){return Carousel},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _framerMotion=__webpack_require__(/*! framer-motion */ "./node_modules/framer-motion/dist/cjs/index.js");var _react1=__webpack_require__(/*! @floating-ui/react */ "./node_modules/@material-tailwind/react/node_modules/@floating-ui/react/dist/floating-ui.react.esm.js");var _classnames=_interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _carousel=__webpack_require__(/*! ../../types/components/carousel */ "./node_modules/@material-tailwind/react/types/components/carousel.js");function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _iterableToArrayLimit(arr,i){var _i=arr==null?null:typeof Symbol!=="undefined"&&arr[Symbol.iterator]||arr["@@iterator"];if(_i==null)return;var _arr=[];var _n=true;var _d=false;var _s,_e;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break}}catch(err){_d=true;_e=err}finally{try{if(!_n&&_i["return"]!=null)_i["return"]()}finally{if(_d)throw _e}}return _arr}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_unsupportedIterableToArray(arr,i)||_nonIterableRest()}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(n);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}var Carousel=_react.default.forwardRef(function(_param,ref){var children=_param.children,prevArrow=_param.prevArrow,nextArrow=_param.nextArrow,navigation=_param.navigation,autoplay=_param.autoplay,autoplayDelay=_param.autoplayDelay,transition=_param.transition,loop=_param.loop,className=_param.className,slideRef=_param.slideRef,rest=_objectWithoutProperties(_param,["children","prevArrow","nextArrow","navigation","autoplay","autoplayDelay","transition","loop","className","slideRef"]);var carousel=(0,_theme.useTheme)().carousel;var defaultProps=carousel.defaultProps,base=carousel.styles.base;var x=(0,_framerMotion.useMotionValue)(0);var containerRef=_react.default.useRef(null);var _React_useState=_slicedToArray(_react.default.useState(0),2),index=_React_useState[0],setIndex=_React_useState[1];var childrens=_react.default.Children.toArray(children);prevArrow=prevArrow!==null&&prevArrow!==void 0?prevArrow:defaultProps.prevArrow;nextArrow=nextArrow!==null&&nextArrow!==void 0?nextArrow:defaultProps.nextArrow;navigation=navigation!==null&&navigation!==void 0?navigation:defaultProps.navigation;autoplay=autoplay!==null&&autoplay!==void 0?autoplay:defaultProps.autoplay;autoplayDelay=autoplayDelay!==null&&autoplayDelay!==void 0?autoplayDelay:defaultProps.autoplayDelay;transition=transition!==null&&transition!==void 0?transition:defaultProps.transition;loop=loop!==null&&loop!==void 0?loop:defaultProps.loop;className=(0,_tailwindMerge.twMerge)(defaultProps.className||"",className);var carouselClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(base.carousel)),className);var slideClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(base.slide)));var calculateNewX=_react.default.useCallback(function(){var _containerRef_current;return-index*(((_containerRef_current=containerRef.current)===null||_containerRef_current===void 0?void 0:_containerRef_current.clientWidth)||0)},[index]);var handleNext=_react.default.useCallback(function(){var idx=loop?0:index;setIndex(index+1===childrens.length?idx:index+1)},[index,loop,childrens.length]);var handlePrev=function(){var idx=loop?childrens.length-1:0;setIndex(index-1<0?idx:index-1)};_react.default.useEffect(function(){var controls=(0,_framerMotion.animate)(x,calculateNewX(),transition);return controls.stop},[calculateNewX,index,x,transition]);_react.default.useEffect(function(){window.addEventListener("resize",function(){(0,_framerMotion.animate)(x,calculateNewX(),transition)})},[calculateNewX,transition,x]);_react.default.useEffect(function(){if(!autoplay){return}var timer=setInterval(function(){return handleNext()},autoplayDelay);return function(){return clearInterval(timer)}},[autoplay,handleNext,autoplayDelay]);var mergedRefs=(0,_react1.useMergeRefs)([containerRef,ref]);return _react.default.createElement("div",_extends({},rest,{ref:mergedRefs,className:carouselClasses}),childrens.map(function(child,i){return _react.default.createElement(_framerMotion.LazyMotion,{key:i,features:_framerMotion.domAnimation},_react.default.createElement(_framerMotion.m.div,{ref:slideRef,className:slideClasses,style:{x:x,left:"".concat(i*100,"%"),right:"".concat(i*100,"%")}},child))}),prevArrow&&prevArrow({loop:loop,handlePrev:handlePrev,activeIndex:index,firstIndex:index===0}),nextArrow&&nextArrow({loop:loop,handleNext:handleNext,activeIndex:index,lastIndex:index===childrens.length-1}),navigation&&navigation({setActiveIndex:setIndex,activeIndex:index,length:childrens.length}))});Carousel.propTypes={className:_carousel.propTypesClassName,children:_carousel.propTypesChildren,nextArrow:_carousel.propTypesNextArrow,prevArrow:_carousel.propTypesPrevArrow,navigation:_carousel.propTypesNavigation,autoplay:_carousel.propTypesAutoplay,autoplayDelay:_carousel.propTypesAutoplayDelay,transition:_carousel.propTypesTransition,loop:_carousel.propTypesLoop,slideRef:_carousel.propTypesSlideRef};Carousel.displayName="MaterialTailwind.Carousel";var _default=Carousel;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Checkbox/index.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Checkbox/index.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{Checkbox:function(){return Checkbox},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _materialRippleEffects=_interopRequireDefault(__webpack_require__(/*! material-ripple-effects */ "./node_modules/material-ripple-effects/index.js"));var _classnames=_interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _findMatch=_interopRequireDefault(__webpack_require__(/*! ../../utils/findMatch */ "./node_modules/@material-tailwind/react/utils/findMatch.js"));var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _checkbox=__webpack_require__(/*! ../../types/components/checkbox */ "./node_modules/@material-tailwind/react/types/components/checkbox.js");function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var Checkbox=_react.default.forwardRef(function(_param,ref){var color=_param.color,label=_param.label,icon=_param.icon,ripple=_param.ripple,className=_param.className,disabled=_param.disabled,containerProps=_param.containerProps,labelProps=_param.labelProps,iconProps=_param.iconProps,inputRef=_param.inputRef,rest=_objectWithoutProperties(_param,["color","label","icon","ripple","className","disabled","containerProps","labelProps","iconProps","inputRef"]);var checkbox=(0,_theme.useTheme)().checkbox;var defaultProps=checkbox.defaultProps,valid=checkbox.valid,styles=checkbox.styles;var base=styles.base,colors=styles.colors;var checkboxId=_react.default.useId();color=color!==null&&color!==void 0?color:defaultProps.color;label=label!==null&&label!==void 0?label:defaultProps.label;icon=icon!==null&&icon!==void 0?icon:defaultProps.icon;ripple=ripple!==null&&ripple!==void 0?ripple:defaultProps.ripple;disabled=disabled!==null&&disabled!==void 0?disabled:defaultProps.disabled;containerProps=containerProps!==null&&containerProps!==void 0?containerProps:defaultProps.containerProps;labelProps=labelProps!==null&&labelProps!==void 0?labelProps:defaultProps.labelProps;iconProps=iconProps!==null&&iconProps!==void 0?iconProps:defaultProps.iconProps;className=(0,_tailwindMerge.twMerge)(defaultProps.className||"",className);var rippleEffect=ripple!==undefined&&new _materialRippleEffects.default;var rootClasses=(0,_classnames.default)((0,_objectsToString.default)(base.root),_defineProperty({},(0,_objectsToString.default)(base.disabled),disabled));var containerClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(base.container)),containerProps===null||containerProps===void 0?void 0:containerProps.className);var inputClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(base.input),(0,_objectsToString.default)(colors[(0,_findMatch.default)(valid.colors,color,"gray")])),className);var labelClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(base.label)),labelProps===null||labelProps===void 0?void 0:labelProps.className);var iconContainerClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(base.icon)),iconProps===null||iconProps===void 0?void 0:iconProps.className);return _react.default.createElement("div",{ref:ref,className:rootClasses},_react.default.createElement("label",_extends({},containerProps,{className:containerClasses,htmlFor:rest.id||checkboxId,onMouseDown:function(e){var onMouseDown=containerProps===null||containerProps===void 0?void 0:containerProps.onMouseDown;if(ripple){rippleEffect.create(e,"dark")}return typeof onMouseDown==="function"&&onMouseDown(e)}}),_react.default.createElement("input",_extends({},rest,{ref:inputRef,type:"checkbox",disabled:disabled,className:inputClasses,id:rest.id||checkboxId})),_react.default.createElement("span",{className:iconContainerClasses},icon||_react.default.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",className:"h-3.5 w-3.5",viewBox:"0 0 20 20",fill:"currentColor",stroke:"currentColor",strokeWidth:1},_react.default.createElement("path",{fillRule:"evenodd",d:"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z",clipRule:"evenodd"})))),label&&_react.default.createElement("label",_extends({},labelProps,{className:labelClasses,htmlFor:rest.id||checkboxId}),label))});Checkbox.propTypes={color:_propTypes.default.oneOf(_checkbox.propTypesColor),label:_checkbox.propTypesLabel,icon:_checkbox.propTypesIcon,ripple:_checkbox.propTypesRipple,className:_checkbox.propTypesClassName,disabled:_checkbox.propTypesDisabled,containerProps:_checkbox.propTypesObject,labelProps:_checkbox.propTypesObject};Checkbox.displayName="MaterialTailwind.Checkbox";var _default=Checkbox;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Chip/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Chip/index.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{Chip:function(){return Chip},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _framerMotion=__webpack_require__(/*! framer-motion */ "./node_modules/framer-motion/dist/cjs/index.js");var _classnames=_interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));var _deepmerge=_interopRequireDefault(__webpack_require__(/*! deepmerge */ "./node_modules/deepmerge/dist/cjs.js"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _findMatch=_interopRequireDefault(__webpack_require__(/*! ../../utils/findMatch */ "./node_modules/@material-tailwind/react/utils/findMatch.js"));var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _chip=__webpack_require__(/*! ../../types/components/chip */ "./node_modules/@material-tailwind/react/types/components/chip.js");var _iconButton=_interopRequireDefault(__webpack_require__(/*! ../IconButton */ "./node_modules/@material-tailwind/react/components/IconButton/index.js"));function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var Chip=_react.default.forwardRef(function(_param,ref){var variant=_param.variant,size=_param.size,color=_param.color,icon=_param.icon,open=_param.open,onClose=_param.onClose,action=_param.action,animate=_param.animate,className=_param.className,value=_param.value,rest=_objectWithoutProperties(_param,["variant","size","color","icon","open","onClose","action","animate","className","value"]);var chip=(0,_theme.useTheme)().chip;var defaultProps=chip.defaultProps,valid=chip.valid,styles=chip.styles;var base=styles.base,variants=styles.variants,sizes=styles.sizes;variant=variant!==null&&variant!==void 0?variant:defaultProps.variant;size=size!==null&&size!==void 0?size:defaultProps.size;color=color!==null&&color!==void 0?color:defaultProps.color;animate=animate!==null&&animate!==void 0?animate:defaultProps.animate;open=open!==null&&open!==void 0?open:defaultProps.open;action=action!==null&&action!==void 0?action:defaultProps.action;onClose=onClose!==null&&onClose!==void 0?onClose:defaultProps.onClose;className=(0,_tailwindMerge.twMerge)(defaultProps.className||"",className);var chipBase=(0,_objectsToString.default)(base.chip);var chipAction=(0,_objectsToString.default)(base.action);var chipIcon=(0,_objectsToString.default)(base.icon);var chipVariant=(0,_objectsToString.default)(variants[(0,_findMatch.default)(valid.variants,variant,"filled")][(0,_findMatch.default)(valid.colors,color,"gray")]);var chipSize=(0,_objectsToString.default)(sizes[(0,_findMatch.default)(valid.sizes,size,"md")]["chip"]);var actionSize=(0,_objectsToString.default)(sizes[(0,_findMatch.default)(valid.sizes,size,"md")]["action"]);var iconSize=(0,_objectsToString.default)(sizes[(0,_findMatch.default)(valid.sizes,size,"md")]["icon"]);var classes=(0,_tailwindMerge.twMerge)((0,_classnames.default)(chipBase,chipVariant,chipSize),className);var actionClasses=(0,_classnames.default)(chipAction,actionSize);var iconClasses=(0,_classnames.default)(chipIcon,iconSize);var contentClasses=(0,_classnames.default)({"ml-4":icon&&size==="sm","ml-[18px]":icon&&size==="md","ml-5":icon&&size==="lg","mr-5":onClose});var mainAnimation={unmount:{opacity:0},mount:{opacity:1}};var appliedAnimation=(0,_deepmerge.default)(mainAnimation,animate);var iconTemplate=_react.default.createElement("div",{className:iconClasses},icon);var NewAnimatePresence=_framerMotion.AnimatePresence;return _react.default.createElement(_framerMotion.LazyMotion,{features:_framerMotion.domAnimation},_react.default.createElement(NewAnimatePresence,null,open&&_react.default.createElement(_framerMotion.m.div,_extends({},rest,{ref:ref,className:classes,initial:"unmount",exit:"unmount",animate:open?"mount":"unmount",variants:appliedAnimation}),icon&&iconTemplate,_react.default.createElement("span",{className:contentClasses},value),onClose&&!action&&_react.default.createElement(_iconButton.default,{onClick:onClose,size:"sm",variant:"text",color:variant==="outlined"||variant==="ghost"?color:"white",className:actionClasses},_react.default.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24",stroke:"currentColor",className:(0,_classnames.default)({"h-3.5 w-3.5":size==="sm","h-4 w-4":size==="md","h-5 w-5":size==="lg"}),strokeWidth:2},_react.default.createElement("path",{strokeLinecap:"round",strokeLinejoin:"round",d:"M6 18L18 6M6 6l12 12"}))),action||null)))});Chip.propTypes={variant:_propTypes.default.oneOf(_chip.propTypesVariant),size:_propTypes.default.oneOf(_chip.propTypesSize),color:_propTypes.default.oneOf(_chip.propTypesColor),icon:_chip.propTypesIcon,open:_chip.propTypesOpen,onClose:_chip.propTypesOnClose,action:_chip.propTypesAction,animate:_chip.propTypesAnimate,className:_chip.propTypesClassName,value:_chip.propTypesValue};Chip.displayName="MaterialTailwind.Chip";var _default=Chip;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Collapse/index.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Collapse/index.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{Collapse:function(){return Collapse},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _framerMotion=__webpack_require__(/*! framer-motion */ "./node_modules/framer-motion/dist/cjs/index.js");var _react1=__webpack_require__(/*! @floating-ui/react */ "./node_modules/@material-tailwind/react/node_modules/@floating-ui/react/dist/floating-ui.react.esm.js");var _deepmerge=_interopRequireDefault(__webpack_require__(/*! deepmerge */ "./node_modules/deepmerge/dist/cjs.js"));var _classnames=_interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _collapse=__webpack_require__(/*! ../../types/components/collapse */ "./node_modules/@material-tailwind/react/types/components/collapse.js");function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var Collapse=_react.default.forwardRef(function(_param,ref){var open=_param.open,animate=_param.animate,className=_param.className,children=_param.children,rest=_objectWithoutProperties(_param,["open","animate","className","children"]);var mobileNavRef=_react.default.useRef(null);var collapse=(0,_theme.useTheme)().collapse;var styles=collapse.styles;var base=styles.base;animate=animate!==null&&animate!==void 0?animate:{};className=className!==null&&className!==void 0?className:"";var classes=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(base)),className);var mainAnimation={unmount:{height:"0px",transition:{duration:.3,times:[.4,0,.2,1]}},mount:{height:"auto",transition:{duration:.3,times:[.4,0,.2,1]}}};var appliedAnimation=(0,_deepmerge.default)(mainAnimation,animate);var NewAnimatePresence=_framerMotion.AnimatePresence;var mergedRef=(0,_react1.useMergeRefs)([ref,mobileNavRef]);return _react.default.createElement(_framerMotion.LazyMotion,{features:_framerMotion.domAnimation},_react.default.createElement(NewAnimatePresence,null,_react.default.createElement(_framerMotion.m.div,_extends({},rest,{ref:mergedRef,className:classes,initial:"unmount",exit:"unmount",animate:open?"mount":"unmount",variants:appliedAnimation}),children)))});Collapse.displayName="MaterialTailwind.Collapse";Collapse.propTypes={open:_collapse.propTypesOpen,animate:_collapse.propTypesAnimate,className:_collapse.propTypesClassName,children:_collapse.propTypesChildren};var _default=Collapse;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Dialog/DialogBody.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Dialog/DialogBody.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{DialogBody:function(){return DialogBody},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _classnames=_interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _dialog=__webpack_require__(/*! ../../types/components/dialog */ "./node_modules/@material-tailwind/react/types/components/dialog.js");function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var DialogBody=_react.default.forwardRef(function(_param,ref){var divider=_param.divider,className=_param.className,children=_param.children,rest=_objectWithoutProperties(_param,["divider","className","children"]);var dialogBody=(0,_theme.useTheme)().dialogBody;var defaultProps=dialogBody.defaultProps,base=dialogBody.styles.base;className=(0,_tailwindMerge.twMerge)(defaultProps.className||"",className);var dialogBodyClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(base.initial),_defineProperty({},(0,_objectsToString.default)(base.divider),divider)),className);return _react.default.createElement("div",_extends({},rest,{ref:ref,className:dialogBodyClasses}),children)});DialogBody.propTypes={divider:_dialog.propTypesDivider,className:_dialog.propTypesClassName,children:_dialog.propTypesChildren};DialogBody.displayName="MaterialTailwind.DialogBody";var _default=DialogBody;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Dialog/DialogFooter.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Dialog/DialogFooter.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{DialogFooter:function(){return DialogFooter},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _classnames=_interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _dialog=__webpack_require__(/*! ../../types/components/dialog */ "./node_modules/@material-tailwind/react/types/components/dialog.js");function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var DialogFooter=_react.default.forwardRef(function(_param,ref){var className=_param.className,children=_param.children,rest=_objectWithoutProperties(_param,["className","children"]);var dialogFooter=(0,_theme.useTheme)().dialogFooter;var defaultProps=dialogFooter.defaultProps,base=dialogFooter.styles.base;className=(0,_tailwindMerge.twMerge)(defaultProps.className||"",className);var dialogFooterClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(base)),className);return _react.default.createElement("div",_extends({},rest,{ref:ref,className:dialogFooterClasses}),children)});DialogFooter.propTypes={className:_dialog.propTypesClassName,children:_dialog.propTypesChildren};DialogFooter.displayName="MaterialTailwind.DialogFooter";var _default=DialogFooter;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Dialog/DialogHeader.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Dialog/DialogHeader.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{DialogHeader:function(){return DialogHeader},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _classnames=_interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _dialog=__webpack_require__(/*! ../../types/components/dialog */ "./node_modules/@material-tailwind/react/types/components/dialog.js");function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var DialogHeader=_react.default.forwardRef(function(_param,ref){var className=_param.className,children=_param.children,rest=_objectWithoutProperties(_param,["className","children"]);var dialogHeader=(0,_theme.useTheme)().dialogHeader;var defaultProps=dialogHeader.defaultProps,base=dialogHeader.styles.base;className=(0,_tailwindMerge.twMerge)(defaultProps.className||"",className);var dialogHeaderClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(base)),className);return _react.default.createElement("div",_extends({},rest,{ref:ref,className:dialogHeaderClasses}),children)});DialogHeader.propTypes={className:_dialog.propTypesClassName,children:_dialog.propTypesChildren};DialogHeader.displayName="MaterialTailwind.DialogHeader";var _default=DialogHeader;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Dialog/index.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Dialog/index.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{Dialog:function(){return Dialog},DialogHeader:function(){return _dialogHeader.DialogHeader},DialogBody:function(){return _dialogBody.DialogBody},DialogFooter:function(){return _dialogFooter.DialogFooter},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _react1=__webpack_require__(/*! @floating-ui/react */ "./node_modules/@material-tailwind/react/node_modules/@floating-ui/react/dist/floating-ui.react.esm.js");var _framerMotion=__webpack_require__(/*! framer-motion */ "./node_modules/framer-motion/dist/cjs/index.js");var _classnames=_interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));var _deepmerge=_interopRequireDefault(__webpack_require__(/*! deepmerge */ "./node_modules/deepmerge/dist/cjs.js"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _findMatch=_interopRequireDefault(__webpack_require__(/*! ../../utils/findMatch */ "./node_modules/@material-tailwind/react/utils/findMatch.js"));var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _dialog=__webpack_require__(/*! ../../types/components/dialog */ "./node_modules/@material-tailwind/react/types/components/dialog.js");var _dialogHeader=__webpack_require__(/*! ./DialogHeader */ "./node_modules/@material-tailwind/react/components/Dialog/DialogHeader.js");var _dialogBody=__webpack_require__(/*! ./DialogBody */ "./node_modules/@material-tailwind/react/components/Dialog/DialogBody.js");var _dialogFooter=__webpack_require__(/*! ./DialogFooter */ "./node_modules/@material-tailwind/react/components/Dialog/DialogFooter.js");function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};var ownKeys=Object.keys(source);if(typeof Object.getOwnPropertySymbols==="function"){ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))}ownKeys.forEach(function(key){_defineProperty(target,key,source[key])})}return target}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})}keys.push.apply(keys,symbols)}return keys}function _objectSpreadProps(target,source){source=source!=null?source:{};if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source))}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})}return target}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var Dialog=_react.default.forwardRef(function(_param,ref){var open=_param.open,handler=_param.handler,size=_param.size,dismiss=_param.dismiss,animate=_param.animate,className=_param.className,children=_param.children,rest=_objectWithoutProperties(_param,["open","handler","size","dismiss","animate","className","children"]);var dialog=(0,_theme.useTheme)().dialog;var defaultProps=dialog.defaultProps,valid=dialog.valid,_dialog_styles=dialog.styles,base=_dialog_styles.base,sizes=_dialog_styles.sizes;handler=handler!==null&&handler!==void 0?handler:undefined;size=size!==null&&size!==void 0?size:defaultProps.size;dismiss=dismiss!==null&&dismiss!==void 0?dismiss:defaultProps.dismiss;animate=animate!==null&&animate!==void 0?animate:defaultProps.animate;className=(0,_tailwindMerge.twMerge)(defaultProps.className||"",className);var backdropClasses=(0,_classnames.default)((0,_objectsToString.default)(base.backdrop));var dialogClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(base.container),(0,_objectsToString.default)(sizes[(0,_findMatch.default)(valid.sizes,size,"md")])),className);var animation={unmount:{opacity:0,y:-50,transition:{duration:.3}},mount:{opacity:1,y:0,transition:{duration:.3}}};var backdropAnimation={unmount:{opacity:0,transition:{delay:.2}},mount:{opacity:1}};var appliedAnimation=(0,_deepmerge.default)(animation,animate);var _useFloating=(0,_react1.useFloating)({open:open,onOpenChange:handler}),floating=_useFloating.floating,context=_useFloating.context;var id=(0,_react1.useId)();var labelId="".concat(id,"-label");var descriptionId="".concat(id,"-description");var getFloatingProps=(0,_react1.useInteractions)([(0,_react1.useClick)(context),(0,_react1.useRole)(context),(0,_react1.useDismiss)(context,dismiss)]).getFloatingProps;var mergedRef=(0,_react1.useMergeRefs)([ref,floating]);var NewAnimatePresence=_framerMotion.AnimatePresence;return _react.default.createElement(_framerMotion.LazyMotion,{features:_framerMotion.domAnimation},_react.default.createElement(_react1.FloatingPortal,null,_react.default.createElement(NewAnimatePresence,null,open&&_react.default.createElement(_react1.FloatingOverlay,{style:{zIndex:9999},lockScroll:true},_react.default.createElement(_react1.FloatingFocusManager,{context:context},_react.default.createElement(_framerMotion.m.div,{className:size==="xxl"?"":backdropClasses,initial:"unmount",exit:"unmount",animate:open?"mount":"unmount",variants:backdropAnimation,transition:{duration:.2}},_react.default.createElement(_framerMotion.m.div,_extends({},getFloatingProps(_objectSpreadProps(_objectSpread({},rest),{ref:mergedRef,className:dialogClasses,"aria-labelledby":labelId,"aria-describedby":descriptionId})),{initial:"unmount",exit:"unmount",animate:open?"mount":"unmount",variants:appliedAnimation}),children)))))))});Dialog.propTypes={open:_dialog.propTypesOpen,handler:_dialog.propTypesHandler,size:_propTypes.default.oneOf(_dialog.propTypesSize),dismiss:_dialog.propTypesDismiss,animate:_dialog.propTypesAnimate,className:_dialog.propTypesClassName,children:_dialog.propTypesChildren};Dialog.displayName="MaterialTailwind.Dialog";var _default=Object.assign(Dialog,{Header:_dialogHeader.DialogHeader,Body:_dialogBody.DialogBody,Footer:_dialogFooter.DialogFooter});

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Drawer/index.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Drawer/index.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{Drawer:function(){return Drawer},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _framerMotion=__webpack_require__(/*! framer-motion */ "./node_modules/framer-motion/dist/cjs/index.js");var _react1=__webpack_require__(/*! @floating-ui/react */ "./node_modules/@material-tailwind/react/node_modules/@floating-ui/react/dist/floating-ui.react.esm.js");var _deepmerge=_interopRequireDefault(__webpack_require__(/*! deepmerge */ "./node_modules/deepmerge/dist/cjs.js"));var _classnames=_interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _drawer=__webpack_require__(/*! ../../types/components/drawer */ "./node_modules/@material-tailwind/react/types/components/drawer.js");function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};var ownKeys=Object.keys(source);if(typeof Object.getOwnPropertySymbols==="function"){ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))}ownKeys.forEach(function(key){_defineProperty(target,key,source[key])})}return target}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var Drawer=_react.default.forwardRef(function(_param,ref){var open=_param.open,size=_param.size,overlay=_param.overlay,children=_param.children,placement=_param.placement,overlayProps=_param.overlayProps,className=_param.className,onClose=_param.onClose,dismiss=_param.dismiss,transition=_param.transition,overlayRef=_param.overlayRef,rest=_objectWithoutProperties(_param,["open","size","overlay","children","placement","overlayProps","className","onClose","dismiss","transition","overlayRef"]);var drawer=(0,_theme.useTheme)().drawer;var defaultProps=drawer.defaultProps,base=drawer.styles.base;var constrols=(0,_framerMotion.useAnimation)();size=size!==null&&size!==void 0?size:defaultProps.size;overlay=overlay!==null&&overlay!==void 0?overlay:defaultProps.overlay;placement=placement!==null&&placement!==void 0?placement:defaultProps.placement;overlayProps=overlayProps!==null&&overlayProps!==void 0?overlayProps:defaultProps.overlayProps;onClose=onClose!==null&&onClose!==void 0?onClose:defaultProps.onClose;var _merge;dismiss=(_merge=(0,_deepmerge.default)(defaultProps.dismiss,dismiss||{}))!==null&&_merge!==void 0?_merge:defaultProps.dismiss;transition=transition!==null&&transition!==void 0?transition:defaultProps.transition;className=(0,_tailwindMerge.twMerge)(defaultProps.className||"",className);var drawerClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(base.drawer),{"top-0 right-0":placement==="right","bottom-0 left-0":placement==="bottom","top-0 left-0":placement==="top"||placement==="left"}),className);var overlayClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(base.overlay)),overlayProps===null||overlayProps===void 0?void 0:overlayProps.className);var context=(0,_react1.useFloating)({open:open,onOpenChange:onClose}).context;var getFloatingProps=(0,_react1.useInteractions)([(0,_react1.useDismiss)(context,dismiss)]).getFloatingProps;_react.default.useEffect(function(){constrols.start(open?"open":"close")},[open,constrols,placement]);var drawerAnimation={open:{x:0,y:0},close:{x:placement==="left"?-size:placement==="right"?size:0,y:placement==="top"?-size:placement==="bottom"?size:0}};var backdropAnimation={unmount:{opacity:0,transition:{delay:.3}},mount:{opacity:1}};return _react.default.createElement(_react.default.Fragment,null,_react.default.createElement(_framerMotion.LazyMotion,{features:_framerMotion.domAnimation},_react.default.createElement(_framerMotion.AnimatePresence,null,overlay&&open&&_react.default.createElement(_framerMotion.m.div,{ref:overlayRef,className:overlayClasses,initial:"unmount",exit:"unmount",animate:open?"mount":"unmount",variants:backdropAnimation,transition:{duration:.3}})),_react.default.createElement(_framerMotion.m.div,_extends({},getFloatingProps(_objectSpread({ref:ref},rest)),{className:drawerClasses,style:{maxWidth:placement==="left"||placement==="right"?size:"100%",maxHeight:placement==="top"||placement==="bottom"?size:"100%",height:placement==="left"||placement==="right"?"100vh":"100%"},initial:"close",animate:constrols,variants:drawerAnimation,transition:transition}),children)))});Drawer.propTypes={open:_drawer.propTypesOpen,size:_drawer.propTypesSize,overlay:_drawer.propTypesOverlay,children:_drawer.propTypesChildren,placement:_propTypes.default.oneOf(_drawer.propTypesPlacement),overlayProps:_drawer.propTypesOverlayProps,className:_drawer.propTypesClassName,onClose:_drawer.propTypesOnClose,dismiss:_drawer.propTypesDismiss,transition:_drawer.propTypesTransition,overlayRef:_drawer.propTypesOverlayRef};Drawer.displayName="MaterialTailwind.Drawer";var _default=Drawer;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/IconButton/index.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/IconButton/index.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{IconButton:function(){return IconButton},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _materialRippleEffects=_interopRequireDefault(__webpack_require__(/*! material-ripple-effects */ "./node_modules/material-ripple-effects/index.js"));var _classnames=_interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _findMatch=_interopRequireDefault(__webpack_require__(/*! ../../utils/findMatch */ "./node_modules/@material-tailwind/react/utils/findMatch.js"));var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _button=__webpack_require__(/*! ../../types/components/button */ "./node_modules/@material-tailwind/react/types/components/button.js");function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var IconButton=_react.default.forwardRef(function(_param,ref){var variant=_param.variant,size=_param.size,color=_param.color,ripple=_param.ripple,className=_param.className,children=_param.children,fullWidth=_param.fullWidth,rest=_objectWithoutProperties(_param,["variant","size","color","ripple","className","children","fullWidth"]);var iconButton=(0,_theme.useTheme)().iconButton;var valid=iconButton.valid,defaultProps=iconButton.defaultProps,styles=iconButton.styles;var base=styles.base,variants=styles.variants,sizes=styles.sizes;variant=variant!==null&&variant!==void 0?variant:defaultProps.variant;size=size!==null&&size!==void 0?size:defaultProps.size;color=color!==null&&color!==void 0?color:defaultProps.color;ripple=ripple!==null&&ripple!==void 0?ripple:defaultProps.ripple;className=(0,_tailwindMerge.twMerge)(defaultProps.className||"",className);var rippleEffect=ripple!==undefined&&new _materialRippleEffects.default;var buttonBase=(0,_objectsToString.default)(base);var buttonVariant=(0,_objectsToString.default)(variants[(0,_findMatch.default)(valid.variants,variant,"filled")][(0,_findMatch.default)(valid.colors,color,"gray")]);var buttonSize=(0,_objectsToString.default)(sizes[(0,_findMatch.default)(valid.sizes,size,"md")]);var classes=(0,_tailwindMerge.twMerge)((0,_classnames.default)(buttonBase,buttonSize,buttonVariant),className);return _react.default.createElement("button",_extends({},rest,{ref:ref,className:classes,type:rest.type||"button",onMouseDown:function(e){var onMouseDown=rest===null||rest===void 0?void 0:rest.onMouseDown;if(ripple){rippleEffect.create(e,(variant==="filled"||variant==="gradient")&&color!=="white"?"light":"dark")}return typeof onMouseDown==="function"&&onMouseDown(e)}}),_react.default.createElement("span",{className:"absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 transform"},children))});IconButton.propTypes={variant:_propTypes.default.oneOf(_button.propTypesVariant),size:_propTypes.default.oneOf(_button.propTypesSize),color:_propTypes.default.oneOf(_button.propTypesColor),ripple:_button.propTypesRipple,className:_button.propTypesClassName,children:_button.propTypesChildren};IconButton.displayName="MaterialTailwind.IconButton";var _default=IconButton;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Input/index.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Input/index.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{Input:function(){return Input},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _classnames=_interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));var _findMatch=_interopRequireDefault(__webpack_require__(/*! ../../utils/findMatch */ "./node_modules/@material-tailwind/react/utils/findMatch.js"));var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _input=__webpack_require__(/*! ../../types/components/input */ "./node_modules/@material-tailwind/react/types/components/input.js");var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var Input=_react.default.forwardRef(function(_param,ref){var variant=_param.variant,color=_param.color,size=_param.size,label=_param.label,error=_param.error,success=_param.success,icon=_param.icon,containerProps=_param.containerProps,labelProps=_param.labelProps,className=_param.className,shrink=_param.shrink,inputRef=_param.inputRef,rest=_objectWithoutProperties(_param,["variant","color","size","label","error","success","icon","containerProps","labelProps","className","shrink","inputRef"]);var input=(0,_theme.useTheme)().input;var defaultProps=input.defaultProps,valid=input.valid,styles=input.styles;var base=styles.base,variants=styles.variants;variant=variant!==null&&variant!==void 0?variant:defaultProps.variant;size=size!==null&&size!==void 0?size:defaultProps.size;color=color!==null&&color!==void 0?color:defaultProps.color;label=label!==null&&label!==void 0?label:defaultProps.label;labelProps=labelProps!==null&&labelProps!==void 0?labelProps:defaultProps.labelProps;containerProps=containerProps!==null&&containerProps!==void 0?containerProps:defaultProps.containerProps;shrink=shrink!==null&&shrink!==void 0?shrink:defaultProps.shrink;icon=icon!==null&&icon!==void 0?icon:defaultProps.icon;className=(0,_tailwindMerge.twMerge)(defaultProps.className||"",className);var inputVariant=variants[(0,_findMatch.default)(valid.variants,variant,"outlined")];var inputSize=inputVariant.sizes[(0,_findMatch.default)(valid.sizes,size,"md")];var inputError=(0,_objectsToString.default)(inputVariant.error.input);var inputSuccess=(0,_objectsToString.default)(inputVariant.success.input);var inputShrink=(0,_objectsToString.default)(inputVariant.shrink.input);var inputColor=(0,_objectsToString.default)(inputVariant.colors.input[(0,_findMatch.default)(valid.colors,color,"gray")]);var labelError=(0,_objectsToString.default)(inputVariant.error.label);var labelSuccess=(0,_objectsToString.default)(inputVariant.success.label);var labelShrink=(0,_objectsToString.default)(inputVariant.shrink.label);var labelColor=(0,_objectsToString.default)(inputVariant.colors.label[(0,_findMatch.default)(valid.colors,color,"gray")]);var containerClasses=(0,_classnames.default)((0,_objectsToString.default)(base.container),(0,_objectsToString.default)(inputSize.container),containerProps===null||containerProps===void 0?void 0:containerProps.className);var inputClasses=(0,_classnames.default)((0,_objectsToString.default)(base.input),(0,_objectsToString.default)(inputVariant.base.input),(0,_objectsToString.default)(inputSize.input),_defineProperty({},(0,_objectsToString.default)(inputVariant.base.inputWithIcon),icon),_defineProperty({},inputColor,!error&&!success),_defineProperty({},inputError,error),_defineProperty({},inputSuccess,success),_defineProperty({},inputShrink,shrink),className);var labelClasses=(0,_classnames.default)((0,_objectsToString.default)(base.label),(0,_objectsToString.default)(inputVariant.base.label),(0,_objectsToString.default)(inputSize.label),_defineProperty({},labelColor,!error&&!success),_defineProperty({},labelError,error),_defineProperty({},labelSuccess,success),_defineProperty({},labelShrink,shrink),labelProps===null||labelProps===void 0?void 0:labelProps.className);var iconClasses=(0,_classnames.default)((0,_objectsToString.default)(base.icon),(0,_objectsToString.default)(inputVariant.base.icon),(0,_objectsToString.default)(inputSize.icon));var asteriskClasses=(0,_classnames.default)((0,_objectsToString.default)(base.asterisk));return _react.default.createElement("div",_extends({},containerProps,{ref:ref,className:containerClasses}),icon&&_react.default.createElement("div",{className:iconClasses},icon),_react.default.createElement("input",_extends({},rest,{ref:inputRef,className:inputClasses,placeholder:(rest===null||rest===void 0?void 0:rest.placeholder)||" "})),_react.default.createElement("label",_extends({},labelProps,{className:labelClasses}),label," ",rest.required?_react.default.createElement("span",{className:asteriskClasses},"*"):""))});Input.propTypes={variant:_propTypes.default.oneOf(_input.propTypesVariant),size:_propTypes.default.oneOf(_input.propTypesSize),color:_propTypes.default.oneOf(_input.propTypesColor),label:_input.propTypesLabel,error:_input.propTypesError,success:_input.propTypesSuccess,icon:_input.propTypesIcon,labelProps:_input.propTypesLabelProps,containerProps:_input.propTypesContainerProps,shrink:_input.propTypesShrink,className:_input.propTypesClassName};Input.displayName="MaterialTailwind.Input";var _default=Input;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/List/ListItem.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/List/ListItem.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{ListItem:function(){return ListItem},ListItemPrefix:function(){return _listItemPrefix.ListItemPrefix},ListItemSuffix:function(){return _listItemSuffix.ListItemSuffix},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _materialRippleEffects=_interopRequireDefault(__webpack_require__(/*! material-ripple-effects */ "./node_modules/material-ripple-effects/index.js"));var _classnames=_interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _list=__webpack_require__(/*! ../../types/components/list */ "./node_modules/@material-tailwind/react/types/components/list.js");var _listItemPrefix=__webpack_require__(/*! ./ListItemPrefix */ "./node_modules/@material-tailwind/react/components/List/ListItemPrefix.js");var _listItemSuffix=__webpack_require__(/*! ./ListItemSuffix */ "./node_modules/@material-tailwind/react/components/List/ListItemSuffix.js");function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var ListItem=_react.default.forwardRef(function(_param,ref){var className=_param.className,disabled=_param.disabled,selected=_param.selected,ripple=_param.ripple,children=_param.children,rest=_objectWithoutProperties(_param,["className","disabled","selected","ripple","children"]);var list=(0,_theme.useTheme)().list;var defaultProps=list.defaultProps,base=list.styles.base;ripple=ripple!==null&&ripple!==void 0?ripple:defaultProps.ripple;var rippleEffect=ripple!==undefined&&new _materialRippleEffects.default;var _obj;var listItemClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(base.item.initial),(_obj={},_defineProperty(_obj,(0,_objectsToString.default)(base.item.disabled),disabled),_defineProperty(_obj,(0,_objectsToString.default)(base.item.selected),selected&&!disabled),_obj)),className);return _react.default.createElement("div",_extends({},rest,{ref:ref,role:"button",tabIndex:0,className:listItemClasses,onMouseDown:function(e){var onMouseDown=rest===null||rest===void 0?void 0:rest.onMouseDown;if(ripple)rippleEffect.create(e,"dark");return typeof onMouseDown==="function"&&onMouseDown(e)}}),children)});ListItem.propTypes={className:_list.propTypesClassName,selected:_list.propTypesSelected,disabled:_list.propTypesDisabled,ripple:_list.propTypesRipple,children:_list.propTypesChildren};ListItem.displayName="MaterialTailwind.ListItem";var _default=Object.assign(ListItem,{Prefix:_listItemPrefix.ListItemPrefix,Suffix:_listItemSuffix.ListItemSuffix});

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/List/ListItemPrefix.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/List/ListItemPrefix.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{ListItemPrefix:function(){return ListItemPrefix},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _classnames=_interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _list=__webpack_require__(/*! ../../types/components/list */ "./node_modules/@material-tailwind/react/types/components/list.js");function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var ListItemPrefix=_react.default.forwardRef(function(_param,ref){var className=_param.className,children=_param.children,rest=_objectWithoutProperties(_param,["className","children"]);var list=(0,_theme.useTheme)().list;var base=list.styles.base;var listItemPrefixClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(base.itemPrefix)),className);return _react.default.createElement("div",_extends({},rest,{ref:ref,className:listItemPrefixClasses}),children)});ListItemPrefix.propTypes={className:_list.propTypesClassName,children:_list.propTypesChildren};ListItemPrefix.displayName="MaterialTailwind.ListItemPrefix";var _default=ListItemPrefix;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/List/ListItemSuffix.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/List/ListItemSuffix.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{ListItemSuffix:function(){return ListItemSuffix},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _classnames=_interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _list=__webpack_require__(/*! ../../types/components/list */ "./node_modules/@material-tailwind/react/types/components/list.js");function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var ListItemSuffix=_react.default.forwardRef(function(_param,ref){var className=_param.className,children=_param.children,rest=_objectWithoutProperties(_param,["className","children"]);var list=(0,_theme.useTheme)().list;var base=list.styles.base;var listItemSuffixClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(base.itemSuffix)),className);return _react.default.createElement("div",_extends({},rest,{ref:ref,className:listItemSuffixClasses}),children)});ListItemSuffix.propTypes={className:_list.propTypesClassName,children:_list.propTypesChildren};ListItemSuffix.displayName="MaterialTailwind.ListItemSuffix";var _default=ListItemSuffix;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/List/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/List/index.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{List:function(){return List},ListItem:function(){return _listItem.ListItem},ListItemPrefix:function(){return _listItemPrefix.ListItemPrefix},ListItemSuffix:function(){return _listItemSuffix.ListItemSuffix},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _classnames=_interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _list=__webpack_require__(/*! ../../types/components/list */ "./node_modules/@material-tailwind/react/types/components/list.js");var _listItem=__webpack_require__(/*! ./ListItem */ "./node_modules/@material-tailwind/react/components/List/ListItem.js");var _listItemPrefix=__webpack_require__(/*! ./ListItemPrefix */ "./node_modules/@material-tailwind/react/components/List/ListItemPrefix.js");var _listItemSuffix=__webpack_require__(/*! ./ListItemSuffix */ "./node_modules/@material-tailwind/react/components/List/ListItemSuffix.js");function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var List=_react.default.forwardRef(function(_param,ref){var className=_param.className,children=_param.children,rest=_objectWithoutProperties(_param,["className","children"]);var list=(0,_theme.useTheme)().list;var defaultProps=list.defaultProps,base=list.styles.base;className=(0,_tailwindMerge.twMerge)(defaultProps.className||"",className);var listClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(base.list)),className);return _react.default.createElement("nav",_extends({},rest,{ref:ref,className:listClasses}),children)});List.propTypes={className:_list.propTypesClassName,children:_list.propTypesChildren};List.displayName="MaterialTailwind.List";var _default=Object.assign(List,{Item:_listItem.ListItem,ItemPrefix:_listItemPrefix.ListItemPrefix,ItemSuffix:_listItemSuffix.ListItemSuffix});

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Menu/MenuContext.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Menu/MenuContext.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{MenuContext:function(){return MenuContext},useMenu:function(){return useMenu},MenuContextProvider:function(){return MenuContextProvider}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _menu=__webpack_require__(/*! ../../types/components/menu */ "./node_modules/@material-tailwind/react/types/components/menu.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var MenuContext=_react.default.createContext(null);MenuContext.displayName="MaterialTailwind.MenuContext";function useMenu(){var context=_react.default.useContext(MenuContext);if(!context){throw new Error("useMenu() must be used within a Menu. It happens when you use MenuCore, MenuHandler, MenuItem or MenuList components outside the Menu component.")}return context}var MenuContextProvider=function(param){var value=param.value,children=param.children;return _react.default.createElement(MenuContext.Provider,{value:value},children)};MenuContextProvider.prototypes={value:_menu.propTypesContextValue,children:_menu.propTypesChildren};MenuContextProvider.displayName="MaterialTailwind.MenuContextProvider";

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Menu/MenuCore.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Menu/MenuCore.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{MenuCore:function(){return MenuCore},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _react1=__webpack_require__(/*! @floating-ui/react */ "./node_modules/@material-tailwind/react/node_modules/@floating-ui/react/dist/floating-ui.react.esm.js");var _deepmerge=_interopRequireDefault(__webpack_require__(/*! deepmerge */ "./node_modules/deepmerge/dist/cjs.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _menuContext=__webpack_require__(/*! ./MenuContext */ "./node_modules/@material-tailwind/react/components/Menu/MenuContext.js");var _menu=__webpack_require__(/*! ../../types/components/menu */ "./node_modules/@material-tailwind/react/types/components/menu.js");function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _iterableToArrayLimit(arr,i){var _i=arr==null?null:typeof Symbol!=="undefined"&&arr[Symbol.iterator]||arr["@@iterator"];if(_i==null)return;var _arr=[];var _n=true;var _d=false;var _s,_e;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break}}catch(err){_d=true;_e=err}finally{try{if(!_n&&_i["return"]!=null)_i["return"]()}finally{if(_d)throw _e}}return _arr}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_unsupportedIterableToArray(arr,i)||_nonIterableRest()}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(n);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}var MenuCore=_react.default.forwardRef(function(param,ref){var open=param.open,handler=param.handler,placement=param.placement,offset=param.offset,dismiss=param.dismiss,animate=param.animate,lockScroll=param.lockScroll,allowHover=param.allowHover,children=param.children;var menu=(0,_theme.useTheme)().menu;var defaultProps=menu.defaultProps;var _React_useState=_slicedToArray(_react.default.useState(false),2),internalOpen=_React_useState[0],setInternalOpen=_React_useState[1];var _React_useState1=_slicedToArray(_react.default.useState(false),2),internalAllowHover=_React_useState1[0],setInternalAllowHover=_React_useState1[1];open=open!==null&&open!==void 0?open:internalOpen;handler=handler!==null&&handler!==void 0?handler:setInternalOpen;placement=placement!==null&&placement!==void 0?placement:defaultProps.placement;offset=offset!==null&&offset!==void 0?offset:defaultProps.offset;dismiss=dismiss!==null&&dismiss!==void 0?dismiss:defaultProps.dismiss;animate=animate!==null&&animate!==void 0?animate:defaultProps.animate;lockScroll=lockScroll!==null&&lockScroll!==void 0?lockScroll:defaultProps.lockScroll;var animation={unmount:{opacity:0,transformOrigin:"top",transform:"scale(0.95)",transition:{duration:.2,times:[.4,0,.2,1]}},mount:{opacity:1,transformOrigin:"top",transform:"scale(1)",transition:{duration:.2,times:[.4,0,.2,1]}}};var appliedAnimation=(0,_deepmerge.default)(animation,animate);var _React_useState2=_slicedToArray(_react.default.useState(null),2),activeIndex=_React_useState2[0],setActiveIndex=_React_useState2[1];var listItemsRef=_react.default.useRef([]);var listContentRef=_react.default.useRef(_react.default.Children.map(children,function(child){return _react.default.isValidElement(child)?child.props.label:null}));var tree=(0,_react1.useFloatingTree)();var nodeId=(0,_react1.useFloatingNodeId)();var parentId=(0,_react1.useFloatingParentNodeId)();var nested=parentId!=null;var _useFloating=(0,_react1.useFloating)({open:open,nodeId:nodeId,placement:placement,onOpenChange:handler,middleware:[(0,_react1.offset)(offset),(0,_react1.flip)(),(0,_react1.shift)()],whileElementsMounted:_react1.autoUpdate}),x=_useFloating.x,y=_useFloating.y,strategy=_useFloating.strategy,refs=_useFloating.refs,context=_useFloating.context;var _useInteractions=(0,_react1.useInteractions)([(0,_react1.useHover)(context,{handleClose:(0,_react1.safePolygon)({restMs:25,blockPointerEvents:true}),enabled:allowHover||nested&&internalAllowHover,delay:{open:75}}),(0,_react1.useClick)(context,{toggle:!nested||!internalAllowHover,event:"mousedown",ignoreMouse:nested}),(0,_react1.useRole)(context,{role:"menu"}),(0,_react1.useDismiss)(context,dismiss),(0,_react1.useListNavigation)(context,{listRef:listItemsRef,activeIndex:activeIndex,nested:nested,onNavigate:setActiveIndex}),(0,_react1.useTypeahead)(context,{listRef:listContentRef,onMatch:open?setActiveIndex:undefined,activeIndex:activeIndex})]),getReferenceProps=_useInteractions.getReferenceProps,getFloatingProps=_useInteractions.getFloatingProps,getItemProps=_useInteractions.getItemProps;_react.default.useEffect(function(){var handleTreeClick=function handleTreeClick(){if(dismiss.itemPress)handler(false)};var onSubMenuOpen=function onSubMenuOpen(event){if(event.nodeId!==nodeId&&event.parentId===parentId){handler(false)}};tree===null||tree===void 0?void 0:tree.events.on("click",handleTreeClick);tree===null||tree===void 0?void 0:tree.events.on("menuopen",onSubMenuOpen);return function(){tree===null||tree===void 0?void 0:tree.events.off("click",handleTreeClick);tree===null||tree===void 0?void 0:tree.events.off("menuopen",onSubMenuOpen)}},[tree,nodeId,parentId,handler,dismiss]);_react.default.useEffect(function(){if(open){tree===null||tree===void 0?void 0:tree.events.emit("menuopen",{parentId:parentId,nodeId:nodeId})}},[tree,open,nodeId,parentId]);_react.default.useEffect(function(){var onPointerMove=function onPointerMove(param){var pointerType=param.pointerType;if(pointerType!=="touch"){setInternalAllowHover(true)}};var onKeyDown=function onKeyDown(){setInternalAllowHover(false)};window.addEventListener("pointermove",onPointerMove,{once:true,capture:true});window.addEventListener("keydown",onKeyDown,true);return function(){window.removeEventListener("pointermove",onPointerMove,{capture:true});window.removeEventListener("keydown",onKeyDown,true)}},[internalAllowHover]);var referenceRef=(0,_react1.useMergeRefs)([refs.setReference,ref]);var contextValue=_react.default.useMemo(function(){return{open:open,handler:handler,setInternalOpen:setInternalOpen,strategy:strategy,x:x,y:y,reference:referenceRef,floating:refs.setFloating,listItemsRef:listItemsRef,getReferenceProps:getReferenceProps,getFloatingProps:getFloatingProps,getItemProps:getItemProps,appliedAnimation:appliedAnimation,lockScroll:lockScroll,context:context,activeIndex:activeIndex,tree:tree,allowHover:allowHover,internalAllowHover:internalAllowHover,nested:nested,setActiveIndex:setActiveIndex}},[open,handler,setInternalOpen,strategy,x,y,referenceRef,refs,getReferenceProps,getFloatingProps,getItemProps,appliedAnimation,lockScroll,context,activeIndex,tree,allowHover,internalAllowHover,nested,setActiveIndex]);return _react.default.createElement(_menuContext.MenuContextProvider,{value:contextValue},_react.default.createElement(_react1.FloatingNode,{id:nodeId},children))});MenuCore.propTypes={open:_menu.propTypesOpen,handler:_menu.propTypesHandler,placement:_propTypes.default.oneOf(_menu.propTypesPlacement),offset:_menu.propTypesOffset,dismiss:_menu.propTypesDismiss,animate:_menu.propTypesAnimate,lockScroll:_menu.propTypesLockScroll,children:_menu.propTypesChildren};MenuCore.displayName="MaterialTailwind.MenuCore";var _default=MenuCore;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Menu/MenuHandler.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Menu/MenuHandler.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{MenuHandler:function(){return MenuHandler},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _react1=__webpack_require__(/*! @floating-ui/react */ "./node_modules/@material-tailwind/react/node_modules/@floating-ui/react/dist/floating-ui.react.esm.js");var _menuContext=__webpack_require__(/*! ./MenuContext */ "./node_modules/@material-tailwind/react/components/Menu/MenuContext.js");var _menu=__webpack_require__(/*! ../../types/components/menu */ "./node_modules/@material-tailwind/react/types/components/menu.js");function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};var ownKeys=Object.keys(source);if(typeof Object.getOwnPropertySymbols==="function"){ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))}ownKeys.forEach(function(key){_defineProperty(target,key,source[key])})}return target}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})}keys.push.apply(keys,symbols)}return keys}function _objectSpreadProps(target,source){source=source!=null?source:{};if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source))}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})}return target}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var MenuHandler=_react.default.forwardRef(function(_param,ref){var children=_param.children,rest=_objectWithoutProperties(_param,["children"]);var _useMenu=(0,_menuContext.useMenu)(),getReferenceProps=_useMenu.getReferenceProps,reference=_useMenu.reference,nested=_useMenu.nested;var mergedRef=(0,_react1.useMergeRefs)([ref,reference]);return _react.default.cloneElement(children,_objectSpread({},getReferenceProps(_objectSpread(_objectSpreadProps(_objectSpread({},rest),{ref:mergedRef,onClick:function onClick(event){event.stopPropagation()}}),nested&&{role:"menuitem"}))))});MenuHandler.propTypes={children:_menu.propTypesChildren};MenuHandler.displayName="MaterialTailwind.MenuHandler";var _default=MenuHandler;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Menu/MenuItem.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Menu/MenuItem.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{MenuItem:function(){return MenuItem},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _classnames=_interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _menu=__webpack_require__(/*! ../../types/components/menu */ "./node_modules/@material-tailwind/react/types/components/menu.js");function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var MenuItem=_react.default.forwardRef(function(_param,ref){var _param_className=_param.className,className=_param_className===void 0?"":_param_className,_param_disabled=_param.disabled,disabled=_param_disabled===void 0?false:_param_disabled,children=_param.children,rest=_objectWithoutProperties(_param,["className","disabled","children"]);var menu=(0,_theme.useTheme)().menu;var base=menu.styles.base;var menuItemClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(base.item.initial),_defineProperty({},(0,_objectsToString.default)(base.item.disabled),disabled)),className);return _react.default.createElement("button",_extends({},rest,{ref:ref,role:"menuitem",className:menuItemClasses}),children)});MenuItem.propTypes={className:_menu.propTypesClassName,disabled:_menu.propTypesDisabled,children:_menu.propTypesChildren};MenuItem.displayName="MaterialTailwind.MenuItem";var _default=MenuItem;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Menu/MenuList.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Menu/MenuList.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{MenuList:function(){return MenuList},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _react1=__webpack_require__(/*! @floating-ui/react */ "./node_modules/@material-tailwind/react/node_modules/@floating-ui/react/dist/floating-ui.react.esm.js");var _framerMotion=__webpack_require__(/*! framer-motion */ "./node_modules/framer-motion/dist/cjs/index.js");var _classnames=_interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _menuContext=__webpack_require__(/*! ./MenuContext */ "./node_modules/@material-tailwind/react/components/Menu/MenuContext.js");var _menu=__webpack_require__(/*! ../../types/components/menu */ "./node_modules/@material-tailwind/react/types/components/menu.js");function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var MenuList=_react.default.forwardRef(function(_param,ref){var children=_param.children,className=_param.className,rest=_objectWithoutProperties(_param,["children","className"]);var menu=(0,_theme.useTheme)().menu;var base=menu.styles.base;var _useMenu=(0,_menuContext.useMenu)(),open=_useMenu.open,handler=_useMenu.handler,strategy=_useMenu.strategy,x=_useMenu.x,y=_useMenu.y,floating=_useMenu.floating,listItemsRef=_useMenu.listItemsRef,getFloatingProps=_useMenu.getFloatingProps,getItemProps=_useMenu.getItemProps,appliedAnimation=_useMenu.appliedAnimation,lockScroll=_useMenu.lockScroll,context=_useMenu.context,activeIndex=_useMenu.activeIndex,tree=_useMenu.tree,allowHover=_useMenu.allowHover,internalAllowHover=_useMenu.internalAllowHover,setActiveIndex=_useMenu.setActiveIndex,nested=_useMenu.nested;className=className!==null&&className!==void 0?className:"";var menuClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(base.menu)),className);var mergedRef=(0,_react1.useMergeRefs)([ref,floating]);var NewAnimatePresence=_framerMotion.AnimatePresence;var menuComponent=_react.default.createElement(_framerMotion.m.div,_extends({},rest,{ref:mergedRef,style:{position:strategy,top:y!==null&&y!==void 0?y:0,left:x!==null&&x!==void 0?x:0},className:menuClasses},getFloatingProps({onKeyDown:function onKeyDown(event){if(event.key==="Tab"){handler(false);if(event.shiftKey){event.preventDefault()}}}}),{initial:"unmount",exit:"unmount",animate:open?"mount":"unmount",variants:appliedAnimation}),_react.default.Children.map(children,function(child,index){return _react.default.isValidElement(child)&&_react.default.cloneElement(child,getItemProps({tabIndex:activeIndex===index?0:-1,role:"menuitem",className:child.props.className,ref:function ref(node){listItemsRef.current[index]=node},onClick:function onClick(event){if(child.props.onClick){var _child_props,_child_props_onClick;(_child_props_onClick=(_child_props=child.props).onClick)===null||_child_props_onClick===void 0?void 0:_child_props_onClick.call(_child_props,event)}tree===null||tree===void 0?void 0:tree.events.emit("click")},onMouseEnter:function onMouseEnter(){if(allowHover&&open||internalAllowHover&&open){setActiveIndex(index)}}}))}));return _react.default.createElement(_framerMotion.LazyMotion,{features:_framerMotion.domAnimation},_react.default.createElement(_react1.FloatingPortal,null,_react.default.createElement(NewAnimatePresence,null,open&&_react.default.createElement(_react.default.Fragment,null,lockScroll?_react.default.createElement(_react1.FloatingOverlay,{lockScroll:true},_react.default.createElement(_react1.FloatingFocusManager,{context:context,modal:!nested,initialFocus:nested?-1:0,returnFocus:!nested,visuallyHiddenDismiss:true},menuComponent)):_react.default.createElement(_react1.FloatingFocusManager,{context:context,modal:!nested,initialFocus:nested?-1:0,returnFocus:!nested,visuallyHiddenDismiss:true},menuComponent)))))});MenuList.propTypes={className:_menu.propTypesClassName,children:_menu.propTypesChildren};MenuList.displayName="MaterialTailwind.MenuList";var _default=MenuList;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Menu/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Menu/index.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{Menu:function(){return Menu},MenuHandler:function(){return _menuHandler.MenuHandler},MenuList:function(){return _menuList.MenuList},MenuItem:function(){return _menuItem.MenuItem},useMenu:function(){return _menuContext.useMenu},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _react1=__webpack_require__(/*! @floating-ui/react */ "./node_modules/@material-tailwind/react/node_modules/@floating-ui/react/dist/floating-ui.react.esm.js");var _menuContext=__webpack_require__(/*! ./MenuContext */ "./node_modules/@material-tailwind/react/components/Menu/MenuContext.js");var _menuCore=__webpack_require__(/*! ./MenuCore */ "./node_modules/@material-tailwind/react/components/Menu/MenuCore.js");var _menuHandler=__webpack_require__(/*! ./MenuHandler */ "./node_modules/@material-tailwind/react/components/Menu/MenuHandler.js");var _menuList=__webpack_require__(/*! ./MenuList */ "./node_modules/@material-tailwind/react/components/Menu/MenuList.js");var _menuItem=__webpack_require__(/*! ./MenuItem */ "./node_modules/@material-tailwind/react/components/Menu/MenuItem.js");function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var Menu=_react.default.forwardRef(function(param,ref){var open=param.open,handler=param.handler,placement=param.placement,offset=param.offset,dismiss=param.dismiss,animate=param.animate,lockScroll=param.lockScroll,allowHover=param.allowHover,children=param.children;var parentId=(0,_react1.useFloatingParentNodeId)();var props={open:open,handler:handler,placement:placement,offset:offset,dismiss:dismiss,animate:animate,lockScroll:lockScroll,allowHover:allowHover};if(parentId==null){return _react.default.createElement(_react1.FloatingTree,null,_react.default.createElement(_menuCore.MenuCore,_extends({ref:ref},props),children))}return _react.default.createElement(_menuCore.MenuCore,_extends({ref:ref},props),children)});Menu.propTypes=_menuCore.MenuCore.propTypes;Menu.displayName="MaterialTailwind.Menu";var _default=Object.assign(Menu,{Handler:_menuHandler.MenuHandler,List:_menuList.MenuList,Item:_menuItem.MenuItem});

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Navbar/MobileNav.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Navbar/MobileNav.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{MobileNav:function(){return MobileNav},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _framerMotion=__webpack_require__(/*! framer-motion */ "./node_modules/framer-motion/dist/cjs/index.js");var _react1=__webpack_require__(/*! @floating-ui/react */ "./node_modules/@material-tailwind/react/node_modules/@floating-ui/react/dist/floating-ui.react.esm.js");var _deepmerge=_interopRequireDefault(__webpack_require__(/*! deepmerge */ "./node_modules/deepmerge/dist/cjs.js"));var _classnames=_interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _navbar=__webpack_require__(/*! ../../types/components/navbar */ "./node_modules/@material-tailwind/react/types/components/navbar.js");function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var MobileNav=_react.default.forwardRef(function(_param,ref){var open=_param.open,animate=_param.animate,className=_param.className,children=_param.children,rest=_objectWithoutProperties(_param,["open","animate","className","children"]);var _mobileNavRef_current;console.error("<MobileNav /> will be deprecated in the future versions of @material-tailwind/react use <Collapse /> instead.\n      \nMore details: https://www.material-tailwind.com/docs/react/collapse\n      ");var mobileNavRef=_react.default.useRef(null);var navbar=(0,_theme.useTheme)().navbar;var styles=navbar.styles;var mobileNav=styles.base.mobileNav;animate=animate!==null&&animate!==void 0?animate:{};className=className!==null&&className!==void 0?className:"";var classes=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(mobileNav)),className);var mainAnimation={unmount:{height:0,opacity:0,transition:{duration:.3,times:"[0.4, 0, 0.2, 1]"}},mount:{opacity:1,height:"".concat((_mobileNavRef_current=mobileNavRef.current)===null||_mobileNavRef_current===void 0?void 0:_mobileNavRef_current.scrollHeight,"px"),transition:{duration:.3,times:"[0.4, 0, 0.2, 1]"}}};var appliedAnimation=(0,_deepmerge.default)(mainAnimation,animate);var NewAnimatePresence=_framerMotion.AnimatePresence;var mergedRef=(0,_react1.useMergeRefs)([ref,mobileNavRef]);return _react.default.createElement(_framerMotion.LazyMotion,{features:_framerMotion.domAnimation},_react.default.createElement(NewAnimatePresence,null,_react.default.createElement(_framerMotion.m.div,_extends({},rest,{ref:mergedRef,className:classes,initial:"unmount",exit:"unmount",animate:open?"mount":"unmount",variants:appliedAnimation}),children)))});MobileNav.displayName="MaterialTailwind.MobileNav";MobileNav.propTypes={open:_navbar.propTypesOpen,animate:_navbar.propTypesAnimate,className:_navbar.propTypesClassName,children:_navbar.propTypesChildren};var _default=MobileNav;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Navbar/index.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Navbar/index.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{Navbar:function(){return Navbar},MobileNav:function(){return _mobileNav.MobileNav},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _classnames=_interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _findMatch=_interopRequireDefault(__webpack_require__(/*! ../../utils/findMatch */ "./node_modules/@material-tailwind/react/utils/findMatch.js"));var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _mobileNav=__webpack_require__(/*! ./MobileNav */ "./node_modules/@material-tailwind/react/components/Navbar/MobileNav.js");var _navbar=__webpack_require__(/*! ../../types/components/navbar */ "./node_modules/@material-tailwind/react/types/components/navbar.js");function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var Navbar=_react.default.forwardRef(function(_param,ref){var variant=_param.variant,color=_param.color,shadow=_param.shadow,blurred=_param.blurred,fullWidth=_param.fullWidth,className=_param.className,children=_param.children,rest=_objectWithoutProperties(_param,["variant","color","shadow","blurred","fullWidth","className","children"]);var navbar=(0,_theme.useTheme)().navbar;var defaultProps=navbar.defaultProps,valid=navbar.valid,styles=navbar.styles;var base=styles.base,variants=styles.variants;variant=variant!==null&&variant!==void 0?variant:defaultProps.variant;color=color!==null&&color!==void 0?color:defaultProps.color;shadow=shadow!==null&&shadow!==void 0?shadow:defaultProps.shadow;blurred=blurred!==null&&blurred!==void 0?blurred:defaultProps.blurred;fullWidth=fullWidth!==null&&fullWidth!==void 0?fullWidth:defaultProps.fullWidth;className=(0,_tailwindMerge.twMerge)(defaultProps.className||"",className);var _obj;var navbarRoot=(0,_classnames.default)((0,_objectsToString.default)(base.navbar.initial),(_obj={},_defineProperty(_obj,(0,_objectsToString.default)(base.navbar.shadow),shadow),_defineProperty(_obj,(0,_objectsToString.default)(base.navbar.blurred),blurred&&color==="white"),_defineProperty(_obj,(0,_objectsToString.default)(base.navbar.fullWidth),fullWidth),_obj));var navbarVariant=(0,_classnames.default)((0,_objectsToString.default)(variants[(0,_findMatch.default)(valid.variants,variant,"filled")][(0,_findMatch.default)(valid.colors,color,"white")]));var navbarClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)(navbarRoot,navbarVariant),className);return _react.default.createElement("nav",_extends({},rest,{ref:ref,className:navbarClasses}),children)});Navbar.propTypes={variant:_propTypes.default.oneOf(_navbar.propTypesVariant),color:_propTypes.default.oneOf(_navbar.propTypesColor),shadow:_navbar.propTypesShadow,blurred:_navbar.propTypesBlurred,fullWidth:_navbar.propTypesFullWidth,className:_navbar.propTypesClassName,children:_navbar.propTypesChildren};Navbar.displayName="MaterialTailwind.Navbar";var _default=Object.assign(Navbar,{MobileNav:_mobileNav.MobileNav});

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Popover/PopoverContent.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Popover/PopoverContent.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{PopoverContent:function(){return PopoverContent},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _react1=__webpack_require__(/*! @floating-ui/react */ "./node_modules/@material-tailwind/react/node_modules/@floating-ui/react/dist/floating-ui.react.esm.js");var _framerMotion=__webpack_require__(/*! framer-motion */ "./node_modules/framer-motion/dist/cjs/index.js");var _classnames=_interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _popoverContext=__webpack_require__(/*! ./PopoverContext */ "./node_modules/@material-tailwind/react/components/Popover/PopoverContext.js");var _popover=__webpack_require__(/*! ../../types/components/popover */ "./node_modules/@material-tailwind/react/types/components/popover.js");function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};var ownKeys=Object.keys(source);if(typeof Object.getOwnPropertySymbols==="function"){ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))}ownKeys.forEach(function(key){_defineProperty(target,key,source[key])})}return target}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})}keys.push.apply(keys,symbols)}return keys}function _objectSpreadProps(target,source){source=source!=null?source:{};if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source))}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})}return target}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var PopoverContent=_react.default.forwardRef(function(_param,ref){var children=_param.children,className=_param.className,rest=_objectWithoutProperties(_param,["children","className"]);var popover=(0,_theme.useTheme)().popover;var defaultProps=popover.defaultProps,base=popover.styles.base;var _usePopover=(0,_popoverContext.usePopover)(),open=_usePopover.open,strategy=_usePopover.strategy,x=_usePopover.x,y=_usePopover.y,context=_usePopover.context,floating=_usePopover.floating,getFloatingProps=_usePopover.getFloatingProps,appliedAnimation=_usePopover.appliedAnimation,labelId=_usePopover.labelId,descriptionId=_usePopover.descriptionId;className=(0,_tailwindMerge.twMerge)(defaultProps.className||"",className);var popoverClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(base)),className);var mergedRef=(0,_react1.useMergeRefs)([ref,floating]);var NewAnimatePresence=_framerMotion.AnimatePresence;return _react.default.createElement(_framerMotion.LazyMotion,{features:_framerMotion.domAnimation},_react.default.createElement(_react1.FloatingPortal,null,_react.default.createElement(NewAnimatePresence,null,open&&_react.default.createElement(_react1.FloatingFocusManager,{context:context},_react.default.createElement(_framerMotion.m.div,_extends({},getFloatingProps(_objectSpreadProps(_objectSpread({},rest),{ref:mergedRef,className:popoverClasses,style:{position:strategy,top:y!==null&&y!==void 0?y:"",left:x!==null&&x!==void 0?x:""},"aria-labelledby":labelId,"aria-describedby":descriptionId})),{initial:"unmount",exit:"unmount",animate:open?"mount":"unmount",variants:appliedAnimation}),children)))))});PopoverContent.propTypes={className:_popover.propTypesClassName,children:_popover.propTypesChildren};PopoverContent.displayName="MaterialTailwind.PopoverContent";var _default=PopoverContent;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Popover/PopoverContext.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Popover/PopoverContext.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{PopoverContext:function(){return PopoverContext},usePopover:function(){return usePopover},PopoverContextProvider:function(){return PopoverContextProvider}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _popover=__webpack_require__(/*! ../../types/components/popover */ "./node_modules/@material-tailwind/react/types/components/popover.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var PopoverContext=_react.default.createContext(null);PopoverContext.displayName="MaterialTailwind.PopoverContext";function usePopover(){var context=_react.default.useContext(PopoverContext);if(!context){throw new Error("usePopover() must be used within a Popover. It happens when you use PopoverHandler or PopoverContent components outside the Popover component.")}return context}var PopoverContextProvider=function(param){var value=param.value,children=param.children;return _react.default.createElement(PopoverContext.Provider,{value:value},children)};PopoverContextProvider.propTypes={value:_popover.propTypesContextValue,children:_popover.propTypesChildren};PopoverContextProvider.displayName="MaterialTailwind.PopoverContextProvider";

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Popover/PopoverHandler.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Popover/PopoverHandler.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{PopoverHandler:function(){return PopoverHandler},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _react1=__webpack_require__(/*! @floating-ui/react */ "./node_modules/@material-tailwind/react/node_modules/@floating-ui/react/dist/floating-ui.react.esm.js");var _popoverContext=__webpack_require__(/*! ./PopoverContext */ "./node_modules/@material-tailwind/react/components/Popover/PopoverContext.js");var _popover=__webpack_require__(/*! ../../types/components/popover */ "./node_modules/@material-tailwind/react/types/components/popover.js");function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};var ownKeys=Object.keys(source);if(typeof Object.getOwnPropertySymbols==="function"){ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))}ownKeys.forEach(function(key){_defineProperty(target,key,source[key])})}return target}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})}keys.push.apply(keys,symbols)}return keys}function _objectSpreadProps(target,source){source=source!=null?source:{};if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source))}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})}return target}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var PopoverHandler=_react.default.forwardRef(function(_param,ref){var children=_param.children,rest=_objectWithoutProperties(_param,["children"]);var _usePopover=(0,_popoverContext.usePopover)(),getReferenceProps=_usePopover.getReferenceProps,reference=_usePopover.reference;var mergedRef=(0,_react1.useMergeRefs)([ref,reference]);return _react.default.cloneElement(children,_objectSpread({},getReferenceProps(_objectSpreadProps(_objectSpread({},rest),{ref:mergedRef}))))});PopoverHandler.propTypes={children:_popover.propTypesChildren};PopoverHandler.displayName="MaterialTailwind.PopoverHandler";var _default=PopoverHandler;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Popover/index.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Popover/index.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{Popover:function(){return Popover},PopoverHandler:function(){return _popoverHandler.PopoverHandler},PopoverContent:function(){return _popoverContent.PopoverContent},usePopover:function(){return _popoverContext.usePopover},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _react1=__webpack_require__(/*! @floating-ui/react */ "./node_modules/@material-tailwind/react/node_modules/@floating-ui/react/dist/floating-ui.react.esm.js");var _deepmerge=_interopRequireDefault(__webpack_require__(/*! deepmerge */ "./node_modules/deepmerge/dist/cjs.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _popoverContext=__webpack_require__(/*! ./PopoverContext */ "./node_modules/@material-tailwind/react/components/Popover/PopoverContext.js");var _popover=__webpack_require__(/*! ../../types/components/popover */ "./node_modules/@material-tailwind/react/types/components/popover.js");var _popoverHandler=__webpack_require__(/*! ./PopoverHandler */ "./node_modules/@material-tailwind/react/components/Popover/PopoverHandler.js");var _popoverContent=__webpack_require__(/*! ./PopoverContent */ "./node_modules/@material-tailwind/react/components/Popover/PopoverContent.js");function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _iterableToArrayLimit(arr,i){var _i=arr==null?null:typeof Symbol!=="undefined"&&arr[Symbol.iterator]||arr["@@iterator"];if(_i==null)return;var _arr=[];var _n=true;var _d=false;var _s,_e;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break}}catch(err){_d=true;_e=err}finally{try{if(!_n&&_i["return"]!=null)_i["return"]()}finally{if(_d)throw _e}}return _arr}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_unsupportedIterableToArray(arr,i)||_nonIterableRest()}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(n);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}var Popover=function(param){var open=param.open,handler=param.handler,placement=param.placement,offset=param.offset,dismiss=param.dismiss,animate=param.animate,children=param.children;var popover=(0,_theme.useTheme)().popover;var defaultProps=popover.defaultProps;var _React_useState=_slicedToArray(_react.default.useState(false),2),internalOpen=_React_useState[0],setInternalOpen=_React_useState[1];open=open!==null&&open!==void 0?open:internalOpen;handler=handler!==null&&handler!==void 0?handler:setInternalOpen;placement=placement!==null&&placement!==void 0?placement:defaultProps.placement;offset=offset!==null&&offset!==void 0?offset:defaultProps.offset;dismiss=dismiss!==null&&dismiss!==void 0?dismiss:defaultProps.dismiss;animate=animate!==null&&animate!==void 0?animate:defaultProps.animate;var animation={unmount:{opacity:0},mount:{opacity:1}};var appliedAnimation=(0,_deepmerge.default)(animation,animate);var _useFloating=(0,_react1.useFloating)({open:open,onOpenChange:handler,middleware:[(0,_react1.offset)(offset),(0,_react1.flip)(),(0,_react1.shift)()],placement:placement}),x=_useFloating.x,y=_useFloating.y,reference=_useFloating.reference,floating=_useFloating.floating,strategy=_useFloating.strategy,refs=_useFloating.refs,update=_useFloating.update,context=_useFloating.context;var id=(0,_react1.useId)();var labelId="".concat(id,"-label");var descriptionId="".concat(id,"-description");var _useInteractions=(0,_react1.useInteractions)([(0,_react1.useClick)(context),(0,_react1.useRole)(context),(0,_react1.useDismiss)(context,dismiss)]),getReferenceProps=_useInteractions.getReferenceProps,getFloatingProps=_useInteractions.getFloatingProps;_react.default.useEffect(function(){if(refs.reference.current&&refs.floating.current&&open){return(0,_react1.autoUpdate)(refs.reference.current,refs.floating.current,update)}},[open,update,refs.reference,refs.floating]);var contextValue=_react.default.useMemo(function(){return{open:open,strategy:strategy,x:x,y:y,context:context,reference:reference,floating:floating,getReferenceProps:getReferenceProps,getFloatingProps:getFloatingProps,appliedAnimation:appliedAnimation,labelId:labelId,descriptionId:descriptionId}},[open,strategy,x,y,context,reference,floating,getFloatingProps,getReferenceProps,appliedAnimation,labelId,descriptionId]);return _react.default.createElement(_popoverContext.PopoverContextProvider,{value:contextValue},children)};Popover.propTypes={open:_popover.propTypesOpen,handler:_popover.propTypesHandler,placement:_propTypes.default.oneOf(_popover.propTypesPlacement),offset:_popover.propTypesOffset,dismiss:_popover.propTypesDismiss,animate:_popover.propTypesAnimate,children:_popover.propTypesChildren};Popover.displayName="MaterialTailwind.Popover";var _default=Object.assign(Popover,{Handler:_popoverHandler.PopoverHandler,Content:_popoverContent.PopoverContent});

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Progress/index.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Progress/index.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{Progress:function(){return Progress},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _classnames=_interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _findMatch=_interopRequireDefault(__webpack_require__(/*! ../../utils/findMatch */ "./node_modules/@material-tailwind/react/utils/findMatch.js"));var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _progress=__webpack_require__(/*! ../../types/components/progress */ "./node_modules/@material-tailwind/react/types/components/progress.js");function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var Progress=_react.default.forwardRef(function(_param,ref){var variant=_param.variant,color=_param.color,size=_param.size,value=_param.value,label=_param.label,className=_param.className,barProps=_param.barProps,rest=_objectWithoutProperties(_param,["variant","color","size","value","label","className","barProps"]);var progress=(0,_theme.useTheme)().progress;var defaultProps=progress.defaultProps,valid=progress.valid,styles=progress.styles;var base=styles.base,variants=styles.variants,sizes=styles.sizes;variant=variant!==null&&variant!==void 0?variant:defaultProps.variant;color=color!==null&&color!==void 0?color:defaultProps.color;size=size!==null&&size!==void 0?size:defaultProps.size;label=label!==null&&label!==void 0?label:defaultProps.label;barProps=barProps!==null&&barProps!==void 0?barProps:defaultProps.barProps;className=(0,_tailwindMerge.twMerge)(defaultProps.className||"",className);var progressVariant=(0,_objectsToString.default)(variants[(0,_findMatch.default)(valid.variants,variant,"filled")][(0,_findMatch.default)(valid.colors,color,"gray")]);var progressContainerSize=(0,_objectsToString.default)(sizes[(0,_findMatch.default)(valid.sizes,size,"md")]["container"]["initial"]);var progressContainer=(0,_classnames.default)((0,_objectsToString.default)(base.container.initial),progressContainerSize);var progressWithLabelSize=(0,_objectsToString.default)(sizes[(0,_findMatch.default)(valid.sizes,size,"md")]["container"]["withLabel"]);var progressWithLabel=(0,_classnames.default)((0,_objectsToString.default)(base.container.withLabel),progressWithLabelSize);var progressBarSize=(0,_objectsToString.default)(sizes[(0,_findMatch.default)(valid.sizes,size,"md")]["bar"]);var progressBar=(0,_classnames.default)((0,_objectsToString.default)(base.bar),progressBarSize);var containerClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)(progressContainer,_defineProperty({},progressWithLabel,label)),className);var barClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)(progressBar,progressVariant),barProps===null||barProps===void 0?void 0:barProps.className);return _react.default.createElement("div",_extends({},rest,{ref:ref,className:containerClasses}),_react.default.createElement("div",_extends({},barProps,{className:barClasses,style:{width:"".concat(value,"%")}}),label&&"".concat(value,"% ").concat(typeof label==="string"?label:"")))});Progress.propTypes={variant:_propTypes.default.oneOf(_progress.propTypesVariant),color:_propTypes.default.oneOf(_progress.propTypesColor),size:_propTypes.default.oneOf(_progress.propTypesSize),value:_progress.propTypesValue,label:_progress.propTypesLabel,barProps:_progress.propTypesBarProps,className:_progress.propTypesClassName};Progress.displayName="MaterialTailwind.Progress";var _default=Progress;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Radio/index.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Radio/index.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{Radio:function(){return Radio},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _materialRippleEffects=_interopRequireDefault(__webpack_require__(/*! material-ripple-effects */ "./node_modules/material-ripple-effects/index.js"));var _classnames=_interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _findMatch=_interopRequireDefault(__webpack_require__(/*! ../../utils/findMatch */ "./node_modules/@material-tailwind/react/utils/findMatch.js"));var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _checkbox=__webpack_require__(/*! ../../types/components/checkbox */ "./node_modules/@material-tailwind/react/types/components/checkbox.js");function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var Radio=_react.default.forwardRef(function(_param,ref){var color=_param.color,label=_param.label,icon=_param.icon,ripple=_param.ripple,className=_param.className,disabled=_param.disabled,containerProps=_param.containerProps,labelProps=_param.labelProps,iconProps=_param.iconProps,inputRef=_param.inputRef,rest=_objectWithoutProperties(_param,["color","label","icon","ripple","className","disabled","containerProps","labelProps","iconProps","inputRef"]);var radio=(0,_theme.useTheme)().radio;var defaultProps=radio.defaultProps,valid=radio.valid,styles=radio.styles;var base=styles.base,colors=styles.colors;var radioId=_react.default.useId();color=color!==null&&color!==void 0?color:defaultProps.color;label=label!==null&&label!==void 0?label:defaultProps.label;icon=icon!==null&&icon!==void 0?icon:defaultProps.icon;ripple=ripple!==null&&ripple!==void 0?ripple:defaultProps.ripple;disabled=disabled!==null&&disabled!==void 0?disabled:defaultProps.disabled;containerProps=containerProps!==null&&containerProps!==void 0?containerProps:defaultProps.containerProps;labelProps=labelProps!==null&&labelProps!==void 0?labelProps:defaultProps.labelProps;iconProps=iconProps!==null&&iconProps!==void 0?iconProps:defaultProps.iconProps;className=(0,_tailwindMerge.twMerge)(defaultProps.className||"",className);var rippleEffect=ripple!==undefined&&new _materialRippleEffects.default;var rootClasses=(0,_classnames.default)((0,_objectsToString.default)(base.root),_defineProperty({},(0,_objectsToString.default)(base.disabled),disabled));var containerClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(base.container)),containerProps===null||containerProps===void 0?void 0:containerProps.className);var inputClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(base.input),(0,_objectsToString.default)(colors[(0,_findMatch.default)(valid.colors,color,"gray")])),className);var labelClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(base.label)),labelProps===null||labelProps===void 0?void 0:labelProps.className);var radioIconClasses=(0,_classnames.default)((0,_classnames.default)((0,_objectsToString.default)(base.icon)),colors[(0,_findMatch.default)(valid.colors,color,"gray")].color,iconProps===null||iconProps===void 0?void 0:iconProps.className);return _react.default.createElement("div",{ref:ref,className:rootClasses},_react.default.createElement("label",_extends({},containerProps,{className:containerClasses,htmlFor:rest.id||radioId,onMouseDown:function(e){var onMouseDown=containerProps===null||containerProps===void 0?void 0:containerProps.onMouseDown;if(ripple){rippleEffect.create(e,"dark")}return typeof onMouseDown==="function"&&onMouseDown(e)}}),_react.default.createElement("input",_extends({},rest,{ref:inputRef,type:"radio",disabled:disabled,className:inputClasses,id:rest.id||radioId})),_react.default.createElement("span",{className:radioIconClasses},icon||_react.default.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",className:"h-3.5 w-3.5",viewBox:"0 0 16 16",fill:"currentColor"},_react.default.createElement("circle",{"data-name":"ellipse",cx:"8",cy:"8",r:"8"})))),label&&_react.default.createElement("label",_extends({},labelProps,{className:labelClasses,htmlFor:rest.id||radioId}),label))});Radio.propTypes={color:_propTypes.default.oneOf(_checkbox.propTypesColor),label:_checkbox.propTypesLabel,icon:_checkbox.propTypesIcon,ripple:_checkbox.propTypesRipple,className:_checkbox.propTypesClassName,disabled:_checkbox.propTypesDisabled,containerProps:_checkbox.propTypesObject,labelProps:_checkbox.propTypesObject};Radio.displayName="MaterialTailwind.Radio";var _default=Radio;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Rating/index.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Rating/index.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{Rating:function(){return Rating},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _classnames=_interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _findMatch=_interopRequireDefault(__webpack_require__(/*! ../../utils/findMatch */ "./node_modules/@material-tailwind/react/utils/findMatch.js"));var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _rating=__webpack_require__(/*! ../../types/components/rating */ "./node_modules/@material-tailwind/react/types/components/rating.js");function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _iterableToArray(iter){if(typeof Symbol!=="undefined"&&iter[Symbol.iterator]!=null||iter["@@iterator"]!=null)return Array.from(iter)}function _iterableToArrayLimit(arr,i){var _i=arr==null?null:typeof Symbol!=="undefined"&&arr[Symbol.iterator]||arr["@@iterator"];if(_i==null)return;var _arr=[];var _n=true;var _d=false;var _s,_e;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break}}catch(err){_d=true;_e=err}finally{try{if(!_n&&_i["return"]!=null)_i["return"]()}finally{if(_d)throw _e}}return _arr}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_unsupportedIterableToArray(arr,i)||_nonIterableRest()}function _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||_unsupportedIterableToArray(arr)||_nonIterableSpread()}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(n);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}var Rating=_react.default.forwardRef(function(_param,ref){var count=_param.count,value=_param.value,ratedIcon=_param.ratedIcon,unratedIcon=_param.unratedIcon,ratedColor=_param.ratedColor,unratedColor=_param.unratedColor,className=_param.className,onChange=_param.onChange,readonly=_param.readonly,rest=_objectWithoutProperties(_param,["count","value","ratedIcon","unratedIcon","ratedColor","unratedColor","className","onChange","readonly"]);var _ratedIconInstance_props,_unratedIconInstance_props;var rating=(0,_theme.useTheme)().rating;var valid=rating.valid,defaultProps=rating.defaultProps,styles=rating.styles;var base=styles.base,colors=styles.colors;count=count!==null&&count!==void 0?count:defaultProps.count;value=value!==null&&value!==void 0?value:defaultProps.value;ratedIcon=ratedIcon!==null&&ratedIcon!==void 0?ratedIcon:defaultProps.ratedIcon;ratedIcon=ratedIcon!==null&&ratedIcon!==void 0?ratedIcon:defaultProps.ratedIcon;unratedIcon=unratedIcon!==null&&unratedIcon!==void 0?unratedIcon:defaultProps.unratedIcon;ratedColor=ratedColor!==null&&ratedColor!==void 0?ratedColor:defaultProps.ratedColor;unratedColor=unratedColor!==null&&unratedColor!==void 0?unratedColor:defaultProps.unratedColor;onChange=onChange!==null&&onChange!==void 0?onChange:defaultProps.onChange;readonly=readonly!==null&&readonly!==void 0?readonly:defaultProps.readonly;className=(0,_tailwindMerge.twMerge)(defaultProps.className||"",className);var _React_useState=_slicedToArray(_react.default.useState(function(){return _toConsumableArray(Array(value).fill("rated")).concat(_toConsumableArray(Array(count-value).fill("un_rated")))}),2),ratingValue=_React_useState[0],setRatingValue=_React_useState[1];var _React_useState1=_slicedToArray(_react.default.useState(function(){return _toConsumableArray(Array(count).fill("un_rated"))}),2),ratingOnHover=_React_useState1[0],setRatingOnHover=_React_useState1[1];var _React_useState2=_slicedToArray(_react.default.useState(false),2),isHover=_React_useState2[0],setIsHover=_React_useState2[1];var ratedColorClasses=(0,_objectsToString.default)(colors[(0,_findMatch.default)(valid.colors,ratedColor,"yellow")]);var unratedColorClasses=(0,_objectsToString.default)(colors[(0,_findMatch.default)(valid.colors,unratedColor,"blue-gray")]);var ratingClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(base.rating),className));var ratingIconClasses=(0,_objectsToString.default)(base.icon);var ratedIconInstance=ratedIcon;var unratedIconInstance=unratedIcon;var customRatedIcon=_react.default.isValidElement(ratedIcon)&&_react.default.cloneElement(ratedIconInstance,{className:(0,_tailwindMerge.twMerge)((0,_classnames.default)(ratingIconClasses,ratedColorClasses,ratedIconInstance===null||ratedIconInstance===void 0?void 0:(_ratedIconInstance_props=ratedIconInstance.props)===null||_ratedIconInstance_props===void 0?void 0:_ratedIconInstance_props.className))});var customUnratedIcon=_react.default.isValidElement(ratedIcon)&&_react.default.cloneElement(unratedIconInstance,{className:(0,_tailwindMerge.twMerge)((0,_classnames.default)(ratingIconClasses,unratedColorClasses,unratedIconInstance===null||unratedIconInstance===void 0?void 0:(_unratedIconInstance_props=unratedIconInstance.props)===null||_unratedIconInstance_props===void 0?void 0:_unratedIconInstance_props.className))});var ratedIconEl=!_react.default.isValidElement(ratedIcon)&&_react.default.createElement(ratedIcon,{className:(0,_tailwindMerge.twMerge)((0,_classnames.default)(ratingIconClasses,ratedColorClasses))});var unratedIconEl=!_react.default.isValidElement(ratedIcon)&&_react.default.createElement(unratedIcon,{className:(0,_tailwindMerge.twMerge)((0,_classnames.default)(ratingIconClasses,unratedColorClasses))});var renderRating=function(data){return data.map(function(el,index){return _react.default.createElement("span",{key:index,onClick:function(){if(readonly)return;var nextRating=ratingValue.map(function(el,i){return i<=index?"rated":"un_rated"});setRatingValue(nextRating);onChange&&typeof onChange==="function"&&onChange(nextRating.filter(function(el){return el==="rated"}).length)},onMouseEnter:function(){if(readonly)return;var nextRating=ratingOnHover.map(function(el,i){return i<=index?"rated":"un_rated"});setIsHover(true);setRatingOnHover(nextRating)},onMouseLeave:function(){return!readonly&&setIsHover(false)}},_react.default.isValidElement(el==="rated"?ratedIcon:unratedIcon)?el==="rated"?customRatedIcon:customUnratedIcon:el==="rated"?ratedIconEl:unratedIconEl)})};return _react.default.createElement("div",_extends({},rest,{ref:ref,className:ratingClasses}),isHover?renderRating(ratingOnHover):renderRating(ratingValue))});Rating.propTypes={count:_rating.propTypesCount,value:_rating.propTypesValue,ratedIcon:_rating.propTypesRatedIcon,unratedIcon:_rating.propTypesUnratedIcon,ratedColor:_propTypes.default.oneOf(_rating.propTypesColor),unratedColor:_propTypes.default.oneOf(_rating.propTypesColor),className:_rating.propTypesClassName,onChange:_rating.propTypesOnChange,readonly:_rating.propTypesReadonly};Rating.displayName="MaterialTailwind.Rating";var _default=Rating;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Select/SelectContext.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Select/SelectContext.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{SelectContext:function(){return SelectContext},useSelect:function(){return useSelect},usePrevious:function(){return usePrevious},SelectContextProvider:function(){return SelectContextProvider}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _framerMotion=__webpack_require__(/*! framer-motion */ "./node_modules/framer-motion/dist/cjs/index.js");var _select=__webpack_require__(/*! ../../types/components/select */ "./node_modules/@material-tailwind/react/types/components/select.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var SelectContext=_react.default.createContext(null);SelectContext.displayName="MaterialTailwind.SelectContext";function useSelect(){var context=_react.default.useContext(SelectContext);if(context===null){throw new Error("useSelect() must be used within a Select. It happens when you use SelectOption component outside the Select component.")}return context}function usePrevious(value){var ref=_react.default.useRef();(0,_framerMotion.useIsomorphicLayoutEffect)(function(){ref.current=value},[value]);return ref.current}var SelectContextProvider=function(param){var value=param.value,children=param.children;return _react.default.createElement(SelectContext.Provider,{value:value},children)};SelectContextProvider.propTypes={value:_select.propTypesContextValue,children:_select.propTypesChildren};SelectContextProvider.displayName="MaterialTailwind.SelectContextProvider";

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Select/SelectOption.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Select/SelectOption.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{SelectOption:function(){return SelectOption},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _classnames=_interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _selectContext=__webpack_require__(/*! ./SelectContext */ "./node_modules/@material-tailwind/react/components/Select/SelectContext.js");var _select=__webpack_require__(/*! ../../types/components/select */ "./node_modules/@material-tailwind/react/types/components/select.js");function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var SelectOption=function(_param){var handleSelect=function handleSelect(){setSelectedIndex(index);onChange(value);setOpen(false);setActiveIndex(null)};var handleKeyDown=function handleKeyDown(event){if(event.key==="Enter"||event.key===" "&&!dataRef.current.typing){event.preventDefault();handleSelect()}};var _param_value=_param.value,value=_param_value===void 0?"":_param_value,_param_index=_param.index,index=_param_index===void 0?0:_param_index,_param_disabled=_param.disabled,disabled=_param_disabled===void 0?false:_param_disabled,_param_className=_param.className,className=_param_className===void 0?"":_param_className,children=_param.children,rest=_objectWithoutProperties(_param,["value","index","disabled","className","children"]);var select=(0,_theme.useTheme)().select;var styles=select.styles;var base=styles.base;var _useSelect=(0,_selectContext.useSelect)(),selectedIndex=_useSelect.selectedIndex,setSelectedIndex=_useSelect.setSelectedIndex,listRef=_useSelect.listRef,setOpen=_useSelect.setOpen,onChange=_useSelect.onChange,activeIndex=_useSelect.activeIndex,setActiveIndex=_useSelect.setActiveIndex,getItemProps=_useSelect.getItemProps,dataRef=_useSelect.dataRef;var optionBaseClasses=(0,_objectsToString.default)(base.option.initial);var optionActiveClasses=(0,_objectsToString.default)(base.option.active);var optionDisabledClasses=(0,_objectsToString.default)(base.option.disabled);var _obj;var classes=(0,_tailwindMerge.twMerge)((0,_classnames.default)(optionBaseClasses,(_obj={},_defineProperty(_obj,optionActiveClasses,selectedIndex===index),_defineProperty(_obj,optionDisabledClasses,disabled),_obj)),className!==null&&className!==void 0?className:"");return _react.default.createElement("li",_extends({},rest,{role:"option",ref:function(node){return listRef.current[index]=node},className:classes,disabled:disabled,tabIndex:activeIndex===index?0:1,"aria-selected":activeIndex===index&&selectedIndex===index,"data-selected":selectedIndex===index},getItemProps({onClick:function(e){var onClick=rest===null||rest===void 0?void 0:rest.onClick;if(typeof onClick==="function"){onClick(e);handleSelect()}handleSelect()},onKeyDown:function(e){var onKeyDown=rest===null||rest===void 0?void 0:rest.onKeyDown;if(typeof onKeyDown==="function"){onKeyDown(e);handleKeyDown(e)}handleKeyDown(e)}})),children)};SelectOption.propTypes={value:_select.propTypesValue,index:_select.propTypesIndex,disabled:_select.propTypesDisabled,className:_select.propTypesClassName,children:_select.propTypesChildren};SelectOption.displayName="MaterialTailwind.SelectOption";var _default=SelectOption;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Select/index.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Select/index.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{Select:function(){return Select},Option:function(){return _selectOption.SelectOption},useSelect:function(){return _selectContext.useSelect},usePrevious:function(){return _selectContext.usePrevious},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _react1=__webpack_require__(/*! @floating-ui/react */ "./node_modules/@material-tailwind/react/node_modules/@floating-ui/react/dist/floating-ui.react.esm.js");var _framerMotion=__webpack_require__(/*! framer-motion */ "./node_modules/framer-motion/dist/cjs/index.js");var _classnames=_interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _deepmerge=_interopRequireDefault(__webpack_require__(/*! deepmerge */ "./node_modules/deepmerge/dist/cjs.js"));var _findMatch=_interopRequireDefault(__webpack_require__(/*! ../../utils/findMatch */ "./node_modules/@material-tailwind/react/utils/findMatch.js"));var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _selectContext=__webpack_require__(/*! ./SelectContext */ "./node_modules/@material-tailwind/react/components/Select/SelectContext.js");var _select=__webpack_require__(/*! ../../types/components/select */ "./node_modules/@material-tailwind/react/types/components/select.js");var _selectOption=__webpack_require__(/*! ./SelectOption */ "./node_modules/@material-tailwind/react/components/Select/SelectOption.js");function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _iterableToArray(iter){if(typeof Symbol!=="undefined"&&iter[Symbol.iterator]!=null||iter["@@iterator"]!=null)return Array.from(iter)}function _iterableToArrayLimit(arr,i){var _i=arr==null?null:typeof Symbol!=="undefined"&&arr[Symbol.iterator]||arr["@@iterator"];if(_i==null)return;var _arr=[];var _n=true;var _d=false;var _s,_e;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break}}catch(err){_d=true;_e=err}finally{try{if(!_n&&_i["return"]!=null)_i["return"]()}finally{if(_d)throw _e}}return _arr}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};var ownKeys=Object.keys(source);if(typeof Object.getOwnPropertySymbols==="function"){ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))}ownKeys.forEach(function(key){_defineProperty(target,key,source[key])})}return target}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})}keys.push.apply(keys,symbols)}return keys}function _objectSpreadProps(target,source){source=source!=null?source:{};if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source))}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})}return target}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_unsupportedIterableToArray(arr,i)||_nonIterableRest()}function _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||_unsupportedIterableToArray(arr)||_nonIterableSpread()}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(n);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}var Select=_react.default.forwardRef(function(_param,ref){var variant=_param.variant,color=_param.color,size=_param.size,label=_param.label,error=_param.error,success=_param.success,arrow=_param.arrow,value=_param.value,onChange=_param.onChange,selected=_param.selected,offset=_param.offset,dismiss=_param.dismiss,animate=_param.animate,lockScroll=_param.lockScroll,labelProps=_param.labelProps,menuProps=_param.menuProps,className=_param.className,disabled=_param.disabled,name=_param.name,children=_param.children,containerProps=_param.containerProps,rest=_objectWithoutProperties(_param,["variant","color","size","label","error","success","arrow","value","onChange","selected","offset","dismiss","animate","lockScroll","labelProps","menuProps","className","disabled","name","children","containerProps"]);var _children_;var select=(0,_theme.useTheme)().select;var defaultProps=select.defaultProps,valid=select.valid,styles=select.styles;var base=styles.base,variants=styles.variants;var _React_useState=_slicedToArray(_react.default.useState("close"),2),state=_React_useState[0],setState=_React_useState[1];variant=variant!==null&&variant!==void 0?variant:defaultProps.variant;color=color!==null&&color!==void 0?color:defaultProps.color;size=size!==null&&size!==void 0?size:defaultProps.size;label=label!==null&&label!==void 0?label:defaultProps.label;error=error!==null&&error!==void 0?error:defaultProps.error;success=success!==null&&success!==void 0?success:defaultProps.success;arrow=arrow!==null&&arrow!==void 0?arrow:defaultProps.arrow;value=value!==null&&value!==void 0?value:defaultProps.value;onChange=onChange!==null&&onChange!==void 0?onChange:defaultProps.onChange;selected=selected!==null&&selected!==void 0?selected:defaultProps.selected;offset=offset!==null&&offset!==void 0?offset:defaultProps.offset;dismiss=dismiss!==null&&dismiss!==void 0?dismiss:defaultProps.dismiss;animate=animate!==null&&animate!==void 0?animate:defaultProps.animate;labelProps=labelProps!==null&&labelProps!==void 0?labelProps:defaultProps.labelProps;menuProps=menuProps!==null&&menuProps!==void 0?menuProps:defaultProps.menuProps;var _merge;containerProps=(_merge=(0,_deepmerge.default)(containerProps,(defaultProps===null||defaultProps===void 0?void 0:defaultProps.containerProps)||{}))!==null&&_merge!==void 0?_merge:defaultProps.containerProps;className=(0,_tailwindMerge.twMerge)(defaultProps.className||"",className);children=Array.isArray(children)?children:[children];var listItemsRef=_react.default.useRef([]);var _React_Children_map;var listContentRef=_react.default.useRef(_toConsumableArray((_React_Children_map=_react.default.Children.map(children,function(child){var props=child.props;return props===null||props===void 0?void 0:props.value}))!==null&&_React_Children_map!==void 0?_React_Children_map:[]));var _React_useState1=_slicedToArray(_react.default.useState(false),2),open=_React_useState1[0],setOpen=_React_useState1[1];var _React_useState2=_slicedToArray(_react.default.useState(null),2),activeIndex=_React_useState2[0],setActiveIndex=_React_useState2[1];var _React_useState3=_slicedToArray(_react.default.useState(0),2),selectedIndex=_React_useState3[0],setSelectedIndex=_React_useState3[1];var _React_useState4=_slicedToArray(_react.default.useState(false),2),controlledScrolling=_React_useState4[0],setControlledScrolling=_React_useState4[1];var prevActiveIndex=(0,_selectContext.usePrevious)(activeIndex);var _useFloating=(0,_react1.useFloating)({placement:"bottom-start",open:open,onOpenChange:setOpen,whileElementsMounted:_react1.autoUpdate,middleware:[(0,_react1.offset)(5),(0,_react1.flip)({padding:10}),(0,_react1.size)({apply:function apply(param){var rects=param.rects,elements=param.elements;var _elements_floating,_rects_reference;Object.assign(elements===null||elements===void 0?void 0:(_elements_floating=elements.floating)===null||_elements_floating===void 0?void 0:_elements_floating.style,{width:"".concat(rects===null||rects===void 0?void 0:(_rects_reference=rects.reference)===null||_rects_reference===void 0?void 0:_rects_reference.width,"px"),zIndex:99})},padding:20})]}),x=_useFloating.x,y=_useFloating.y,strategy=_useFloating.strategy,refs=_useFloating.refs,context=_useFloating.context;_react.default.useEffect(function(){setSelectedIndex(Math.max(0,listContentRef.current.indexOf(value)+1))},[value]);var floatingRef=refs.floating;var _useInteractions=(0,_react1.useInteractions)([(0,_react1.useClick)(context),(0,_react1.useRole)(context,{role:"listbox"}),(0,_react1.useDismiss)(context,_objectSpread({},dismiss)),(0,_react1.useListNavigation)(context,{listRef:listItemsRef,activeIndex:activeIndex,selectedIndex:selectedIndex,onNavigate:setActiveIndex,loop:true}),(0,_react1.useTypeahead)(context,{listRef:listContentRef,activeIndex:activeIndex,selectedIndex:selectedIndex,onMatch:open?setActiveIndex:setSelectedIndex})]),getReferenceProps=_useInteractions.getReferenceProps,getFloatingProps=_useInteractions.getFloatingProps,getItemProps=_useInteractions.getItemProps;(0,_framerMotion.useIsomorphicLayoutEffect)(function(){var floating=floatingRef.current;if(open&&controlledScrolling&&floating){var item=activeIndex!=null?listItemsRef.current[activeIndex]:selectedIndex!=null?listItemsRef.current[selectedIndex]:null;if(item&&prevActiveIndex!=null){var _listItemsRef_current_prevActiveIndex;var _listItemsRef_current_prevActiveIndex_offsetHeight;var itemHeight=(_listItemsRef_current_prevActiveIndex_offsetHeight=(_listItemsRef_current_prevActiveIndex=listItemsRef.current[prevActiveIndex])===null||_listItemsRef_current_prevActiveIndex===void 0?void 0:_listItemsRef_current_prevActiveIndex.offsetHeight)!==null&&_listItemsRef_current_prevActiveIndex_offsetHeight!==void 0?_listItemsRef_current_prevActiveIndex_offsetHeight:0;var floatingHeight=floating.offsetHeight;var top=item.offsetTop;var bottom=top+itemHeight;if(top<floating.scrollTop){floating.scrollTop-=floating.scrollTop-top+5}else if(bottom>floatingHeight+floating.scrollTop){floating.scrollTop+=bottom-floatingHeight-floating.scrollTop+5}}}},[open,controlledScrolling,prevActiveIndex,activeIndex]);var contextValue=_react.default.useMemo(function(){return{selectedIndex:selectedIndex,setSelectedIndex:setSelectedIndex,listRef:listItemsRef,setOpen:setOpen,onChange:onChange||function(){},activeIndex:activeIndex,setActiveIndex:setActiveIndex,getItemProps:getItemProps,dataRef:context.dataRef}},[selectedIndex,onChange,activeIndex,getItemProps,context.dataRef]);_react.default.useEffect(function(){if(open){setState("open")}else if(!open&&selectedIndex||!open&&value){setState("withValue")}else{setState("close")}},[open,value,selectedIndex,selected]);var selectVariant=variants[(0,_findMatch.default)(valid.variants,variant,"outlined")];var selectSize=selectVariant.sizes[(0,_findMatch.default)(valid.sizes,size,"md")];var selectError=selectVariant.error.select;var selectSuccess=selectVariant.success.select;var selectColor=selectVariant.colors.select[(0,_findMatch.default)(valid.colors,color,"gray")];var labelError=selectVariant.error.label;var labelSuccess=selectVariant.success.label;var labelColor=selectVariant.colors.label[(0,_findMatch.default)(valid.colors,color,"gray")];var stateClasses=selectVariant.states[state];var containerClasses=(0,_classnames.default)((0,_objectsToString.default)(base.container),(0,_objectsToString.default)(selectSize.container),containerProps===null||containerProps===void 0?void 0:containerProps.className);var selectClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(base.select),(0,_objectsToString.default)(selectVariant.base.select),(0,_objectsToString.default)(stateClasses.select),(0,_objectsToString.default)(selectSize.select),_defineProperty({},(0,_objectsToString.default)(selectColor[state]),!error&&!success),_defineProperty({},(0,_objectsToString.default)(selectError.initial),error),_defineProperty({},(0,_objectsToString.default)(selectError.states[state]),error),_defineProperty({},(0,_objectsToString.default)(selectSuccess.initial),success),_defineProperty({},(0,_objectsToString.default)(selectSuccess.states[state]),success)),className);var _labelProps_className;var labelClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(base.label),(0,_objectsToString.default)(selectVariant.base.label),(0,_objectsToString.default)(stateClasses.label),(0,_objectsToString.default)(selectSize.label.initial),(0,_objectsToString.default)(selectSize.label.states[state]),_defineProperty({},(0,_objectsToString.default)(labelColor[state]),!error&&!success),_defineProperty({},(0,_objectsToString.default)(labelError.initial),error),_defineProperty({},(0,_objectsToString.default)(labelError.states[state]),error),_defineProperty({},(0,_objectsToString.default)(labelSuccess.initial),success),_defineProperty({},(0,_objectsToString.default)(labelSuccess.states[state]),success)),(_labelProps_className=labelProps.className)!==null&&_labelProps_className!==void 0?_labelProps_className:"");var arrowClasses=(0,_classnames.default)((0,_objectsToString.default)(base.arrow.initial),_defineProperty({},(0,_objectsToString.default)(base.arrow.active),open));var _menuProps_className;var menuClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(base.menu)),(_menuProps_className=menuProps.className)!==null&&_menuProps_className!==void 0?_menuProps_className:"");var buttonContentClasses=(0,_classnames.default)("absolute top-2/4 -translate-y-2/4",variant==="outlined"?"left-3 pt-0.5":"left-0 pt-3");var animation={unmount:{opacity:0,transformOrigin:"top",transform:"scale(0.95)",transition:{duration:.2,times:[.4,0,.2,1]}},mount:{opacity:1,transformOrigin:"top",transform:"scale(1)",transition:{duration:.2,times:[.4,0,.2,1]}}};var appliedAnimation=(0,_deepmerge.default)(animation,animate);var NewAnimatePresence=_framerMotion.AnimatePresence;_react.default.useEffect(function(){if(value&&!onChange){console.error("Warning: You provided a `value` prop to a select component without an `onChange` handler. This will render a read-only select. If the field should be mutable use `onChange` handler with `value` together.")}},[value,onChange]);var selectMenu=_react.default.createElement(_react1.FloatingFocusManager,{context:context,modal:false},_react.default.createElement(_framerMotion.m.ul,_extends({},getFloatingProps(_objectSpreadProps(_objectSpread({},menuProps),{ref:refs.setFloating,role:"listbox",className:menuClasses,style:{position:strategy,top:y!==null&&y!==void 0?y:0,left:x!==null&&x!==void 0?x:0,overflow:"auto"},onPointerEnter:function onPointerEnter(e){var onPointerEnter=menuProps===null||menuProps===void 0?void 0:menuProps.onPointerEnter;if(typeof onPointerEnter==="function"){onPointerEnter(e);setControlledScrolling(false)}setControlledScrolling(false)},onPointerMove:function onPointerMove(e){var onPointerMove=menuProps===null||menuProps===void 0?void 0:menuProps.onPointerMove;if(typeof onPointerMove==="function"){onPointerMove(e);setControlledScrolling(false)}setControlledScrolling(false)},onKeyDown:function onKeyDown(e){var onKeyDown=menuProps===null||menuProps===void 0?void 0:menuProps.onKeyDown;if(typeof onKeyDown==="function"){onKeyDown(e);setControlledScrolling(true)}setControlledScrolling(true)}})),{initial:"unmount",exit:"unmount",animate:open?"mount":"unmount",variants:appliedAnimation}),_react.default.Children.map(children,function(child,index){var _child_props;return _react.default.isValidElement(child)&&_react.default.cloneElement(child,_objectSpreadProps(_objectSpread({},child.props),{index:((_child_props=child.props)===null||_child_props===void 0?void 0:_child_props.index)||index+1,id:"material-tailwind-select-".concat(index)}))})));return _react.default.createElement(_selectContext.SelectContextProvider,{value:contextValue},_react.default.createElement("div",_extends({},containerProps,{ref:ref,className:containerClasses}),_react.default.createElement("button",_extends({type:"button"},getReferenceProps(_objectSpreadProps(_objectSpread({},rest),{ref:refs.setReference,className:selectClasses,disabled:disabled,name:name}))),typeof selected==="function"?_react.default.createElement("span",{className:buttonContentClasses},selected(children[selectedIndex-1],selectedIndex-1)):value&&!onChange?_react.default.createElement("span",{className:buttonContentClasses},value):_react.default.createElement("span",_extends({},(_children_=children[selectedIndex-1])===null||_children_===void 0?void 0:_children_.props,{className:buttonContentClasses})),_react.default.createElement("div",{className:arrowClasses},arrow!==null&&arrow!==void 0?arrow:_react.default.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 20 20",fill:"currentColor"},_react.default.createElement("path",{fillRule:"evenodd",d:"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z",clipRule:"evenodd"})))),_react.default.createElement("label",_extends({},labelProps,{className:labelClasses}),label),_react.default.createElement(_framerMotion.LazyMotion,{features:_framerMotion.domAnimation},_react.default.createElement(NewAnimatePresence,null,open&&_react.default.createElement(_react.default.Fragment,null,lockScroll?_react.default.createElement(_react1.FloatingOverlay,{lockScroll:true},selectMenu):selectMenu)))))});Select.propTypes={variant:_propTypes.default.oneOf(_select.propTypesVariant),color:_propTypes.default.oneOf(_select.propTypesColor),size:_propTypes.default.oneOf(_select.propTypesSize),label:_select.propTypesLabel,error:_select.propTypesError,success:_select.propTypesSuccess,arrow:_select.propTypesArrow,value:_select.propTypesValue,onChange:_select.propTypesOnChange,selected:_select.propTypesSelected,offset:_select.propTypesOffset,dismiss:_select.propTypesDismiss,animate:_select.propTypesAnimate,lockScroll:_select.propTypesLockScroll,labelProps:_select.propTypesLabelProps,menuProps:_select.propTypesMenuProps,className:_select.propTypesClassName,disabled:_select.propTypesDisabled,name:_select.propTypesName,children:_select.propTypesChildren,containerProps:_select.propTypesContainerProps};Select.displayName="MaterialTailwind.Select";var _default=Object.assign(Select,{Option:_selectOption.SelectOption});

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Slider/index.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Slider/index.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{Slider:function(){return Slider},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _deepmerge=_interopRequireDefault(__webpack_require__(/*! deepmerge */ "./node_modules/deepmerge/dist/cjs.js"));var _classnames=_interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _findMatch=_interopRequireDefault(__webpack_require__(/*! ../../utils/findMatch */ "./node_modules/@material-tailwind/react/utils/findMatch.js"));var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _slider=__webpack_require__(/*! ../../types/components/slider */ "./node_modules/@material-tailwind/react/types/components/slider.js");function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _iterableToArrayLimit(arr,i){var _i=arr==null?null:typeof Symbol!=="undefined"&&arr[Symbol.iterator]||arr["@@iterator"];if(_i==null)return;var _arr=[];var _n=true;var _d=false;var _s,_e;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break}}catch(err){_d=true;_e=err}finally{try{if(!_n&&_i["return"]!=null)_i["return"]()}finally{if(_d)throw _e}}return _arr}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_unsupportedIterableToArray(arr,i)||_nonIterableRest()}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(n);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}var Slider=_react.default.forwardRef(function(_param,ref){var color=_param.color,size=_param.size,className=_param.className,trackClassName=_param.trackClassName,thumbClassName=_param.thumbClassName,barClassName=_param.barClassName,value=_param.value,defaultValue=_param.defaultValue,onChange=_param.onChange,min=_param.min,max=_param.max,step=_param.step,inputRef=_param.inputRef,inputProps=_param.inputProps,rest=_objectWithoutProperties(_param,["color","size","className","trackClassName","thumbClassName","barClassName","value","defaultValue","onChange","min","max","step","inputRef","inputProps"]);var slider=(0,_theme.useTheme)().slider;var valid=slider.valid,defaultProps=slider.defaultProps,styles=slider.styles;var base=styles.base,sizes=styles.sizes,colors=styles.colors;var _React_useState=_slicedToArray(_react.default.useState(defaultValue||0),2),innerValue=_React_useState[0],setInnerValue=_React_useState[1];_react.default.useMemo(function(){if(defaultValue)setInnerValue(defaultValue)},[defaultValue]);color=color!==null&&color!==void 0?color:defaultProps.color;size=size!==null&&size!==void 0?size:defaultProps.size;min=min!==null&&min!==void 0?min:defaultProps.min;max=max!==null&&max!==void 0?max:defaultProps.max;step=step!==null&&step!==void 0?step:defaultProps.step;className=(0,_tailwindMerge.twMerge)(defaultProps.className||"",className);var _classnames1;thumbClassName=(_classnames1=(0,_classnames.default)(defaultProps.thumbClassName,thumbClassName))!==null&&_classnames1!==void 0?_classnames1:defaultProps.thumbClassName;var _classnames2;trackClassName=(_classnames2=(0,_classnames.default)(defaultProps.trackClassName,trackClassName))!==null&&_classnames2!==void 0?_classnames2:defaultProps.trackClassName;var _classnames3;barClassName=(_classnames3=(0,_classnames.default)(defaultProps.barClassName,barClassName))!==null&&_classnames3!==void 0?_classnames3:defaultProps.barClassName;var _merge;inputProps=(_merge=(0,_deepmerge.default)(inputProps,(defaultProps===null||defaultProps===void 0?void 0:defaultProps.inputProps)||{}))!==null&&_merge!==void 0?_merge:defaultProps.inputProps;var sliderContainerClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(base.container),(0,_objectsToString.default)(colors[(0,_findMatch.default)(valid.colors,color,"gray")]),(0,_objectsToString.default)(sizes[(0,_findMatch.default)(valid.sizes,size,"md")]["container"]),className));var sliderBarClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(base.bar),barClassName));var sliderTrackClasses=(0,_classnames.default)((0,_objectsToString.default)(base.track),(0,_objectsToString.default)(sizes[(0,_findMatch.default)(valid.sizes,size,"md")]["track"]));var sliderThumbClasses=(0,_classnames.default)((0,_objectsToString.default)(base.thumb),(0,_objectsToString.default)(sizes[(0,_findMatch.default)(valid.sizes,size,"md")]["thumb"]));var sliderClasses=(0,_classnames.default)((0,_objectsToString.default)(base.slider),(0,_tailwindMerge.twMerge)(sliderTrackClasses,trackClassName),(0,_tailwindMerge.twMerge)(sliderThumbClasses,thumbClassName));return _react.default.createElement("div",_extends({},rest,{ref:ref,className:sliderContainerClasses}),_react.default.createElement("label",{className:sliderBarClasses,style:{width:"".concat(value||innerValue,"%")}}),_react.default.createElement("input",_extends({ref:inputRef,type:"range",max:max,min:min,step:step,className:sliderClasses},value?{value:value}:null,{defaultValue:defaultValue,onChange:function(e){return onChange?onChange(e):setInnerValue(Number(e.target.value))}})))});Slider.propTypes={color:_propTypes.default.oneOf(_slider.propTypesColor),size:_propTypes.default.oneOf(_slider.propTypesSize),className:_slider.propTypesClassName,trackClassName:_slider.propTypesTrackClassName,thumbClassName:_slider.propTypesThumbClassName,barClassName:_slider.propTypesBarClassName,defaultValue:_slider.propTypesDefaultValue,value:_slider.propTypesValue,onChange:_slider.propTypesOnChange,min:_slider.propTypesMin,max:_slider.propTypesMax,step:_slider.propTypesStep,inputRef:_slider.propTypesInputRef,inputProps:_slider.propTypesInputProps};Slider.displayName="MaterialTailwind.Slider";var _default=Slider;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/SpeedDial/SpeedDialAction.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/SpeedDial/SpeedDialAction.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{SpeedDialAction:function(){return SpeedDialAction},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _speedDial=__webpack_require__(/*! ../../types/components/speedDial */ "./node_modules/@material-tailwind/react/types/components/speedDial.js");function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var SpeedDialAction=_react.default.forwardRef(function(_param,ref){var className=_param.className,children=_param.children,rest=_objectWithoutProperties(_param,["className","children"]);var _useTheme=(0,_theme.useTheme)(),styles=_useTheme.speedDialAction.styles;var classes=(0,_tailwindMerge.twMerge)((0,_objectsToString.default)(styles),className);return _react.default.createElement("button",_extends({},rest,{ref:ref,className:classes}),children)});SpeedDialAction.propTypes={children:_speedDial.propTypesChildren,className:_speedDial.propTypesClassName};SpeedDialAction.displayName="SpeedDialAction";var _default=SpeedDialAction;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/SpeedDial/SpeedDialContent.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/SpeedDial/SpeedDialContent.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{SpeedDialContent:function(){return SpeedDialContent},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _framerMotion=__webpack_require__(/*! framer-motion */ "./node_modules/framer-motion/dist/cjs/index.js");var _react1=__webpack_require__(/*! @floating-ui/react */ "./node_modules/@material-tailwind/react/node_modules/@floating-ui/react/dist/floating-ui.react.esm.js");var _index=__webpack_require__(/*! ./index */ "./node_modules/@material-tailwind/react/components/SpeedDial/index.js");var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _speedDial=__webpack_require__(/*! ../../types/components/speedDial */ "./node_modules/@material-tailwind/react/types/components/speedDial.js");function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var SpeedDialContent=_react.default.forwardRef(function(_param,ref){var children=_param.children,className=_param.className,rest=_objectWithoutProperties(_param,["children","className"]);var _useTheme=(0,_theme.useTheme)(),styles=_useTheme.speedDialContent.styles;var _useSpeedDial=(0,_index.useSpeedDial)(),x=_useSpeedDial.x,y=_useSpeedDial.y,refs=_useSpeedDial.refs,open=_useSpeedDial.open,strategy=_useSpeedDial.strategy,getFloatingProps=_useSpeedDial.getFloatingProps,animation=_useSpeedDial.animation;var mergedRefs=(0,_react1.useMergeRefs)([ref,refs.setFloating]);var classes=(0,_tailwindMerge.twMerge)((0,_objectsToString.default)(styles),className);var NewAnimatePresence=_framerMotion.AnimatePresence;return _react.default.createElement(_framerMotion.LazyMotion,{features:_framerMotion.domAnimation},_react.default.createElement(NewAnimatePresence,null,open&&_react.default.createElement("div",_extends({},rest,{ref:mergedRefs,className:classes,style:{position:strategy,top:y!==null&&y!==void 0?y:0,left:x!==null&&x!==void 0?x:0}},getFloatingProps()),_react.default.Children.map(children,function(child){return _react.default.createElement(_framerMotion.m.div,{initial:"unmount",exit:"unmount",animate:open?"mount":"unmount",variants:animation},child)}))))});SpeedDialContent.propTypes={children:_speedDial.propTypesChildren,className:_speedDial.propTypesClassName};SpeedDialContent.displayName="MaterialTailwind.SpeedDialContent";var _default=SpeedDialContent;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/SpeedDial/SpeedDialHandler.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/SpeedDial/SpeedDialHandler.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{SpeedDialHandler:function(){return SpeedDialHandler},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _react1=__webpack_require__(/*! @floating-ui/react */ "./node_modules/@material-tailwind/react/node_modules/@floating-ui/react/dist/floating-ui.react.esm.js");var _index=__webpack_require__(/*! ./index */ "./node_modules/@material-tailwind/react/components/SpeedDial/index.js");var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _speedDial=__webpack_require__(/*! ../../types/components/speedDial */ "./node_modules/@material-tailwind/react/types/components/speedDial.js");function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};var ownKeys=Object.keys(source);if(typeof Object.getOwnPropertySymbols==="function"){ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))}ownKeys.forEach(function(key){_defineProperty(target,key,source[key])})}return target}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})}keys.push.apply(keys,symbols)}return keys}function _objectSpreadProps(target,source){source=source!=null?source:{};if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source))}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})}return target}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var SpeedDialHandler=_react.default.forwardRef(function(_param,ref){var children=_param.children,rest=_objectWithoutProperties(_param,["children"]);var _children_props;var _useSpeedDial=(0,_index.useSpeedDial)(),getReferenceProps=_useSpeedDial.getReferenceProps,refs=_useSpeedDial.refs;var mergedRef=(0,_react1.useMergeRefs)([ref,refs.setReference]);return _react.default.cloneElement(children,_objectSpread({},getReferenceProps(_objectSpreadProps(_objectSpread({},rest),{ref:mergedRef,className:(0,_tailwindMerge.twMerge)(children===null||children===void 0?void 0:(_children_props=children.props)===null||_children_props===void 0?void 0:_children_props.className,rest===null||rest===void 0?void 0:rest.className)}))))});SpeedDialHandler.propTypes={children:_speedDial.propTypesChildren};SpeedDialHandler.displayName="MaterialTailwind.SpeedDialHandler";var _default=SpeedDialHandler;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/SpeedDial/index.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/SpeedDial/index.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{SpeedDialContext:function(){return SpeedDialContext},useSpeedDial:function(){return useSpeedDial},SpeedDial:function(){return SpeedDial},SpeedDialHandler:function(){return _speedDialHandler.default},SpeedDialContent:function(){return _speedDialContent.default},SpeedDialAction:function(){return _speedDialAction.default},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _react1=__webpack_require__(/*! @floating-ui/react */ "./node_modules/@material-tailwind/react/node_modules/@floating-ui/react/dist/floating-ui.react.esm.js");var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _deepmerge=_interopRequireDefault(__webpack_require__(/*! deepmerge */ "./node_modules/deepmerge/dist/cjs.js"));var _speedDial=__webpack_require__(/*! ../../types/components/speedDial */ "./node_modules/@material-tailwind/react/types/components/speedDial.js");var _speedDialHandler=_interopRequireDefault(__webpack_require__(/*! ./SpeedDialHandler */ "./node_modules/@material-tailwind/react/components/SpeedDial/SpeedDialHandler.js"));var _speedDialContent=_interopRequireDefault(__webpack_require__(/*! ./SpeedDialContent */ "./node_modules/@material-tailwind/react/components/SpeedDial/SpeedDialContent.js"));var _speedDialAction=_interopRequireDefault(__webpack_require__(/*! ./SpeedDialAction */ "./node_modules/@material-tailwind/react/components/SpeedDial/SpeedDialAction.js"));function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _iterableToArrayLimit(arr,i){var _i=arr==null?null:typeof Symbol!=="undefined"&&arr[Symbol.iterator]||arr["@@iterator"];if(_i==null)return;var _arr=[];var _n=true;var _d=false;var _s,_e;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break}}catch(err){_d=true;_e=err}finally{try{if(!_n&&_i["return"]!=null)_i["return"]()}finally{if(_d)throw _e}}return _arr}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_unsupportedIterableToArray(arr,i)||_nonIterableRest()}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(n);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}var SpeedDialContext=_react.default.createContext(null);function useSpeedDial(){var context=_react.default.useContext(SpeedDialContext);if(!context){throw new Error("useSpeedDial must be used within a <SpeedDial />.")}return context}function SpeedDial(param){var open=param.open,handler=param.handler,placement=param.placement,offset=param.offset,dismiss=param.dismiss,animate=param.animate,children=param.children;var _useTheme=(0,_theme.useTheme)(),defaultProps=_useTheme.speedDial.defaultProps;var _React_useState=_slicedToArray(_react.default.useState(false),2),internalOpen=_React_useState[0],setInternalOpen=_React_useState[1];open=open!==null&&open!==void 0?open:internalOpen;handler=handler!==null&&handler!==void 0?handler:setInternalOpen;placement=placement!==null&&placement!==void 0?placement:defaultProps.placement;offset=offset!==null&&offset!==void 0?offset:defaultProps.offset;dismiss=dismiss!==null&&dismiss!==void 0?dismiss:defaultProps.dismiss;animate=animate!==null&&animate!==void 0?animate:defaultProps.animate;var animation={unmount:{opacity:0,transform:"scale(0.5)",transition:{duration:.2,times:[.4,0,.2,1]}},mount:{opacity:1,transform:"scale(1)",transition:{duration:.2,times:[.4,0,.2,1]}}};var appliedAnimation=(0,_deepmerge.default)(animation,animate);var nodeId=(0,_react1.useFloatingNodeId)();var _useFloating=(0,_react1.useFloating)({open:open,nodeId:nodeId,placement:placement,onOpenChange:handler,whileElementsMounted:_react1.autoUpdate,middleware:[(0,_react1.offset)(offset),(0,_react1.flip)(),(0,_react1.shift)()]}),x=_useFloating.x,y=_useFloating.y,strategy=_useFloating.strategy,refs=_useFloating.refs,context=_useFloating.context;var _useInteractions=(0,_react1.useInteractions)([(0,_react1.useHover)(context,{handleClose:(0,_react1.safePolygon)()}),(0,_react1.useDismiss)(context,dismiss)]),getReferenceProps=_useInteractions.getReferenceProps,getFloatingProps=_useInteractions.getFloatingProps;var contextValue=_react.default.useMemo(function(){return{x:x,y:y,strategy:strategy,refs:refs,open:open,context:context,getReferenceProps:getReferenceProps,getFloatingProps:getFloatingProps,animation:appliedAnimation}},[context,getFloatingProps,getReferenceProps,refs,strategy,x,y,open,appliedAnimation]);return _react.default.createElement(SpeedDialContext.Provider,{value:contextValue},_react.default.createElement("div",{className:"group"},_react.default.createElement(_react1.FloatingNode,{id:nodeId},children)))}SpeedDial.propTypes={open:_speedDial.propTypesOpen,handler:_speedDial.propTypesHanlder,placement:_speedDial.propTypesPlacement,offset:_speedDial.propTypesOffset,dismiss:_speedDial.propTypesDismiss,className:_speedDial.propTypesClassName,children:_speedDial.propTypesChildren,animate:_speedDial.propTypesAnimate};SpeedDial.displayName="MaterialTailwind.SpeedDial";var _default=Object.assign(SpeedDial,{Handler:_speedDialHandler.default,Content:_speedDialContent.default,Action:_speedDialAction.default});

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Spinner/index.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Spinner/index.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{Spinner:function(){return Spinner},default:function(){return _default}});var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _react=_interopRequireWildcard(__webpack_require__(/*! react */ "react"));var _classnames=_interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _findMatch=_interopRequireDefault(__webpack_require__(/*! ../../utils/findMatch */ "./node_modules/@material-tailwind/react/utils/findMatch.js"));var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _spinner=__webpack_require__(/*! ../../types/components/spinner */ "./node_modules/@material-tailwind/react/types/components/spinner.js");function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!=="function")return null;var cacheBabelInterop=new WeakMap;var cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj}if(obj===null||typeof obj!=="object"&&typeof obj!=="function"){return{default:obj}}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj)}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!=="default"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc)}else{newObj[key]=obj[key]}}}newObj.default=obj;if(cache){cache.set(obj,newObj)}return newObj}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var Spinner=(0,_react.forwardRef)(function(_param,ref){var color=_param.color,className=_param.className,rest=_objectWithoutProperties(_param,["color","className"]);var spinner=(0,_theme.useTheme)().spinner;var defaultProps=spinner.defaultProps,valid=spinner.valid,_spinner_styles=spinner.styles,base=_spinner_styles.base,colors=_spinner_styles.colors;color=color!==null&&color!==void 0?color:defaultProps.color;className=(0,_tailwindMerge.twMerge)(defaultProps.className||"",className);var spinnerColor=(0,_objectsToString.default)(colors[(0,_findMatch.default)(valid.colors,color,"gray")]);var spinnerClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(base)),className);var _rest_width,_rest_height;return _react.default.createElement("svg",_extends({},rest,{ref:ref,className:spinnerClasses,viewBox:"0 0 64 64",fill:"none",xmlns:"http://www.w3.org/2000/svg",width:(_rest_width=rest===null||rest===void 0?void 0:rest.width)!==null&&_rest_width!==void 0?_rest_width:24,height:(_rest_height=rest===null||rest===void 0?void 0:rest.height)!==null&&_rest_height!==void 0?_rest_height:24}),_react.default.createElement("path",{d:"M32 3C35.8083 3 39.5794 3.75011 43.0978 5.20749C46.6163 6.66488 49.8132 8.80101 52.5061 11.4939C55.199 14.1868 57.3351 17.3837 58.7925 20.9022C60.2499 24.4206 61 28.1917 61 32C61 35.8083 60.2499 39.5794 58.7925 43.0978C57.3351 46.6163 55.199 49.8132 52.5061 52.5061C49.8132 55.199 46.6163 57.3351 43.0978 58.7925C39.5794 60.2499 35.8083 61 32 61C28.1917 61 24.4206 60.2499 20.9022 58.7925C17.3837 57.3351 14.1868 55.199 11.4939 52.5061C8.801 49.8132 6.66487 46.6163 5.20749 43.0978C3.7501 39.5794 3 35.8083 3 32C3 28.1917 3.75011 24.4206 5.2075 20.9022C6.66489 17.3837 8.80101 14.1868 11.4939 11.4939C14.1868 8.80099 17.3838 6.66487 20.9022 5.20749C24.4206 3.7501 28.1917 3 32 3L32 3Z",stroke:"currentColor",strokeWidth:"5",strokeLinecap:"round",strokeLinejoin:"round"}),_react.default.createElement("path",{d:"M32 3C36.5778 3 41.0906 4.08374 45.1692 6.16256C49.2477 8.24138 52.7762 11.2562 55.466 14.9605C58.1558 18.6647 59.9304 22.9531 60.6448 27.4748C61.3591 31.9965 60.9928 36.6232 59.5759 40.9762",stroke:"currentColor",strokeWidth:"5",strokeLinecap:"round",strokeLinejoin:"round",className:spinnerColor}))});Spinner.propTypes={color:_propTypes.default.oneOf(_spinner.propTypesColor),className:_spinner.propTypesClassName};Spinner.displayName="MaterialTailwind.Spinner";var _default=Spinner;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Stepper/Step.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Stepper/Step.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{Step:function(){return Step},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _stepper=__webpack_require__(/*! ../../types/components/stepper */ "./node_modules/@material-tailwind/react/types/components/stepper.js");function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var Step=_react.default.forwardRef(function(_param,ref){var className=_param.className,activeClassName=_param.activeClassName,completedClassName=_param.completedClassName,children=_param.children,rest=_objectWithoutProperties(_param,["className","activeClassName","completedClassName","children"]);var step=(0,_theme.useTheme)().step;var base=step.styles.base;var stepClasses=(0,_tailwindMerge.twMerge)((0,_objectsToString.default)(base.initial),className);return _react.default.createElement("div",_extends({},rest,{ref:ref,className:stepClasses}),children)});Step.propTypes={className:_stepper.propTypesClassName,activeClassName:_stepper.propTypesClassName,completedClassName:_stepper.propTypesClassName,children:_stepper.propTypesChildren};Step.displayName="MaterialTailwind.Step";var _default=Step;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Stepper/index.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Stepper/index.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{Stepper:function(){return Stepper},Step:function(){return _step.default},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _react1=__webpack_require__(/*! @floating-ui/react */ "./node_modules/@material-tailwind/react/node_modules/@floating-ui/react/dist/floating-ui.react.esm.js");var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _step=_interopRequireDefault(__webpack_require__(/*! ./Step */ "./node_modules/@material-tailwind/react/components/Stepper/Step.js"));var _stepper=__webpack_require__(/*! ../../types/components/stepper */ "./node_modules/@material-tailwind/react/types/components/stepper.js");function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _iterableToArrayLimit(arr,i){var _i=arr==null?null:typeof Symbol!=="undefined"&&arr[Symbol.iterator]||arr["@@iterator"];if(_i==null)return;var _arr=[];var _n=true;var _d=false;var _s,_e;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break}}catch(err){_d=true;_e=err}finally{try{if(!_n&&_i["return"]!=null)_i["return"]()}finally{if(_d)throw _e}}return _arr}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};var ownKeys=Object.keys(source);if(typeof Object.getOwnPropertySymbols==="function"){ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))}ownKeys.forEach(function(key){_defineProperty(target,key,source[key])})}return target}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})}keys.push.apply(keys,symbols)}return keys}function _objectSpreadProps(target,source){source=source!=null?source:{};if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source))}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})}return target}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_unsupportedIterableToArray(arr,i)||_nonIterableRest()}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(n);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}var Stepper=_react.default.forwardRef(function(_param,ref){var activeStep=_param.activeStep,isFirstStep=_param.isFirstStep,isLastStep=_param.isLastStep,className=_param.className,lineClassName=_param.lineClassName,activeLineClassName=_param.activeLineClassName,children=_param.children,rest=_objectWithoutProperties(_param,["activeStep","isFirstStep","isLastStep","className","lineClassName","activeLineClassName","children"]);var _useTheme=(0,_theme.useTheme)(),stepper=_useTheme.stepper,step=_useTheme.step;var base=stepper.styles.base;var _step_styles=step.styles,stepBase=_step_styles.base;var containerRef=_react.default.useRef(null);var _React_useState=_slicedToArray(_react.default.useState(0),2),widthPerStep=_React_useState[0],setWidthPerStep=_React_useState[1];var isFirstStepValue=activeStep===0;var isLastStepValue=Array.isArray(children)&&activeStep===children.length-1;var isReachEnd=Array.isArray(children)&&activeStep>children.length-1;_react.default.useEffect(function(){if(containerRef.current){var childrenInstance=children;var width=containerRef.current.getBoundingClientRect().width;var widthPerStepCalc=width/(childrenInstance.length-1);setWidthPerStep(widthPerStepCalc)}},[children]);var width=_react.default.useMemo(function(){if(!isReachEnd){return widthPerStep*activeStep}},[activeStep,isReachEnd,widthPerStep]);var mergedRef=(0,_react1.useMergeRefs)([ref,containerRef]);var stepperClasses=(0,_tailwindMerge.twMerge)((0,_objectsToString.default)(base.stepper),className);var lineClasses=(0,_tailwindMerge.twMerge)((0,_objectsToString.default)(base.line.initial),lineClassName);var activeLineClasses=(0,_tailwindMerge.twMerge)(lineClasses,(0,_objectsToString.default)(base.line.active),activeLineClassName);var activeStepClasses=(0,_objectsToString.default)(stepBase.active);var completedStepClasses=(0,_objectsToString.default)(stepBase.completed);_react.default.useEffect(function(){isLastStep&&typeof isLastStep==="function"&&isLastStep(isLastStepValue);isFirstStep&&typeof isFirstStep==="function"&&isFirstStep(isFirstStepValue)},[isFirstStep,isFirstStepValue,isLastStep,isLastStepValue]);return _react.default.createElement("div",_extends({},rest,{ref:containerRef,className:stepperClasses}),_react.default.createElement("div",{className:lineClasses}),_react.default.createElement("div",{className:activeLineClasses,style:{width:"".concat(width,"px")}}),Array.isArray(children)?children.map(function(child,index){var _child_props,_child_props1;return _react.default.cloneElement(child,_objectSpreadProps(_objectSpread({key:index},child.props),{className:(0,_tailwindMerge.twMerge)(child.props.className,index===activeStep?(0,_tailwindMerge.twMerge)(activeStepClasses,(_child_props=child.props)===null||_child_props===void 0?void 0:_child_props.activeClassName):index<activeStep?(0,_tailwindMerge.twMerge)(completedStepClasses,(_child_props1=child.props)===null||_child_props1===void 0?void 0:_child_props1.completedClassName):"")}))}):children)});Stepper.propTypes={activeStep:_stepper.propTypesActiveStep,isFirstStep:_stepper.propTypesIsFirstStep,isLastStep:_stepper.propTypesIsLastStep,className:_stepper.propTypesClassName,lineClassName:_stepper.propTypesClassName,activeLineClassName:_stepper.propTypesClassName,children:_stepper.propTypesChildren};Stepper.displayName="MaterialTailwind.Stepper";var _default=Object.assign(Stepper,{Step:_step.default});

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Switch/index.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Switch/index.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{Switch:function(){return Switch},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _materialRippleEffects=_interopRequireDefault(__webpack_require__(/*! material-ripple-effects */ "./node_modules/material-ripple-effects/index.js"));var _classnames=_interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _findMatch=_interopRequireDefault(__webpack_require__(/*! ../../utils/findMatch */ "./node_modules/@material-tailwind/react/utils/findMatch.js"));var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _checkbox=__webpack_require__(/*! ../../types/components/checkbox */ "./node_modules/@material-tailwind/react/types/components/checkbox.js");function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var Switch=_react.default.forwardRef(function(_param,ref){var color=_param.color,label=_param.label,ripple=_param.ripple,className=_param.className,disabled=_param.disabled,containerProps=_param.containerProps,circleProps=_param.circleProps,labelProps=_param.labelProps,inputRef=_param.inputRef,rest=_objectWithoutProperties(_param,["color","label","ripple","className","disabled","containerProps","circleProps","labelProps","inputRef"]);var _useTheme=(0,_theme.useTheme)(),toggle=_useTheme.switch;var defaultProps=toggle.defaultProps,valid=toggle.valid,styles=toggle.styles;var base=styles.base,colors=styles.colors;var switchId=_react.default.useId();color=color!==null&&color!==void 0?color:defaultProps.color;ripple=ripple!==null&&ripple!==void 0?ripple:defaultProps.ripple;disabled=disabled!==null&&disabled!==void 0?disabled:defaultProps.disabled;containerProps=containerProps!==null&&containerProps!==void 0?containerProps:defaultProps.containerProps;labelProps=labelProps!==null&&labelProps!==void 0?labelProps:defaultProps.labelProps;circleProps=circleProps!==null&&circleProps!==void 0?circleProps:defaultProps.circleProps;className=(0,_tailwindMerge.twMerge)(defaultProps.className||"",className);var rippleEffect=ripple!==undefined&&new _materialRippleEffects.default;var rootClasses=(0,_classnames.default)((0,_objectsToString.default)(base.root),_defineProperty({},(0,_objectsToString.default)(base.disabled),disabled));var containerClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(base.container)),containerProps===null||containerProps===void 0?void 0:containerProps.className);var inputClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(base.input),(0,_objectsToString.default)(colors[(0,_findMatch.default)(valid.colors,color,"gray")])),className);var circleClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(base.circle),colors[(0,_findMatch.default)(valid.colors,color,"gray")].circle,colors[(0,_findMatch.default)(valid.colors,color,"gray")].before),circleProps===null||circleProps===void 0?void 0:circleProps.className);var rippleClasses=(0,_classnames.default)((0,_objectsToString.default)(base.ripple));var labelClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(base.label)),labelProps===null||labelProps===void 0?void 0:labelProps.className);return _react.default.createElement("div",{ref:ref,className:rootClasses},_react.default.createElement("div",_extends({},containerProps,{className:containerClasses}),_react.default.createElement("input",_extends({},rest,{ref:inputRef,type:"checkbox",disabled:disabled,id:rest.id||switchId,className:inputClasses})),_react.default.createElement("label",_extends({},circleProps,{htmlFor:rest.id||switchId,className:circleClasses}),ripple&&_react.default.createElement("div",{className:rippleClasses,onMouseDown:function(e){var onMouseDown=containerProps===null||containerProps===void 0?void 0:containerProps.onMouseDown;if(ripple){rippleEffect.create(e,"dark")}return typeof onMouseDown==="function"&&onMouseDown(e)}}))),label&&_react.default.createElement("label",_extends({},labelProps,{htmlFor:rest.id||switchId,className:labelClasses}),label))});Switch.propTypes={color:_propTypes.default.oneOf(_checkbox.propTypesColor),label:_checkbox.propTypesLabel,ripple:_checkbox.propTypesRipple,className:_checkbox.propTypesClassName,disabled:_checkbox.propTypesDisabled,containerProps:_checkbox.propTypesObject,labelProps:_checkbox.propTypesObject,circleProps:_checkbox.propTypesObject};Switch.displayName="MaterialTailwind.Switch";var _default=Switch;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Tabs/Tab.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Tabs/Tab.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{Tab:function(){return Tab},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _framerMotion=__webpack_require__(/*! framer-motion */ "./node_modules/framer-motion/dist/cjs/index.js");var _classnames=_interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _tabsContext=__webpack_require__(/*! ./TabsContext */ "./node_modules/@material-tailwind/react/components/Tabs/TabsContext.js");var _tabs=__webpack_require__(/*! ../../types/components/tabs */ "./node_modules/@material-tailwind/react/types/components/tabs.js");function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var Tab=_react.default.forwardRef(function(_param,ref){var value=_param.value,className=_param.className,activeClassName=_param.activeClassName,disabled=_param.disabled,children=_param.children,rest=_objectWithoutProperties(_param,["value","className","activeClassName","disabled","children"]);var _useTheme=(0,_theme.useTheme)(),tabTheme=_useTheme.tab;var defaultProps=tabTheme.defaultProps,base=tabTheme.styles.base;var _useTabs=(0,_tabsContext.useTabs)(),state=_useTabs.state,dispatch=_useTabs.dispatch;var id=state.id,active=state.active,indicatorProps=state.indicatorProps;disabled=disabled!==null&&disabled!==void 0?disabled:defaultProps.disabled;className=(0,_tailwindMerge.twMerge)(defaultProps.className||"",className);activeClassName=(0,_tailwindMerge.twMerge)(defaultProps.activeClassName||"",activeClassName);var _obj;var tabClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(base.tab.initial),(_obj={},_defineProperty(_obj,(0,_objectsToString.default)(base.tab.disabled),disabled),_defineProperty(_obj,activeClassName,active===value),_obj)),className);var _indicatorProps_className;var indicatorClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(base.indicator)),(_indicatorProps_className=indicatorProps===null||indicatorProps===void 0?void 0:indicatorProps.className)!==null&&_indicatorProps_className!==void 0?_indicatorProps_className:"");return _react.default.createElement("li",_extends({},rest,{ref:ref,role:"tab",className:tabClasses,onClick:function(e){var onClick=rest===null||rest===void 0?void 0:rest.onClick;if(typeof onClick==="function"){(0,_tabsContext.setActive)(dispatch,value);(0,_tabsContext.setIsInitial)(dispatch,false);onClick(e)}(0,_tabsContext.setIsInitial)(dispatch,false);(0,_tabsContext.setActive)(dispatch,value)},"data-value":value}),_react.default.createElement("div",{className:"z-20 text-inherit"},children),active===value&&_react.default.createElement(_framerMotion.motion.div,_extends({},indicatorProps,{transition:{duration:.5},className:indicatorClasses,layoutId:id})))});Tab.propTypes={value:_tabs.propTypesValue,className:_tabs.propTypesClassName,disabled:_tabs.propTypesDisabled,children:_tabs.propTypesChildren};Tab.displayName="MaterialTailwind.Tab";var _default=Tab;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Tabs/TabPanel.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Tabs/TabPanel.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{TabPanel:function(){return TabPanel},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _framerMotion=__webpack_require__(/*! framer-motion */ "./node_modules/framer-motion/dist/cjs/index.js");var _classnames=_interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _tabsContext=__webpack_require__(/*! ./TabsContext */ "./node_modules/@material-tailwind/react/components/Tabs/TabsContext.js");var _tabs=__webpack_require__(/*! ../../types/components/tabs */ "./node_modules/@material-tailwind/react/types/components/tabs.js");function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var TabPanel=_react.default.forwardRef(function(_param,ref){var value=_param.value,className=_param.className,children=_param.children,rest=_objectWithoutProperties(_param,["value","className","children"]);var tabPanel=(0,_theme.useTheme)().tabPanel;var defaultProps=tabPanel.defaultProps,base=tabPanel.styles.base;var state=(0,_tabsContext.useTabs)().state;var active=state.active,appliedAnimation=state.appliedAnimation,isInitial=state.isInitial;className=(0,_tailwindMerge.twMerge)(defaultProps.className||"",className);var tabPanelClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(base)),className);var NewAnimatePresence=_framerMotion.AnimatePresence;return _react.default.createElement(_framerMotion.LazyMotion,{features:_framerMotion.domAnimation},_react.default.createElement(NewAnimatePresence,{exitBeforeEnter:true},_react.default.createElement(_framerMotion.m.div,_extends({},rest,{ref:ref,role:"tabpanel",className:tabPanelClasses,initial:"unmount",exit:"unmount",animate:active===value?"mount":isInitial?"initial":"unmount",variants:appliedAnimation,"data-value":value}),children)))});TabPanel.propTypes={value:_tabs.propTypesValue,className:_tabs.propTypesClassName,children:_tabs.propTypesChildren};TabPanel.displayName="MaterialTailwind.TabPanel";var _default=TabPanel;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Tabs/TabsBody.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Tabs/TabsBody.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{TabsBody:function(){return TabsBody},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _framerMotion=__webpack_require__(/*! framer-motion */ "./node_modules/framer-motion/dist/cjs/index.js");var _deepmerge=_interopRequireDefault(__webpack_require__(/*! deepmerge */ "./node_modules/deepmerge/dist/cjs.js"));var _classnames=_interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _tabsContext=__webpack_require__(/*! ./TabsContext */ "./node_modules/@material-tailwind/react/components/Tabs/TabsContext.js");var _tabs=__webpack_require__(/*! ../../types/components/tabs */ "./node_modules/@material-tailwind/react/types/components/tabs.js");function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var TabsBody=_react.default.forwardRef(function(_param,ref){var animate=_param.animate,className=_param.className,children=_param.children,rest=_objectWithoutProperties(_param,["animate","className","children"]);var tabsBody=(0,_theme.useTheme)().tabsBody;var defaultProps=tabsBody.defaultProps,base=tabsBody.styles.base;var dispatch=(0,_tabsContext.useTabs)().dispatch;animate=animate!==null&&animate!==void 0?animate:defaultProps.animate;className=(0,_tailwindMerge.twMerge)(defaultProps.className||"",className);var tabsBodyClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(base)),className);var mainAnimation=_react.default.useMemo(function(){return{initial:{opacity:0,position:"absolute",top:"0",left:"0",zIndex:1,transition:{duration:0}},unmount:{opacity:0,position:"absolute",top:"0",left:"0",zIndex:1,transition:{duration:.5,times:[.4,0,.2,1]}},mount:{opacity:1,position:"relative",zIndex:2,transition:{duration:.5,times:[.4,0,.2,1]}}}},[]);var appliedAnimation=_react.default.useMemo(function(){return(0,_deepmerge.default)(mainAnimation,animate)},[animate,mainAnimation]);(0,_framerMotion.useIsomorphicLayoutEffect)(function(){(0,_tabsContext.setAnimation)(dispatch,appliedAnimation)},[appliedAnimation,dispatch]);return _react.default.createElement("div",_extends({},rest,{ref:ref,className:tabsBodyClasses}),children)});TabsBody.propTypes={animate:_tabs.propTypesAnimate,className:_tabs.propTypesClassName,children:_tabs.propTypesChildren};TabsBody.displayName="MaterialTailwind.TabsBody";var _default=TabsBody;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Tabs/TabsContext.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Tabs/TabsContext.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{TabsContext:function(){return TabsContext},useTabs:function(){return useTabs},TabsContextProvider:function(){return TabsContextProvider},setId:function(){return setId},setActive:function(){return setActive},setAnimation:function(){return setAnimation},setIndicator:function(){return setIndicator},setIsInitial:function(){return setIsInitial},setOrientation:function(){return setOrientation}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _tabs=__webpack_require__(/*! ../../types/components/tabs */ "./node_modules/@material-tailwind/react/types/components/tabs.js");function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _iterableToArrayLimit(arr,i){var _i=arr==null?null:typeof Symbol!=="undefined"&&arr[Symbol.iterator]||arr["@@iterator"];if(_i==null)return;var _arr=[];var _n=true;var _d=false;var _s,_e;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break}}catch(err){_d=true;_e=err}finally{try{if(!_n&&_i["return"]!=null)_i["return"]()}finally{if(_d)throw _e}}return _arr}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};var ownKeys=Object.keys(source);if(typeof Object.getOwnPropertySymbols==="function"){ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))}ownKeys.forEach(function(key){_defineProperty(target,key,source[key])})}return target}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})}keys.push.apply(keys,symbols)}return keys}function _objectSpreadProps(target,source){source=source!=null?source:{};if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source))}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})}return target}function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_unsupportedIterableToArray(arr,i)||_nonIterableRest()}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(n);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}function reducer(state,action){switch(action.type){case"SET_ID":{return _objectSpreadProps(_objectSpread({},state),{id:action.value})}case"SET_ACTIVE":{return _objectSpreadProps(_objectSpread({},state),{active:action.value})}case"SET_ANIMATION":{return _objectSpreadProps(_objectSpread({},state),{appliedAnimation:action.value})}case"SET_INDICATOR":{return _objectSpreadProps(_objectSpread({},state),{indicatorProps:action.value})}case"SET_IS_INITIAL":{return _objectSpreadProps(_objectSpread({},state),{isInitial:action.value})}case"SET_ORIENTATION":{return _objectSpreadProps(_objectSpread({},state),{orientation:action.value})}default:{throw new Error("Unhandled action type: ".concat(action.type))}}}var TabsContext=_react.default.createContext(null);TabsContext.displayName="MaterialTailwind.TabsContext";function useTabs(){var context=_react.default.useContext(TabsContext);if(!context){throw new Error("useTabs() must be used within a Tabs. It happens when you use TabsHeader, TabsBody, Tab or TabPanel outside the Tabs component.")}return context}var TabsContextProvider=function(param){var id=param.id,value=param.value,orientation=param.orientation,children=param.children;var initialState=_react.default.useMemo(function(){return{id:id!==null&&id!==void 0?id:"indicator",active:value,orientation:orientation,isInitial:true,appliedAnimation:{initial:{},unmount:{},mount:{}},indicatorProps:undefined}},[id,value,orientation]);var _React_useReducer=_slicedToArray(_react.default.useReducer(reducer,initialState),2),state=_React_useReducer[0],dispatch=_React_useReducer[1];var contextValue=_react.default.useMemo(function(){return{state:state,dispatch:dispatch}},[state]);return _react.default.createElement(TabsContext.Provider,{value:contextValue},children)};var setId=function(dispatch,value){return dispatch({type:"SET_ID",value:value})};var setActive=function(dispatch,value){return dispatch({type:"SET_ACTIVE",value:value})};var setAnimation=function(dispatch,value){return dispatch({type:"SET_ANIMATION",value:value})};var setIndicator=function(dispatch,value){return dispatch({type:"SET_INDICATOR",value:value})};var setIsInitial=function(dispatch,value){return dispatch({type:"SET_IS_INITIAL",value:value})};var setOrientation=function(dispatch,value){return dispatch({type:"SET_ORIENTATION",value:value})};TabsContextProvider.propTypes={id:_tabs.propTypesId,value:_tabs.propTypesValue,orientation:_tabs.propTypesOrientation,children:_tabs.propTypesChildren};TabsContextProvider.displayName="MaterialTailwind.TabsContextProvider";

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Tabs/TabsHeader.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Tabs/TabsHeader.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{TabsHeader:function(){return TabsHeader},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _classnames=_interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _tabsContext=__webpack_require__(/*! ./TabsContext */ "./node_modules/@material-tailwind/react/components/Tabs/TabsContext.js");var _tabs=__webpack_require__(/*! ../../types/components/tabs */ "./node_modules/@material-tailwind/react/types/components/tabs.js");function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var TabsHeader=_react.default.forwardRef(function(_param,ref){var indicatorProps=_param.indicatorProps,className=_param.className,children=_param.children,rest=_objectWithoutProperties(_param,["indicatorProps","className","children"]);var tabsHeader=(0,_theme.useTheme)().tabsHeader;var defaultProps=tabsHeader.defaultProps,styles=tabsHeader.styles;var _useTabs=(0,_tabsContext.useTabs)(),state=_useTabs.state,dispatch=_useTabs.dispatch;var orientation=state.orientation;_react.default.useEffect(function(){(0,_tabsContext.setIndicator)(dispatch,indicatorProps)},[dispatch,indicatorProps]);className=(0,_tailwindMerge.twMerge)(defaultProps.className||"",className);var tabsHeaderClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(styles.base),_defineProperty({},styles[orientation]&&(0,_objectsToString.default)(styles[orientation]),orientation)),className);return _react.default.createElement("nav",null,_react.default.createElement("ul",_extends({},rest,{ref:ref,role:"tablist",className:tabsHeaderClasses}),children))});TabsHeader.propTypes={indicatorProps:_tabs.propTypesIndicator,className:_tabs.propTypesClassName,children:_tabs.propTypesChildren};TabsHeader.displayName="MaterialTailwind.TabsHeader";var _default=TabsHeader;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Tabs/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Tabs/index.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{Tabs:function(){return Tabs},Tab:function(){return _tab.Tab},TabsBody:function(){return _tabsBody.TabsBody},TabsHeader:function(){return _tabsHeader.TabsHeader},TabPanel:function(){return _tabPanel.TabPanel},useTabs:function(){return _tabsContext.useTabs},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _classnames=_interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _tabsContext=__webpack_require__(/*! ./TabsContext */ "./node_modules/@material-tailwind/react/components/Tabs/TabsContext.js");var _tab=__webpack_require__(/*! ./Tab */ "./node_modules/@material-tailwind/react/components/Tabs/Tab.js");var _tabsBody=__webpack_require__(/*! ./TabsBody */ "./node_modules/@material-tailwind/react/components/Tabs/TabsBody.js");var _tabsHeader=__webpack_require__(/*! ./TabsHeader */ "./node_modules/@material-tailwind/react/components/Tabs/TabsHeader.js");var _tabPanel=__webpack_require__(/*! ./TabPanel */ "./node_modules/@material-tailwind/react/components/Tabs/TabPanel.js");var _tabs=__webpack_require__(/*! ../../types/components/tabs */ "./node_modules/@material-tailwind/react/types/components/tabs.js");function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var Tabs=_react.default.forwardRef(function(_param,ref){var value=_param.value,className=_param.className,orientation=_param.orientation,children=_param.children,rest=_objectWithoutProperties(_param,["value","className","orientation","children"]);var tabs=(0,_theme.useTheme)().tabs;var defaultProps=tabs.defaultProps,styles=tabs.styles;var tabsId=_react.default.useId();orientation=orientation!==null&&orientation!==void 0?orientation:defaultProps.orientation;className=(0,_tailwindMerge.twMerge)(defaultProps.className||"",className);var tabsClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(styles.base),_defineProperty({},styles[orientation]&&(0,_objectsToString.default)(styles[orientation]),orientation)),className);return _react.default.createElement(_tabsContext.TabsContextProvider,{id:tabsId,value:value,orientation:orientation},_react.default.createElement("div",_extends({},rest,{ref:ref,className:tabsClasses}),children))});Tabs.propTypes={id:_tabs.propTypesId,value:_tabs.propTypesValue,className:_tabs.propTypesClassName,orientation:_tabs.propTypesOrientation,children:_tabs.propTypesChildren};Tabs.displayName="MaterialTailwind.Tabs";var _default=Object.assign(Tabs,{Tab:_tab.Tab,Body:_tabsBody.TabsBody,Header:_tabsHeader.TabsHeader,Panel:_tabPanel.TabPanel});

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Textarea/index.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Textarea/index.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{Textarea:function(){return Textarea},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _classnames=_interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));var _findMatch=_interopRequireDefault(__webpack_require__(/*! ../../utils/findMatch */ "./node_modules/@material-tailwind/react/utils/findMatch.js"));var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _input=__webpack_require__(/*! ../../types/components/input */ "./node_modules/@material-tailwind/react/types/components/input.js");var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var Textarea=_react.default.forwardRef(function(_param,ref){var variant=_param.variant,color=_param.color,size=_param.size,label=_param.label,error=_param.error,success=_param.success,resize=_param.resize,labelProps=_param.labelProps,containerProps=_param.containerProps,shrink=_param.shrink,className=_param.className,rest=_objectWithoutProperties(_param,["variant","color","size","label","error","success","resize","labelProps","containerProps","shrink","className"]);var textarea=(0,_theme.useTheme)().textarea;var defaultProps=textarea.defaultProps,valid=textarea.valid,styles=textarea.styles;var base=styles.base,variants=styles.variants;variant=variant!==null&&variant!==void 0?variant:defaultProps.variant;size=size!==null&&size!==void 0?size:defaultProps.size;color=color!==null&&color!==void 0?color:defaultProps.color;label=label!==null&&label!==void 0?label:defaultProps.label;labelProps=labelProps!==null&&labelProps!==void 0?labelProps:defaultProps.labelProps;containerProps=containerProps!==null&&containerProps!==void 0?containerProps:defaultProps.containerProps;shrink=shrink!==null&&shrink!==void 0?shrink:defaultProps.shrink;className=(0,_tailwindMerge.twMerge)(defaultProps.className||"",className);var textareaVariant=variants[(0,_findMatch.default)(valid.variants,variant,"outlined")];var textareaError=(0,_objectsToString.default)(textareaVariant.error.textarea);var textareaSuccess=(0,_objectsToString.default)(textareaVariant.success.textarea);var textareaShrink=(0,_objectsToString.default)(textareaVariant.shrink.textarea);var textareaColor=(0,_objectsToString.default)(textareaVariant.colors.textarea[(0,_findMatch.default)(valid.colors,color,"gray")]);var labelError=(0,_objectsToString.default)(textareaVariant.error.label);var labelSuccess=(0,_objectsToString.default)(textareaVariant.success.label);var labelShrink=(0,_objectsToString.default)(textareaVariant.shrink.label);var labelColor=(0,_objectsToString.default)(textareaVariant.colors.label[(0,_findMatch.default)(valid.colors,color,"gray")]);var containerClasses=(0,_classnames.default)((0,_objectsToString.default)(base.container),containerProps===null||containerProps===void 0?void 0:containerProps.className);var textareaClasses=(0,_classnames.default)((0,_objectsToString.default)(base.textarea),(0,_objectsToString.default)(textareaVariant.base.textarea),(0,_objectsToString.default)(textareaVariant.sizes[(0,_findMatch.default)(valid.sizes,size,"md")].textarea),_defineProperty({},textareaColor,!error&&!success),_defineProperty({},textareaError,error),_defineProperty({},textareaSuccess,success),_defineProperty({},textareaShrink,shrink),!resize?"!resize-none":"",className);var labelClasses=(0,_classnames.default)((0,_objectsToString.default)(base.label),(0,_objectsToString.default)(textareaVariant.base.label),(0,_objectsToString.default)(textareaVariant.sizes[(0,_findMatch.default)(valid.sizes,size,"md")].label),_defineProperty({},labelColor,!error&&!success),_defineProperty({},labelError,error),_defineProperty({},labelSuccess,success),_defineProperty({},labelShrink,shrink),labelProps===null||labelProps===void 0?void 0:labelProps.className);var asteriskClasses=(0,_classnames.default)((0,_objectsToString.default)(base.asterisk));return _react.default.createElement("div",{ref:ref,className:containerClasses},_react.default.createElement("textarea",_extends({},rest,{className:textareaClasses,placeholder:(rest===null||rest===void 0?void 0:rest.placeholder)||" "})),_react.default.createElement("label",{className:labelClasses},label," ",rest.required?_react.default.createElement("span",{className:asteriskClasses},"*"):""))});Textarea.propTypes={variant:_propTypes.default.oneOf(_input.propTypesVariant),size:_propTypes.default.oneOf(_input.propTypesSize),color:_propTypes.default.oneOf(_input.propTypesColor),label:_input.propTypesLabel,error:_input.propTypesError,success:_input.propTypesSuccess,resize:_input.propTypesResize,labelProps:_input.propTypesLabelProps,containerProps:_input.propTypesContainerProps,shrink:_input.propTypesShrink,className:_input.propTypesClassName};Textarea.displayName="MaterialTailwind.Textarea";var _default=Textarea;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Timeline/TimelineBody.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Timeline/TimelineBody.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{TimelineHeader:function(){return TimelineHeader},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _timelineItem=__webpack_require__(/*! ./TimelineItem */ "./node_modules/@material-tailwind/react/components/Timeline/TimelineItem.js");var _timeline=__webpack_require__(/*! ../../types/components/timeline */ "./node_modules/@material-tailwind/react/types/components/timeline.js");function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _iterableToArrayLimit(arr,i){var _i=arr==null?null:typeof Symbol!=="undefined"&&arr[Symbol.iterator]||arr["@@iterator"];if(_i==null)return;var _arr=[];var _n=true;var _d=false;var _s,_e;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break}}catch(err){_d=true;_e=err}finally{try{if(!_n&&_i["return"]!=null)_i["return"]()}finally{if(_d)throw _e}}return _arr}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_unsupportedIterableToArray(arr,i)||_nonIterableRest()}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(n);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}var TimelineHeader=_react.default.forwardRef(function(_param,ref){var className=_param.className,children=_param.children,rest=_objectWithoutProperties(_param,["className","children"]);var timelineBody=(0,_theme.useTheme)().timelineBody;var styles=timelineBody.styles;var base=styles.base;var _useTimelineItem=_slicedToArray((0,_timelineItem.useTimelineItem)(),1),width=_useTimelineItem[0];var classes=(0,_tailwindMerge.twMerge)((0,_objectsToString.default)(base),className);return _react.default.createElement("div",_extends({},rest,{ref:ref,className:classes}),_react.default.createElement("span",{className:"pointer-events-none invisible h-full flex-shrink-0",style:{width:"".concat(width,"px")}}),_react.default.createElement("div",null,children))});TimelineHeader.propTypes={children:_timeline.propTypeChildren,className:_timeline.propTypeClassName};TimelineHeader.displayName="MaterialTailwind.TimelineHeader";var _default=TimelineHeader;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Timeline/TimelineConnector.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Timeline/TimelineConnector.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{TimelineConnector:function(){return TimelineConnector},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _timelineItem=__webpack_require__(/*! ./TimelineItem */ "./node_modules/@material-tailwind/react/components/Timeline/TimelineItem.js");var _timeline=__webpack_require__(/*! ../../types/components/timeline */ "./node_modules/@material-tailwind/react/types/components/timeline.js");function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _iterableToArrayLimit(arr,i){var _i=arr==null?null:typeof Symbol!=="undefined"&&arr[Symbol.iterator]||arr["@@iterator"];if(_i==null)return;var _arr=[];var _n=true;var _d=false;var _s,_e;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break}}catch(err){_d=true;_e=err}finally{try{if(!_n&&_i["return"]!=null)_i["return"]()}finally{if(_d)throw _e}}return _arr}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_unsupportedIterableToArray(arr,i)||_nonIterableRest()}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(n);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}var TimelineConnector=_react.default.forwardRef(function(_param,ref){var className=_param.className,children=_param.children,rest=_objectWithoutProperties(_param,["className","children"]);var _children_props;var timelineConnector=(0,_theme.useTheme)().timelineConnector;var styles=timelineConnector.styles;var base=styles.base;var _useTimelineItem=_slicedToArray((0,_timelineItem.useTimelineItem)(),1),width=_useTimelineItem[0];var lineClasses=(0,_objectsToString.default)(base.line);var containerClasses=(0,_tailwindMerge.twMerge)((0,_objectsToString.default)(base.container),className);return _react.default.createElement("span",_extends({},rest,{ref:ref,className:containerClasses,style:{top:"".concat(width,"px"),width:"".concat(width,"px"),opacity:width?1:0,height:"calc(100% - ".concat(width,"px)")}}),children&&_react.default.isValidElement(children)?_react.default.cloneElement(children,{className:(0,_tailwindMerge.twMerge)(lineClasses,(_children_props=children.props)===null||_children_props===void 0?void 0:_children_props.className)}):_react.default.createElement("span",{className:lineClasses}))});TimelineConnector.propTypes={children:_timeline.propTypeChildren,className:_timeline.propTypeClassName};TimelineConnector.displayName="MaterialTailwind.TimelineConnector";var _default=TimelineConnector;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Timeline/TimelineHeader.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Timeline/TimelineHeader.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{TimelineHeader:function(){return TimelineHeader},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _timeline=__webpack_require__(/*! ../../types/components/timeline */ "./node_modules/@material-tailwind/react/types/components/timeline.js");function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var TimelineHeader=_react.default.forwardRef(function(_param,ref){var className=_param.className,children=_param.children,rest=_objectWithoutProperties(_param,["className","children"]);var timelineHeader=(0,_theme.useTheme)().timelineHeader;var styles=timelineHeader.styles;var base=styles.base;var classes=(0,_tailwindMerge.twMerge)((0,_objectsToString.default)(base),className);return _react.default.createElement("div",_extends({},rest,{ref:ref,className:classes}),children)});TimelineHeader.propTypes={children:_timeline.propTypeChildren,className:_timeline.propTypeClassName};TimelineHeader.displayName="MaterialTailwind.TimelineHeader";var _default=TimelineHeader;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Timeline/TimelineIcon.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Timeline/TimelineIcon.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{TimelineIcon:function(){return TimelineIcon},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _react1=__webpack_require__(/*! @floating-ui/react */ "./node_modules/@material-tailwind/react/node_modules/@floating-ui/react/dist/floating-ui.react.esm.js");var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _findMatch=_interopRequireDefault(__webpack_require__(/*! ../../utils/findMatch */ "./node_modules/@material-tailwind/react/utils/findMatch.js"));var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _timelineItem=__webpack_require__(/*! ./TimelineItem */ "./node_modules/@material-tailwind/react/components/Timeline/TimelineItem.js");var _timeline=__webpack_require__(/*! ../../types/components/timeline */ "./node_modules/@material-tailwind/react/types/components/timeline.js");function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _iterableToArrayLimit(arr,i){var _i=arr==null?null:typeof Symbol!=="undefined"&&arr[Symbol.iterator]||arr["@@iterator"];if(_i==null)return;var _arr=[];var _n=true;var _d=false;var _s,_e;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break}}catch(err){_d=true;_e=err}finally{try{if(!_n&&_i["return"]!=null)_i["return"]()}finally{if(_d)throw _e}}return _arr}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_unsupportedIterableToArray(arr,i)||_nonIterableRest()}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(n);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}var TimelineIcon=_react.default.forwardRef(function(_param,ref){var color=_param.color,variant=_param.variant,className=_param.className,children=_param.children,rest=_objectWithoutProperties(_param,["color","variant","className","children"]);var timelineIcon=(0,_theme.useTheme)().timelineIcon;var styles=timelineIcon.styles,valid=timelineIcon.valid;var base=styles.base,variants=styles.variants;var _useTimelineItem=_slicedToArray((0,_timelineItem.useTimelineItem)(),2),setWidth=_useTimelineItem[1];var innerRef=_react.default.useRef(null);var mergedRef=(0,_react1.useMergeRefs)([ref,innerRef]);_react.default.useEffect(function(){var iconElement=innerRef.current;if(iconElement){var width=iconElement.getBoundingClientRect().width;setWidth(width);return function(){setWidth(0)}}},[setWidth,className,children]);var variantClasses=(0,_objectsToString.default)(variants[(0,_findMatch.default)(valid.variants,variant,"filled")][(0,_findMatch.default)(valid.colors,color,"gray")]);var classes=(0,_tailwindMerge.twMerge)((0,_objectsToString.default)(base),variantClasses,className);return _react.default.createElement("span",_extends({ref:mergedRef},rest,{className:classes}),children)});TimelineIcon.propTypes={children:_timeline.propTypeChildren,className:_timeline.propTypeClassName,color:_propTypes.default.oneOf(_timeline.propTypeColor),variant:_propTypes.default.oneOf(_timeline.propTypeVariant)};TimelineIcon.displayName="MaterialTailwind.TimelineIcon";var _default=TimelineIcon;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Timeline/TimelineItem.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Timeline/TimelineItem.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{useTimelineItem:function(){return useTimelineItem},TimelineItem:function(){return TimelineItem},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _timeline=__webpack_require__(/*! ../../types/components/timeline */ "./node_modules/@material-tailwind/react/types/components/timeline.js");function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _iterableToArrayLimit(arr,i){var _i=arr==null?null:typeof Symbol!=="undefined"&&arr[Symbol.iterator]||arr["@@iterator"];if(_i==null)return;var _arr=[];var _n=true;var _d=false;var _s,_e;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break}}catch(err){_d=true;_e=err}finally{try{if(!_n&&_i["return"]!=null)_i["return"]()}finally{if(_d)throw _e}}return _arr}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_unsupportedIterableToArray(arr,i)||_nonIterableRest()}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(n);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}var TimelineItemContext=_react.default.createContext(0);TimelineItemContext.displayName="MaterialTailwind.TimelineItemContext";function useTimelineItem(){var context=_react.default.useContext(TimelineItemContext);if(!context){throw new Error("useTimelineItemContext() must be used within a TimelineItem. It happens when you use TimelineIcon, TimelineConnector or TimelineBody components outside the TimelineItem component.")}return context}var TimelineItem=_react.default.forwardRef(function(_param,ref){var className=_param.className,children=_param.children,rest=_objectWithoutProperties(_param,["className","children"]);var timelineItem=(0,_theme.useTheme)().timelineItem;var styles=timelineItem.styles;var base=styles.base;var _React_useState=_slicedToArray(_react.default.useState(0),2),width=_React_useState[0],setWidth=_React_useState[1];var contextValue=_react.default.useMemo(function(){return[width,setWidth]},[width,setWidth]);var classes=(0,_tailwindMerge.twMerge)((0,_objectsToString.default)(base),className);return _react.default.createElement(TimelineItemContext.Provider,{value:contextValue},_react.default.createElement("li",_extends({ref:ref},rest,{className:classes}),children))});TimelineItem.propTypes={className:_timeline.propTypeClassName,children:_timeline.propTypeChildren.isRequired};TimelineItem.displayName="MaterialTailwind.TimelineItem";var _default=TimelineItem;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Timeline/index.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Timeline/index.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{Timeline:function(){return Timeline},TimelineItem:function(){return _timelineItem.default},TimelineIcon:function(){return _timelineIcon.default},TimelineBody:function(){return _timelineBody.default},TimelineHeader:function(){return _timelineHeader.default},TimelineConnector:function(){return _timelineConnector.default},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _timeline=__webpack_require__(/*! ../../types/components/timeline */ "./node_modules/@material-tailwind/react/types/components/timeline.js");var _timelineItem=_interopRequireDefault(__webpack_require__(/*! ./TimelineItem */ "./node_modules/@material-tailwind/react/components/Timeline/TimelineItem.js"));var _timelineIcon=_interopRequireDefault(__webpack_require__(/*! ./TimelineIcon */ "./node_modules/@material-tailwind/react/components/Timeline/TimelineIcon.js"));var _timelineBody=_interopRequireDefault(__webpack_require__(/*! ./TimelineBody */ "./node_modules/@material-tailwind/react/components/Timeline/TimelineBody.js"));var _timelineHeader=_interopRequireDefault(__webpack_require__(/*! ./TimelineHeader */ "./node_modules/@material-tailwind/react/components/Timeline/TimelineHeader.js"));var _timelineConnector=_interopRequireDefault(__webpack_require__(/*! ./TimelineConnector */ "./node_modules/@material-tailwind/react/components/Timeline/TimelineConnector.js"));function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var Timeline=_react.default.forwardRef(function(_param,ref){var className=_param.className,children=_param.children,rest=_objectWithoutProperties(_param,["className","children"]);var timeline=(0,_theme.useTheme)().timeline;var styles=timeline.styles;var base=styles.base;var classes=(0,_tailwindMerge.twMerge)((0,_objectsToString.default)(base),className);return _react.default.createElement("ul",_extends({ref:ref},rest,{className:classes}),children)});Timeline.propTypes={className:_timeline.propTypeClassName,children:_timeline.propTypeChildren};Timeline.displayName="MaterialTailwind.Timeline";var _default=Object.assign(Timeline,{Item:_timelineItem.default,Icon:_timelineIcon.default,Header:_timelineHeader.default,Body:_timelineBody.default,Connector:_timelineConnector.default});

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Tooltip/index.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Tooltip/index.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{Tooltip:function(){return Tooltip},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _react1=__webpack_require__(/*! @floating-ui/react */ "./node_modules/@material-tailwind/react/node_modules/@floating-ui/react/dist/floating-ui.react.esm.js");var _framerMotion=__webpack_require__(/*! framer-motion */ "./node_modules/framer-motion/dist/cjs/index.js");var _classnames=_interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _deepmerge=_interopRequireDefault(__webpack_require__(/*! deepmerge */ "./node_modules/deepmerge/dist/cjs.js"));var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _popover=__webpack_require__(/*! ../../types/components/popover */ "./node_modules/@material-tailwind/react/types/components/popover.js");function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _iterableToArrayLimit(arr,i){var _i=arr==null?null:typeof Symbol!=="undefined"&&arr[Symbol.iterator]||arr["@@iterator"];if(_i==null)return;var _arr=[];var _n=true;var _d=false;var _s,_e;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break}}catch(err){_d=true;_e=err}finally{try{if(!_n&&_i["return"]!=null)_i["return"]()}finally{if(_d)throw _e}}return _arr}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};var ownKeys=Object.keys(source);if(typeof Object.getOwnPropertySymbols==="function"){ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))}ownKeys.forEach(function(key){_defineProperty(target,key,source[key])})}return target}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})}keys.push.apply(keys,symbols)}return keys}function _objectSpreadProps(target,source){source=source!=null?source:{};if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source))}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})}return target}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_unsupportedIterableToArray(arr,i)||_nonIterableRest()}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(n);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}var Tooltip=_react.default.forwardRef(function(_param,ref){var open=_param.open,handler=_param.handler,content=_param.content,interactive=_param.interactive,placement=_param.placement,offset=_param.offset,dismiss=_param.dismiss,animate=_param.animate,className=_param.className,children=_param.children,rest=_objectWithoutProperties(_param,["open","handler","content","interactive","placement","offset","dismiss","animate","className","children"]);var tooltip=(0,_theme.useTheme)().tooltip;var defaultProps=tooltip.defaultProps,base=tooltip.styles.base;var _React_useState=_slicedToArray(_react.default.useState(false),2),internalOpen=_React_useState[0],setInternalOpen=_React_useState[1];open=open!==null&&open!==void 0?open:internalOpen;handler=handler!==null&&handler!==void 0?handler:setInternalOpen;interactive=interactive!==null&&interactive!==void 0?interactive:defaultProps.interactive;placement=placement!==null&&placement!==void 0?placement:defaultProps.placement;offset=offset!==null&&offset!==void 0?offset:defaultProps.offset;dismiss=dismiss!==null&&dismiss!==void 0?dismiss:defaultProps.dismiss;animate=animate!==null&&animate!==void 0?animate:defaultProps.animate;className=(0,_tailwindMerge.twMerge)(defaultProps.className||"",className);var tooltipClasses=(0,_tailwindMerge.twMerge)((0,_classnames.default)((0,_objectsToString.default)(base)),className);var animation={unmount:{opacity:0},mount:{opacity:1}};var appliedAnimation=(0,_deepmerge.default)(animation,animate);var _useFloating=(0,_react1.useFloating)({open:open,onOpenChange:handler,middleware:[(0,_react1.offset)(offset),(0,_react1.flip)(),(0,_react1.shift)()],placement:placement}),x=_useFloating.x,y=_useFloating.y,reference=_useFloating.reference,floating=_useFloating.floating,strategy=_useFloating.strategy,refs=_useFloating.refs,update=_useFloating.update,context=_useFloating.context;var _useInteractions=(0,_react1.useInteractions)([(0,_react1.useClick)(context,{enabled:interactive}),(0,_react1.useFocus)(context),(0,_react1.useHover)(context),(0,_react1.useRole)(context,{role:"tooltip"}),(0,_react1.useDismiss)(context,dismiss)]),getReferenceProps=_useInteractions.getReferenceProps,getFloatingProps=_useInteractions.getFloatingProps;_react.default.useEffect(function(){if(refs.reference.current&&refs.floating.current&&open){return(0,_react1.autoUpdate)(refs.reference.current,refs.floating.current,update)}},[open,update,refs.reference,refs.floating]);var mergedRef=(0,_react1.useMergeRefs)([ref,floating]);var childMergedRef=(0,_react1.useMergeRefs)([ref,reference]);var NewAnimatePresence=_framerMotion.AnimatePresence;return _react.default.createElement(_react.default.Fragment,null,typeof children==="string"?_react.default.createElement("span",_extends({},getReferenceProps({ref:childMergedRef})),children):_react.default.cloneElement(children,_objectSpread({},getReferenceProps(_objectSpreadProps(_objectSpread({},children===null||children===void 0?void 0:children.props),{ref:childMergedRef})))),_react.default.createElement(_framerMotion.LazyMotion,{features:_framerMotion.domAnimation},_react.default.createElement(_react1.FloatingPortal,null,_react.default.createElement(NewAnimatePresence,null,open&&_react.default.createElement(_framerMotion.m.div,_extends({},getFloatingProps(_objectSpreadProps(_objectSpread({},rest),{ref:mergedRef,className:tooltipClasses,style:{position:strategy,top:y!==null&&y!==void 0?y:"",left:x!==null&&x!==void 0?x:""}})),{initial:"unmount",exit:"unmount",animate:open?"mount":"unmount",variants:appliedAnimation}),content)))))});Tooltip.propTypes={open:_popover.propTypesOpen,handler:_popover.propTypesHandler,content:_popover.propTypesContent,interactive:_popover.propTypesInteractive,placement:_propTypes.default.oneOf(_popover.propTypesPlacement),offset:_popover.propTypesOffset,dismiss:_popover.propTypesDismiss,animate:_popover.propTypesAnimate,className:_popover.propTypesClassName,children:_popover.propTypesChildren};Tooltip.displayName="MaterialTailwind.Tooltip";var _default=Tooltip;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/components/Typography/index.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/components/Typography/index.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{Typography:function(){return Typography},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _classnames=_interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));var _tailwindMerge=__webpack_require__(/*! tailwind-merge */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js");var _findMatch=_interopRequireDefault(__webpack_require__(/*! ../../utils/findMatch */ "./node_modules/@material-tailwind/react/utils/findMatch.js"));var _objectsToString=_interopRequireDefault(__webpack_require__(/*! ../../utils/objectsToString */ "./node_modules/@material-tailwind/react/utils/objectsToString.js"));var _theme=__webpack_require__(/*! ../../context/theme */ "./node_modules/@material-tailwind/react/context/theme.js");var _typography=__webpack_require__(/*! ../../types/components/typography */ "./node_modules/@material-tailwind/react/types/components/typography.js");function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};var ownKeys=Object.keys(source);if(typeof Object.getOwnPropertySymbols==="function"){ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))}ownKeys.forEach(function(key){_defineProperty(target,key,source[key])})}return target}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})}keys.push.apply(keys,symbols)}return keys}function _objectSpreadProps(target,source){source=source!=null?source:{};if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source))}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})}return target}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}var Typography=_react.default.forwardRef(function(_param,ref){var variant=_param.variant,color=_param.color,textGradient=_param.textGradient,as=_param.as,className=_param.className,children=_param.children,rest=_objectWithoutProperties(_param,["variant","color","textGradient","as","className","children"]);var typography=(0,_theme.useTheme)().typography;var defaultProps=typography.defaultProps,valid=typography.valid,styles=typography.styles;var variants=styles.variants,colors=styles.colors,gradient=styles.textGradient;variant=variant!==null&&variant!==void 0?variant:defaultProps.variant;color=color!==null&&color!==void 0?color:defaultProps.color;textGradient=textGradient||defaultProps.textGradient;as=as!==null&&as!==void 0?as:undefined;className=(0,_tailwindMerge.twMerge)(defaultProps.className||"",className);var typographyVariant=(0,_objectsToString.default)(variants[(0,_findMatch.default)(valid.variants,variant,"paragraph")]);var typographyColor=colors[(0,_findMatch.default)(valid.colors,color,"inherit")];var gradientTextClasses=(0,_objectsToString.default)(gradient);var classes=(0,_tailwindMerge.twMerge)((0,_classnames.default)(typographyVariant,_defineProperty({},typographyColor.color,!textGradient),_defineProperty({},gradientTextClasses,textGradient),_defineProperty({},typographyColor.gradient,textGradient)),className);var template;switch(variant){case"h1":template=_react.default.createElement(as||"h1",_objectSpreadProps(_objectSpread({},rest),{ref:ref,className:classes}),children);break;case"h2":template=_react.default.createElement(as||"h2",_objectSpreadProps(_objectSpread({},rest),{ref:ref,className:classes}),children);break;case"h3":template=_react.default.createElement(as||"h3",_objectSpreadProps(_objectSpread({},rest),{ref:ref,className:classes}),children);break;case"h4":template=_react.default.createElement(as||"h4",_objectSpreadProps(_objectSpread({},rest),{ref:ref,className:classes}),children);break;case"h5":template=_react.default.createElement(as||"h5",_objectSpreadProps(_objectSpread({},rest),{ref:ref,className:classes}),children);break;case"h6":template=_react.default.createElement(as||"h6",_objectSpreadProps(_objectSpread({},rest),{ref:ref,className:classes}),children);break;case"lead":template=_react.default.createElement(as||"p",_objectSpreadProps(_objectSpread({},rest),{ref:ref,className:classes}),children);break;case"paragraph":template=_react.default.createElement(as||"p",_objectSpreadProps(_objectSpread({},rest),{ref:ref,className:classes}),children);break;case"small":template=_react.default.createElement(as||"p",_objectSpreadProps(_objectSpread({},rest),{ref:ref,className:classes}),children);break;default:template=_react.default.createElement(as||"p",_objectSpreadProps(_objectSpread({},rest),{ref:ref,className:classes}),children);break}return template});Typography.propTypes={variant:_propTypes.default.oneOf(_typography.propTypesVariant),color:_propTypes.default.oneOf(_typography.propTypesColor),as:_typography.propTypesAs,textGradient:_typography.propTypesTextGradient,className:_typography.propTypesClassName,children:_typography.propTypesChildren};Typography.displayName="MaterialTailwind.Typography";var _default=Typography;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/context/theme.js":
/*!****************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/context/theme.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{MaterialTailwindTheme:function(){return MaterialTailwindTheme},ThemeProvider:function(){return ThemeProvider},useTheme:function(){return useTheme}});var _react=_interopRequireWildcard(__webpack_require__(/*! react */ "react"));var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _deepmerge=_interopRequireDefault(__webpack_require__(/*! deepmerge */ "./node_modules/deepmerge/dist/cjs.js"));var _index=_interopRequireDefault(__webpack_require__(/*! ../theme/index */ "./node_modules/@material-tailwind/react/theme/index.js"));var _combineMerge=_interopRequireDefault(__webpack_require__(/*! ../utils/combineMerge */ "./node_modules/@material-tailwind/react/utils/combineMerge.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!=="function")return null;var cacheBabelInterop=new WeakMap;var cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj}if(obj===null||typeof obj!=="object"&&typeof obj!=="function"){return{default:obj}}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj)}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!=="default"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc)}else{newObj[key]=obj[key]}}}newObj.default=obj;if(cache){cache.set(obj,newObj)}return newObj}var MaterialTailwindTheme=(0,_react.createContext)(_index.default);MaterialTailwindTheme.displayName="MaterialTailwindThemeProvider";function ThemeProvider(param){var _param_value=param.value,value=_param_value===void 0?_index.default:_param_value,children=param.children;var mergedValue=(0,_deepmerge.default)(_index.default,value,{arrayMerge:_combineMerge.default});return _react.default.createElement(MaterialTailwindTheme.Provider,{value:mergedValue},children)}var useTheme=function(){return(0,_react.useContext)(MaterialTailwindTheme)};ThemeProvider.propTypes={value:_propTypes.default.instanceOf(Object),children:_propTypes.default.node.isRequired};

/***/ }),

/***/ "./node_modules/@material-tailwind/react/index.js":
/*!********************************************************!*\
  !*** ./node_modules/@material-tailwind/react/index.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));_exportStar(__webpack_require__(/*! ./components/Accordion */ "./node_modules/@material-tailwind/react/components/Accordion/index.js"),exports);_exportStar(__webpack_require__(/*! ./components/Alert */ "./node_modules/@material-tailwind/react/components/Alert/index.js"),exports);_exportStar(__webpack_require__(/*! ./components/Avatar */ "./node_modules/@material-tailwind/react/components/Avatar/index.js"),exports);_exportStar(__webpack_require__(/*! ./components/Breadcrumbs */ "./node_modules/@material-tailwind/react/components/Breadcrumbs/index.js"),exports);_exportStar(__webpack_require__(/*! ./components/Button */ "./node_modules/@material-tailwind/react/components/Button/index.js"),exports);_exportStar(__webpack_require__(/*! ./components/Card */ "./node_modules/@material-tailwind/react/components/Card/index.js"),exports);_exportStar(__webpack_require__(/*! ./components/Checkbox */ "./node_modules/@material-tailwind/react/components/Checkbox/index.js"),exports);_exportStar(__webpack_require__(/*! ./components/Chip */ "./node_modules/@material-tailwind/react/components/Chip/index.js"),exports);_exportStar(__webpack_require__(/*! ./components/Dialog */ "./node_modules/@material-tailwind/react/components/Dialog/index.js"),exports);_exportStar(__webpack_require__(/*! ./components/IconButton */ "./node_modules/@material-tailwind/react/components/IconButton/index.js"),exports);_exportStar(__webpack_require__(/*! ./components/Input */ "./node_modules/@material-tailwind/react/components/Input/index.js"),exports);_exportStar(__webpack_require__(/*! ./components/Menu */ "./node_modules/@material-tailwind/react/components/Menu/index.js"),exports);_exportStar(__webpack_require__(/*! ./components/Navbar */ "./node_modules/@material-tailwind/react/components/Navbar/index.js"),exports);_exportStar(__webpack_require__(/*! ./components/Popover */ "./node_modules/@material-tailwind/react/components/Popover/index.js"),exports);_exportStar(__webpack_require__(/*! ./components/Progress */ "./node_modules/@material-tailwind/react/components/Progress/index.js"),exports);_exportStar(__webpack_require__(/*! ./components/Radio */ "./node_modules/@material-tailwind/react/components/Radio/index.js"),exports);_exportStar(__webpack_require__(/*! ./components/Select */ "./node_modules/@material-tailwind/react/components/Select/index.js"),exports);_exportStar(__webpack_require__(/*! ./components/Switch */ "./node_modules/@material-tailwind/react/components/Switch/index.js"),exports);_exportStar(__webpack_require__(/*! ./components/Tabs */ "./node_modules/@material-tailwind/react/components/Tabs/index.js"),exports);_exportStar(__webpack_require__(/*! ./components/Textarea */ "./node_modules/@material-tailwind/react/components/Textarea/index.js"),exports);_exportStar(__webpack_require__(/*! ./components/Tooltip */ "./node_modules/@material-tailwind/react/components/Tooltip/index.js"),exports);_exportStar(__webpack_require__(/*! ./components/Typography */ "./node_modules/@material-tailwind/react/components/Typography/index.js"),exports);_exportStar(__webpack_require__(/*! ./components/Collapse */ "./node_modules/@material-tailwind/react/components/Collapse/index.js"),exports);_exportStar(__webpack_require__(/*! ./components/List */ "./node_modules/@material-tailwind/react/components/List/index.js"),exports);_exportStar(__webpack_require__(/*! ./components/ButtonGroup */ "./node_modules/@material-tailwind/react/components/ButtonGroup/index.js"),exports);_exportStar(__webpack_require__(/*! ./components/Carousel */ "./node_modules/@material-tailwind/react/components/Carousel/index.js"),exports);_exportStar(__webpack_require__(/*! ./components/Drawer */ "./node_modules/@material-tailwind/react/components/Drawer/index.js"),exports);_exportStar(__webpack_require__(/*! ./components/Badge */ "./node_modules/@material-tailwind/react/components/Badge/index.js"),exports);_exportStar(__webpack_require__(/*! ./components/Rating */ "./node_modules/@material-tailwind/react/components/Rating/index.js"),exports);_exportStar(__webpack_require__(/*! ./components/Slider */ "./node_modules/@material-tailwind/react/components/Slider/index.js"),exports);_exportStar(__webpack_require__(/*! ./components/Spinner */ "./node_modules/@material-tailwind/react/components/Spinner/index.js"),exports);_exportStar(__webpack_require__(/*! ./components/Timeline */ "./node_modules/@material-tailwind/react/components/Timeline/index.js"),exports);_exportStar(__webpack_require__(/*! ./components/Stepper */ "./node_modules/@material-tailwind/react/components/Stepper/index.js"),exports);_exportStar(__webpack_require__(/*! ./components/SpeedDial */ "./node_modules/@material-tailwind/react/components/SpeedDial/index.js"),exports);_exportStar(__webpack_require__(/*! ./context/theme */ "./node_modules/@material-tailwind/react/context/theme.js"),exports);_exportStar(__webpack_require__(/*! ./theme/index */ "./node_modules/@material-tailwind/react/theme/index.js"),exports);function _exportStar(from,to){Object.keys(from).forEach(function(k){if(k!=="default"&&!Object.prototype.hasOwnProperty.call(to,k))Object.defineProperty(to,k,{enumerable:true,get:function(){return from[k]}})});return from}

/***/ }),

/***/ "./node_modules/@material-tailwind/react/node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.esm.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.esm.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   arrow: () => (/* binding */ arrow),
/* harmony export */   autoPlacement: () => (/* reexport safe */ _floating_ui_dom__WEBPACK_IMPORTED_MODULE_0__.autoPlacement),
/* harmony export */   autoUpdate: () => (/* reexport safe */ _floating_ui_dom__WEBPACK_IMPORTED_MODULE_0__.autoUpdate),
/* harmony export */   computePosition: () => (/* reexport safe */ _floating_ui_dom__WEBPACK_IMPORTED_MODULE_0__.computePosition),
/* harmony export */   detectOverflow: () => (/* reexport safe */ _floating_ui_dom__WEBPACK_IMPORTED_MODULE_0__.detectOverflow),
/* harmony export */   flip: () => (/* reexport safe */ _floating_ui_dom__WEBPACK_IMPORTED_MODULE_0__.flip),
/* harmony export */   getOverflowAncestors: () => (/* reexport safe */ _floating_ui_dom__WEBPACK_IMPORTED_MODULE_1__.getOverflowAncestors),
/* harmony export */   hide: () => (/* reexport safe */ _floating_ui_dom__WEBPACK_IMPORTED_MODULE_0__.hide),
/* harmony export */   inline: () => (/* reexport safe */ _floating_ui_dom__WEBPACK_IMPORTED_MODULE_0__.inline),
/* harmony export */   limitShift: () => (/* reexport safe */ _floating_ui_dom__WEBPACK_IMPORTED_MODULE_0__.limitShift),
/* harmony export */   offset: () => (/* reexport safe */ _floating_ui_dom__WEBPACK_IMPORTED_MODULE_0__.offset),
/* harmony export */   platform: () => (/* reexport safe */ _floating_ui_dom__WEBPACK_IMPORTED_MODULE_0__.platform),
/* harmony export */   shift: () => (/* reexport safe */ _floating_ui_dom__WEBPACK_IMPORTED_MODULE_0__.shift),
/* harmony export */   size: () => (/* reexport safe */ _floating_ui_dom__WEBPACK_IMPORTED_MODULE_0__.size),
/* harmony export */   useFloating: () => (/* binding */ useFloating)
/* harmony export */ });
/* harmony import */ var _floating_ui_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @floating-ui/dom */ "./node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs");
/* harmony import */ var _floating_ui_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @floating-ui/dom */ "./node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-dom */ "react-dom");
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_3__);






/**
 * A data provider that provides data to position an inner element of the
 * floating element (usually a triangle or caret) so that it is centered to the
 * reference element.
 * This wraps the core `arrow` middleware to allow React refs as the element.
 * @see https://floating-ui.com/docs/arrow
 */
const arrow = options => {
  const {
    element,
    padding
  } = options;
  function isRef(value) {
    return Object.prototype.hasOwnProperty.call(value, 'current');
  }
  return {
    name: 'arrow',
    options,
    fn(args) {
      if (isRef(element)) {
        if (element.current != null) {
          return (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_0__.arrow)({
            element: element.current,
            padding
          }).fn(args);
        }
        return {};
      } else if (element) {
        return (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_0__.arrow)({
          element,
          padding
        }).fn(args);
      }
      return {};
    }
  };
};

var index = typeof document !== 'undefined' ? react__WEBPACK_IMPORTED_MODULE_2__.useLayoutEffect : react__WEBPACK_IMPORTED_MODULE_2__.useEffect;

// Fork of `fast-deep-equal` that only does the comparisons we need and compares
// functions
function deepEqual(a, b) {
  if (a === b) {
    return true;
  }
  if (typeof a !== typeof b) {
    return false;
  }
  if (typeof a === 'function' && a.toString() === b.toString()) {
    return true;
  }
  let length, i, keys;
  if (a && b && typeof a == 'object') {
    if (Array.isArray(a)) {
      length = a.length;
      if (length != b.length) return false;
      for (i = length; i-- !== 0;) {
        if (!deepEqual(a[i], b[i])) {
          return false;
        }
      }
      return true;
    }
    keys = Object.keys(a);
    length = keys.length;
    if (length !== Object.keys(b).length) {
      return false;
    }
    for (i = length; i-- !== 0;) {
      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) {
        return false;
      }
    }
    for (i = length; i-- !== 0;) {
      const key = keys[i];
      if (key === '_owner' && a.$$typeof) {
        continue;
      }
      if (!deepEqual(a[key], b[key])) {
        return false;
      }
    }
    return true;
  }
  return a !== a && b !== b;
}

function useLatestRef(value) {
  const ref = react__WEBPACK_IMPORTED_MODULE_2__.useRef(value);
  index(() => {
    ref.current = value;
  });
  return ref;
}

/**
 * Provides data to position a floating element.
 * @see https://floating-ui.com/docs/react
 */
function useFloating(options) {
  if (options === void 0) {
    options = {};
  }
  const {
    placement = 'bottom',
    strategy = 'absolute',
    middleware = [],
    platform,
    whileElementsMounted,
    open
  } = options;
  const [data, setData] = react__WEBPACK_IMPORTED_MODULE_2__.useState({
    x: null,
    y: null,
    strategy,
    placement,
    middlewareData: {},
    isPositioned: false
  });
  const [latestMiddleware, setLatestMiddleware] = react__WEBPACK_IMPORTED_MODULE_2__.useState(middleware);
  if (!deepEqual(latestMiddleware, middleware)) {
    setLatestMiddleware(middleware);
  }
  const referenceRef = react__WEBPACK_IMPORTED_MODULE_2__.useRef(null);
  const floatingRef = react__WEBPACK_IMPORTED_MODULE_2__.useRef(null);
  const dataRef = react__WEBPACK_IMPORTED_MODULE_2__.useRef(data);
  const whileElementsMountedRef = useLatestRef(whileElementsMounted);
  const platformRef = useLatestRef(platform);
  const [reference, _setReference] = react__WEBPACK_IMPORTED_MODULE_2__.useState(null);
  const [floating, _setFloating] = react__WEBPACK_IMPORTED_MODULE_2__.useState(null);
  const setReference = react__WEBPACK_IMPORTED_MODULE_2__.useCallback(node => {
    if (referenceRef.current !== node) {
      referenceRef.current = node;
      _setReference(node);
    }
  }, []);
  const setFloating = react__WEBPACK_IMPORTED_MODULE_2__.useCallback(node => {
    if (floatingRef.current !== node) {
      floatingRef.current = node;
      _setFloating(node);
    }
  }, []);
  const update = react__WEBPACK_IMPORTED_MODULE_2__.useCallback(() => {
    if (!referenceRef.current || !floatingRef.current) {
      return;
    }
    const config = {
      placement,
      strategy,
      middleware: latestMiddleware
    };
    if (platformRef.current) {
      config.platform = platformRef.current;
    }
    (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_0__.computePosition)(referenceRef.current, floatingRef.current, config).then(data => {
      const fullData = {
        ...data,
        isPositioned: true
      };
      if (isMountedRef.current && !deepEqual(dataRef.current, fullData)) {
        dataRef.current = fullData;
        react_dom__WEBPACK_IMPORTED_MODULE_3__.flushSync(() => {
          setData(fullData);
        });
      }
    });
  }, [latestMiddleware, placement, strategy, platformRef]);
  index(() => {
    if (open === false && dataRef.current.isPositioned) {
      dataRef.current.isPositioned = false;
      setData(data => ({
        ...data,
        isPositioned: false
      }));
    }
  }, [open]);
  const isMountedRef = react__WEBPACK_IMPORTED_MODULE_2__.useRef(false);
  index(() => {
    isMountedRef.current = true;
    return () => {
      isMountedRef.current = false;
    };
  }, []);
  index(() => {
    if (reference && floating) {
      if (whileElementsMountedRef.current) {
        return whileElementsMountedRef.current(reference, floating, update);
      } else {
        update();
      }
    }
  }, [reference, floating, update, whileElementsMountedRef]);
  const refs = react__WEBPACK_IMPORTED_MODULE_2__.useMemo(() => ({
    reference: referenceRef,
    floating: floatingRef,
    setReference,
    setFloating
  }), [setReference, setFloating]);
  const elements = react__WEBPACK_IMPORTED_MODULE_2__.useMemo(() => ({
    reference,
    floating
  }), [reference, floating]);
  return react__WEBPACK_IMPORTED_MODULE_2__.useMemo(() => ({
    ...data,
    update,
    refs,
    elements,
    reference: setReference,
    floating: setFloating
  }), [data, update, refs, elements, setReference, setFloating]);
}




/***/ }),

/***/ "./node_modules/@material-tailwind/react/node_modules/@floating-ui/react/dist/floating-ui.react.esm.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/node_modules/@floating-ui/react/dist/floating-ui.react.esm.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FloatingDelayGroup: () => (/* binding */ FloatingDelayGroup),
/* harmony export */   FloatingFocusManager: () => (/* binding */ FloatingFocusManager),
/* harmony export */   FloatingNode: () => (/* binding */ FloatingNode),
/* harmony export */   FloatingOverlay: () => (/* binding */ FloatingOverlay),
/* harmony export */   FloatingPortal: () => (/* binding */ FloatingPortal),
/* harmony export */   FloatingTree: () => (/* binding */ FloatingTree),
/* harmony export */   arrow: () => (/* reexport safe */ _floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_6__.arrow),
/* harmony export */   autoPlacement: () => (/* reexport safe */ _floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_4__.autoPlacement),
/* harmony export */   autoUpdate: () => (/* reexport safe */ _floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_4__.autoUpdate),
/* harmony export */   computePosition: () => (/* reexport safe */ _floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_4__.computePosition),
/* harmony export */   detectOverflow: () => (/* reexport safe */ _floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_4__.detectOverflow),
/* harmony export */   flip: () => (/* reexport safe */ _floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_4__.flip),
/* harmony export */   getOverflowAncestors: () => (/* reexport safe */ _floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_5__.getOverflowAncestors),
/* harmony export */   hide: () => (/* reexport safe */ _floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_4__.hide),
/* harmony export */   inline: () => (/* reexport safe */ _floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_4__.inline),
/* harmony export */   inner: () => (/* binding */ inner),
/* harmony export */   limitShift: () => (/* reexport safe */ _floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_4__.limitShift),
/* harmony export */   offset: () => (/* reexport safe */ _floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_4__.offset),
/* harmony export */   platform: () => (/* reexport safe */ _floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_4__.platform),
/* harmony export */   safePolygon: () => (/* binding */ safePolygon),
/* harmony export */   shift: () => (/* reexport safe */ _floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_4__.shift),
/* harmony export */   size: () => (/* reexport safe */ _floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_4__.size),
/* harmony export */   useClick: () => (/* binding */ useClick),
/* harmony export */   useDelayGroup: () => (/* binding */ useDelayGroup),
/* harmony export */   useDelayGroupContext: () => (/* binding */ useDelayGroupContext),
/* harmony export */   useDismiss: () => (/* binding */ useDismiss),
/* harmony export */   useFloating: () => (/* binding */ useFloating),
/* harmony export */   useFloatingNodeId: () => (/* binding */ useFloatingNodeId),
/* harmony export */   useFloatingParentNodeId: () => (/* binding */ useFloatingParentNodeId),
/* harmony export */   useFloatingPortalNode: () => (/* binding */ useFloatingPortalNode),
/* harmony export */   useFloatingTree: () => (/* binding */ useFloatingTree),
/* harmony export */   useFocus: () => (/* binding */ useFocus),
/* harmony export */   useHover: () => (/* binding */ useHover),
/* harmony export */   useId: () => (/* binding */ useId),
/* harmony export */   useInnerOffset: () => (/* binding */ useInnerOffset),
/* harmony export */   useInteractions: () => (/* binding */ useInteractions),
/* harmony export */   useListNavigation: () => (/* binding */ useListNavigation),
/* harmony export */   useMergeRefs: () => (/* binding */ useMergeRefs),
/* harmony export */   useRole: () => (/* binding */ useRole),
/* harmony export */   useTransitionStatus: () => (/* binding */ useTransitionStatus),
/* harmony export */   useTransitionStyles: () => (/* binding */ useTransitionStyles),
/* harmony export */   useTypeahead: () => (/* binding */ useTypeahead)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var aria_hidden__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! aria-hidden */ "./node_modules/aria-hidden/dist/es2015/index.js");
/* harmony import */ var tabbable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tabbable */ "./node_modules/tabbable/dist/index.esm.js");
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-dom */ "react-dom");
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @floating-ui/dom */ "./node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs");
/* harmony import */ var _floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @floating-ui/dom */ "./node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs");
/* harmony import */ var _floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @floating-ui/react-dom */ "./node_modules/@material-tailwind/react/node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.esm.js");









var index = typeof document !== 'undefined' ? react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect : react__WEBPACK_IMPORTED_MODULE_0__.useEffect;

let serverHandoffComplete = false;
let count = 0;
const genId = () => "floating-ui-" + count++;
function useFloatingId() {
  const [id, setId] = react__WEBPACK_IMPORTED_MODULE_0__.useState(() => serverHandoffComplete ? genId() : undefined);
  index(() => {
    if (id == null) {
      setId(genId());
    }
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    if (!serverHandoffComplete) {
      serverHandoffComplete = true;
    }
  }, []);
  return id;
}

// `toString()` prevents bundlers from trying to `import { useId } from 'react'`
const useReactId = react__WEBPACK_IMPORTED_MODULE_0__[/*#__PURE__*/'useId'.toString()];

/**
 * Uses React 18's built-in `useId()` when available, or falls back to a
 * slightly less performant (requiring a double render) implementation for
 * earlier React versions.
 * @see https://floating-ui.com/docs/useId
 */
const useId = useReactId || useFloatingId;

function createPubSub() {
  const map = new Map();
  return {
    emit(event, data) {
      var _map$get;
      (_map$get = map.get(event)) == null ? void 0 : _map$get.forEach(handler => handler(data));
    },
    on(event, listener) {
      map.set(event, [...(map.get(event) || []), listener]);
    },
    off(event, listener) {
      map.set(event, (map.get(event) || []).filter(l => l !== listener));
    }
  };
}

const FloatingNodeContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);
const FloatingTreeContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);
const useFloatingParentNodeId = () => {
  var _React$useContext;
  return ((_React$useContext = react__WEBPACK_IMPORTED_MODULE_0__.useContext(FloatingNodeContext)) == null ? void 0 : _React$useContext.id) || null;
};
const useFloatingTree = () => react__WEBPACK_IMPORTED_MODULE_0__.useContext(FloatingTreeContext);

/**
 * Registers a node into the floating tree, returning its id.
 */
const useFloatingNodeId = customParentId => {
  const id = useId();
  const tree = useFloatingTree();
  const reactParentId = useFloatingParentNodeId();
  const parentId = customParentId || reactParentId;
  index(() => {
    const node = {
      id,
      parentId
    };
    tree == null ? void 0 : tree.addNode(node);
    return () => {
      tree == null ? void 0 : tree.removeNode(node);
    };
  }, [tree, id, parentId]);
  return id;
};

/**
 * Provides parent node context for nested floating elements.
 * @see https://floating-ui.com/docs/FloatingTree
 */
const FloatingNode = _ref => {
  let {
    children,
    id
  } = _ref;
  const parentId = useFloatingParentNodeId();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(FloatingNodeContext.Provider, {
    value: react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({
      id,
      parentId
    }), [id, parentId])
  }, children);
};

/**
 * Provides context for nested floating elements when they are not children of
 * each other on the DOM (i.e. portalled to a common node, rather than their
 * respective parent).
 * @see https://floating-ui.com/docs/FloatingTree
 */
const FloatingTree = _ref2 => {
  let {
    children
  } = _ref2;
  const nodesRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef([]);
  const addNode = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(node => {
    nodesRef.current = [...nodesRef.current, node];
  }, []);
  const removeNode = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(node => {
    nodesRef.current = nodesRef.current.filter(n => n !== node);
  }, []);
  const events = react__WEBPACK_IMPORTED_MODULE_0__.useState(() => createPubSub())[0];
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(FloatingTreeContext.Provider, {
    value: react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({
      nodesRef,
      addNode,
      removeNode,
      events
    }), [nodesRef, addNode, removeNode, events])
  }, children);
};

function getDocument(node) {
  return (node == null ? void 0 : node.ownerDocument) || document;
}

// Avoid Chrome DevTools blue warning.
function getPlatform() {
  const uaData = navigator.userAgentData;
  if (uaData != null && uaData.platform) {
    return uaData.platform;
  }
  return navigator.platform;
}
function getUserAgent() {
  const uaData = navigator.userAgentData;
  if (uaData && Array.isArray(uaData.brands)) {
    return uaData.brands.map(_ref => {
      let {
        brand,
        version
      } = _ref;
      return brand + "/" + version;
    }).join(' ');
  }
  return navigator.userAgent;
}

function getWindow(value) {
  return getDocument(value).defaultView || window;
}
function isElement(value) {
  return value ? value instanceof getWindow(value).Element : false;
}
function isHTMLElement(value) {
  return value ? value instanceof getWindow(value).HTMLElement : false;
}
function isShadowRoot(node) {
  // Browsers without `ShadowRoot` support
  if (typeof ShadowRoot === 'undefined') {
    return false;
  }
  const OwnElement = getWindow(node).ShadowRoot;
  return node instanceof OwnElement || node instanceof ShadowRoot;
}

// License: https://github.com/adobe/react-spectrum/blob/b35d5c02fe900badccd0cf1a8f23bb593419f238/packages/@react-aria/utils/src/isVirtualEvent.ts
function isVirtualClick(event) {
  if (event.mozInputSource === 0 && event.isTrusted) {
    return true;
  }
  const androidRe = /Android/i;
  if ((androidRe.test(getPlatform()) || androidRe.test(getUserAgent())) && event.pointerType) {
    return event.type === 'click' && event.buttons === 1;
  }
  return event.detail === 0 && !event.pointerType;
}
function isVirtualPointerEvent(event) {
  return event.width === 0 && event.height === 0 || event.width === 1 && event.height === 1 && event.pressure === 0 && event.detail === 0 && event.pointerType !== 'mouse' ||
  // iOS VoiceOver returns 0.333• for width/height.
  event.width < 1 && event.height < 1 && event.pressure === 0 && event.detail === 0;
}
function isSafari() {
  // Chrome DevTools does not complain about navigator.vendor
  return /apple/i.test(navigator.vendor);
}
function isMac() {
  return getPlatform().toLowerCase().startsWith('mac') && !navigator.maxTouchPoints;
}
function isMouseLikePointerType(pointerType, strict) {
  // On some Linux machines with Chromium, mouse inputs return a `pointerType`
  // of "pen": https://github.com/floating-ui/floating-ui/issues/2015
  const values = ['mouse', 'pen'];
  if (!strict) {
    values.push('', undefined);
  }
  return values.includes(pointerType);
}

function useLatestRef(value) {
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(value);
  index(() => {
    ref.current = value;
  });
  return ref;
}

const safePolygonIdentifier = 'data-floating-ui-safe-polygon';
function getDelay(value, prop, pointerType) {
  if (pointerType && !isMouseLikePointerType(pointerType)) {
    return 0;
  }
  if (typeof value === 'number') {
    return value;
  }
  return value == null ? void 0 : value[prop];
}
/**
 * Adds hover event listeners that change the open state, like CSS :hover.
 * @see https://floating-ui.com/docs/useHover
 */
const useHover = function (context, _temp) {
  let {
    enabled = true,
    delay = 0,
    handleClose = null,
    mouseOnly = false,
    restMs = 0,
    move = true
  } = _temp === void 0 ? {} : _temp;
  const {
    open,
    onOpenChange,
    dataRef,
    events,
    elements: {
      domReference,
      floating
    },
    refs
  } = context;
  const tree = useFloatingTree();
  const parentId = useFloatingParentNodeId();
  const handleCloseRef = useLatestRef(handleClose);
  const delayRef = useLatestRef(delay);
  const pointerTypeRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();
  const timeoutRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();
  const handlerRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();
  const restTimeoutRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();
  const blockMouseMoveRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(true);
  const performedPointerEventsMutationRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);
  const unbindMouseMoveRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(() => {});
  const isHoverOpen = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {
    var _dataRef$current$open;
    const type = (_dataRef$current$open = dataRef.current.openEvent) == null ? void 0 : _dataRef$current$open.type;
    return (type == null ? void 0 : type.includes('mouse')) && type !== 'mousedown';
  }, [dataRef]);

  // When dismissing before opening, clear the delay timeouts to cancel it
  // from showing.
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    if (!enabled) {
      return;
    }
    function onDismiss() {
      clearTimeout(timeoutRef.current);
      clearTimeout(restTimeoutRef.current);
      blockMouseMoveRef.current = true;
    }
    events.on('dismiss', onDismiss);
    return () => {
      events.off('dismiss', onDismiss);
    };
  }, [enabled, events]);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    if (!enabled || !handleCloseRef.current || !open) {
      return;
    }
    function onLeave() {
      if (isHoverOpen()) {
        onOpenChange(false);
      }
    }
    const html = getDocument(floating).documentElement;
    html.addEventListener('mouseleave', onLeave);
    return () => {
      html.removeEventListener('mouseleave', onLeave);
    };
  }, [floating, open, onOpenChange, enabled, handleCloseRef, dataRef, isHoverOpen]);
  const closeWithDelay = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (runElseBranch) {
    if (runElseBranch === void 0) {
      runElseBranch = true;
    }
    const closeDelay = getDelay(delayRef.current, 'close', pointerTypeRef.current);
    if (closeDelay && !handlerRef.current) {
      clearTimeout(timeoutRef.current);
      timeoutRef.current = setTimeout(() => onOpenChange(false), closeDelay);
    } else if (runElseBranch) {
      clearTimeout(timeoutRef.current);
      onOpenChange(false);
    }
  }, [delayRef, onOpenChange]);
  const cleanupMouseMoveHandler = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {
    unbindMouseMoveRef.current();
    handlerRef.current = undefined;
  }, []);
  const clearPointerEvents = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {
    if (performedPointerEventsMutationRef.current) {
      const body = getDocument(refs.floating.current).body;
      body.style.pointerEvents = '';
      body.removeAttribute(safePolygonIdentifier);
      performedPointerEventsMutationRef.current = false;
    }
  }, [refs]);

  // Registering the mouse events on the reference directly to bypass React's
  // delegation system. If the cursor was on a disabled element and then entered
  // the reference (no gap), `mouseenter` doesn't fire in the delegation system.
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    if (!enabled) {
      return;
    }
    function isClickLikeOpenEvent() {
      return dataRef.current.openEvent ? ['click', 'mousedown'].includes(dataRef.current.openEvent.type) : false;
    }
    function onMouseEnter(event) {
      clearTimeout(timeoutRef.current);
      blockMouseMoveRef.current = false;
      if (mouseOnly && !isMouseLikePointerType(pointerTypeRef.current) || restMs > 0 && getDelay(delayRef.current, 'open') === 0) {
        return;
      }
      dataRef.current.openEvent = event;
      const openDelay = getDelay(delayRef.current, 'open', pointerTypeRef.current);
      if (openDelay) {
        timeoutRef.current = setTimeout(() => {
          onOpenChange(true);
        }, openDelay);
      } else {
        onOpenChange(true);
      }
    }
    function onMouseLeave(event) {
      if (isClickLikeOpenEvent()) {
        return;
      }
      unbindMouseMoveRef.current();
      const doc = getDocument(floating);
      clearTimeout(restTimeoutRef.current);
      if (handleCloseRef.current) {
        clearTimeout(timeoutRef.current);
        handlerRef.current = handleCloseRef.current({
          ...context,
          tree,
          x: event.clientX,
          y: event.clientY,
          onClose() {
            clearPointerEvents();
            cleanupMouseMoveHandler();
            closeWithDelay();
          }
        });
        const handler = handlerRef.current;
        doc.addEventListener('mousemove', handler);
        unbindMouseMoveRef.current = () => {
          doc.removeEventListener('mousemove', handler);
        };
        return;
      }
      closeWithDelay();
    }

    // Ensure the floating element closes after scrolling even if the pointer
    // did not move.
    // https://github.com/floating-ui/floating-ui/discussions/1692
    function onScrollMouseLeave(event) {
      if (isClickLikeOpenEvent()) {
        return;
      }
      handleCloseRef.current == null ? void 0 : handleCloseRef.current({
        ...context,
        tree,
        x: event.clientX,
        y: event.clientY,
        onClose() {
          cleanupMouseMoveHandler();
          closeWithDelay();
        }
      })(event);
    }
    if (isElement(domReference)) {
      const ref = domReference;
      open && ref.addEventListener('mouseleave', onScrollMouseLeave);
      floating == null ? void 0 : floating.addEventListener('mouseleave', onScrollMouseLeave);
      move && ref.addEventListener('mousemove', onMouseEnter, {
        once: true
      });
      ref.addEventListener('mouseenter', onMouseEnter);
      ref.addEventListener('mouseleave', onMouseLeave);
      return () => {
        open && ref.removeEventListener('mouseleave', onScrollMouseLeave);
        floating == null ? void 0 : floating.removeEventListener('mouseleave', onScrollMouseLeave);
        move && ref.removeEventListener('mousemove', onMouseEnter);
        ref.removeEventListener('mouseenter', onMouseEnter);
        ref.removeEventListener('mouseleave', onMouseLeave);
      };
    }
  }, [domReference, floating, enabled, context, mouseOnly, restMs, move, closeWithDelay, cleanupMouseMoveHandler, clearPointerEvents, onOpenChange, open, tree, delayRef, handleCloseRef, dataRef]);

  // Block pointer-events of every element other than the reference and floating
  // while the floating element is open and has a `handleClose` handler. Also
  // handles nested floating elements.
  // https://github.com/floating-ui/floating-ui/issues/1722
  index(() => {
    var _handleCloseRef$curre;
    if (!enabled) {
      return;
    }
    if (open && (_handleCloseRef$curre = handleCloseRef.current) != null && _handleCloseRef$curre.__options.blockPointerEvents && isHoverOpen()) {
      const body = getDocument(floating).body;
      body.setAttribute(safePolygonIdentifier, '');
      body.style.pointerEvents = 'none';
      performedPointerEventsMutationRef.current = true;
      if (isElement(domReference) && floating) {
        var _tree$nodesRef$curren, _tree$nodesRef$curren2;
        const ref = domReference;
        const parentFloating = tree == null ? void 0 : (_tree$nodesRef$curren = tree.nodesRef.current.find(node => node.id === parentId)) == null ? void 0 : (_tree$nodesRef$curren2 = _tree$nodesRef$curren.context) == null ? void 0 : _tree$nodesRef$curren2.elements.floating;
        if (parentFloating) {
          parentFloating.style.pointerEvents = '';
        }
        ref.style.pointerEvents = 'auto';
        floating.style.pointerEvents = 'auto';
        return () => {
          ref.style.pointerEvents = '';
          floating.style.pointerEvents = '';
        };
      }
    }
  }, [enabled, open, parentId, floating, domReference, tree, handleCloseRef, dataRef, isHoverOpen]);
  index(() => {
    if (!open) {
      pointerTypeRef.current = undefined;
      cleanupMouseMoveHandler();
      clearPointerEvents();
    }
  }, [open, cleanupMouseMoveHandler, clearPointerEvents]);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    return () => {
      cleanupMouseMoveHandler();
      clearTimeout(timeoutRef.current);
      clearTimeout(restTimeoutRef.current);
      clearPointerEvents();
    };
  }, [enabled, cleanupMouseMoveHandler, clearPointerEvents]);
  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {
    if (!enabled) {
      return {};
    }
    function setPointerRef(event) {
      pointerTypeRef.current = event.pointerType;
    }
    return {
      reference: {
        onPointerDown: setPointerRef,
        onPointerEnter: setPointerRef,
        onMouseMove() {
          if (open || restMs === 0) {
            return;
          }
          clearTimeout(restTimeoutRef.current);
          restTimeoutRef.current = setTimeout(() => {
            if (!blockMouseMoveRef.current) {
              onOpenChange(true);
            }
          }, restMs);
        }
      },
      floating: {
        onMouseEnter() {
          clearTimeout(timeoutRef.current);
        },
        onMouseLeave() {
          events.emit('dismiss', {
            type: 'mouseLeave',
            data: {
              returnFocus: false
            }
          });
          closeWithDelay(false);
        }
      }
    };
  }, [events, enabled, restMs, open, onOpenChange, closeWithDelay]);
};

const FloatingDelayGroupContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext({
  delay: 0,
  initialDelay: 0,
  timeoutMs: 0,
  currentId: null,
  setCurrentId: () => {},
  setState: () => {},
  isInstantPhase: false
});
const useDelayGroupContext = () => react__WEBPACK_IMPORTED_MODULE_0__.useContext(FloatingDelayGroupContext);

/**
 * Provides context for a group of floating elements that should share a
 * `delay`.
 * @see https://floating-ui.com/docs/FloatingDelayGroup
 */
const FloatingDelayGroup = _ref => {
  let {
    children,
    delay,
    timeoutMs = 0
  } = _ref;
  const [state, setState] = react__WEBPACK_IMPORTED_MODULE_0__.useReducer((prev, next) => ({
    ...prev,
    ...next
  }), {
    delay,
    timeoutMs,
    initialDelay: delay,
    currentId: null,
    isInstantPhase: false
  });
  const initialCurrentIdRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);
  const setCurrentId = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(currentId => {
    setState({
      currentId
    });
  }, []);
  index(() => {
    if (state.currentId) {
      if (initialCurrentIdRef.current === null) {
        initialCurrentIdRef.current = state.currentId;
      } else {
        setState({
          isInstantPhase: true
        });
      }
    } else {
      setState({
        isInstantPhase: false
      });
      initialCurrentIdRef.current = null;
    }
  }, [state.currentId]);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(FloatingDelayGroupContext.Provider, {
    value: react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({
      ...state,
      setState,
      setCurrentId
    }), [state, setState, setCurrentId])
  }, children);
};
const useDelayGroup = (_ref2, _ref3) => {
  let {
    open,
    onOpenChange
  } = _ref2;
  let {
    id
  } = _ref3;
  const {
    currentId,
    setCurrentId,
    initialDelay,
    setState,
    timeoutMs
  } = useDelayGroupContext();
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    if (currentId) {
      setState({
        delay: {
          open: 1,
          close: getDelay(initialDelay, 'close')
        }
      });
      if (currentId !== id) {
        onOpenChange(false);
      }
    }
  }, [id, onOpenChange, setState, currentId, initialDelay]);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    function unset() {
      onOpenChange(false);
      setState({
        delay: initialDelay,
        currentId: null
      });
    }
    if (!open && currentId === id) {
      if (timeoutMs) {
        const timeout = window.setTimeout(unset, timeoutMs);
        return () => {
          clearTimeout(timeout);
        };
      } else {
        unset();
      }
    }
  }, [open, setState, currentId, id, onOpenChange, initialDelay, timeoutMs]);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    if (open) {
      setCurrentId(id);
    }
  }, [open, setCurrentId, id]);
};

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}

/**
 * Find the real active element. Traverses into shadowRoots.
 */
function activeElement$1(doc) {
  let activeElement = doc.activeElement;
  while (((_activeElement = activeElement) == null ? void 0 : (_activeElement$shadow = _activeElement.shadowRoot) == null ? void 0 : _activeElement$shadow.activeElement) != null) {
    var _activeElement, _activeElement$shadow;
    activeElement = activeElement.shadowRoot.activeElement;
  }
  return activeElement;
}

function contains(parent, child) {
  if (!parent || !child) {
    return false;
  }
  const rootNode = child.getRootNode && child.getRootNode();

  // First, attempt with faster native method
  if (parent.contains(child)) {
    return true;
  }
  // then fallback to custom implementation with Shadow DOM support
  else if (rootNode && isShadowRoot(rootNode)) {
    let next = child;
    do {
      if (next && parent === next) {
        return true;
      }
      // @ts-ignore
      next = next.parentNode || next.host;
    } while (next);
  }

  // Give up, the result is false
  return false;
}

let rafId = 0;
function enqueueFocus(el, options) {
  if (options === void 0) {
    options = {};
  }
  const {
    preventScroll = false,
    cancelPrevious = true,
    sync = false
  } = options;
  cancelPrevious && cancelAnimationFrame(rafId);
  const exec = () => el == null ? void 0 : el.focus({
    preventScroll
  });
  if (sync) {
    exec();
  } else {
    rafId = requestAnimationFrame(exec);
  }
}

function getAncestors(nodes, id) {
  var _nodes$find;
  let allAncestors = [];
  let currentParentId = (_nodes$find = nodes.find(node => node.id === id)) == null ? void 0 : _nodes$find.parentId;
  while (currentParentId) {
    const currentNode = nodes.find(node => node.id === currentParentId);
    currentParentId = currentNode == null ? void 0 : currentNode.parentId;
    if (currentNode) {
      allAncestors = allAncestors.concat(currentNode);
    }
  }
  return allAncestors;
}

function getChildren(nodes, id) {
  let allChildren = nodes.filter(node => {
    var _node$context;
    return node.parentId === id && ((_node$context = node.context) == null ? void 0 : _node$context.open);
  }) || [];
  let currentChildren = allChildren;
  while (currentChildren.length) {
    currentChildren = nodes.filter(node => {
      var _currentChildren;
      return (_currentChildren = currentChildren) == null ? void 0 : _currentChildren.some(n => {
        var _node$context2;
        return node.parentId === n.id && ((_node$context2 = node.context) == null ? void 0 : _node$context2.open);
      });
    }) || [];
    allChildren = allChildren.concat(currentChildren);
  }
  return allChildren;
}

function getTarget(event) {
  if ('composedPath' in event) {
    return event.composedPath()[0];
  }

  // TS thinks `event` is of type never as it assumes all browsers support
  // `composedPath()`, but browsers without shadow DOM don't.
  return event.target;
}

const TYPEABLE_SELECTOR = "input:not([type='hidden']):not([disabled])," + "[contenteditable]:not([contenteditable='false']),textarea:not([disabled])";
function isTypeableElement(element) {
  return isHTMLElement(element) && element.matches(TYPEABLE_SELECTOR);
}

function stopEvent(event) {
  event.preventDefault();
  event.stopPropagation();
}

const getTabbableOptions = () => ({
  getShadowRoot: true,
  displayCheck:
  // JSDOM does not support the `tabbable` library. To solve this we can
  // check if `ResizeObserver` is a real function (not polyfilled), which
  // determines if the current environment is JSDOM-like.
  typeof ResizeObserver === 'function' && ResizeObserver.toString().includes('[native code]') ? 'full' : 'none'
});
function getTabbableIn(container, direction) {
  const allTabbable = (0,tabbable__WEBPACK_IMPORTED_MODULE_2__.tabbable)(container, getTabbableOptions());
  if (direction === 'prev') {
    allTabbable.reverse();
  }
  const activeIndex = allTabbable.indexOf(activeElement$1(getDocument(container)));
  const nextTabbableElements = allTabbable.slice(activeIndex + 1);
  return nextTabbableElements[0];
}
function getNextTabbable() {
  return getTabbableIn(document.body, 'next');
}
function getPreviousTabbable() {
  return getTabbableIn(document.body, 'prev');
}
function isOutsideEvent(event, container) {
  const containerElement = container || event.currentTarget;
  const relatedTarget = event.relatedTarget;
  return !relatedTarget || !contains(containerElement, relatedTarget);
}
function disableFocusInside(container) {
  const tabbableElements = (0,tabbable__WEBPACK_IMPORTED_MODULE_2__.tabbable)(container, getTabbableOptions());
  tabbableElements.forEach(element => {
    element.dataset.tabindex = element.getAttribute('tabindex') || '';
    element.setAttribute('tabindex', '-1');
  });
}
function enableFocusInside(container) {
  const elements = container.querySelectorAll('[data-tabindex]');
  elements.forEach(element => {
    const tabindex = element.dataset.tabindex;
    delete element.dataset.tabindex;
    if (tabindex) {
      element.setAttribute('tabindex', tabindex);
    } else {
      element.removeAttribute('tabindex');
    }
  });
}

// `toString()` prevents bundlers from trying to `import { useInsertionEffect } from 'react'`
const useInsertionEffect = react__WEBPACK_IMPORTED_MODULE_0__[/*#__PURE__*/'useInsertionEffect'.toString()];
const useSafeInsertionEffect = useInsertionEffect || (fn => fn());
function useEvent(callback) {
  const ref = react__WEBPACK_IMPORTED_MODULE_0__.useRef(() => {
    if (true) {
      throw new Error('Cannot call an event handler while rendering.');
    }
  });
  useSafeInsertionEffect(() => {
    ref.current = callback;
  });
  return react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function () {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    return ref.current == null ? void 0 : ref.current(...args);
  }, []);
}

// See Diego Haz's Sandbox for making this logic work well on Safari/iOS:
// https://codesandbox.io/s/tabbable-portal-f4tng?file=/src/FocusTrap.tsx

const HIDDEN_STYLES = {
  border: 0,
  clip: 'rect(0 0 0 0)',
  height: '1px',
  margin: '-1px',
  overflow: 'hidden',
  padding: 0,
  position: 'fixed',
  whiteSpace: 'nowrap',
  width: '1px',
  top: 0,
  left: 0
};
let activeElement;
let timeoutId;
function setActiveElementOnTab(event) {
  if (event.key === 'Tab') {
    activeElement = event.target;
    clearTimeout(timeoutId);
  }
}
function isTabFocus(event) {
  const result = activeElement === event.relatedTarget;
  activeElement = event.relatedTarget;
  clearTimeout(timeoutId);
  return result;
}
const FocusGuard = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function FocusGuard(props, ref) {
  const onFocus = useEvent(props.onFocus);
  const [role, setRole] = react__WEBPACK_IMPORTED_MODULE_0__.useState();
  index(() => {
    if (isSafari()) {
      // Unlike other screen readers such as NVDA and JAWS, the virtual cursor
      // on VoiceOver does trigger the onFocus event, so we can use the focus
      // trap element. On Safari, only buttons trigger the onFocus event.
      // NB: "group" role in the Sandbox no longer appears to work, must be a
      // button role.
      setRole('button');
    }
    document.addEventListener('keydown', setActiveElementOnTab);
    return () => {
      document.removeEventListener('keydown', setActiveElementOnTab);
    };
  }, []);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", _extends({}, props, {
    ref: ref,
    tabIndex: 0
    // Role is only for VoiceOver
    ,
    role: role,
    "aria-hidden": role ? undefined : true,
    "data-floating-ui-focus-guard": "",
    style: HIDDEN_STYLES,
    onFocus: event => {
      if (isSafari() && isMac() && !isTabFocus(event)) {
        // On macOS we need to wait a little bit before moving
        // focus again.
        event.persist();
        timeoutId = window.setTimeout(() => {
          onFocus(event);
        }, 50);
      } else {
        onFocus(event);
      }
    }
  }));
});

const PortalContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);
const useFloatingPortalNode = function (_temp) {
  let {
    id,
    enabled = true
  } = _temp === void 0 ? {} : _temp;
  const [portalEl, setPortalEl] = react__WEBPACK_IMPORTED_MODULE_0__.useState(null);
  const uniqueId = useId();
  const portalContext = usePortalContext();
  index(() => {
    if (!enabled) {
      return;
    }
    const rootNode = id ? document.getElementById(id) : null;
    if (rootNode) {
      rootNode.setAttribute('data-floating-ui-portal', '');
      setPortalEl(rootNode);
    } else {
      const newPortalEl = document.createElement('div');
      if (id !== '') {
        newPortalEl.id = id || uniqueId;
      }
      newPortalEl.setAttribute('data-floating-ui-portal', '');
      setPortalEl(newPortalEl);
      const container = (portalContext == null ? void 0 : portalContext.portalNode) || document.body;
      container.appendChild(newPortalEl);
      return () => {
        container.removeChild(newPortalEl);
      };
    }
  }, [id, portalContext, uniqueId, enabled]);
  return portalEl;
};

/**
 * Portals your floating element outside of the main app node.
 * @see https://floating-ui.com/docs/FloatingPortal
 */
const FloatingPortal = _ref => {
  let {
    children,
    id,
    root = null,
    preserveTabOrder = true
  } = _ref;
  const portalNode = useFloatingPortalNode({
    id,
    enabled: !root
  });
  const [focusManagerState, setFocusManagerState] = react__WEBPACK_IMPORTED_MODULE_0__.useState(null);
  const beforeOutsideRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);
  const afterOutsideRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);
  const beforeInsideRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);
  const afterInsideRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);
  const shouldRenderGuards =
  // The FocusManager and therefore floating element are currently open/
  // rendered.
  !!focusManagerState &&
  // Guards are only for non-modal focus management.
  !focusManagerState.modal && !!(root || portalNode) && preserveTabOrder;

  // https://codesandbox.io/s/tabbable-portal-f4tng?file=/src/TabbablePortal.tsx
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    if (!portalNode || !preserveTabOrder || focusManagerState != null && focusManagerState.modal) {
      return;
    }

    // Make sure elements inside the portal element are tabbable only when the
    // portal has already been focused, either by tabbing into a focus trap
    // element outside or using the mouse.
    function onFocus(event) {
      if (portalNode && isOutsideEvent(event)) {
        const focusing = event.type === 'focusin';
        const manageFocus = focusing ? enableFocusInside : disableFocusInside;
        manageFocus(portalNode);
      }
    }
    // Listen to the event on the capture phase so they run before the focus
    // trap elements onFocus prop is called.
    portalNode.addEventListener('focusin', onFocus, true);
    portalNode.addEventListener('focusout', onFocus, true);
    return () => {
      portalNode.removeEventListener('focusin', onFocus, true);
      portalNode.removeEventListener('focusout', onFocus, true);
    };
  }, [portalNode, preserveTabOrder, focusManagerState == null ? void 0 : focusManagerState.modal]);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(PortalContext.Provider, {
    value: react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({
      preserveTabOrder,
      beforeOutsideRef,
      afterOutsideRef,
      beforeInsideRef,
      afterInsideRef,
      portalNode,
      setFocusManagerState
    }), [preserveTabOrder, portalNode])
  }, shouldRenderGuards && portalNode && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(FocusGuard, {
    "data-type": "outside",
    ref: beforeOutsideRef,
    onFocus: event => {
      if (isOutsideEvent(event, portalNode)) {
        var _beforeInsideRef$curr;
        (_beforeInsideRef$curr = beforeInsideRef.current) == null ? void 0 : _beforeInsideRef$curr.focus();
      } else {
        const prevTabbable = getPreviousTabbable() || (focusManagerState == null ? void 0 : focusManagerState.refs.domReference.current);
        prevTabbable == null ? void 0 : prevTabbable.focus();
      }
    }
  }), shouldRenderGuards && portalNode && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", {
    "aria-owns": portalNode.id,
    style: HIDDEN_STYLES
  }), root ? /*#__PURE__*/(0,react_dom__WEBPACK_IMPORTED_MODULE_3__.createPortal)(children, root) : portalNode ? /*#__PURE__*/(0,react_dom__WEBPACK_IMPORTED_MODULE_3__.createPortal)(children, portalNode) : null, shouldRenderGuards && portalNode && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(FocusGuard, {
    "data-type": "outside",
    ref: afterOutsideRef,
    onFocus: event => {
      if (isOutsideEvent(event, portalNode)) {
        var _afterInsideRef$curre;
        (_afterInsideRef$curre = afterInsideRef.current) == null ? void 0 : _afterInsideRef$curre.focus();
      } else {
        const nextTabbable = getNextTabbable() || (focusManagerState == null ? void 0 : focusManagerState.refs.domReference.current);
        nextTabbable == null ? void 0 : nextTabbable.focus();
        (focusManagerState == null ? void 0 : focusManagerState.closeOnFocusOut) && (focusManagerState == null ? void 0 : focusManagerState.onOpenChange(false));
      }
    }
  }));
};
const usePortalContext = () => react__WEBPACK_IMPORTED_MODULE_0__.useContext(PortalContext);

const VisuallyHiddenDismiss = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function VisuallyHiddenDismiss(props, ref) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("button", _extends({}, props, {
    type: "button",
    ref: ref,
    tabIndex: -1,
    style: HIDDEN_STYLES
  }));
});
/**
 * Provides focus management for the floating element.
 * @see https://floating-ui.com/docs/FloatingFocusManager
 */
function FloatingFocusManager(_ref) {
  let {
    context,
    children,
    order = ['content'],
    guards = true,
    initialFocus = 0,
    returnFocus = true,
    modal = true,
    visuallyHiddenDismiss = false,
    closeOnFocusOut = true
  } = _ref;
  const {
    refs,
    nodeId,
    onOpenChange,
    events,
    dataRef,
    elements: {
      domReference,
      floating
    }
  } = context;
  const orderRef = useLatestRef(order);
  const tree = useFloatingTree();
  const portalContext = usePortalContext();
  const [tabbableContentLength, setTabbableContentLength] = react__WEBPACK_IMPORTED_MODULE_0__.useState(null);

  // Controlled by `useListNavigation`.
  const ignoreInitialFocus = typeof initialFocus === 'number' && initialFocus < 0;
  const startDismissButtonRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);
  const endDismissButtonRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);
  const preventReturnFocusRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);
  const previouslyFocusedElementRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);
  const isPointerDownRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);
  const isInsidePortal = portalContext != null;

  // If the reference is a combobox and is typeable (e.g. input/textarea),
  // there are different focus semantics. The guards should not be rendered, but
  // aria-hidden should be applied to all nodes still. Further, the visually
  // hidden dismiss button should only appear at the end of the list, not the
  // start.
  const isTypeableCombobox = domReference && domReference.getAttribute('role') === 'combobox' && isTypeableElement(domReference);
  const getTabbableContent = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (container) {
    if (container === void 0) {
      container = floating;
    }
    return container ? (0,tabbable__WEBPACK_IMPORTED_MODULE_2__.tabbable)(container, getTabbableOptions()) : [];
  }, [floating]);
  const getTabbableElements = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(container => {
    const content = getTabbableContent(container);
    return orderRef.current.map(type => {
      if (domReference && type === 'reference') {
        return domReference;
      }
      if (floating && type === 'floating') {
        return floating;
      }
      return content;
    }).filter(Boolean).flat();
  }, [domReference, floating, orderRef, getTabbableContent]);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    if (!modal) {
      return;
    }
    function onKeyDown(event) {
      if (event.key === 'Tab') {
        // The focus guards have nothing to focus, so we need to stop the event.
        if (getTabbableContent().length === 0 && !isTypeableCombobox) {
          stopEvent(event);
        }
        const els = getTabbableElements();
        const target = getTarget(event);
        if (orderRef.current[0] === 'reference' && target === domReference) {
          stopEvent(event);
          if (event.shiftKey) {
            enqueueFocus(els[els.length - 1]);
          } else {
            enqueueFocus(els[1]);
          }
        }
        if (orderRef.current[1] === 'floating' && target === floating && event.shiftKey) {
          stopEvent(event);
          enqueueFocus(els[0]);
        }
      }
    }
    const doc = getDocument(floating);
    doc.addEventListener('keydown', onKeyDown);
    return () => {
      doc.removeEventListener('keydown', onKeyDown);
    };
  }, [domReference, floating, modal, orderRef, refs, isTypeableCombobox, getTabbableContent, getTabbableElements]);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    if (!closeOnFocusOut) {
      return;
    }

    // In Safari, buttons lose focus when pressing them.
    function handlePointerDown() {
      isPointerDownRef.current = true;
      setTimeout(() => {
        isPointerDownRef.current = false;
      });
    }
    function handleFocusOutside(event) {
      const relatedTarget = event.relatedTarget;
      const movedToUnrelatedNode = !(contains(domReference, relatedTarget) || contains(floating, relatedTarget) || contains(relatedTarget, floating) || contains(portalContext == null ? void 0 : portalContext.portalNode, relatedTarget) || relatedTarget != null && relatedTarget.hasAttribute('data-floating-ui-focus-guard') || tree && (getChildren(tree.nodesRef.current, nodeId).find(node => {
        var _node$context, _node$context2;
        return contains((_node$context = node.context) == null ? void 0 : _node$context.elements.floating, relatedTarget) || contains((_node$context2 = node.context) == null ? void 0 : _node$context2.elements.domReference, relatedTarget);
      }) || getAncestors(tree.nodesRef.current, nodeId).find(node => {
        var _node$context3, _node$context4;
        return ((_node$context3 = node.context) == null ? void 0 : _node$context3.elements.floating) === relatedTarget || ((_node$context4 = node.context) == null ? void 0 : _node$context4.elements.domReference) === relatedTarget;
      })));

      // Focus did not move inside the floating tree, and there are no tabbable
      // portal guards to handle closing.
      if (relatedTarget && movedToUnrelatedNode && !isPointerDownRef.current &&
      // Fix React 18 Strict Mode returnFocus due to double rendering.
      relatedTarget !== previouslyFocusedElementRef.current) {
        preventReturnFocusRef.current = true;
        // On iOS VoiceOver, dismissing the nested submenu will cause the
        // first item of the list to receive focus. Delaying it appears to fix
        // the issue.
        setTimeout(() => onOpenChange(false));
      }
    }
    if (floating && isHTMLElement(domReference)) {
      domReference.addEventListener('focusout', handleFocusOutside);
      domReference.addEventListener('pointerdown', handlePointerDown);
      !modal && floating.addEventListener('focusout', handleFocusOutside);
      return () => {
        domReference.removeEventListener('focusout', handleFocusOutside);
        domReference.removeEventListener('pointerdown', handlePointerDown);
        !modal && floating.removeEventListener('focusout', handleFocusOutside);
      };
    }
  }, [domReference, floating, modal, nodeId, tree, portalContext, onOpenChange, closeOnFocusOut]);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    var _portalContext$portal;
    // Don't hide portals nested within the parent portal.
    const portalNodes = Array.from((portalContext == null ? void 0 : (_portalContext$portal = portalContext.portalNode) == null ? void 0 : _portalContext$portal.querySelectorAll('[data-floating-ui-portal]')) || []);
    function getDismissButtons() {
      return [startDismissButtonRef.current, endDismissButtonRef.current].filter(Boolean);
    }
    if (floating && modal) {
      const insideNodes = [floating, ...portalNodes, ...getDismissButtons()];
      const cleanup = (0,aria_hidden__WEBPACK_IMPORTED_MODULE_1__.hideOthers)(orderRef.current.includes('reference') || isTypeableCombobox ? insideNodes.concat(domReference || []) : insideNodes);
      return () => {
        cleanup();
      };
    }
  }, [domReference, floating, modal, orderRef, portalContext, isTypeableCombobox]);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    if (modal && !guards && floating) {
      const tabIndexValues = [];
      const options = getTabbableOptions();
      const allTabbable = (0,tabbable__WEBPACK_IMPORTED_MODULE_2__.tabbable)(getDocument(floating).body, options);
      const floatingTabbable = getTabbableElements();

      // Exclude all tabbable elements that are part of the order
      const elements = allTabbable.filter(el => !floatingTabbable.includes(el));
      elements.forEach((el, i) => {
        tabIndexValues[i] = el.getAttribute('tabindex');
        el.setAttribute('tabindex', '-1');
      });
      return () => {
        elements.forEach((el, i) => {
          const value = tabIndexValues[i];
          if (value == null) {
            el.removeAttribute('tabindex');
          } else {
            el.setAttribute('tabindex', value);
          }
        });
      };
    }
  }, [floating, modal, guards, getTabbableElements]);
  index(() => {
    if (!floating) return;
    const doc = getDocument(floating);
    let returnFocusValue = returnFocus;
    let preventReturnFocusScroll = false;
    const previouslyFocusedElement = activeElement$1(doc);
    const contextData = dataRef.current;
    previouslyFocusedElementRef.current = previouslyFocusedElement;
    const focusableElements = getTabbableElements(floating);
    const elToFocus = (typeof initialFocus === 'number' ? focusableElements[initialFocus] : initialFocus.current) || floating;

    // If the `useListNavigation` hook is active, always ignore `initialFocus`
    // because it has its own handling of the initial focus.
    !ignoreInitialFocus && enqueueFocus(elToFocus, {
      preventScroll: elToFocus === floating
    });

    // Dismissing via outside press should always ignore `returnFocus` to
    // prevent unwanted scrolling.
    function onDismiss(payload) {
      if (payload.type === 'escapeKey' && refs.domReference.current) {
        previouslyFocusedElementRef.current = refs.domReference.current;
      }
      if (['referencePress', 'escapeKey'].includes(payload.type)) {
        return;
      }
      const returnFocus = payload.data.returnFocus;
      if (typeof returnFocus === 'object') {
        returnFocusValue = true;
        preventReturnFocusScroll = returnFocus.preventScroll;
      } else {
        returnFocusValue = returnFocus;
      }
    }
    events.on('dismiss', onDismiss);
    return () => {
      events.off('dismiss', onDismiss);
      if (contains(floating, activeElement$1(doc)) && refs.domReference.current) {
        previouslyFocusedElementRef.current = refs.domReference.current;
      }
      if (returnFocusValue && isHTMLElement(previouslyFocusedElementRef.current) && !preventReturnFocusRef.current) {
        // `isPointerDownRef.current` to avoid the focus ring from appearing on
        // the reference element when click-toggling it.
        if (!refs.domReference.current || isPointerDownRef.current) {
          enqueueFocus(previouslyFocusedElementRef.current, {
            // When dismissing nested floating elements, by the time the rAF has
            // executed, the menus will all have been unmounted. When they try
            // to get focused, the calls get ignored — leaving the root
            // reference focused as desired.
            cancelPrevious: false,
            preventScroll: preventReturnFocusScroll
          });
        } else {
          var _previouslyFocusedEle;
          // If the user has specified a `keydown` listener that calls
          // setOpen(false) (e.g. selecting an item and closing the floating
          // element), then sync return focus causes `useClick` to immediately
          // re-open it, unless they call `event.preventDefault()` in the
          // `keydown` listener. This helps keep backwards compatibility with
          // older examples.
          contextData.__syncReturnFocus = true;

          // In Safari, `useListNavigation` moves focus sync, so making this
          // sync ensures the initial item remains focused despite this being
          // invoked in Strict Mode due to double-invoked useEffects. This also
          // has the positive side effect of closing a modally focus-managed
          // <Menu> on `Tab` keydown to move naturally to the next focusable
          // element.
          (_previouslyFocusedEle = previouslyFocusedElementRef.current) == null ? void 0 : _previouslyFocusedEle.focus({
            preventScroll: preventReturnFocusScroll
          });
          setTimeout(() => {
            // This isn't an actual property the user should access, make sure
            // it doesn't persist.
            delete contextData.__syncReturnFocus;
          });
        }
      }
    };
  }, [floating, getTabbableElements, initialFocus, returnFocus, dataRef, refs, events, ignoreInitialFocus]);

  // Synchronize the `context` & `modal` value to the FloatingPortal context.
  // It will decide whether or not it needs to render its own guards.
  index(() => {
    if (!portalContext) return;
    portalContext.setFocusManagerState({
      ...context,
      modal,
      closeOnFocusOut
      // Not concerned about the <RT> generic type.
    });

    return () => {
      portalContext.setFocusManagerState(null);
    };
  }, [portalContext, modal, closeOnFocusOut, context]);
  index(() => {
    if (ignoreInitialFocus || !floating) return;
    function setState() {
      setTabbableContentLength(getTabbableContent().length);
    }
    setState();
    if (typeof MutationObserver === 'function') {
      const observer = new MutationObserver(setState);
      observer.observe(floating, {
        childList: true,
        subtree: true
      });
      return () => {
        observer.disconnect();
      };
    }
  }, [floating, getTabbableContent, ignoreInitialFocus, refs]);
  const shouldRenderGuards = guards && (isInsidePortal || modal) && !isTypeableCombobox;
  function renderDismissButton(location) {
    return visuallyHiddenDismiss && modal ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(VisuallyHiddenDismiss, {
      ref: location === 'start' ? startDismissButtonRef : endDismissButtonRef,
      onClick: () => onOpenChange(false)
    }, typeof visuallyHiddenDismiss === 'string' ? visuallyHiddenDismiss : 'Dismiss') : null;
  }
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, shouldRenderGuards && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(FocusGuard, {
    "data-type": "inside",
    ref: portalContext == null ? void 0 : portalContext.beforeInsideRef,
    onFocus: event => {
      if (modal) {
        const els = getTabbableElements();
        enqueueFocus(order[0] === 'reference' ? els[0] : els[els.length - 1]);
      } else if (portalContext != null && portalContext.preserveTabOrder && portalContext.portalNode) {
        preventReturnFocusRef.current = false;
        if (isOutsideEvent(event, portalContext.portalNode)) {
          const nextTabbable = getNextTabbable() || domReference;
          nextTabbable == null ? void 0 : nextTabbable.focus();
        } else {
          var _portalContext$before;
          (_portalContext$before = portalContext.beforeOutsideRef.current) == null ? void 0 : _portalContext$before.focus();
        }
      }
    }
  }), isTypeableCombobox ? null : renderDismissButton('start'), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(children, tabbableContentLength === 0 || order.includes('floating') ? {
    tabIndex: 0
  } : {}), renderDismissButton('end'), shouldRenderGuards && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(FocusGuard, {
    "data-type": "inside",
    ref: portalContext == null ? void 0 : portalContext.afterInsideRef,
    onFocus: event => {
      if (modal) {
        enqueueFocus(getTabbableElements()[0]);
      } else if (portalContext != null && portalContext.preserveTabOrder && portalContext.portalNode) {
        preventReturnFocusRef.current = true;
        if (isOutsideEvent(event, portalContext.portalNode)) {
          const prevTabbable = getPreviousTabbable() || domReference;
          prevTabbable == null ? void 0 : prevTabbable.focus();
        } else {
          var _portalContext$afterO;
          (_portalContext$afterO = portalContext.afterOutsideRef.current) == null ? void 0 : _portalContext$afterO.focus();
        }
      }
    }
  }));
}

const identifier = 'data-floating-ui-scroll-lock';

/**
 * Provides base styling for a fixed overlay element to dim content or block
 * pointer events behind a floating element.
 * It's a regular `<div>`, so it can be styled via any CSS solution you prefer.
 * @see https://floating-ui.com/docs/FloatingOverlay
 */
const FloatingOverlay = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function FloatingOverlay(_ref, ref) {
  let {
    lockScroll = false,
    ...rest
  } = _ref;
  index(() => {
    var _window$visualViewpor, _window$visualViewpor2;
    if (!lockScroll) {
      return;
    }
    const alreadyLocked = document.body.hasAttribute(identifier);
    if (alreadyLocked) {
      return;
    }
    document.body.setAttribute(identifier, '');

    // RTL <body> scrollbar
    const scrollbarX = Math.round(document.documentElement.getBoundingClientRect().left) + document.documentElement.scrollLeft;
    const paddingProp = scrollbarX ? 'paddingLeft' : 'paddingRight';
    const scrollbarWidth = window.innerWidth - document.documentElement.clientWidth;

    // Only iOS doesn't respect `overflow: hidden` on document.body, and this
    // technique has fewer side effects.
    if (!/iP(hone|ad|od)|iOS/.test(getPlatform())) {
      Object.assign(document.body.style, {
        overflow: 'hidden',
        [paddingProp]: scrollbarWidth + "px"
      });
      return () => {
        document.body.removeAttribute(identifier);
        Object.assign(document.body.style, {
          overflow: '',
          [paddingProp]: ''
        });
      };
    }

    // iOS 12 does not support `visualViewport`.
    const offsetLeft = ((_window$visualViewpor = window.visualViewport) == null ? void 0 : _window$visualViewpor.offsetLeft) || 0;
    const offsetTop = ((_window$visualViewpor2 = window.visualViewport) == null ? void 0 : _window$visualViewpor2.offsetTop) || 0;
    const scrollX = window.pageXOffset;
    const scrollY = window.pageYOffset;
    Object.assign(document.body.style, {
      position: 'fixed',
      overflow: 'hidden',
      top: -(scrollY - Math.floor(offsetTop)) + "px",
      left: -(scrollX - Math.floor(offsetLeft)) + "px",
      right: '0',
      [paddingProp]: scrollbarWidth + "px"
    });
    return () => {
      Object.assign(document.body.style, {
        position: '',
        overflow: '',
        top: '',
        left: '',
        right: '',
        [paddingProp]: ''
      });
      document.body.removeAttribute(identifier);
      window.scrollTo(scrollX, scrollY);
    };
  }, [lockScroll]);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", _extends({
    ref: ref
  }, rest, {
    style: {
      position: 'fixed',
      overflow: 'auto',
      top: 0,
      right: 0,
      bottom: 0,
      left: 0,
      ...rest.style
    }
  }));
});

function isButtonTarget(event) {
  return isHTMLElement(event.target) && event.target.tagName === 'BUTTON';
}
function isSpaceIgnored(element) {
  return isTypeableElement(element);
}
/**
 * Adds click event listeners that change the open state.
 * @see https://floating-ui.com/docs/useClick
 */
const useClick = function (_ref, _temp) {
  let {
    open,
    onOpenChange,
    dataRef,
    elements: {
      domReference
    }
  } = _ref;
  let {
    enabled = true,
    event: eventOption = 'click',
    toggle = true,
    ignoreMouse = false,
    keyboardHandlers = true
  } = _temp === void 0 ? {} : _temp;
  const pointerTypeRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();
  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {
    if (!enabled) {
      return {};
    }
    return {
      reference: {
        onPointerDown(event) {
          pointerTypeRef.current = event.pointerType;
        },
        onMouseDown(event) {
          // Ignore all buttons except for the "main" button.
          // https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button
          if (event.button !== 0) {
            return;
          }
          if (isMouseLikePointerType(pointerTypeRef.current, true) && ignoreMouse) {
            return;
          }
          if (eventOption === 'click') {
            return;
          }
          if (open) {
            if (toggle && (dataRef.current.openEvent ? dataRef.current.openEvent.type === 'mousedown' : true)) {
              onOpenChange(false);
            }
          } else {
            // Prevent stealing focus from the floating element
            event.preventDefault();
            onOpenChange(true);
          }
          dataRef.current.openEvent = event.nativeEvent;
        },
        onClick(event) {
          if (dataRef.current.__syncReturnFocus) {
            return;
          }
          if (eventOption === 'mousedown' && pointerTypeRef.current) {
            pointerTypeRef.current = undefined;
            return;
          }
          if (isMouseLikePointerType(pointerTypeRef.current, true) && ignoreMouse) {
            return;
          }
          if (open) {
            if (toggle && (dataRef.current.openEvent ? dataRef.current.openEvent.type === 'click' : true)) {
              onOpenChange(false);
            }
          } else {
            onOpenChange(true);
          }
          dataRef.current.openEvent = event.nativeEvent;
        },
        onKeyDown(event) {
          pointerTypeRef.current = undefined;
          if (!keyboardHandlers) {
            return;
          }
          if (isButtonTarget(event)) {
            return;
          }
          if (event.key === ' ' && !isSpaceIgnored(domReference)) {
            // Prevent scrolling
            event.preventDefault();
          }
          if (event.key === 'Enter') {
            if (open) {
              if (toggle) {
                onOpenChange(false);
              }
            } else {
              onOpenChange(true);
            }
          }
        },
        onKeyUp(event) {
          if (!keyboardHandlers) {
            return;
          }
          if (isButtonTarget(event) || isSpaceIgnored(domReference)) {
            return;
          }
          if (event.key === ' ') {
            if (open) {
              if (toggle) {
                onOpenChange(false);
              }
            } else {
              onOpenChange(true);
            }
          }
        }
      }
    };
  }, [enabled, dataRef, eventOption, ignoreMouse, keyboardHandlers, domReference, toggle, open, onOpenChange]);
};

/**
 * Check whether the event.target is within the provided node. Uses event.composedPath if available for custom element support.
 *
 * @param event The event whose target/composedPath to check
 * @param node The node to check against
 * @returns Whether the event.target/composedPath is within the node.
 */
function isEventTargetWithin(event, node) {
  if (node == null) {
    return false;
  }
  if ('composedPath' in event) {
    return event.composedPath().includes(node);
  }

  // TS thinks `event` is of type never as it assumes all browsers support composedPath, but browsers without shadow dom don't
  const e = event;
  return e.target != null && node.contains(e.target);
}

const bubbleHandlerKeys = {
  pointerdown: 'onPointerDown',
  mousedown: 'onMouseDown',
  click: 'onClick'
};
const captureHandlerKeys = {
  pointerdown: 'onPointerDownCapture',
  mousedown: 'onMouseDownCapture',
  click: 'onClickCapture'
};
const normalizeBubblesProp = function (bubbles) {
  var _bubbles$escapeKey, _bubbles$outsidePress;
  if (bubbles === void 0) {
    bubbles = true;
  }
  return {
    escapeKeyBubbles: typeof bubbles === 'boolean' ? bubbles : (_bubbles$escapeKey = bubbles.escapeKey) != null ? _bubbles$escapeKey : true,
    outsidePressBubbles: typeof bubbles === 'boolean' ? bubbles : (_bubbles$outsidePress = bubbles.outsidePress) != null ? _bubbles$outsidePress : true
  };
};
/**
 * Adds listeners that dismiss (close) the floating element.
 * @see https://floating-ui.com/docs/useDismiss
 */
const useDismiss = function (_ref, _temp) {
  let {
    open,
    onOpenChange,
    events,
    nodeId,
    elements: {
      reference,
      domReference,
      floating
    },
    dataRef
  } = _ref;
  let {
    enabled = true,
    escapeKey = true,
    outsidePress: unstable_outsidePress = true,
    outsidePressEvent = 'pointerdown',
    referencePress = false,
    referencePressEvent = 'pointerdown',
    ancestorScroll = false,
    bubbles = true
  } = _temp === void 0 ? {} : _temp;
  const tree = useFloatingTree();
  const nested = useFloatingParentNodeId() != null;
  const outsidePressFn = useEvent(typeof unstable_outsidePress === 'function' ? unstable_outsidePress : () => false);
  const outsidePress = typeof unstable_outsidePress === 'function' ? outsidePressFn : unstable_outsidePress;
  const insideReactTreeRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);
  const {
    escapeKeyBubbles,
    outsidePressBubbles
  } = normalizeBubblesProp(bubbles);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    if (!open || !enabled) {
      return;
    }
    dataRef.current.__escapeKeyBubbles = escapeKeyBubbles;
    dataRef.current.__outsidePressBubbles = outsidePressBubbles;
    function onKeyDown(event) {
      if (event.key === 'Escape') {
        const children = tree ? getChildren(tree.nodesRef.current, nodeId) : [];
        if (children.length > 0) {
          let shouldDismiss = true;
          children.forEach(child => {
            var _child$context;
            if ((_child$context = child.context) != null && _child$context.open && !child.context.dataRef.current.__escapeKeyBubbles) {
              shouldDismiss = false;
              return;
            }
          });
          if (!shouldDismiss) {
            return;
          }
        }
        events.emit('dismiss', {
          type: 'escapeKey',
          data: {
            returnFocus: {
              preventScroll: false
            }
          }
        });
        onOpenChange(false);
      }
    }
    function onOutsidePress(event) {
      // Given developers can stop the propagation of the synthetic event,
      // we can only be confident with a positive value.
      const insideReactTree = insideReactTreeRef.current;
      insideReactTreeRef.current = false;
      if (insideReactTree) {
        return;
      }
      if (typeof outsidePress === 'function' && !outsidePress(event)) {
        return;
      }
      const target = getTarget(event);

      // Check if the click occurred on the scrollbar
      if (isHTMLElement(target) && floating) {
        const win = floating.ownerDocument.defaultView || window;
        const canScrollX = target.scrollWidth > target.clientWidth;
        const canScrollY = target.scrollHeight > target.clientHeight;
        let xCond = canScrollY && event.offsetX > target.clientWidth;

        // In some browsers it is possible to change the <body> (or window)
        // scrollbar to the left side, but is very rare and is difficult to
        // check for. Plus, for modal dialogs with backdrops, it is more
        // important that the backdrop is checked but not so much the window.
        if (canScrollY) {
          const isRTL = win.getComputedStyle(target).direction === 'rtl';
          if (isRTL) {
            xCond = event.offsetX <= target.offsetWidth - target.clientWidth;
          }
        }
        if (xCond || canScrollX && event.offsetY > target.clientHeight) {
          return;
        }
      }
      const targetIsInsideChildren = tree && getChildren(tree.nodesRef.current, nodeId).some(node => {
        var _node$context;
        return isEventTargetWithin(event, (_node$context = node.context) == null ? void 0 : _node$context.elements.floating);
      });
      if (isEventTargetWithin(event, floating) || isEventTargetWithin(event, domReference) || targetIsInsideChildren) {
        return;
      }
      const children = tree ? getChildren(tree.nodesRef.current, nodeId) : [];
      if (children.length > 0) {
        let shouldDismiss = true;
        children.forEach(child => {
          var _child$context2;
          if ((_child$context2 = child.context) != null && _child$context2.open && !child.context.dataRef.current.__outsidePressBubbles) {
            shouldDismiss = false;
            return;
          }
        });
        if (!shouldDismiss) {
          return;
        }
      }
      events.emit('dismiss', {
        type: 'outsidePress',
        data: {
          returnFocus: nested ? {
            preventScroll: true
          } : isVirtualClick(event) || isVirtualPointerEvent(event)
        }
      });
      onOpenChange(false);
    }
    function onScroll() {
      onOpenChange(false);
    }
    const doc = getDocument(floating);
    escapeKey && doc.addEventListener('keydown', onKeyDown);
    outsidePress && doc.addEventListener(outsidePressEvent, onOutsidePress);
    let ancestors = [];
    if (ancestorScroll) {
      if (isElement(domReference)) {
        ancestors = (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_5__.getOverflowAncestors)(domReference);
      }
      if (isElement(floating)) {
        ancestors = ancestors.concat((0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_5__.getOverflowAncestors)(floating));
      }
      if (!isElement(reference) && reference && reference.contextElement) {
        ancestors = ancestors.concat((0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_5__.getOverflowAncestors)(reference.contextElement));
      }
    }

    // Ignore the visual viewport for scrolling dismissal (allow pinch-zoom)
    ancestors = ancestors.filter(ancestor => {
      var _doc$defaultView;
      return ancestor !== ((_doc$defaultView = doc.defaultView) == null ? void 0 : _doc$defaultView.visualViewport);
    });
    ancestors.forEach(ancestor => {
      ancestor.addEventListener('scroll', onScroll, {
        passive: true
      });
    });
    return () => {
      escapeKey && doc.removeEventListener('keydown', onKeyDown);
      outsidePress && doc.removeEventListener(outsidePressEvent, onOutsidePress);
      ancestors.forEach(ancestor => {
        ancestor.removeEventListener('scroll', onScroll);
      });
    };
  }, [dataRef, floating, domReference, reference, escapeKey, outsidePress, outsidePressEvent, events, tree, nodeId, open, onOpenChange, ancestorScroll, enabled, escapeKeyBubbles, outsidePressBubbles, nested]);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    insideReactTreeRef.current = false;
  }, [outsidePress, outsidePressEvent]);
  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {
    if (!enabled) {
      return {};
    }
    return {
      reference: {
        [bubbleHandlerKeys[referencePressEvent]]: () => {
          if (referencePress) {
            events.emit('dismiss', {
              type: 'referencePress',
              data: {
                returnFocus: false
              }
            });
            onOpenChange(false);
          }
        }
      },
      floating: {
        [captureHandlerKeys[outsidePressEvent]]: () => {
          insideReactTreeRef.current = true;
        }
      }
    };
  }, [enabled, events, referencePress, outsidePressEvent, referencePressEvent, onOpenChange]);
};

/**
 * Adds focus event listeners that change the open state, like CSS :focus.
 * @see https://floating-ui.com/docs/useFocus
 */
const useFocus = function (_ref, _temp) {
  let {
    open,
    onOpenChange,
    dataRef,
    events,
    refs,
    elements: {
      floating,
      domReference
    }
  } = _ref;
  let {
    enabled = true,
    keyboardOnly = true
  } = _temp === void 0 ? {} : _temp;
  const pointerTypeRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef('');
  const blockFocusRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);
  const timeoutRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    if (!enabled) {
      return;
    }
    const doc = getDocument(floating);
    const win = doc.defaultView || window;

    // If the reference was focused and the user left the tab/window, and the
    // floating element was not open, the focus should be blocked when they
    // return to the tab/window.
    function onBlur() {
      if (!open && isHTMLElement(domReference) && domReference === activeElement$1(getDocument(domReference))) {
        blockFocusRef.current = true;
      }
    }
    win.addEventListener('blur', onBlur);
    return () => {
      win.removeEventListener('blur', onBlur);
    };
  }, [floating, domReference, open, enabled]);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    if (!enabled) {
      return;
    }
    function onDismiss(payload) {
      if (payload.type === 'referencePress' || payload.type === 'escapeKey') {
        blockFocusRef.current = true;
      }
    }
    events.on('dismiss', onDismiss);
    return () => {
      events.off('dismiss', onDismiss);
    };
  }, [events, enabled]);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    return () => {
      clearTimeout(timeoutRef.current);
    };
  }, []);
  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {
    if (!enabled) {
      return {};
    }
    return {
      reference: {
        onPointerDown(_ref2) {
          let {
            pointerType
          } = _ref2;
          pointerTypeRef.current = pointerType;
          blockFocusRef.current = !!(pointerType && keyboardOnly);
        },
        onMouseLeave() {
          blockFocusRef.current = false;
        },
        onFocus(event) {
          var _dataRef$current$open;
          if (blockFocusRef.current) {
            return;
          }

          // Dismiss with click should ignore the subsequent `focus` trigger,
          // but only if the click originated inside the reference element.
          if (event.type === 'focus' && ((_dataRef$current$open = dataRef.current.openEvent) == null ? void 0 : _dataRef$current$open.type) === 'mousedown' && dataRef.current.openEvent && isEventTargetWithin(dataRef.current.openEvent, domReference)) {
            return;
          }
          dataRef.current.openEvent = event.nativeEvent;
          onOpenChange(true);
        },
        onBlur(event) {
          blockFocusRef.current = false;
          const relatedTarget = event.relatedTarget;

          // Hit the non-modal focus management portal guard. Focus will be
          // moved into the floating element immediately after.
          const movedToFocusGuard = isElement(relatedTarget) && relatedTarget.hasAttribute('data-floating-ui-focus-guard') && relatedTarget.getAttribute('data-type') === 'outside';

          // Wait for the window blur listener to fire.
          timeoutRef.current = setTimeout(() => {
            // When focusing the reference element (e.g. regular click), then
            // clicking into the floating element, prevent it from hiding.
            // Note: it must be focusable, e.g. `tabindex="-1"`.
            if (contains(refs.floating.current, relatedTarget) || contains(domReference, relatedTarget) || movedToFocusGuard) {
              return;
            }
            onOpenChange(false);
          });
        }
      }
    };
  }, [enabled, keyboardOnly, domReference, refs, dataRef, onOpenChange]);
};

let isPreventScrollSupported = false;
const ARROW_UP = 'ArrowUp';
const ARROW_DOWN = 'ArrowDown';
const ARROW_LEFT = 'ArrowLeft';
const ARROW_RIGHT = 'ArrowRight';
function isDifferentRow(index, cols, prevRow) {
  return Math.floor(index / cols) !== prevRow;
}
function isIndexOutOfBounds(listRef, index) {
  return index < 0 || index >= listRef.current.length;
}
function findNonDisabledIndex(listRef, _temp) {
  let {
    startingIndex = -1,
    decrement = false,
    disabledIndices,
    amount = 1
  } = _temp === void 0 ? {} : _temp;
  const list = listRef.current;
  let index = startingIndex;
  do {
    var _list$index, _list$index2;
    index = index + (decrement ? -amount : amount);
  } while (index >= 0 && index <= list.length - 1 && (disabledIndices ? disabledIndices.includes(index) : list[index] == null || ((_list$index = list[index]) == null ? void 0 : _list$index.hasAttribute('disabled')) || ((_list$index2 = list[index]) == null ? void 0 : _list$index2.getAttribute('aria-disabled')) === 'true'));
  return index;
}
function doSwitch(orientation, vertical, horizontal) {
  switch (orientation) {
    case 'vertical':
      return vertical;
    case 'horizontal':
      return horizontal;
    default:
      return vertical || horizontal;
  }
}
function isMainOrientationKey(key, orientation) {
  const vertical = key === ARROW_UP || key === ARROW_DOWN;
  const horizontal = key === ARROW_LEFT || key === ARROW_RIGHT;
  return doSwitch(orientation, vertical, horizontal);
}
function isMainOrientationToEndKey(key, orientation, rtl) {
  const vertical = key === ARROW_DOWN;
  const horizontal = rtl ? key === ARROW_LEFT : key === ARROW_RIGHT;
  return doSwitch(orientation, vertical, horizontal) || key === 'Enter' || key == ' ' || key === '';
}
function isCrossOrientationOpenKey(key, orientation, rtl) {
  const vertical = rtl ? key === ARROW_LEFT : key === ARROW_RIGHT;
  const horizontal = key === ARROW_DOWN;
  return doSwitch(orientation, vertical, horizontal);
}
function isCrossOrientationCloseKey(key, orientation, rtl) {
  const vertical = rtl ? key === ARROW_RIGHT : key === ARROW_LEFT;
  const horizontal = key === ARROW_UP;
  return doSwitch(orientation, vertical, horizontal);
}
function getMinIndex(listRef, disabledIndices) {
  return findNonDisabledIndex(listRef, {
    disabledIndices
  });
}
function getMaxIndex(listRef, disabledIndices) {
  return findNonDisabledIndex(listRef, {
    decrement: true,
    startingIndex: listRef.current.length,
    disabledIndices
  });
}
/**
 * Adds focus-managed indexed navigation via arrow keys to a list of items
 * within the floating element.
 * @see https://floating-ui.com/docs/useListNavigation
 */
const useListNavigation = function (_ref, _temp2) {
  let {
    open,
    onOpenChange,
    refs,
    elements: {
      domReference
    }
  } = _ref;
  let {
    listRef,
    activeIndex,
    onNavigate: unstable_onNavigate = () => {},
    enabled = true,
    selectedIndex = null,
    allowEscape = false,
    loop = false,
    nested = false,
    rtl = false,
    virtual = false,
    focusItemOnOpen = 'auto',
    focusItemOnHover = true,
    openOnArrowKeyDown = true,
    disabledIndices = undefined,
    orientation = 'vertical',
    cols = 1,
    scrollItemIntoView = true
  } = _temp2 === void 0 ? {
    listRef: {
      current: []
    },
    activeIndex: null,
    onNavigate: () => {}
  } : _temp2;
  if (true) {
    if (allowEscape) {
      if (!loop) {
        console.warn(['Floating UI: `useListNavigation` looping must be enabled to allow', 'escaping.'].join(' '));
      }
      if (!virtual) {
        console.warn(['Floating UI: `useListNavigation` must be virtual to allow', 'escaping.'].join(' '));
      }
    }
    if (orientation === 'vertical' && cols > 1) {
      console.warn(['Floating UI: In grid list navigation mode (`cols` > 1), the', '`orientation` should be either "horizontal" or "both".'].join(' '));
    }
  }
  const parentId = useFloatingParentNodeId();
  const tree = useFloatingTree();
  const onNavigate = useEvent(unstable_onNavigate);
  const focusItemOnOpenRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(focusItemOnOpen);
  const indexRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(selectedIndex != null ? selectedIndex : -1);
  const keyRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);
  const isPointerModalityRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(true);
  const previousOnNavigateRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(onNavigate);
  const previousOpenRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(open);
  const forceSyncFocus = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);
  const forceScrollIntoViewRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);
  const disabledIndicesRef = useLatestRef(disabledIndices);
  const latestOpenRef = useLatestRef(open);
  const scrollItemIntoViewRef = useLatestRef(scrollItemIntoView);
  const [activeId, setActiveId] = react__WEBPACK_IMPORTED_MODULE_0__.useState();
  const focusItem = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (listRef, indexRef, forceScrollIntoView) {
    if (forceScrollIntoView === void 0) {
      forceScrollIntoView = false;
    }
    const item = listRef.current[indexRef.current];
    if (virtual) {
      setActiveId(item == null ? void 0 : item.id);
    } else {
      enqueueFocus(item, {
        preventScroll: true,
        // Mac Safari does not move the virtual cursor unless the focus call
        // is sync. However, for the very first focus call, we need to wait
        // for the position to be ready in order to prevent unwanted
        // scrolling. This means the virtual cursor will not move to the first
        // item when first opening the floating element, but will on
        // subsequent calls. `preventScroll` is supported in modern Safari,
        // so we can use that instead.
        // iOS Safari must be async or the first item will not be focused.
        sync: isMac() && isSafari() ? isPreventScrollSupported || forceSyncFocus.current : false
      });
    }
    requestAnimationFrame(() => {
      const scrollIntoViewOptions = scrollItemIntoViewRef.current;
      const shouldScrollIntoView = scrollIntoViewOptions && item && (forceScrollIntoView || !isPointerModalityRef.current);
      if (shouldScrollIntoView) {
        // JSDOM doesn't support `.scrollIntoView()` but it's widely supported
        // by all browsers.
        item.scrollIntoView == null ? void 0 : item.scrollIntoView(typeof scrollIntoViewOptions === 'boolean' ? {
          block: 'nearest',
          inline: 'nearest'
        } : scrollIntoViewOptions);
      }
    });
  }, [virtual, scrollItemIntoViewRef]);
  index(() => {
    document.createElement('div').focus({
      get preventScroll() {
        isPreventScrollSupported = true;
        return false;
      }
    });
  }, []);

  // Sync `selectedIndex` to be the `activeIndex` upon opening the floating
  // element. Also, reset `activeIndex` upon closing the floating element.
  index(() => {
    if (!enabled) {
      return;
    }
    if (open) {
      if (focusItemOnOpenRef.current && selectedIndex != null) {
        // Regardless of the pointer modality, we want to ensure the selected
        // item comes into view when the floating element is opened.
        forceScrollIntoViewRef.current = true;
        onNavigate(selectedIndex);
      }
    } else if (previousOpenRef.current) {
      // Since the user can specify `onNavigate` conditionally
      // (onNavigate: open ? setActiveIndex : setSelectedIndex),
      // we store and call the previous function.
      indexRef.current = -1;
      previousOnNavigateRef.current(null);
    }
  }, [enabled, open, selectedIndex, onNavigate]);

  // Sync `activeIndex` to be the focused item while the floating element is
  // open.
  index(() => {
    if (!enabled) {
      return;
    }
    if (open) {
      if (activeIndex == null) {
        forceSyncFocus.current = false;
        if (selectedIndex != null) {
          return;
        }

        // Reset while the floating element was open (e.g. the list changed).
        if (previousOpenRef.current) {
          indexRef.current = -1;
          focusItem(listRef, indexRef);
        }

        // Initial sync.
        if (!previousOpenRef.current && focusItemOnOpenRef.current && (keyRef.current != null || focusItemOnOpenRef.current === true && keyRef.current == null)) {
          indexRef.current = keyRef.current == null || isMainOrientationToEndKey(keyRef.current, orientation, rtl) || nested ? getMinIndex(listRef, disabledIndicesRef.current) : getMaxIndex(listRef, disabledIndicesRef.current);
          onNavigate(indexRef.current);
        }
      } else if (!isIndexOutOfBounds(listRef, activeIndex)) {
        indexRef.current = activeIndex;
        focusItem(listRef, indexRef, forceScrollIntoViewRef.current);
        forceScrollIntoViewRef.current = false;
      }
    }
  }, [enabled, open, activeIndex, selectedIndex, nested, listRef, orientation, rtl, onNavigate, focusItem, disabledIndicesRef]);

  // Ensure the parent floating element has focus when a nested child closes
  // to allow arrow key navigation to work after the pointer leaves the child.
  index(() => {
    if (!enabled) {
      return;
    }
    if (previousOpenRef.current && !open) {
      var _tree$nodesRef$curren, _tree$nodesRef$curren2;
      const parentFloating = tree == null ? void 0 : (_tree$nodesRef$curren = tree.nodesRef.current.find(node => node.id === parentId)) == null ? void 0 : (_tree$nodesRef$curren2 = _tree$nodesRef$curren.context) == null ? void 0 : _tree$nodesRef$curren2.elements.floating;
      if (parentFloating && !contains(parentFloating, activeElement$1(getDocument(parentFloating)))) {
        parentFloating.focus({
          preventScroll: true
        });
      }
    }
  }, [enabled, open, tree, parentId]);
  index(() => {
    keyRef.current = null;
    previousOnNavigateRef.current = onNavigate;
    previousOpenRef.current = open;
  });
  const hasActiveIndex = activeIndex != null;
  const item = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {
    function syncCurrentTarget(currentTarget) {
      if (!open) return;
      const index = listRef.current.indexOf(currentTarget);
      if (index !== -1) {
        onNavigate(index);
      }
    }
    const props = {
      onFocus(_ref2) {
        let {
          currentTarget
        } = _ref2;
        syncCurrentTarget(currentTarget);
      },
      onClick: _ref3 => {
        let {
          currentTarget
        } = _ref3;
        return currentTarget.focus({
          preventScroll: true
        });
      },
      // Safari
      ...(focusItemOnHover && {
        onMouseMove(_ref4) {
          let {
            currentTarget
          } = _ref4;
          syncCurrentTarget(currentTarget);
        },
        onPointerLeave() {
          if (!isPointerModalityRef.current) {
            return;
          }
          indexRef.current = -1;
          focusItem(listRef, indexRef);

          // Virtual cursor with VoiceOver on iOS needs this to be flushed
          // synchronously or there is a glitch that prevents nested
          // submenus from being accessible.
          (0,react_dom__WEBPACK_IMPORTED_MODULE_3__.flushSync)(() => onNavigate(null));
          if (!virtual) {
            var _refs$floating$curren;
            // This also needs to be sync to prevent fast mouse movements
            // from leaving behind a stale active item when landing on a
            // disabled button item.
            (_refs$floating$curren = refs.floating.current) == null ? void 0 : _refs$floating$curren.focus({
              preventScroll: true
            });
          }
        }
      })
    };
    return props;
  }, [open, refs, focusItem, focusItemOnHover, listRef, onNavigate, virtual]);
  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {
    if (!enabled) {
      return {};
    }
    const disabledIndices = disabledIndicesRef.current;
    function onKeyDown(event) {
      isPointerModalityRef.current = false;
      forceSyncFocus.current = true;

      // If the floating element is animating out, ignore navigation. Otherwise,
      // the `activeIndex` gets set to 0 despite not being open so the next time
      // the user ArrowDowns, the first item won't be focused.
      if (!latestOpenRef.current && event.currentTarget === refs.floating.current) {
        return;
      }
      if (nested && isCrossOrientationCloseKey(event.key, orientation, rtl)) {
        stopEvent(event);
        onOpenChange(false);
        if (isHTMLElement(domReference)) {
          domReference.focus();
        }
        return;
      }
      const currentIndex = indexRef.current;
      const minIndex = getMinIndex(listRef, disabledIndices);
      const maxIndex = getMaxIndex(listRef, disabledIndices);
      if (event.key === 'Home') {
        indexRef.current = minIndex;
        onNavigate(indexRef.current);
      }
      if (event.key === 'End') {
        indexRef.current = maxIndex;
        onNavigate(indexRef.current);
      }

      // Grid navigation.
      if (cols > 1) {
        const prevIndex = indexRef.current;
        if (event.key === ARROW_UP) {
          stopEvent(event);
          if (prevIndex === -1) {
            indexRef.current = maxIndex;
          } else {
            indexRef.current = findNonDisabledIndex(listRef, {
              startingIndex: prevIndex,
              amount: cols,
              decrement: true,
              disabledIndices
            });
            if (loop && (prevIndex - cols < minIndex || indexRef.current < 0)) {
              const col = prevIndex % cols;
              const maxCol = maxIndex % cols;
              const offset = maxIndex - (maxCol - col);
              if (maxCol === col) {
                indexRef.current = maxIndex;
              } else {
                indexRef.current = maxCol > col ? offset : offset - cols;
              }
            }
          }
          if (isIndexOutOfBounds(listRef, indexRef.current)) {
            indexRef.current = prevIndex;
          }
          onNavigate(indexRef.current);
        }
        if (event.key === ARROW_DOWN) {
          stopEvent(event);
          if (prevIndex === -1) {
            indexRef.current = minIndex;
          } else {
            indexRef.current = findNonDisabledIndex(listRef, {
              startingIndex: prevIndex,
              amount: cols,
              disabledIndices
            });
            if (loop && prevIndex + cols > maxIndex) {
              indexRef.current = findNonDisabledIndex(listRef, {
                startingIndex: prevIndex % cols - cols,
                amount: cols,
                disabledIndices
              });
            }
          }
          if (isIndexOutOfBounds(listRef, indexRef.current)) {
            indexRef.current = prevIndex;
          }
          onNavigate(indexRef.current);
        }

        // Remains on the same row/column.
        if (orientation === 'both') {
          const prevRow = Math.floor(prevIndex / cols);
          if (event.key === ARROW_RIGHT) {
            stopEvent(event);
            if (prevIndex % cols !== cols - 1) {
              indexRef.current = findNonDisabledIndex(listRef, {
                startingIndex: prevIndex,
                disabledIndices
              });
              if (loop && isDifferentRow(indexRef.current, cols, prevRow)) {
                indexRef.current = findNonDisabledIndex(listRef, {
                  startingIndex: prevIndex - prevIndex % cols - 1,
                  disabledIndices
                });
              }
            } else if (loop) {
              indexRef.current = findNonDisabledIndex(listRef, {
                startingIndex: prevIndex - prevIndex % cols - 1,
                disabledIndices
              });
            }
            if (isDifferentRow(indexRef.current, cols, prevRow)) {
              indexRef.current = prevIndex;
            }
          }
          if (event.key === ARROW_LEFT) {
            stopEvent(event);
            if (prevIndex % cols !== 0) {
              indexRef.current = findNonDisabledIndex(listRef, {
                startingIndex: prevIndex,
                disabledIndices,
                decrement: true
              });
              if (loop && isDifferentRow(indexRef.current, cols, prevRow)) {
                indexRef.current = findNonDisabledIndex(listRef, {
                  startingIndex: prevIndex + (cols - prevIndex % cols),
                  decrement: true,
                  disabledIndices
                });
              }
            } else if (loop) {
              indexRef.current = findNonDisabledIndex(listRef, {
                startingIndex: prevIndex + (cols - prevIndex % cols),
                decrement: true,
                disabledIndices
              });
            }
            if (isDifferentRow(indexRef.current, cols, prevRow)) {
              indexRef.current = prevIndex;
            }
          }
          const lastRow = Math.floor(maxIndex / cols) === prevRow;
          if (isIndexOutOfBounds(listRef, indexRef.current)) {
            if (loop && lastRow) {
              indexRef.current = event.key === ARROW_LEFT ? maxIndex : findNonDisabledIndex(listRef, {
                startingIndex: prevIndex - prevIndex % cols - 1,
                disabledIndices
              });
            } else {
              indexRef.current = prevIndex;
            }
          }
          onNavigate(indexRef.current);
          return;
        }
      }
      if (isMainOrientationKey(event.key, orientation)) {
        stopEvent(event);

        // Reset the index if no item is focused.
        if (open && !virtual && activeElement$1(event.currentTarget.ownerDocument) === event.currentTarget) {
          indexRef.current = isMainOrientationToEndKey(event.key, orientation, rtl) ? minIndex : maxIndex;
          onNavigate(indexRef.current);
          return;
        }
        if (isMainOrientationToEndKey(event.key, orientation, rtl)) {
          if (loop) {
            indexRef.current = currentIndex >= maxIndex ? allowEscape && currentIndex !== listRef.current.length ? -1 : minIndex : findNonDisabledIndex(listRef, {
              startingIndex: currentIndex,
              disabledIndices
            });
          } else {
            indexRef.current = Math.min(maxIndex, findNonDisabledIndex(listRef, {
              startingIndex: currentIndex,
              disabledIndices
            }));
          }
        } else {
          if (loop) {
            indexRef.current = currentIndex <= minIndex ? allowEscape && currentIndex !== -1 ? listRef.current.length : maxIndex : findNonDisabledIndex(listRef, {
              startingIndex: currentIndex,
              decrement: true,
              disabledIndices
            });
          } else {
            indexRef.current = Math.max(minIndex, findNonDisabledIndex(listRef, {
              startingIndex: currentIndex,
              decrement: true,
              disabledIndices
            }));
          }
        }
        if (isIndexOutOfBounds(listRef, indexRef.current)) {
          onNavigate(null);
        } else {
          onNavigate(indexRef.current);
        }
      }
    }
    function checkVirtualMouse(event) {
      if (focusItemOnOpen === 'auto' && isVirtualClick(event.nativeEvent)) {
        focusItemOnOpenRef.current = true;
      }
    }
    function checkVirtualPointer(event) {
      // `pointerdown` fires first, reset the state then perform the checks.
      focusItemOnOpenRef.current = focusItemOnOpen;
      if (focusItemOnOpen === 'auto' && isVirtualPointerEvent(event.nativeEvent)) {
        focusItemOnOpenRef.current = true;
      }
    }
    const ariaActiveDescendantProp = virtual && open && hasActiveIndex && {
      'aria-activedescendant': activeId
    };
    return {
      reference: {
        ...ariaActiveDescendantProp,
        onKeyDown(event) {
          isPointerModalityRef.current = false;
          const isArrowKey = event.key.indexOf('Arrow') === 0;
          if (virtual && open) {
            return onKeyDown(event);
          }

          // If a floating element should not open on arrow key down, avoid
          // setting `activeIndex` while it's closed.
          if (!open && !openOnArrowKeyDown && isArrowKey) {
            return;
          }
          const isNavigationKey = isArrowKey || event.key === 'Enter' || event.key === ' ' || event.key === '';
          if (isNavigationKey) {
            keyRef.current = event.key;
          }
          if (nested) {
            if (isCrossOrientationOpenKey(event.key, orientation, rtl)) {
              stopEvent(event);
              if (open) {
                indexRef.current = getMinIndex(listRef, disabledIndices);
                onNavigate(indexRef.current);
              } else {
                onOpenChange(true);
              }
            }
            return;
          }
          if (isMainOrientationKey(event.key, orientation)) {
            if (selectedIndex != null) {
              indexRef.current = selectedIndex;
            }
            stopEvent(event);
            if (!open && openOnArrowKeyDown) {
              onOpenChange(true);
            } else {
              onKeyDown(event);
            }
            if (open) {
              onNavigate(indexRef.current);
            }
          }
        },
        onFocus() {
          if (open) {
            onNavigate(null);
          }
        },
        onPointerDown: checkVirtualPointer,
        onMouseDown: checkVirtualMouse,
        onClick: checkVirtualMouse
      },
      floating: {
        'aria-orientation': orientation === 'both' ? undefined : orientation,
        ...ariaActiveDescendantProp,
        onKeyDown,
        onPointerMove() {
          isPointerModalityRef.current = true;
        }
      },
      item
    };
  }, [domReference, refs, activeId, disabledIndicesRef, latestOpenRef, listRef, enabled, orientation, rtl, virtual, open, hasActiveIndex, nested, selectedIndex, openOnArrowKeyDown, allowEscape, cols, loop, focusItemOnOpen, onNavigate, onOpenChange, item]);
};

function useMergeRefs(refs) {
  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {
    if (refs.every(ref => ref == null)) {
      return null;
    }
    return value => {
      refs.forEach(ref => {
        if (typeof ref === 'function') {
          ref(value);
        } else if (ref != null) {
          ref.current = value;
        }
      });
    };
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, refs);
}

/**
 * Adds relevant screen reader props for a given element `role`.
 * @see https://floating-ui.com/docs/useRole
 */
const useRole = function (_ref, _temp) {
  let {
    open
  } = _ref;
  let {
    enabled = true,
    role = 'dialog'
  } = _temp === void 0 ? {} : _temp;
  const rootId = useId();
  const referenceId = useId();
  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {
    const floatingProps = {
      id: rootId,
      role
    };
    if (!enabled) {
      return {};
    }
    if (role === 'tooltip') {
      return {
        reference: {
          'aria-describedby': open ? rootId : undefined
        },
        floating: floatingProps
      };
    }
    return {
      reference: {
        'aria-expanded': open ? 'true' : 'false',
        'aria-haspopup': role === 'alertdialog' ? 'dialog' : role,
        'aria-controls': open ? rootId : undefined,
        ...(role === 'listbox' && {
          role: 'combobox'
        }),
        ...(role === 'menu' && {
          id: referenceId
        })
      },
      floating: {
        ...floatingProps,
        ...(role === 'menu' && {
          'aria-labelledby': referenceId
        })
      }
    };
  }, [enabled, role, open, rootId, referenceId]);
};

// Converts a JS style key like `backgroundColor` to a CSS transition-property
// like `background-color`.
const camelCaseToKebabCase = str => str.replace(/[A-Z]+(?![a-z])|[A-Z]/g, ($, ofs) => (ofs ? '-' : '') + $.toLowerCase());
function useDelayUnmount(open, durationMs) {
  const [isMounted, setIsMounted] = react__WEBPACK_IMPORTED_MODULE_0__.useState(open);
  if (open && !isMounted) {
    setIsMounted(true);
  }
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    if (!open) {
      const timeout = setTimeout(() => setIsMounted(false), durationMs);
      return () => clearTimeout(timeout);
    }
  }, [open, durationMs]);
  return isMounted;
}
/**
 * Provides a status string to apply CSS transitions to a floating element,
 * correctly handling placement-aware transitions.
 * @see https://floating-ui.com/docs/useTransition#usetransitionstatus
 */
function useTransitionStatus(_ref, _temp) {
  let {
    open,
    elements: {
      floating
    }
  } = _ref;
  let {
    duration = 250
  } = _temp === void 0 ? {} : _temp;
  const isNumberDuration = typeof duration === 'number';
  const closeDuration = (isNumberDuration ? duration : duration.close) || 0;
  const [initiated, setInitiated] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);
  const [status, setStatus] = react__WEBPACK_IMPORTED_MODULE_0__.useState('unmounted');
  const isMounted = useDelayUnmount(open, closeDuration);

  // `initiated` check prevents this `setState` call from breaking
  // <FloatingPortal />. This call is necessary to ensure subsequent opens
  // after the initial one allows the correct side animation to play when the
  // placement has changed.
  index(() => {
    if (initiated && !isMounted) {
      setStatus('unmounted');
    }
  }, [initiated, isMounted]);
  index(() => {
    if (!floating) return;
    if (open) {
      setStatus('initial');
      const frame = requestAnimationFrame(() => {
        setStatus('open');
      });
      return () => {
        cancelAnimationFrame(frame);
      };
    } else {
      setInitiated(true);
      setStatus('close');
    }
  }, [open, floating]);
  return {
    isMounted,
    status
  };
}
/**
 * Provides styles to apply CSS transitions to a floating element, correctly
 * handling placement-aware transitions. Wrapper around `useTransitionStatus`.
 * @see https://floating-ui.com/docs/useTransition#usetransitionstyles
 */
function useTransitionStyles(context, _temp2) {
  let {
    initial: unstable_initial = {
      opacity: 0
    },
    open: unstable_open,
    close: unstable_close,
    common: unstable_common,
    duration = 250
  } = _temp2 === void 0 ? {} : _temp2;
  const placement = context.placement;
  const side = placement.split('-')[0];
  const [styles, setStyles] = react__WEBPACK_IMPORTED_MODULE_0__.useState({});
  const {
    isMounted,
    status
  } = useTransitionStatus(context, {
    duration
  });
  const initialRef = useLatestRef(unstable_initial);
  const openRef = useLatestRef(unstable_open);
  const closeRef = useLatestRef(unstable_close);
  const commonRef = useLatestRef(unstable_common);
  const isNumberDuration = typeof duration === 'number';
  const openDuration = (isNumberDuration ? duration : duration.open) || 0;
  const closeDuration = (isNumberDuration ? duration : duration.close) || 0;
  index(() => {
    const fnArgs = {
      side,
      placement
    };
    const initial = initialRef.current;
    const close = closeRef.current;
    const open = openRef.current;
    const common = commonRef.current;
    const initialStyles = typeof initial === 'function' ? initial(fnArgs) : initial;
    const closeStyles = typeof close === 'function' ? close(fnArgs) : close;
    const commonStyles = typeof common === 'function' ? common(fnArgs) : common;
    const openStyles = (typeof open === 'function' ? open(fnArgs) : open) || Object.keys(initialStyles).reduce((acc, key) => {
      acc[key] = '';
      return acc;
    }, {});
    if (status === 'initial') {
      setStyles(styles => ({
        transitionProperty: styles.transitionProperty,
        ...commonStyles,
        ...initialStyles
      }));
    }
    if (status === 'open') {
      setStyles({
        transitionProperty: Object.keys(openStyles).map(camelCaseToKebabCase).join(','),
        transitionDuration: openDuration + "ms",
        ...commonStyles,
        ...openStyles
      });
    }
    if (status === 'close') {
      const styles = closeStyles || initialStyles;
      setStyles({
        transitionProperty: Object.keys(styles).map(camelCaseToKebabCase).join(','),
        transitionDuration: closeDuration + "ms",
        ...commonStyles,
        ...styles
      });
    }
  }, [side, placement, closeDuration, closeRef, initialRef, openRef, commonRef, openDuration, status]);
  return {
    isMounted,
    styles
  };
}

/**
 * Provides a matching callback that can be used to focus an item as the user
 * types, often used in tandem with `useListNavigation()`.
 * @see https://floating-ui.com/docs/useTypeahead
 */
const useTypeahead = function (_ref, _temp) {
  var _ref2;
  let {
    open,
    dataRef
  } = _ref;
  let {
    listRef,
    activeIndex,
    onMatch: unstable_onMatch = () => {},
    enabled = true,
    findMatch = null,
    resetMs = 1000,
    ignoreKeys = [],
    selectedIndex = null
  } = _temp === void 0 ? {
    listRef: {
      current: []
    },
    activeIndex: null
  } : _temp;
  const timeoutIdRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();
  const stringRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef('');
  const prevIndexRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef((_ref2 = selectedIndex != null ? selectedIndex : activeIndex) != null ? _ref2 : -1);
  const matchIndexRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);
  const onMatch = useEvent(unstable_onMatch);
  const findMatchRef = useLatestRef(findMatch);
  const ignoreKeysRef = useLatestRef(ignoreKeys);
  index(() => {
    if (open) {
      clearTimeout(timeoutIdRef.current);
      matchIndexRef.current = null;
      stringRef.current = '';
    }
  }, [open]);
  index(() => {
    // Sync arrow key navigation but not typeahead navigation.
    if (open && stringRef.current === '') {
      var _ref3;
      prevIndexRef.current = (_ref3 = selectedIndex != null ? selectedIndex : activeIndex) != null ? _ref3 : -1;
    }
  }, [open, selectedIndex, activeIndex]);
  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {
    if (!enabled) {
      return {};
    }
    function onKeyDown(event) {
      // Correctly scope nested non-portalled floating elements. Since the nested
      // floating element is inside of the another, we find the closest role
      // that indicates the floating element scope.
      const target = getTarget(event.nativeEvent);
      if (isElement(target) && (activeElement$1(getDocument(target)) !== event.currentTarget ? target.closest('[role="dialog"],[role="menu"],[role="listbox"],[role="tree"],[role="grid"]') !== event.currentTarget : false)) {
        return;
      }
      if (stringRef.current.length > 0 && stringRef.current[0] !== ' ') {
        dataRef.current.typing = true;
        if (event.key === ' ') {
          stopEvent(event);
        }
      }
      const listContent = listRef.current;
      if (listContent == null || ignoreKeysRef.current.includes(event.key) ||
      // Character key.
      event.key.length !== 1 ||
      // Modifier key.
      event.ctrlKey || event.metaKey || event.altKey) {
        return;
      }

      // Bail out if the list contains a word like "llama" or "aaron". TODO:
      // allow it in this case, too.
      const allowRapidSuccessionOfFirstLetter = listContent.every(text => {
        var _text$, _text$2;
        return text ? ((_text$ = text[0]) == null ? void 0 : _text$.toLocaleLowerCase()) !== ((_text$2 = text[1]) == null ? void 0 : _text$2.toLocaleLowerCase()) : true;
      });

      // Allows the user to cycle through items that start with the same letter
      // in rapid succession.
      if (allowRapidSuccessionOfFirstLetter && stringRef.current === event.key) {
        stringRef.current = '';
        prevIndexRef.current = matchIndexRef.current;
      }
      stringRef.current += event.key;
      clearTimeout(timeoutIdRef.current);
      timeoutIdRef.current = setTimeout(() => {
        stringRef.current = '';
        prevIndexRef.current = matchIndexRef.current;
        dataRef.current.typing = false;
      }, resetMs);
      const prevIndex = prevIndexRef.current;
      const orderedList = [...listContent.slice((prevIndex || 0) + 1), ...listContent.slice(0, (prevIndex || 0) + 1)];
      const str = findMatchRef.current ? findMatchRef.current(orderedList, stringRef.current) : orderedList.find(text => (text == null ? void 0 : text.toLocaleLowerCase().indexOf(stringRef.current.toLocaleLowerCase())) === 0);
      const index = str ? listContent.indexOf(str) : -1;
      if (index !== -1) {
        onMatch(index);
        matchIndexRef.current = index;
      }
    }
    return {
      reference: {
        onKeyDown
      },
      floating: {
        onKeyDown
      }
    };
  }, [enabled, dataRef, listRef, resetMs, ignoreKeysRef, findMatchRef, onMatch]);
};

function getArgsWithCustomFloatingHeight(args, height) {
  return {
    ...args,
    rects: {
      ...args.rects,
      floating: {
        ...args.rects.floating,
        height
      }
    }
  };
}
/**
 * Positions the floating element such that an inner element inside
 * of it is anchored to the reference element.
 * @see https://floating-ui.com/docs/inner
 */
const inner = props => ({
  name: 'inner',
  options: props,
  async fn(middlewareArguments) {
    const {
      listRef,
      overflowRef,
      onFallbackChange,
      offset: innerOffset = 0,
      index = 0,
      minItemsVisible = 4,
      referenceOverflowThreshold = 0,
      scrollRef,
      ...detectOverflowOptions
    } = props;
    const {
      rects,
      elements: {
        floating
      }
    } = middlewareArguments;
    const item = listRef.current[index];
    if (true) {
      if (!middlewareArguments.placement.startsWith('bottom')) {
        console.warn(['Floating UI: `placement` side must be "bottom" when using the', '`inner` middleware.'].join(' '));
      }
    }
    if (!item) {
      return {};
    }
    const nextArgs = {
      ...middlewareArguments,
      ...(await (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_4__.offset)(-item.offsetTop - rects.reference.height / 2 - item.offsetHeight / 2 - innerOffset).fn(middlewareArguments))
    };
    const el = (scrollRef == null ? void 0 : scrollRef.current) || floating;
    const overflow = await (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_4__.detectOverflow)(getArgsWithCustomFloatingHeight(nextArgs, el.scrollHeight), detectOverflowOptions);
    const refOverflow = await (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_4__.detectOverflow)(nextArgs, {
      ...detectOverflowOptions,
      elementContext: 'reference'
    });
    const diffY = Math.max(0, overflow.top);
    const nextY = nextArgs.y + diffY;
    const maxHeight = Math.max(0, el.scrollHeight - diffY - Math.max(0, overflow.bottom));
    el.style.maxHeight = maxHeight + "px";
    el.scrollTop = diffY;

    // There is not enough space, fallback to standard anchored positioning
    if (onFallbackChange) {
      if (el.offsetHeight < item.offsetHeight * Math.min(minItemsVisible, listRef.current.length - 1) - 1 || refOverflow.top >= -referenceOverflowThreshold || refOverflow.bottom >= -referenceOverflowThreshold) {
        (0,react_dom__WEBPACK_IMPORTED_MODULE_3__.flushSync)(() => onFallbackChange(true));
      } else {
        (0,react_dom__WEBPACK_IMPORTED_MODULE_3__.flushSync)(() => onFallbackChange(false));
      }
    }
    if (overflowRef) {
      overflowRef.current = await (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_4__.detectOverflow)(getArgsWithCustomFloatingHeight({
        ...nextArgs,
        y: nextY
      }, el.offsetHeight), detectOverflowOptions);
    }
    return {
      y: nextY
    };
  }
});
/**
 * Changes the `inner` middleware's `offset` upon a `wheel` event to
 * expand the floating element's height, revealing more list items.
 * @see https://floating-ui.com/docs/inner
 */
const useInnerOffset = (_ref, _ref2) => {
  let {
    open,
    elements
  } = _ref;
  let {
    enabled = true,
    overflowRef,
    scrollRef,
    onChange: unstable_onChange
  } = _ref2;
  const onChange = useEvent(unstable_onChange);
  const controlledScrollingRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);
  const prevScrollTopRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);
  const initialOverflowRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
    if (!enabled) {
      return;
    }
    function onWheel(e) {
      if (e.ctrlKey || !el || overflowRef.current == null) {
        return;
      }
      const dY = e.deltaY;
      const isAtTop = overflowRef.current.top >= -0.5;
      const isAtBottom = overflowRef.current.bottom >= -0.5;
      const remainingScroll = el.scrollHeight - el.clientHeight;
      const sign = dY < 0 ? -1 : 1;
      const method = dY < 0 ? 'max' : 'min';
      if (el.scrollHeight <= el.clientHeight) {
        return;
      }
      if (!isAtTop && dY > 0 || !isAtBottom && dY < 0) {
        e.preventDefault();
        (0,react_dom__WEBPACK_IMPORTED_MODULE_3__.flushSync)(() => {
          onChange(d => d + Math[method](dY, remainingScroll * sign));
        });
      } else if (/firefox/i.test(getUserAgent())) {
        // Needed to propagate scrolling during momentum scrolling phase once
        // it gets limited by the boundary. UX improvement, not critical.
        el.scrollTop += dY;
      }
    }
    const el = (scrollRef == null ? void 0 : scrollRef.current) || elements.floating;
    if (open && el) {
      el.addEventListener('wheel', onWheel);

      // Wait for the position to be ready.
      requestAnimationFrame(() => {
        prevScrollTopRef.current = el.scrollTop;
        if (overflowRef.current != null) {
          initialOverflowRef.current = {
            ...overflowRef.current
          };
        }
      });
      return () => {
        prevScrollTopRef.current = null;
        initialOverflowRef.current = null;
        el.removeEventListener('wheel', onWheel);
      };
    }
  }, [enabled, open, elements.floating, overflowRef, scrollRef, onChange]);
  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {
    if (!enabled) {
      return {};
    }
    return {
      floating: {
        onKeyDown() {
          controlledScrollingRef.current = true;
        },
        onWheel() {
          controlledScrollingRef.current = false;
        },
        onPointerMove() {
          controlledScrollingRef.current = false;
        },
        onScroll() {
          const el = (scrollRef == null ? void 0 : scrollRef.current) || elements.floating;
          if (!overflowRef.current || !el || !controlledScrollingRef.current) {
            return;
          }
          if (prevScrollTopRef.current !== null) {
            const scrollDiff = el.scrollTop - prevScrollTopRef.current;
            if (overflowRef.current.bottom < -0.5 && scrollDiff < -1 || overflowRef.current.top < -0.5 && scrollDiff > 1) {
              (0,react_dom__WEBPACK_IMPORTED_MODULE_3__.flushSync)(() => onChange(d => d + scrollDiff));
            }
          }

          // [Firefox] Wait for the height change to have been applied.
          requestAnimationFrame(() => {
            prevScrollTopRef.current = el.scrollTop;
          });
        }
      }
    };
  }, [enabled, overflowRef, elements.floating, scrollRef, onChange]);
};

function isPointInPolygon(point, polygon) {
  const [x, y] = point;
  let isInside = false;
  const length = polygon.length;
  for (let i = 0, j = length - 1; i < length; j = i++) {
    const [xi, yi] = polygon[i] || [0, 0];
    const [xj, yj] = polygon[j] || [0, 0];
    const intersect = yi >= y !== yj >= y && x <= (xj - xi) * (y - yi) / (yj - yi) + xi;
    if (intersect) {
      isInside = !isInside;
    }
  }
  return isInside;
}
function isInside(point, rect) {
  return point[0] >= rect.x && point[0] <= rect.x + rect.width && point[1] >= rect.y && point[1] <= rect.y + rect.height;
}
function safePolygon(_temp) {
  let {
    restMs = 0,
    buffer = 0.5,
    blockPointerEvents = false
  } = _temp === void 0 ? {} : _temp;
  let timeoutId;
  let isInsideRect = false;
  let hasLanded = false;
  const fn = _ref => {
    let {
      x,
      y,
      placement,
      elements,
      onClose,
      nodeId,
      tree
    } = _ref;
    return function onMouseMove(event) {
      function close() {
        clearTimeout(timeoutId);
        onClose();
      }
      clearTimeout(timeoutId);
      if (!elements.domReference || !elements.floating || placement == null || x == null || y == null) {
        return;
      }
      const {
        clientX,
        clientY
      } = event;
      const clientPoint = [clientX, clientY];
      const target = getTarget(event);
      const isLeave = event.type === 'mouseleave';
      const isOverFloatingEl = contains(elements.floating, target);
      const isOverReferenceEl = contains(elements.domReference, target);
      const refRect = elements.domReference.getBoundingClientRect();
      const rect = elements.floating.getBoundingClientRect();
      const side = placement.split('-')[0];
      const cursorLeaveFromRight = x > rect.right - rect.width / 2;
      const cursorLeaveFromBottom = y > rect.bottom - rect.height / 2;
      const isOverReferenceRect = isInside(clientPoint, refRect);
      if (isOverFloatingEl) {
        hasLanded = true;
      }
      if (isOverReferenceEl) {
        hasLanded = false;
      }
      if (isOverReferenceEl && !isLeave) {
        hasLanded = true;
        return;
      }

      // Prevent overlapping floating element from being stuck in an open-close
      // loop: https://github.com/floating-ui/floating-ui/issues/1910
      if (isLeave && isElement(event.relatedTarget) && contains(elements.floating, event.relatedTarget)) {
        return;
      }

      // If any nested child is open, abort.
      if (tree && getChildren(tree.nodesRef.current, nodeId).some(_ref2 => {
        let {
          context
        } = _ref2;
        return context == null ? void 0 : context.open;
      })) {
        return;
      }

      // If the pointer is leaving from the opposite side, the "buffer" logic
      // creates a point where the floating element remains open, but should be
      // ignored.
      // A constant of 1 handles floating point rounding errors.
      if (side === 'top' && y >= refRect.bottom - 1 || side === 'bottom' && y <= refRect.top + 1 || side === 'left' && x >= refRect.right - 1 || side === 'right' && x <= refRect.left + 1) {
        return close();
      }

      // Ignore when the cursor is within the rectangular trough between the
      // two elements. Since the triangle is created from the cursor point,
      // which can start beyond the ref element's edge, traversing back and
      // forth from the ref to the floating element can cause it to close. This
      // ensures it always remains open in that case.
      let rectPoly = [];
      switch (side) {
        case 'top':
          rectPoly = [[rect.left, refRect.top + 1], [rect.left, rect.bottom - 1], [rect.right, rect.bottom - 1], [rect.right, refRect.top + 1]];
          isInsideRect = clientX >= rect.left && clientX <= rect.right && clientY >= rect.top && clientY <= refRect.top + 1;
          break;
        case 'bottom':
          rectPoly = [[rect.left, rect.top + 1], [rect.left, refRect.bottom - 1], [rect.right, refRect.bottom - 1], [rect.right, rect.top + 1]];
          isInsideRect = clientX >= rect.left && clientX <= rect.right && clientY >= refRect.bottom - 1 && clientY <= rect.bottom;
          break;
        case 'left':
          rectPoly = [[rect.right - 1, rect.bottom], [rect.right - 1, rect.top], [refRect.left + 1, rect.top], [refRect.left + 1, rect.bottom]];
          isInsideRect = clientX >= rect.left && clientX <= refRect.left + 1 && clientY >= rect.top && clientY <= rect.bottom;
          break;
        case 'right':
          rectPoly = [[refRect.right - 1, rect.bottom], [refRect.right - 1, rect.top], [rect.left + 1, rect.top], [rect.left + 1, rect.bottom]];
          isInsideRect = clientX >= refRect.right - 1 && clientX <= rect.right && clientY >= rect.top && clientY <= rect.bottom;
          break;
      }
      function getPolygon(_ref3) {
        let [x, y] = _ref3;
        const isFloatingWider = rect.width > refRect.width;
        const isFloatingTaller = rect.height > refRect.height;
        switch (side) {
          case 'top':
            {
              const cursorPointOne = [isFloatingWider ? x + buffer / 2 : cursorLeaveFromRight ? x + buffer * 4 : x - buffer * 4, y + buffer + 1];
              const cursorPointTwo = [isFloatingWider ? x - buffer / 2 : cursorLeaveFromRight ? x + buffer * 4 : x - buffer * 4, y + buffer + 1];
              const commonPoints = [[rect.left, cursorLeaveFromRight ? rect.bottom - buffer : isFloatingWider ? rect.bottom - buffer : rect.top], [rect.right, cursorLeaveFromRight ? isFloatingWider ? rect.bottom - buffer : rect.top : rect.bottom - buffer]];
              return [cursorPointOne, cursorPointTwo, ...commonPoints];
            }
          case 'bottom':
            {
              const cursorPointOne = [isFloatingWider ? x + buffer / 2 : cursorLeaveFromRight ? x + buffer * 4 : x - buffer * 4, y - buffer];
              const cursorPointTwo = [isFloatingWider ? x - buffer / 2 : cursorLeaveFromRight ? x + buffer * 4 : x - buffer * 4, y - buffer];
              const commonPoints = [[rect.left, cursorLeaveFromRight ? rect.top + buffer : isFloatingWider ? rect.top + buffer : rect.bottom], [rect.right, cursorLeaveFromRight ? isFloatingWider ? rect.top + buffer : rect.bottom : rect.top + buffer]];
              return [cursorPointOne, cursorPointTwo, ...commonPoints];
            }
          case 'left':
            {
              const cursorPointOne = [x + buffer + 1, isFloatingTaller ? y + buffer / 2 : cursorLeaveFromBottom ? y + buffer * 4 : y - buffer * 4];
              const cursorPointTwo = [x + buffer + 1, isFloatingTaller ? y - buffer / 2 : cursorLeaveFromBottom ? y + buffer * 4 : y - buffer * 4];
              const commonPoints = [[cursorLeaveFromBottom ? rect.right - buffer : isFloatingTaller ? rect.right - buffer : rect.left, rect.top], [cursorLeaveFromBottom ? isFloatingTaller ? rect.right - buffer : rect.left : rect.right - buffer, rect.bottom]];
              return [...commonPoints, cursorPointOne, cursorPointTwo];
            }
          case 'right':
            {
              const cursorPointOne = [x - buffer, isFloatingTaller ? y + buffer / 2 : cursorLeaveFromBottom ? y + buffer * 4 : y - buffer * 4];
              const cursorPointTwo = [x - buffer, isFloatingTaller ? y - buffer / 2 : cursorLeaveFromBottom ? y + buffer * 4 : y - buffer * 4];
              const commonPoints = [[cursorLeaveFromBottom ? rect.left + buffer : isFloatingTaller ? rect.left + buffer : rect.right, rect.top], [cursorLeaveFromBottom ? isFloatingTaller ? rect.left + buffer : rect.right : rect.left + buffer, rect.bottom]];
              return [cursorPointOne, cursorPointTwo, ...commonPoints];
            }
        }
      }
      const poly = isInsideRect ? rectPoly : getPolygon([x, y]);
      if (isInsideRect) {
        return;
      } else if (hasLanded && !isOverReferenceRect) {
        return close();
      }
      if (!isPointInPolygon([clientX, clientY], poly)) {
        close();
      } else if (restMs && !hasLanded) {
        timeoutId = setTimeout(close, restMs);
      }
    };
  };
  fn.__options = {
    blockPointerEvents
  };
  return fn;
}

function useFloating(options) {
  if (options === void 0) {
    options = {};
  }
  const {
    open = false,
    onOpenChange: unstable_onOpenChange,
    nodeId
  } = options;
  const position = (0,_floating_ui_react_dom__WEBPACK_IMPORTED_MODULE_6__.useFloating)(options);
  const tree = useFloatingTree();
  const domReferenceRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);
  const dataRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef({});
  const events = react__WEBPACK_IMPORTED_MODULE_0__.useState(() => createPubSub())[0];
  const [domReference, setDomReference] = react__WEBPACK_IMPORTED_MODULE_0__.useState(null);
  const setPositionReference = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(node => {
    const positionReference = isElement(node) ? {
      getBoundingClientRect: () => node.getBoundingClientRect(),
      contextElement: node
    } : node;
    position.refs.setReference(positionReference);
  }, [position.refs]);
  const setReference = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(node => {
    if (isElement(node) || node === null) {
      domReferenceRef.current = node;
      setDomReference(node);
    }

    // Backwards-compatibility for passing a virtual element to `reference`
    // after it has set the DOM reference.
    if (isElement(position.refs.reference.current) || position.refs.reference.current === null ||
    // Don't allow setting virtual elements using the old technique back to
    // `null` to support `positionReference` + an unstable `reference`
    // callback ref.
    node !== null && !isElement(node)) {
      position.refs.setReference(node);
    }
  }, [position.refs]);
  const refs = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({
    ...position.refs,
    setReference,
    setPositionReference,
    domReference: domReferenceRef
  }), [position.refs, setReference, setPositionReference]);
  const elements = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({
    ...position.elements,
    domReference: domReference
  }), [position.elements, domReference]);
  const onOpenChange = useEvent(unstable_onOpenChange);
  const context = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({
    ...position,
    refs,
    elements,
    dataRef,
    nodeId,
    events,
    open,
    onOpenChange
  }), [position, nodeId, events, open, onOpenChange, refs, elements]);
  index(() => {
    const node = tree == null ? void 0 : tree.nodesRef.current.find(node => node.id === nodeId);
    if (node) {
      node.context = context;
    }
  });
  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({
    ...position,
    context,
    refs,
    reference: setReference,
    positionReference: setPositionReference
  }), [position, refs, context, setReference, setPositionReference]);
}

function mergeProps(userProps, propsList, elementKey) {
  const map = new Map();
  return {
    ...(elementKey === 'floating' && {
      tabIndex: -1
    }),
    ...userProps,
    ...propsList.map(value => value ? value[elementKey] : null).concat(userProps).reduce((acc, props) => {
      if (!props) {
        return acc;
      }
      Object.entries(props).forEach(_ref => {
        let [key, value] = _ref;
        if (key.indexOf('on') === 0) {
          if (!map.has(key)) {
            map.set(key, []);
          }
          if (typeof value === 'function') {
            var _map$get;
            (_map$get = map.get(key)) == null ? void 0 : _map$get.push(value);
            acc[key] = function () {
              var _map$get2;
              for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
              }
              (_map$get2 = map.get(key)) == null ? void 0 : _map$get2.forEach(fn => fn(...args));
            };
          }
        } else {
          acc[key] = value;
        }
      });
      return acc;
    }, {})
  };
}
const useInteractions = function (propsList) {
  if (propsList === void 0) {
    propsList = [];
  }
  // The dependencies are a dynamic array, so we can't use the linter's
  // suggestion to add it to the deps array.
  const deps = propsList;
  const getReferenceProps = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(userProps => mergeProps(userProps, propsList, 'reference'),
  // eslint-disable-next-line react-hooks/exhaustive-deps
  deps);
  const getFloatingProps = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(userProps => mergeProps(userProps, propsList, 'floating'),
  // eslint-disable-next-line react-hooks/exhaustive-deps
  deps);
  const getItemProps = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(userProps => mergeProps(userProps, propsList, 'item'),
  // Granularly check for `item` changes, because the `getItemProps` getter
  // should be as referentially stable as possible since it may be passed as
  // a prop to many components. All `item` key values must therefore be
  // memoized.
  // eslint-disable-next-line react-hooks/exhaustive-deps
  propsList.map(key => key == null ? void 0 : key.item));
  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({
    getReferenceProps,
    getFloatingProps,
    getItemProps
  }), [getReferenceProps, getFloatingProps, getItemProps]);
};




/***/ }),

/***/ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/index.js ***!
  \*****************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";



if (false) // removed by dead control flow
{} else {
  module.exports = __webpack_require__(/*! ./tailwind-merge.cjs.development.js */ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/tailwind-merge.cjs.development.js")
}


/***/ }),

/***/ "./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/tailwind-merge.cjs.development.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/node_modules/tailwind-merge/dist/tailwind-merge.cjs.development.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({ value: true }));

/**
 * The code in this file is copied from https://github.com/lukeed/clsx and modified to suit the needs of tailwind-merge better.
 *
 * Specifically:
 * - Runtime code from https://github.com/lukeed/clsx/blob/v1.2.1/src/index.js
 * - TypeScript types from https://github.com/lukeed/clsx/blob/v1.2.1/clsx.d.ts
 *
 * Original code has MIT license: Copyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)
 */
function twJoin() {
  var index = 0;
  var argument;
  var resolvedValue;
  var string = '';

  while (index < arguments.length) {
    if (argument = arguments[index++]) {
      if (resolvedValue = toValue(argument)) {
        string && (string += ' ');
        string += resolvedValue;
      }
    }
  }

  return string;
}

function toValue(mix) {
  if (typeof mix === 'string') {
    return mix;
  }

  var resolvedValue;
  var string = '';

  for (var k = 0; k < mix.length; k++) {
    if (mix[k]) {
      if (resolvedValue = toValue(mix[k])) {
        string && (string += ' ');
        string += resolvedValue;
      }
    }
  }

  return string;
}

function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };
  return _extends.apply(this, arguments);
}

var CLASS_PART_SEPARATOR = '-';
function createClassUtils(config) {
  var classMap = createClassMap(config);

  function getClassGroupId(className) {
    var classParts = className.split(CLASS_PART_SEPARATOR); // Classes like `-inset-1` produce an empty string as first classPart. We assume that classes for negative values are used correctly and remove it from classParts.

    if (classParts[0] === '' && classParts.length !== 1) {
      classParts.shift();
    }

    return getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className);
  }

  function getConflictingClassGroupIds(classGroupId) {
    return config.conflictingClassGroups[classGroupId] || [];
  }

  return {
    getClassGroupId: getClassGroupId,
    getConflictingClassGroupIds: getConflictingClassGroupIds
  };
}

function getGroupRecursive(classParts, classPartObject) {
  var _classPartObject$vali;

  if (classParts.length === 0) {
    return classPartObject.classGroupId;
  }

  var currentClassPart = classParts[0];
  var nextClassPartObject = classPartObject.nextPart.get(currentClassPart);
  var classGroupFromNextClassPart = nextClassPartObject ? getGroupRecursive(classParts.slice(1), nextClassPartObject) : undefined;

  if (classGroupFromNextClassPart) {
    return classGroupFromNextClassPart;
  }

  if (classPartObject.validators.length === 0) {
    return undefined;
  }

  var classRest = classParts.join(CLASS_PART_SEPARATOR);
  return (_classPartObject$vali = classPartObject.validators.find(function (_ref) {
    var validator = _ref.validator;
    return validator(classRest);
  })) == null ? void 0 : _classPartObject$vali.classGroupId;
}

var arbitraryPropertyRegex = /^\[(.+)\]$/;

function getGroupIdForArbitraryProperty(className) {
  if (arbitraryPropertyRegex.test(className)) {
    var arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)[1];
    var property = arbitraryPropertyClassName == null ? void 0 : arbitraryPropertyClassName.substring(0, arbitraryPropertyClassName.indexOf(':'));

    if (property) {
      // I use two dots here because one dot is used as prefix for class groups in plugins
      return 'arbitrary..' + property;
    }
  }
}
/**
 * Exported for testing only
 */


function createClassMap(config) {
  var theme = config.theme,
      prefix = config.prefix;
  var classMap = {
    nextPart: new Map(),
    validators: []
  };
  var prefixedClassGroupEntries = getPrefixedClassGroupEntries(Object.entries(config.classGroups), prefix);
  prefixedClassGroupEntries.forEach(function (_ref2) {
    var classGroupId = _ref2[0],
        classGroup = _ref2[1];
    processClassesRecursively(classGroup, classMap, classGroupId, theme);
  });
  return classMap;
}

function processClassesRecursively(classGroup, classPartObject, classGroupId, theme) {
  classGroup.forEach(function (classDefinition) {
    if (typeof classDefinition === 'string') {
      var classPartObjectToEdit = classDefinition === '' ? classPartObject : getPart(classPartObject, classDefinition);
      classPartObjectToEdit.classGroupId = classGroupId;
      return;
    }

    if (typeof classDefinition === 'function') {
      if (isThemeGetter(classDefinition)) {
        processClassesRecursively(classDefinition(theme), classPartObject, classGroupId, theme);
        return;
      }

      classPartObject.validators.push({
        validator: classDefinition,
        classGroupId: classGroupId
      });
      return;
    }

    Object.entries(classDefinition).forEach(function (_ref3) {
      var key = _ref3[0],
          classGroup = _ref3[1];
      processClassesRecursively(classGroup, getPart(classPartObject, key), classGroupId, theme);
    });
  });
}

function getPart(classPartObject, path) {
  var currentClassPartObject = classPartObject;
  path.split(CLASS_PART_SEPARATOR).forEach(function (pathPart) {
    if (!currentClassPartObject.nextPart.has(pathPart)) {
      currentClassPartObject.nextPart.set(pathPart, {
        nextPart: new Map(),
        validators: []
      });
    }

    currentClassPartObject = currentClassPartObject.nextPart.get(pathPart);
  });
  return currentClassPartObject;
}

function isThemeGetter(func) {
  return func.isThemeGetter;
}

function getPrefixedClassGroupEntries(classGroupEntries, prefix) {
  if (!prefix) {
    return classGroupEntries;
  }

  return classGroupEntries.map(function (_ref4) {
    var classGroupId = _ref4[0],
        classGroup = _ref4[1];
    var prefixedClassGroup = classGroup.map(function (classDefinition) {
      if (typeof classDefinition === 'string') {
        return prefix + classDefinition;
      }

      if (typeof classDefinition === 'object') {
        return Object.fromEntries(Object.entries(classDefinition).map(function (_ref5) {
          var key = _ref5[0],
              value = _ref5[1];
          return [prefix + key, value];
        }));
      }

      return classDefinition;
    });
    return [classGroupId, prefixedClassGroup];
  });
}

// LRU cache inspired from hashlru (https://github.com/dominictarr/hashlru/blob/v1.0.4/index.js) but object replaced with Map to improve performance
function createLruCache(maxCacheSize) {
  if (maxCacheSize < 1) {
    return {
      get: function get() {
        return undefined;
      },
      set: function set() {}
    };
  }

  var cacheSize = 0;
  var cache = new Map();
  var previousCache = new Map();

  function update(key, value) {
    cache.set(key, value);
    cacheSize++;

    if (cacheSize > maxCacheSize) {
      cacheSize = 0;
      previousCache = cache;
      cache = new Map();
    }
  }

  return {
    get: function get(key) {
      var value = cache.get(key);

      if (value !== undefined) {
        return value;
      }

      if ((value = previousCache.get(key)) !== undefined) {
        update(key, value);
        return value;
      }
    },
    set: function set(key, value) {
      if (cache.has(key)) {
        cache.set(key, value);
      } else {
        update(key, value);
      }
    }
  };
}

var IMPORTANT_MODIFIER = '!';
function createSplitModifiers(config) {
  var separator = config.separator || ':'; // splitModifiers inspired by https://github.com/tailwindlabs/tailwindcss/blob/v3.2.2/src/util/splitAtTopLevelOnly.js

  return function splitModifiers(className) {
    var bracketDepth = 0;
    var modifiers = [];
    var modifierStart = 0;

    for (var index = 0; index < className.length; index++) {
      var _char = className[index];

      if (bracketDepth === 0 && _char === separator[0]) {
        if (separator.length === 1 || className.slice(index, index + separator.length) === separator) {
          modifiers.push(className.slice(modifierStart, index));
          modifierStart = index + separator.length;
        }
      }

      if (_char === '[') {
        bracketDepth++;
      } else if (_char === ']') {
        bracketDepth--;
      }
    }

    var baseClassNameWithImportantModifier = modifiers.length === 0 ? className : className.substring(modifierStart);
    var hasImportantModifier = baseClassNameWithImportantModifier.startsWith(IMPORTANT_MODIFIER);
    var baseClassName = hasImportantModifier ? baseClassNameWithImportantModifier.substring(1) : baseClassNameWithImportantModifier;
    return {
      modifiers: modifiers,
      hasImportantModifier: hasImportantModifier,
      baseClassName: baseClassName
    };
  };
}
/**
 * Sorts modifiers according to following schema:
 * - Predefined modifiers are sorted alphabetically
 * - When an arbitrary variant appears, it must be preserved which modifiers are before and after it
 */

function sortModifiers(modifiers) {
  if (modifiers.length <= 1) {
    return modifiers;
  }

  var sortedModifiers = [];
  var unsortedModifiers = [];
  modifiers.forEach(function (modifier) {
    var isArbitraryVariant = modifier[0] === '[';

    if (isArbitraryVariant) {
      sortedModifiers.push.apply(sortedModifiers, unsortedModifiers.sort().concat([modifier]));
      unsortedModifiers = [];
    } else {
      unsortedModifiers.push(modifier);
    }
  });
  sortedModifiers.push.apply(sortedModifiers, unsortedModifiers.sort());
  return sortedModifiers;
}

function createConfigUtils(config) {
  return _extends({
    cache: createLruCache(config.cacheSize),
    splitModifiers: createSplitModifiers(config)
  }, createClassUtils(config));
}

var SPLIT_CLASSES_REGEX = /\s+/;
function mergeClassList(classList, configUtils) {
  var splitModifiers = configUtils.splitModifiers,
      getClassGroupId = configUtils.getClassGroupId,
      getConflictingClassGroupIds = configUtils.getConflictingClassGroupIds;
  /**
   * Set of classGroupIds in following format:
   * `{importantModifier}{variantModifiers}{classGroupId}`
   * @example 'float'
   * @example 'hover:focus:bg-color'
   * @example 'md:!pr'
   */

  var classGroupsInConflict = new Set();
  return classList.trim().split(SPLIT_CLASSES_REGEX).map(function (originalClassName) {
    var _splitModifiers = splitModifiers(originalClassName),
        modifiers = _splitModifiers.modifiers,
        hasImportantModifier = _splitModifiers.hasImportantModifier,
        baseClassName = _splitModifiers.baseClassName;

    var classGroupId = getClassGroupId(baseClassName);

    if (!classGroupId) {
      return {
        isTailwindClass: false,
        originalClassName: originalClassName
      };
    }

    var variantModifier = sortModifiers(modifiers).join(':');
    var modifierId = hasImportantModifier ? variantModifier + IMPORTANT_MODIFIER : variantModifier;
    return {
      isTailwindClass: true,
      modifierId: modifierId,
      classGroupId: classGroupId,
      originalClassName: originalClassName
    };
  }).reverse() // Last class in conflict wins, so we need to filter conflicting classes in reverse order.
  .filter(function (parsed) {
    if (!parsed.isTailwindClass) {
      return true;
    }

    var modifierId = parsed.modifierId,
        classGroupId = parsed.classGroupId;
    var classId = modifierId + classGroupId;

    if (classGroupsInConflict.has(classId)) {
      return false;
    }

    classGroupsInConflict.add(classId);
    getConflictingClassGroupIds(classGroupId).forEach(function (group) {
      return classGroupsInConflict.add(modifierId + group);
    });
    return true;
  }).reverse().map(function (parsed) {
    return parsed.originalClassName;
  }).join(' ');
}

function createTailwindMerge() {
  for (var _len = arguments.length, createConfig = new Array(_len), _key = 0; _key < _len; _key++) {
    createConfig[_key] = arguments[_key];
  }

  var configUtils;
  var cacheGet;
  var cacheSet;
  var functionToCall = initTailwindMerge;

  function initTailwindMerge(classList) {
    var firstCreateConfig = createConfig[0],
        restCreateConfig = createConfig.slice(1);
    var config = restCreateConfig.reduce(function (previousConfig, createConfigCurrent) {
      return createConfigCurrent(previousConfig);
    }, firstCreateConfig());
    configUtils = createConfigUtils(config);
    cacheGet = configUtils.cache.get;
    cacheSet = configUtils.cache.set;
    functionToCall = tailwindMerge;
    return tailwindMerge(classList);
  }

  function tailwindMerge(classList) {
    var cachedResult = cacheGet(classList);

    if (cachedResult) {
      return cachedResult;
    }

    var result = mergeClassList(classList, configUtils);
    cacheSet(classList, result);
    return result;
  }

  return function callTailwindMerge() {
    return functionToCall(twJoin.apply(null, arguments));
  };
}

function fromTheme(key) {
  var themeGetter = function themeGetter(theme) {
    return theme[key] || [];
  };

  themeGetter.isThemeGetter = true;
  return themeGetter;
}

var arbitraryValueRegex = /^\[(.+)\]$/;
var fractionRegex = /^\d+\/\d+$/;
var stringLengths = /*#__PURE__*/new Set(['px', 'full', 'screen']);
var tshirtUnitRegex = /^(\d+)?(xs|sm|md|lg|xl)$/;
var lengthUnitRegex = /\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh)/; // Shadow always begins with x and y offset separated by underscore

var shadowRegex = /^-?((\d+)?\.?(\d+)[a-z]+|0)_-?((\d+)?\.?(\d+)[a-z]+|0)/;
function isLength(classPart) {
  return !Number.isNaN(Number(classPart)) || stringLengths.has(classPart) || fractionRegex.test(classPart) || isArbitraryLength(classPart);
}
function isArbitraryLength(classPart) {
  var _arbitraryValueRegex$;

  var arbitraryValue = (_arbitraryValueRegex$ = arbitraryValueRegex.exec(classPart)) == null ? void 0 : _arbitraryValueRegex$[1];

  if (arbitraryValue) {
    return arbitraryValue.startsWith('length:') || lengthUnitRegex.test(arbitraryValue);
  }

  return false;
}
function isArbitrarySize(classPart) {
  var _arbitraryValueRegex$2;

  var arbitraryValue = (_arbitraryValueRegex$2 = arbitraryValueRegex.exec(classPart)) == null ? void 0 : _arbitraryValueRegex$2[1];
  return arbitraryValue ? arbitraryValue.startsWith('size:') : false;
}
function isArbitraryPosition(classPart) {
  var _arbitraryValueRegex$3;

  var arbitraryValue = (_arbitraryValueRegex$3 = arbitraryValueRegex.exec(classPart)) == null ? void 0 : _arbitraryValueRegex$3[1];
  return arbitraryValue ? arbitraryValue.startsWith('position:') : false;
}
function isArbitraryUrl(classPart) {
  var _arbitraryValueRegex$4;

  var arbitraryValue = (_arbitraryValueRegex$4 = arbitraryValueRegex.exec(classPart)) == null ? void 0 : _arbitraryValueRegex$4[1];
  return arbitraryValue ? arbitraryValue.startsWith('url(') || arbitraryValue.startsWith('url:') : false;
}
function isArbitraryNumber(classPart) {
  var _arbitraryValueRegex$5;

  var arbitraryValue = (_arbitraryValueRegex$5 = arbitraryValueRegex.exec(classPart)) == null ? void 0 : _arbitraryValueRegex$5[1];
  return arbitraryValue ? !Number.isNaN(Number(arbitraryValue)) || arbitraryValue.startsWith('number:') : false;
}
/**
 * @deprecated Will be removed in next major version. Use `isArbitraryNumber` instead.
 */

var isArbitraryWeight = isArbitraryNumber;
function isInteger(classPart) {
  var _arbitraryValueRegex$6;

  var arbitraryValue = (_arbitraryValueRegex$6 = arbitraryValueRegex.exec(classPart)) == null ? void 0 : _arbitraryValueRegex$6[1];

  if (arbitraryValue) {
    return Number.isInteger(Number(arbitraryValue));
  }

  return Number.isInteger(Number(classPart));
}
function isArbitraryValue(classPart) {
  return arbitraryValueRegex.test(classPart);
}
function isAny() {
  return true;
}
function isTshirtSize(classPart) {
  return tshirtUnitRegex.test(classPart);
}
function isArbitraryShadow(classPart) {
  var _arbitraryValueRegex$7;

  var arbitraryValue = (_arbitraryValueRegex$7 = arbitraryValueRegex.exec(classPart)) == null ? void 0 : _arbitraryValueRegex$7[1];

  if (arbitraryValue) {
    return shadowRegex.test(arbitraryValue);
  }

  return false;
}

var validators = {
    __proto__: null,
    isLength: isLength,
    isArbitraryLength: isArbitraryLength,
    isArbitrarySize: isArbitrarySize,
    isArbitraryPosition: isArbitraryPosition,
    isArbitraryUrl: isArbitraryUrl,
    isArbitraryNumber: isArbitraryNumber,
    isArbitraryWeight: isArbitraryWeight,
    isInteger: isInteger,
    isArbitraryValue: isArbitraryValue,
    isAny: isAny,
    isTshirtSize: isTshirtSize,
    isArbitraryShadow: isArbitraryShadow
};

function getDefaultConfig() {
  var colors = fromTheme('colors');
  var spacing = fromTheme('spacing');
  var blur = fromTheme('blur');
  var brightness = fromTheme('brightness');
  var borderColor = fromTheme('borderColor');
  var borderRadius = fromTheme('borderRadius');
  var borderSpacing = fromTheme('borderSpacing');
  var borderWidth = fromTheme('borderWidth');
  var contrast = fromTheme('contrast');
  var grayscale = fromTheme('grayscale');
  var hueRotate = fromTheme('hueRotate');
  var invert = fromTheme('invert');
  var gap = fromTheme('gap');
  var gradientColorStops = fromTheme('gradientColorStops');
  var inset = fromTheme('inset');
  var margin = fromTheme('margin');
  var opacity = fromTheme('opacity');
  var padding = fromTheme('padding');
  var saturate = fromTheme('saturate');
  var scale = fromTheme('scale');
  var sepia = fromTheme('sepia');
  var skew = fromTheme('skew');
  var space = fromTheme('space');
  var translate = fromTheme('translate');

  var getOverscroll = function getOverscroll() {
    return ['auto', 'contain', 'none'];
  };

  var getOverflow = function getOverflow() {
    return ['auto', 'hidden', 'clip', 'visible', 'scroll'];
  };

  var getSpacingWithAuto = function getSpacingWithAuto() {
    return ['auto', spacing];
  };

  var getLengthWithEmpty = function getLengthWithEmpty() {
    return ['', isLength];
  };

  var getIntegerWithAuto = function getIntegerWithAuto() {
    return ['auto', isInteger];
  };

  var getPositions = function getPositions() {
    return ['bottom', 'center', 'left', 'left-bottom', 'left-top', 'right', 'right-bottom', 'right-top', 'top'];
  };

  var getLineStyles = function getLineStyles() {
    return ['solid', 'dashed', 'dotted', 'double', 'none'];
  };

  var getBlendModes = function getBlendModes() {
    return ['normal', 'multiply', 'screen', 'overlay', 'darken', 'lighten', 'color-dodge', 'color-burn', 'hard-light', 'soft-light', 'difference', 'exclusion', 'hue', 'saturation', 'color', 'luminosity', 'plus-lighter'];
  };

  var getAlign = function getAlign() {
    return ['start', 'end', 'center', 'between', 'around', 'evenly'];
  };

  var getZeroAndEmpty = function getZeroAndEmpty() {
    return ['', '0', isArbitraryValue];
  };

  var getBreaks = function getBreaks() {
    return ['auto', 'avoid', 'all', 'avoid-page', 'page', 'left', 'right', 'column'];
  };

  return {
    cacheSize: 500,
    theme: {
      colors: [isAny],
      spacing: [isLength],
      blur: ['none', '', isTshirtSize, isArbitraryLength],
      brightness: [isInteger],
      borderColor: [colors],
      borderRadius: ['none', '', 'full', isTshirtSize, isArbitraryLength],
      borderSpacing: [spacing],
      borderWidth: getLengthWithEmpty(),
      contrast: [isInteger],
      grayscale: getZeroAndEmpty(),
      hueRotate: [isInteger],
      invert: getZeroAndEmpty(),
      gap: [spacing],
      gradientColorStops: [colors],
      inset: getSpacingWithAuto(),
      margin: getSpacingWithAuto(),
      opacity: [isInteger],
      padding: [spacing],
      saturate: [isInteger],
      scale: [isInteger],
      sepia: getZeroAndEmpty(),
      skew: [isInteger, isArbitraryValue],
      space: [spacing],
      translate: [spacing]
    },
    classGroups: {
      // Layout

      /**
       * Aspect Ratio
       * @see https://tailwindcss.com/docs/aspect-ratio
       */
      aspect: [{
        aspect: ['auto', 'square', 'video', isArbitraryValue]
      }],

      /**
       * Container
       * @see https://tailwindcss.com/docs/container
       */
      container: ['container'],

      /**
       * Columns
       * @see https://tailwindcss.com/docs/columns
       */
      columns: [{
        columns: [isTshirtSize]
      }],

      /**
       * Break After
       * @see https://tailwindcss.com/docs/break-after
       */
      'break-after': [{
        'break-after': getBreaks()
      }],

      /**
       * Break Before
       * @see https://tailwindcss.com/docs/break-before
       */
      'break-before': [{
        'break-before': getBreaks()
      }],

      /**
       * Break Inside
       * @see https://tailwindcss.com/docs/break-inside
       */
      'break-inside': [{
        'break-inside': ['auto', 'avoid', 'avoid-page', 'avoid-column']
      }],

      /**
       * Box Decoration Break
       * @see https://tailwindcss.com/docs/box-decoration-break
       */
      'box-decoration': [{
        'box-decoration': ['slice', 'clone']
      }],

      /**
       * Box Sizing
       * @see https://tailwindcss.com/docs/box-sizing
       */
      box: [{
        box: ['border', 'content']
      }],

      /**
       * Display
       * @see https://tailwindcss.com/docs/display
       */
      display: ['block', 'inline-block', 'inline', 'flex', 'inline-flex', 'table', 'inline-table', 'table-caption', 'table-cell', 'table-column', 'table-column-group', 'table-footer-group', 'table-header-group', 'table-row-group', 'table-row', 'flow-root', 'grid', 'inline-grid', 'contents', 'list-item', 'hidden'],

      /**
       * Floats
       * @see https://tailwindcss.com/docs/float
       */
      "float": [{
        "float": ['right', 'left', 'none']
      }],

      /**
       * Clear
       * @see https://tailwindcss.com/docs/clear
       */
      clear: [{
        clear: ['left', 'right', 'both', 'none']
      }],

      /**
       * Isolation
       * @see https://tailwindcss.com/docs/isolation
       */
      isolation: ['isolate', 'isolation-auto'],

      /**
       * Object Fit
       * @see https://tailwindcss.com/docs/object-fit
       */
      'object-fit': [{
        object: ['contain', 'cover', 'fill', 'none', 'scale-down']
      }],

      /**
       * Object Position
       * @see https://tailwindcss.com/docs/object-position
       */
      'object-position': [{
        object: [].concat(getPositions(), [isArbitraryValue])
      }],

      /**
       * Overflow
       * @see https://tailwindcss.com/docs/overflow
       */
      overflow: [{
        overflow: getOverflow()
      }],

      /**
       * Overflow X
       * @see https://tailwindcss.com/docs/overflow
       */
      'overflow-x': [{
        'overflow-x': getOverflow()
      }],

      /**
       * Overflow Y
       * @see https://tailwindcss.com/docs/overflow
       */
      'overflow-y': [{
        'overflow-y': getOverflow()
      }],

      /**
       * Overscroll Behavior
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      overscroll: [{
        overscroll: getOverscroll()
      }],

      /**
       * Overscroll Behavior X
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      'overscroll-x': [{
        'overscroll-x': getOverscroll()
      }],

      /**
       * Overscroll Behavior Y
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      'overscroll-y': [{
        'overscroll-y': getOverscroll()
      }],

      /**
       * Position
       * @see https://tailwindcss.com/docs/position
       */
      position: ['static', 'fixed', 'absolute', 'relative', 'sticky'],

      /**
       * Top / Right / Bottom / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      inset: [{
        inset: [inset]
      }],

      /**
       * Right / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      'inset-x': [{
        'inset-x': [inset]
      }],

      /**
       * Top / Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      'inset-y': [{
        'inset-y': [inset]
      }],

      /**
       * Top
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      top: [{
        top: [inset]
      }],

      /**
       * Right
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      right: [{
        right: [inset]
      }],

      /**
       * Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      bottom: [{
        bottom: [inset]
      }],

      /**
       * Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      left: [{
        left: [inset]
      }],

      /**
       * Visibility
       * @see https://tailwindcss.com/docs/visibility
       */
      visibility: ['visible', 'invisible', 'collapse'],

      /**
       * Z-Index
       * @see https://tailwindcss.com/docs/z-index
       */
      z: [{
        z: [isInteger]
      }],
      // Flexbox and Grid

      /**
       * Flex Basis
       * @see https://tailwindcss.com/docs/flex-basis
       */
      basis: [{
        basis: [spacing]
      }],

      /**
       * Flex Direction
       * @see https://tailwindcss.com/docs/flex-direction
       */
      'flex-direction': [{
        flex: ['row', 'row-reverse', 'col', 'col-reverse']
      }],

      /**
       * Flex Wrap
       * @see https://tailwindcss.com/docs/flex-wrap
       */
      'flex-wrap': [{
        flex: ['wrap', 'wrap-reverse', 'nowrap']
      }],

      /**
       * Flex
       * @see https://tailwindcss.com/docs/flex
       */
      flex: [{
        flex: ['1', 'auto', 'initial', 'none', isArbitraryValue]
      }],

      /**
       * Flex Grow
       * @see https://tailwindcss.com/docs/flex-grow
       */
      grow: [{
        grow: getZeroAndEmpty()
      }],

      /**
       * Flex Shrink
       * @see https://tailwindcss.com/docs/flex-shrink
       */
      shrink: [{
        shrink: getZeroAndEmpty()
      }],

      /**
       * Order
       * @see https://tailwindcss.com/docs/order
       */
      order: [{
        order: ['first', 'last', 'none', isInteger]
      }],

      /**
       * Grid Template Columns
       * @see https://tailwindcss.com/docs/grid-template-columns
       */
      'grid-cols': [{
        'grid-cols': [isAny]
      }],

      /**
       * Grid Column Start / End
       * @see https://tailwindcss.com/docs/grid-column
       */
      'col-start-end': [{
        col: ['auto', {
          span: [isInteger]
        }]
      }],

      /**
       * Grid Column Start
       * @see https://tailwindcss.com/docs/grid-column
       */
      'col-start': [{
        'col-start': getIntegerWithAuto()
      }],

      /**
       * Grid Column End
       * @see https://tailwindcss.com/docs/grid-column
       */
      'col-end': [{
        'col-end': getIntegerWithAuto()
      }],

      /**
       * Grid Template Rows
       * @see https://tailwindcss.com/docs/grid-template-rows
       */
      'grid-rows': [{
        'grid-rows': [isAny]
      }],

      /**
       * Grid Row Start / End
       * @see https://tailwindcss.com/docs/grid-row
       */
      'row-start-end': [{
        row: ['auto', {
          span: [isInteger]
        }]
      }],

      /**
       * Grid Row Start
       * @see https://tailwindcss.com/docs/grid-row
       */
      'row-start': [{
        'row-start': getIntegerWithAuto()
      }],

      /**
       * Grid Row End
       * @see https://tailwindcss.com/docs/grid-row
       */
      'row-end': [{
        'row-end': getIntegerWithAuto()
      }],

      /**
       * Grid Auto Flow
       * @see https://tailwindcss.com/docs/grid-auto-flow
       */
      'grid-flow': [{
        'grid-flow': ['row', 'col', 'dense', 'row-dense', 'col-dense']
      }],

      /**
       * Grid Auto Columns
       * @see https://tailwindcss.com/docs/grid-auto-columns
       */
      'auto-cols': [{
        'auto-cols': ['auto', 'min', 'max', 'fr', isArbitraryValue]
      }],

      /**
       * Grid Auto Rows
       * @see https://tailwindcss.com/docs/grid-auto-rows
       */
      'auto-rows': [{
        'auto-rows': ['auto', 'min', 'max', 'fr', isArbitraryValue]
      }],

      /**
       * Gap
       * @see https://tailwindcss.com/docs/gap
       */
      gap: [{
        gap: [gap]
      }],

      /**
       * Gap X
       * @see https://tailwindcss.com/docs/gap
       */
      'gap-x': [{
        'gap-x': [gap]
      }],

      /**
       * Gap Y
       * @see https://tailwindcss.com/docs/gap
       */
      'gap-y': [{
        'gap-y': [gap]
      }],

      /**
       * Justify Content
       * @see https://tailwindcss.com/docs/justify-content
       */
      'justify-content': [{
        justify: getAlign()
      }],

      /**
       * Justify Items
       * @see https://tailwindcss.com/docs/justify-items
       */
      'justify-items': [{
        'justify-items': ['start', 'end', 'center', 'stretch']
      }],

      /**
       * Justify Self
       * @see https://tailwindcss.com/docs/justify-self
       */
      'justify-self': [{
        'justify-self': ['auto', 'start', 'end', 'center', 'stretch']
      }],

      /**
       * Align Content
       * @see https://tailwindcss.com/docs/align-content
       */
      'align-content': [{
        content: [].concat(getAlign(), ['baseline'])
      }],

      /**
       * Align Items
       * @see https://tailwindcss.com/docs/align-items
       */
      'align-items': [{
        items: ['start', 'end', 'center', 'baseline', 'stretch']
      }],

      /**
       * Align Self
       * @see https://tailwindcss.com/docs/align-self
       */
      'align-self': [{
        self: ['auto', 'start', 'end', 'center', 'stretch', 'baseline']
      }],

      /**
       * Place Content
       * @see https://tailwindcss.com/docs/place-content
       */
      'place-content': [{
        'place-content': [].concat(getAlign(), ['baseline', 'stretch'])
      }],

      /**
       * Place Items
       * @see https://tailwindcss.com/docs/place-items
       */
      'place-items': [{
        'place-items': ['start', 'end', 'center', 'baseline', 'stretch']
      }],

      /**
       * Place Self
       * @see https://tailwindcss.com/docs/place-self
       */
      'place-self': [{
        'place-self': ['auto', 'start', 'end', 'center', 'stretch']
      }],
      // Spacing

      /**
       * Padding
       * @see https://tailwindcss.com/docs/padding
       */
      p: [{
        p: [padding]
      }],

      /**
       * Padding X
       * @see https://tailwindcss.com/docs/padding
       */
      px: [{
        px: [padding]
      }],

      /**
       * Padding Y
       * @see https://tailwindcss.com/docs/padding
       */
      py: [{
        py: [padding]
      }],

      /**
       * Padding Top
       * @see https://tailwindcss.com/docs/padding
       */
      pt: [{
        pt: [padding]
      }],

      /**
       * Padding Right
       * @see https://tailwindcss.com/docs/padding
       */
      pr: [{
        pr: [padding]
      }],

      /**
       * Padding Bottom
       * @see https://tailwindcss.com/docs/padding
       */
      pb: [{
        pb: [padding]
      }],

      /**
       * Padding Left
       * @see https://tailwindcss.com/docs/padding
       */
      pl: [{
        pl: [padding]
      }],

      /**
       * Margin
       * @see https://tailwindcss.com/docs/margin
       */
      m: [{
        m: [margin]
      }],

      /**
       * Margin X
       * @see https://tailwindcss.com/docs/margin
       */
      mx: [{
        mx: [margin]
      }],

      /**
       * Margin Y
       * @see https://tailwindcss.com/docs/margin
       */
      my: [{
        my: [margin]
      }],

      /**
       * Margin Top
       * @see https://tailwindcss.com/docs/margin
       */
      mt: [{
        mt: [margin]
      }],

      /**
       * Margin Right
       * @see https://tailwindcss.com/docs/margin
       */
      mr: [{
        mr: [margin]
      }],

      /**
       * Margin Bottom
       * @see https://tailwindcss.com/docs/margin
       */
      mb: [{
        mb: [margin]
      }],

      /**
       * Margin Left
       * @see https://tailwindcss.com/docs/margin
       */
      ml: [{
        ml: [margin]
      }],

      /**
       * Space Between X
       * @see https://tailwindcss.com/docs/space
       */
      'space-x': [{
        'space-x': [space]
      }],

      /**
       * Space Between X Reverse
       * @see https://tailwindcss.com/docs/space
       */
      'space-x-reverse': ['space-x-reverse'],

      /**
       * Space Between Y
       * @see https://tailwindcss.com/docs/space
       */
      'space-y': [{
        'space-y': [space]
      }],

      /**
       * Space Between Y Reverse
       * @see https://tailwindcss.com/docs/space
       */
      'space-y-reverse': ['space-y-reverse'],
      // Sizing

      /**
       * Width
       * @see https://tailwindcss.com/docs/width
       */
      w: [{
        w: ['auto', 'min', 'max', 'fit', spacing]
      }],

      /**
       * Min-Width
       * @see https://tailwindcss.com/docs/min-width
       */
      'min-w': [{
        'min-w': ['min', 'max', 'fit', isLength]
      }],

      /**
       * Max-Width
       * @see https://tailwindcss.com/docs/max-width
       */
      'max-w': [{
        'max-w': ['0', 'none', 'full', 'min', 'max', 'fit', 'prose', {
          screen: [isTshirtSize]
        }, isTshirtSize, isArbitraryLength]
      }],

      /**
       * Height
       * @see https://tailwindcss.com/docs/height
       */
      h: [{
        h: [spacing, 'auto', 'min', 'max', 'fit']
      }],

      /**
       * Min-Height
       * @see https://tailwindcss.com/docs/min-height
       */
      'min-h': [{
        'min-h': ['min', 'max', 'fit', isLength]
      }],

      /**
       * Max-Height
       * @see https://tailwindcss.com/docs/max-height
       */
      'max-h': [{
        'max-h': [spacing, 'min', 'max', 'fit']
      }],
      // Typography

      /**
       * Font Size
       * @see https://tailwindcss.com/docs/font-size
       */
      'font-size': [{
        text: ['base', isTshirtSize, isArbitraryLength]
      }],

      /**
       * Font Smoothing
       * @see https://tailwindcss.com/docs/font-smoothing
       */
      'font-smoothing': ['antialiased', 'subpixel-antialiased'],

      /**
       * Font Style
       * @see https://tailwindcss.com/docs/font-style
       */
      'font-style': ['italic', 'not-italic'],

      /**
       * Font Weight
       * @see https://tailwindcss.com/docs/font-weight
       */
      'font-weight': [{
        font: ['thin', 'extralight', 'light', 'normal', 'medium', 'semibold', 'bold', 'extrabold', 'black', isArbitraryNumber]
      }],

      /**
       * Font Family
       * @see https://tailwindcss.com/docs/font-family
       */
      'font-family': [{
        font: [isAny]
      }],

      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      'fvn-normal': ['normal-nums'],

      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      'fvn-ordinal': ['ordinal'],

      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      'fvn-slashed-zero': ['slashed-zero'],

      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      'fvn-figure': ['lining-nums', 'oldstyle-nums'],

      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      'fvn-spacing': ['proportional-nums', 'tabular-nums'],

      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      'fvn-fraction': ['diagonal-fractions', 'stacked-fractons'],

      /**
       * Letter Spacing
       * @see https://tailwindcss.com/docs/letter-spacing
       */
      tracking: [{
        tracking: ['tighter', 'tight', 'normal', 'wide', 'wider', 'widest', isArbitraryLength]
      }],

      /**
       * Line Height
       * @see https://tailwindcss.com/docs/line-height
       */
      leading: [{
        leading: ['none', 'tight', 'snug', 'normal', 'relaxed', 'loose', isLength]
      }],

      /**
       * List Style Type
       * @see https://tailwindcss.com/docs/list-style-type
       */
      'list-style-type': [{
        list: ['none', 'disc', 'decimal', isArbitraryValue]
      }],

      /**
       * List Style Position
       * @see https://tailwindcss.com/docs/list-style-position
       */
      'list-style-position': [{
        list: ['inside', 'outside']
      }],

      /**
       * Placeholder Color
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/placeholder-color
       */
      'placeholder-color': [{
        placeholder: [colors]
      }],

      /**
       * Placeholder Opacity
       * @see https://tailwindcss.com/docs/placeholder-opacity
       */
      'placeholder-opacity': [{
        'placeholder-opacity': [opacity]
      }],

      /**
       * Text Alignment
       * @see https://tailwindcss.com/docs/text-align
       */
      'text-alignment': [{
        text: ['left', 'center', 'right', 'justify', 'start', 'end']
      }],

      /**
       * Text Color
       * @see https://tailwindcss.com/docs/text-color
       */
      'text-color': [{
        text: [colors]
      }],

      /**
       * Text Opacity
       * @see https://tailwindcss.com/docs/text-opacity
       */
      'text-opacity': [{
        'text-opacity': [opacity]
      }],

      /**
       * Text Decoration
       * @see https://tailwindcss.com/docs/text-decoration
       */
      'text-decoration': ['underline', 'overline', 'line-through', 'no-underline'],

      /**
       * Text Decoration Style
       * @see https://tailwindcss.com/docs/text-decoration-style
       */
      'text-decoration-style': [{
        decoration: [].concat(getLineStyles(), ['wavy'])
      }],

      /**
       * Text Decoration Thickness
       * @see https://tailwindcss.com/docs/text-decoration-thickness
       */
      'text-decoration-thickness': [{
        decoration: ['auto', 'from-font', isLength]
      }],

      /**
       * Text Underline Offset
       * @see https://tailwindcss.com/docs/text-underline-offset
       */
      'underline-offset': [{
        'underline-offset': ['auto', isLength]
      }],

      /**
       * Text Decoration Color
       * @see https://tailwindcss.com/docs/text-decoration-color
       */
      'text-decoration-color': [{
        decoration: [colors]
      }],

      /**
       * Text Transform
       * @see https://tailwindcss.com/docs/text-transform
       */
      'text-transform': ['uppercase', 'lowercase', 'capitalize', 'normal-case'],

      /**
       * Text Overflow
       * @see https://tailwindcss.com/docs/text-overflow
       */
      'text-overflow': ['truncate', 'text-ellipsis', 'text-clip'],

      /**
       * Text Indent
       * @see https://tailwindcss.com/docs/text-indent
       */
      indent: [{
        indent: [spacing]
      }],

      /**
       * Vertical Alignment
       * @see https://tailwindcss.com/docs/vertical-align
       */
      'vertical-align': [{
        align: ['baseline', 'top', 'middle', 'bottom', 'text-top', 'text-bottom', 'sub', 'super', isArbitraryLength]
      }],

      /**
       * Whitespace
       * @see https://tailwindcss.com/docs/whitespace
       */
      whitespace: [{
        whitespace: ['normal', 'nowrap', 'pre', 'pre-line', 'pre-wrap']
      }],

      /**
       * Word Break
       * @see https://tailwindcss.com/docs/word-break
       */
      "break": [{
        "break": ['normal', 'words', 'all', 'keep']
      }],

      /**
       * Content
       * @see https://tailwindcss.com/docs/content
       */
      content: [{
        content: ['none', isArbitraryValue]
      }],
      // Backgrounds

      /**
       * Background Attachment
       * @see https://tailwindcss.com/docs/background-attachment
       */
      'bg-attachment': [{
        bg: ['fixed', 'local', 'scroll']
      }],

      /**
       * Background Clip
       * @see https://tailwindcss.com/docs/background-clip
       */
      'bg-clip': [{
        'bg-clip': ['border', 'padding', 'content', 'text']
      }],

      /**
       * Background Opacity
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/background-opacity
       */
      'bg-opacity': [{
        'bg-opacity': [opacity]
      }],

      /**
       * Background Origin
       * @see https://tailwindcss.com/docs/background-origin
       */
      'bg-origin': [{
        'bg-origin': ['border', 'padding', 'content']
      }],

      /**
       * Background Position
       * @see https://tailwindcss.com/docs/background-position
       */
      'bg-position': [{
        bg: [].concat(getPositions(), [isArbitraryPosition])
      }],

      /**
       * Background Repeat
       * @see https://tailwindcss.com/docs/background-repeat
       */
      'bg-repeat': [{
        bg: ['no-repeat', {
          repeat: ['', 'x', 'y', 'round', 'space']
        }]
      }],

      /**
       * Background Size
       * @see https://tailwindcss.com/docs/background-size
       */
      'bg-size': [{
        bg: ['auto', 'cover', 'contain', isArbitrarySize]
      }],

      /**
       * Background Image
       * @see https://tailwindcss.com/docs/background-image
       */
      'bg-image': [{
        bg: ['none', {
          'gradient-to': ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl']
        }, isArbitraryUrl]
      }],

      /**
       * Background Color
       * @see https://tailwindcss.com/docs/background-color
       */
      'bg-color': [{
        bg: [colors]
      }],

      /**
       * Gradient Color Stops From
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      'gradient-from': [{
        from: [gradientColorStops]
      }],

      /**
       * Gradient Color Stops Via
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      'gradient-via': [{
        via: [gradientColorStops]
      }],

      /**
       * Gradient Color Stops To
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      'gradient-to': [{
        to: [gradientColorStops]
      }],
      // Borders

      /**
       * Border Radius
       * @see https://tailwindcss.com/docs/border-radius
       */
      rounded: [{
        rounded: [borderRadius]
      }],

      /**
       * Border Radius Top
       * @see https://tailwindcss.com/docs/border-radius
       */
      'rounded-t': [{
        'rounded-t': [borderRadius]
      }],

      /**
       * Border Radius Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      'rounded-r': [{
        'rounded-r': [borderRadius]
      }],

      /**
       * Border Radius Bottom
       * @see https://tailwindcss.com/docs/border-radius
       */
      'rounded-b': [{
        'rounded-b': [borderRadius]
      }],

      /**
       * Border Radius Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      'rounded-l': [{
        'rounded-l': [borderRadius]
      }],

      /**
       * Border Radius Top Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      'rounded-tl': [{
        'rounded-tl': [borderRadius]
      }],

      /**
       * Border Radius Top Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      'rounded-tr': [{
        'rounded-tr': [borderRadius]
      }],

      /**
       * Border Radius Bottom Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      'rounded-br': [{
        'rounded-br': [borderRadius]
      }],

      /**
       * Border Radius Bottom Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      'rounded-bl': [{
        'rounded-bl': [borderRadius]
      }],

      /**
       * Border Width
       * @see https://tailwindcss.com/docs/border-width
       */
      'border-w': [{
        border: [borderWidth]
      }],

      /**
       * Border Width X
       * @see https://tailwindcss.com/docs/border-width
       */
      'border-w-x': [{
        'border-x': [borderWidth]
      }],

      /**
       * Border Width Y
       * @see https://tailwindcss.com/docs/border-width
       */
      'border-w-y': [{
        'border-y': [borderWidth]
      }],

      /**
       * Border Width Top
       * @see https://tailwindcss.com/docs/border-width
       */
      'border-w-t': [{
        'border-t': [borderWidth]
      }],

      /**
       * Border Width Right
       * @see https://tailwindcss.com/docs/border-width
       */
      'border-w-r': [{
        'border-r': [borderWidth]
      }],

      /**
       * Border Width Bottom
       * @see https://tailwindcss.com/docs/border-width
       */
      'border-w-b': [{
        'border-b': [borderWidth]
      }],

      /**
       * Border Width Left
       * @see https://tailwindcss.com/docs/border-width
       */
      'border-w-l': [{
        'border-l': [borderWidth]
      }],

      /**
       * Border Opacity
       * @see https://tailwindcss.com/docs/border-opacity
       */
      'border-opacity': [{
        'border-opacity': [opacity]
      }],

      /**
       * Border Style
       * @see https://tailwindcss.com/docs/border-style
       */
      'border-style': [{
        border: [].concat(getLineStyles(), ['hidden'])
      }],

      /**
       * Divide Width X
       * @see https://tailwindcss.com/docs/divide-width
       */
      'divide-x': [{
        'divide-x': [borderWidth]
      }],

      /**
       * Divide Width X Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      'divide-x-reverse': ['divide-x-reverse'],

      /**
       * Divide Width Y
       * @see https://tailwindcss.com/docs/divide-width
       */
      'divide-y': [{
        'divide-y': [borderWidth]
      }],

      /**
       * Divide Width Y Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      'divide-y-reverse': ['divide-y-reverse'],

      /**
       * Divide Opacity
       * @see https://tailwindcss.com/docs/divide-opacity
       */
      'divide-opacity': [{
        'divide-opacity': [opacity]
      }],

      /**
       * Divide Style
       * @see https://tailwindcss.com/docs/divide-style
       */
      'divide-style': [{
        divide: getLineStyles()
      }],

      /**
       * Border Color
       * @see https://tailwindcss.com/docs/border-color
       */
      'border-color': [{
        border: [borderColor]
      }],

      /**
       * Border Color X
       * @see https://tailwindcss.com/docs/border-color
       */
      'border-color-x': [{
        'border-x': [borderColor]
      }],

      /**
       * Border Color Y
       * @see https://tailwindcss.com/docs/border-color
       */
      'border-color-y': [{
        'border-y': [borderColor]
      }],

      /**
       * Border Color Top
       * @see https://tailwindcss.com/docs/border-color
       */
      'border-color-t': [{
        'border-t': [borderColor]
      }],

      /**
       * Border Color Right
       * @see https://tailwindcss.com/docs/border-color
       */
      'border-color-r': [{
        'border-r': [borderColor]
      }],

      /**
       * Border Color Bottom
       * @see https://tailwindcss.com/docs/border-color
       */
      'border-color-b': [{
        'border-b': [borderColor]
      }],

      /**
       * Border Color Left
       * @see https://tailwindcss.com/docs/border-color
       */
      'border-color-l': [{
        'border-l': [borderColor]
      }],

      /**
       * Divide Color
       * @see https://tailwindcss.com/docs/divide-color
       */
      'divide-color': [{
        divide: [borderColor]
      }],

      /**
       * Outline Style
       * @see https://tailwindcss.com/docs/outline-style
       */
      'outline-style': [{
        outline: [''].concat(getLineStyles())
      }],

      /**
       * Outline Offset
       * @see https://tailwindcss.com/docs/outline-offset
       */
      'outline-offset': [{
        'outline-offset': [isLength]
      }],

      /**
       * Outline Width
       * @see https://tailwindcss.com/docs/outline-width
       */
      'outline-w': [{
        outline: [isLength]
      }],

      /**
       * Outline Color
       * @see https://tailwindcss.com/docs/outline-color
       */
      'outline-color': [{
        outline: [colors]
      }],

      /**
       * Ring Width
       * @see https://tailwindcss.com/docs/ring-width
       */
      'ring-w': [{
        ring: getLengthWithEmpty()
      }],

      /**
       * Ring Width Inset
       * @see https://tailwindcss.com/docs/ring-width
       */
      'ring-w-inset': ['ring-inset'],

      /**
       * Ring Color
       * @see https://tailwindcss.com/docs/ring-color
       */
      'ring-color': [{
        ring: [colors]
      }],

      /**
       * Ring Opacity
       * @see https://tailwindcss.com/docs/ring-opacity
       */
      'ring-opacity': [{
        'ring-opacity': [opacity]
      }],

      /**
       * Ring Offset Width
       * @see https://tailwindcss.com/docs/ring-offset-width
       */
      'ring-offset-w': [{
        'ring-offset': [isLength]
      }],

      /**
       * Ring Offset Color
       * @see https://tailwindcss.com/docs/ring-offset-color
       */
      'ring-offset-color': [{
        'ring-offset': [colors]
      }],
      // Effects

      /**
       * Box Shadow
       * @see https://tailwindcss.com/docs/box-shadow
       */
      shadow: [{
        shadow: ['', 'inner', 'none', isTshirtSize, isArbitraryShadow]
      }],

      /**
       * Box Shadow Color
       * @see https://tailwindcss.com/docs/box-shadow-color
       */
      'shadow-color': [{
        shadow: [isAny]
      }],

      /**
       * Opacity
       * @see https://tailwindcss.com/docs/opacity
       */
      opacity: [{
        opacity: [opacity]
      }],

      /**
       * Mix Beldn Mode
       * @see https://tailwindcss.com/docs/mix-blend-mode
       */
      'mix-blend': [{
        'mix-blend': getBlendModes()
      }],

      /**
       * Background Blend Mode
       * @see https://tailwindcss.com/docs/background-blend-mode
       */
      'bg-blend': [{
        'bg-blend': getBlendModes()
      }],
      // Filters

      /**
       * Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/filter
       */
      filter: [{
        filter: ['', 'none']
      }],

      /**
       * Blur
       * @see https://tailwindcss.com/docs/blur
       */
      blur: [{
        blur: [blur]
      }],

      /**
       * Brightness
       * @see https://tailwindcss.com/docs/brightness
       */
      brightness: [{
        brightness: [brightness]
      }],

      /**
       * Contrast
       * @see https://tailwindcss.com/docs/contrast
       */
      contrast: [{
        contrast: [contrast]
      }],

      /**
       * Drop Shadow
       * @see https://tailwindcss.com/docs/drop-shadow
       */
      'drop-shadow': [{
        'drop-shadow': ['', 'none', isTshirtSize, isArbitraryValue]
      }],

      /**
       * Grayscale
       * @see https://tailwindcss.com/docs/grayscale
       */
      grayscale: [{
        grayscale: [grayscale]
      }],

      /**
       * Hue Rotate
       * @see https://tailwindcss.com/docs/hue-rotate
       */
      'hue-rotate': [{
        'hue-rotate': [hueRotate]
      }],

      /**
       * Invert
       * @see https://tailwindcss.com/docs/invert
       */
      invert: [{
        invert: [invert]
      }],

      /**
       * Saturate
       * @see https://tailwindcss.com/docs/saturate
       */
      saturate: [{
        saturate: [saturate]
      }],

      /**
       * Sepia
       * @see https://tailwindcss.com/docs/sepia
       */
      sepia: [{
        sepia: [sepia]
      }],

      /**
       * Backdrop Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/backdrop-filter
       */
      'backdrop-filter': [{
        'backdrop-filter': ['', 'none']
      }],

      /**
       * Backdrop Blur
       * @see https://tailwindcss.com/docs/backdrop-blur
       */
      'backdrop-blur': [{
        'backdrop-blur': [blur]
      }],

      /**
       * Backdrop Brightness
       * @see https://tailwindcss.com/docs/backdrop-brightness
       */
      'backdrop-brightness': [{
        'backdrop-brightness': [brightness]
      }],

      /**
       * Backdrop Contrast
       * @see https://tailwindcss.com/docs/backdrop-contrast
       */
      'backdrop-contrast': [{
        'backdrop-contrast': [contrast]
      }],

      /**
       * Backdrop Grayscale
       * @see https://tailwindcss.com/docs/backdrop-grayscale
       */
      'backdrop-grayscale': [{
        'backdrop-grayscale': [grayscale]
      }],

      /**
       * Backdrop Hue Rotate
       * @see https://tailwindcss.com/docs/backdrop-hue-rotate
       */
      'backdrop-hue-rotate': [{
        'backdrop-hue-rotate': [hueRotate]
      }],

      /**
       * Backdrop Invert
       * @see https://tailwindcss.com/docs/backdrop-invert
       */
      'backdrop-invert': [{
        'backdrop-invert': [invert]
      }],

      /**
       * Backdrop Opacity
       * @see https://tailwindcss.com/docs/backdrop-opacity
       */
      'backdrop-opacity': [{
        'backdrop-opacity': [opacity]
      }],

      /**
       * Backdrop Saturate
       * @see https://tailwindcss.com/docs/backdrop-saturate
       */
      'backdrop-saturate': [{
        'backdrop-saturate': [saturate]
      }],

      /**
       * Backdrop Sepia
       * @see https://tailwindcss.com/docs/backdrop-sepia
       */
      'backdrop-sepia': [{
        'backdrop-sepia': [sepia]
      }],
      // Tables

      /**
       * Border Collapse
       * @see https://tailwindcss.com/docs/border-collapse
       */
      'border-collapse': [{
        border: ['collapse', 'separate']
      }],

      /**
       * Border Spacing
       * @see https://tailwindcss.com/docs/border-spacing
       */
      'border-spacing': [{
        'border-spacing': [borderSpacing]
      }],

      /**
       * Border Spacing X
       * @see https://tailwindcss.com/docs/border-spacing
       */
      'border-spacing-x': [{
        'border-spacing-x': [borderSpacing]
      }],

      /**
       * Border Spacing Y
       * @see https://tailwindcss.com/docs/border-spacing
       */
      'border-spacing-y': [{
        'border-spacing-y': [borderSpacing]
      }],

      /**
       * Table Layout
       * @see https://tailwindcss.com/docs/table-layout
       */
      'table-layout': [{
        table: ['auto', 'fixed']
      }],
      // Transitions and Animation

      /**
       * Tranisition Property
       * @see https://tailwindcss.com/docs/transition-property
       */
      transition: [{
        transition: ['none', 'all', '', 'colors', 'opacity', 'shadow', 'transform', isArbitraryValue]
      }],

      /**
       * Transition Duration
       * @see https://tailwindcss.com/docs/transition-duration
       */
      duration: [{
        duration: [isInteger]
      }],

      /**
       * Transition Timing Function
       * @see https://tailwindcss.com/docs/transition-timing-function
       */
      ease: [{
        ease: ['linear', 'in', 'out', 'in-out', isArbitraryValue]
      }],

      /**
       * Transition Delay
       * @see https://tailwindcss.com/docs/transition-delay
       */
      delay: [{
        delay: [isInteger]
      }],

      /**
       * Animation
       * @see https://tailwindcss.com/docs/animation
       */
      animate: [{
        animate: ['none', 'spin', 'ping', 'pulse', 'bounce', isArbitraryValue]
      }],
      // Transforms

      /**
       * Transform
       * @see https://tailwindcss.com/docs/transform
       */
      transform: [{
        transform: ['', 'gpu', 'none']
      }],

      /**
       * Scale
       * @see https://tailwindcss.com/docs/scale
       */
      scale: [{
        scale: [scale]
      }],

      /**
       * Scale X
       * @see https://tailwindcss.com/docs/scale
       */
      'scale-x': [{
        'scale-x': [scale]
      }],

      /**
       * Scale Y
       * @see https://tailwindcss.com/docs/scale
       */
      'scale-y': [{
        'scale-y': [scale]
      }],

      /**
       * Rotate
       * @see https://tailwindcss.com/docs/rotate
       */
      rotate: [{
        rotate: [isInteger, isArbitraryValue]
      }],

      /**
       * Translate X
       * @see https://tailwindcss.com/docs/translate
       */
      'translate-x': [{
        'translate-x': [translate]
      }],

      /**
       * Translate Y
       * @see https://tailwindcss.com/docs/translate
       */
      'translate-y': [{
        'translate-y': [translate]
      }],

      /**
       * Skew X
       * @see https://tailwindcss.com/docs/skew
       */
      'skew-x': [{
        'skew-x': [skew]
      }],

      /**
       * Skew Y
       * @see https://tailwindcss.com/docs/skew
       */
      'skew-y': [{
        'skew-y': [skew]
      }],

      /**
       * Transform Origin
       * @see https://tailwindcss.com/docs/transform-origin
       */
      'transform-origin': [{
        origin: ['center', 'top', 'top-right', 'right', 'bottom-right', 'bottom', 'bottom-left', 'left', 'top-left', isArbitraryValue]
      }],
      // Interactivity

      /**
       * Accent Color
       * @see https://tailwindcss.com/docs/accent-color
       */
      accent: [{
        accent: ['auto', colors]
      }],

      /**
       * Appearance
       * @see https://tailwindcss.com/docs/appearance
       */
      appearance: ['appearance-none'],

      /**
       * Cursor
       * @see https://tailwindcss.com/docs/cursor
       */
      cursor: [{
        cursor: ['auto', 'default', 'pointer', 'wait', 'text', 'move', 'help', 'not-allowed', 'none', 'context-menu', 'progress', 'cell', 'crosshair', 'vertical-text', 'alias', 'copy', 'no-drop', 'grab', 'grabbing', 'all-scroll', 'col-resize', 'row-resize', 'n-resize', 'e-resize', 's-resize', 'w-resize', 'ne-resize', 'nw-resize', 'se-resize', 'sw-resize', 'ew-resize', 'ns-resize', 'nesw-resize', 'nwse-resize', 'zoom-in', 'zoom-out', isArbitraryValue]
      }],

      /**
       * Caret Color
       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities
       */
      'caret-color': [{
        caret: [colors]
      }],

      /**
       * Pointer Events
       * @see https://tailwindcss.com/docs/pointer-events
       */
      'pointer-events': [{
        'pointer-events': ['none', 'auto']
      }],

      /**
       * Resize
       * @see https://tailwindcss.com/docs/resize
       */
      resize: [{
        resize: ['none', 'y', 'x', '']
      }],

      /**
       * Scroll Behavior
       * @see https://tailwindcss.com/docs/scroll-behavior
       */
      'scroll-behavior': [{
        scroll: ['auto', 'smooth']
      }],

      /**
       * Scroll Margin
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      'scroll-m': [{
        'scroll-m': [spacing]
      }],

      /**
       * Scroll Margin X
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      'scroll-mx': [{
        'scroll-mx': [spacing]
      }],

      /**
       * Scroll Margin Y
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      'scroll-my': [{
        'scroll-my': [spacing]
      }],

      /**
       * Scroll Margin Top
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      'scroll-mt': [{
        'scroll-mt': [spacing]
      }],

      /**
       * Scroll Margin Right
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      'scroll-mr': [{
        'scroll-mr': [spacing]
      }],

      /**
       * Scroll Margin Bottom
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      'scroll-mb': [{
        'scroll-mb': [spacing]
      }],

      /**
       * Scroll Margin Left
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      'scroll-ml': [{
        'scroll-ml': [spacing]
      }],

      /**
       * Scroll Padding
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      'scroll-p': [{
        'scroll-p': [spacing]
      }],

      /**
       * Scroll Padding X
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      'scroll-px': [{
        'scroll-px': [spacing]
      }],

      /**
       * Scroll Padding Y
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      'scroll-py': [{
        'scroll-py': [spacing]
      }],

      /**
       * Scroll Padding Top
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      'scroll-pt': [{
        'scroll-pt': [spacing]
      }],

      /**
       * Scroll Padding Right
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      'scroll-pr': [{
        'scroll-pr': [spacing]
      }],

      /**
       * Scroll Padding Bottom
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      'scroll-pb': [{
        'scroll-pb': [spacing]
      }],

      /**
       * Scroll Padding Left
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      'scroll-pl': [{
        'scroll-pl': [spacing]
      }],

      /**
       * Scroll Snap Align
       * @see https://tailwindcss.com/docs/scroll-snap-align
       */
      'snap-align': [{
        snap: ['start', 'end', 'center', 'align-none']
      }],

      /**
       * Scroll Snap Stop
       * @see https://tailwindcss.com/docs/scroll-snap-stop
       */
      'snap-stop': [{
        snap: ['normal', 'always']
      }],

      /**
       * Scroll Snap Type
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      'snap-type': [{
        snap: ['none', 'x', 'y', 'both']
      }],

      /**
       * Scroll Snap Type Strictness
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      'snap-strictness': [{
        snap: ['mandatory', 'proximity']
      }],

      /**
       * Touch Action
       * @see https://tailwindcss.com/docs/touch-action
       */
      touch: [{
        touch: ['auto', 'none', 'pinch-zoom', 'manipulation', {
          pan: ['x', 'left', 'right', 'y', 'up', 'down']
        }]
      }],

      /**
       * User Select
       * @see https://tailwindcss.com/docs/user-select
       */
      select: [{
        select: ['none', 'text', 'all', 'auto']
      }],

      /**
       * Will Change
       * @see https://tailwindcss.com/docs/will-change
       */
      'will-change': [{
        'will-change': ['auto', 'scroll', 'contents', 'transform', isArbitraryValue]
      }],
      // SVG

      /**
       * Fill
       * @see https://tailwindcss.com/docs/fill
       */
      fill: [{
        fill: [colors, 'none']
      }],

      /**
       * Stroke Width
       * @see https://tailwindcss.com/docs/stroke-width
       */
      'stroke-w': [{
        stroke: [isLength, isArbitraryNumber]
      }],

      /**
       * Stroke
       * @see https://tailwindcss.com/docs/stroke
       */
      stroke: [{
        stroke: [colors, 'none']
      }],
      // Accessibility

      /**
       * Screen Readers
       * @see https://tailwindcss.com/docs/screen-readers
       */
      sr: ['sr-only', 'not-sr-only']
    },
    conflictingClassGroups: {
      overflow: ['overflow-x', 'overflow-y'],
      overscroll: ['overscroll-x', 'overscroll-y'],
      inset: ['inset-x', 'inset-y', 'top', 'right', 'bottom', 'left'],
      'inset-x': ['right', 'left'],
      'inset-y': ['top', 'bottom'],
      flex: ['basis', 'grow', 'shrink'],
      gap: ['gap-x', 'gap-y'],
      p: ['px', 'py', 'pt', 'pr', 'pb', 'pl'],
      px: ['pr', 'pl'],
      py: ['pt', 'pb'],
      m: ['mx', 'my', 'mt', 'mr', 'mb', 'ml'],
      mx: ['mr', 'ml'],
      my: ['mt', 'mb'],
      'font-size': ['leading'],
      'fvn-normal': ['fvn-ordinal', 'fvn-slashed-zero', 'fvn-figure', 'fvn-spacing', 'fvn-fraction'],
      'fvn-ordinal': ['fvn-normal'],
      'fvn-slashed-zero': ['fvn-normal'],
      'fvn-figure': ['fvn-normal'],
      'fvn-spacing': ['fvn-normal'],
      'fvn-fraction': ['fvn-normal'],
      rounded: ['rounded-t', 'rounded-r', 'rounded-b', 'rounded-l', 'rounded-tl', 'rounded-tr', 'rounded-br', 'rounded-bl'],
      'rounded-t': ['rounded-tl', 'rounded-tr'],
      'rounded-r': ['rounded-tr', 'rounded-br'],
      'rounded-b': ['rounded-br', 'rounded-bl'],
      'rounded-l': ['rounded-tl', 'rounded-bl'],
      'border-spacing': ['border-spacing-x', 'border-spacing-y'],
      'border-w': ['border-w-t', 'border-w-r', 'border-w-b', 'border-w-l'],
      'border-w-x': ['border-w-r', 'border-w-l'],
      'border-w-y': ['border-w-t', 'border-w-b'],
      'border-color': ['border-color-t', 'border-color-r', 'border-color-b', 'border-color-l'],
      'border-color-x': ['border-color-r', 'border-color-l'],
      'border-color-y': ['border-color-t', 'border-color-b'],
      'scroll-m': ['scroll-mx', 'scroll-my', 'scroll-mt', 'scroll-mr', 'scroll-mb', 'scroll-ml'],
      'scroll-mx': ['scroll-mr', 'scroll-ml'],
      'scroll-my': ['scroll-mt', 'scroll-mb'],
      'scroll-p': ['scroll-px', 'scroll-py', 'scroll-pt', 'scroll-pr', 'scroll-pb', 'scroll-pl'],
      'scroll-px': ['scroll-pr', 'scroll-pl'],
      'scroll-py': ['scroll-pt', 'scroll-pb']
    }
  };
}

var twMerge = /*#__PURE__*/createTailwindMerge(getDefaultConfig);

/**
 * @param baseConfig Config where other config will be merged into. This object will be mutated.
 * @param configExtension Partial config to merge into the `baseConfig`.
 */
function mergeConfigs(baseConfig, configExtension) {
  for (var key in configExtension) {
    mergePropertyRecursively(baseConfig, key, configExtension[key]);
  }

  return baseConfig;
}
var hasOwnProperty = Object.prototype.hasOwnProperty;
var overrideTypes = /*#__PURE__*/new Set(['string', 'number', 'boolean']);

function mergePropertyRecursively(baseObject, mergeKey, mergeValue) {
  if (!hasOwnProperty.call(baseObject, mergeKey) || overrideTypes.has(typeof mergeValue) || mergeValue === null) {
    baseObject[mergeKey] = mergeValue;
    return;
  }

  if (Array.isArray(mergeValue) && Array.isArray(baseObject[mergeKey])) {
    baseObject[mergeKey] = baseObject[mergeKey].concat(mergeValue);
    return;
  }

  if (typeof mergeValue === 'object' && typeof baseObject[mergeKey] === 'object') {
    if (baseObject[mergeKey] === null) {
      baseObject[mergeKey] = mergeValue;
      return;
    }

    for (var nextKey in mergeValue) {
      mergePropertyRecursively(baseObject[mergeKey], nextKey, mergeValue[nextKey]);
    }
  }
}

function extendTailwindMerge(configExtension) {
  for (var _len = arguments.length, createConfig = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    createConfig[_key - 1] = arguments[_key];
  }

  return typeof configExtension === 'function' ? createTailwindMerge.apply(void 0, [getDefaultConfig, configExtension].concat(createConfig)) : createTailwindMerge.apply(void 0, [function () {
    return mergeConfigs(getDefaultConfig(), configExtension);
  }].concat(createConfig));
}

/**
 * @deprecated Will be removed in next major version. Use `twJoin` instead.
 */

var join = twJoin;

exports.createTailwindMerge = createTailwindMerge;
exports.extendTailwindMerge = extendTailwindMerge;
exports.fromTheme = fromTheme;
exports.getDefaultConfig = getDefaultConfig;
exports.join = join;
exports.mergeConfigs = mergeConfigs;
exports.twJoin = twJoin;
exports.twMerge = twMerge;
exports.validators = validators;
//# sourceMappingURL=tailwind-merge.cjs.development.js.map


/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/accordion/index.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/accordion/index.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{accordion:function(){return accordion},default:function(){return _default}});var accordion={defaultProps:{icon:undefined,className:"",animate:{unmount:{},mount:{}},disabled:false},styles:{base:{container:{display:"block",position:"relative",width:"w-full"},header:{initial:{display:"flex",justifyContent:"justify-between",alignItems:"items-center",width:"w-full",py:"py-4",borderWidth:"border-b border-b-blue-gray-100",color:"text-blue-gray-700",fontSmoothing:"antialiased",fontFamily:"font-sans",fontSize:"text-xl",textAlign:"text-left",fontWeight:"font-semibold",lineHeight:"leading-snug",userSelect:"select-none",hover:"hover:text-blue-gray-900",transition:"transition-colors"},active:{color:"text-blue-gray-900"},icon:{ml:"ml-4"}},body:{display:"block",width:"w-full",py:"py-4",color:"text-gray-700",fontSmoothing:"antialiased",fontFamily:"font-sans",fontSize:"text-sm",fontWeight:"font-light",lineHeight:"leading-normal"},disabled:{pointerEvents:"pointer-events-none",opacity:"opacity-50"}}}};var _default=accordion;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/alert/alertFilled.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/alert/alertFilled.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var alertFilled={"blue-gray":{backgroud:"bg-blue-gray-500",color:"text-white"},gray:{backgroud:"bg-gray-900",color:"text-white"},brown:{backgroud:"bg-brown-500",color:"text-white"},"deep-orange":{backgroud:"bg-deep-orange-500",color:"text-white"},orange:{backgroud:"bg-orange-500",color:"text-white"},amber:{backgroud:"bg-amber-500",color:"text-black"},yellow:{backgroud:"bg-yellow-500",color:"text-black"},lime:{backgroud:"bg-lime-500",color:"text-black"},"light-green":{backgroud:"bg-light-green-500",color:"text-white"},green:{backgroud:"bg-green-500",color:"text-white"},teal:{backgroud:"bg-teal-500",color:"text-white"},cyan:{backgroud:"bg-cyan-500",color:"text-white"},"light-blue":{backgroud:"bg-light-blue-500",color:"text-white"},blue:{backgroud:"bg-blue-500",color:"text-white"},indigo:{backgroud:"bg-indigo-500",color:"text-white"},"deep-purple":{backgroud:"bg-deep-purple-500",color:"text-white"},purple:{backgroud:"bg-purple-500",color:"text-white"},pink:{backgroud:"bg-pink-500",color:"text-white"},red:{backgroud:"bg-red-500",color:"text-white"}};var _default=alertFilled;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/alert/alertGhost.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/alert/alertGhost.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var alertGhost={"blue-gray":{backgroud:"bg-blue-gray-500/20",color:"text-blue-gray-900"},gray:{backgroud:"bg-gray-900/10",color:"text-gray-900"},brown:{backgroud:"bg-brown-500/20",color:"text-brown-900"},"deep-orange":{backgroud:"bg-deep-orange-500/20",color:"text-deep-orange-900"},orange:{backgroud:"bg-orange-500/20",color:"text-orange-900"},amber:{backgroud:"bg-amber-500/20",color:"text-amber-900"},yellow:{backgroud:"bg-yellow-500/20",color:"text-yellow-900"},lime:{backgroud:"bg-lime-500/20",color:"text-lime-900"},"light-green":{backgroud:"bg-light-green-500/20",color:"text-light-green-900"},green:{backgroud:"bg-green-500/20",color:"text-green-900"},teal:{backgroud:"bg-teal-500/20",color:"text-teal-900"},cyan:{backgroud:"bg-cyan-500/20",color:"text-cyan-900"},"light-blue":{backgroud:"bg-light-blue-500/20",color:"text-light-blue-900"},blue:{backgroud:"bg-blue-500/20",color:"text-blue-900"},indigo:{backgroud:"bg-indigo-500/20",color:"text-indigo-900"},"deep-purple":{backgroud:"bg-deep-purple-500/20",color:"text-deep-purple-900"},purple:{backgroud:"bg-purple-500/20",color:"text-purple-900"},pink:{backgroud:"bg-pink-500/20",color:"text-pink-900"},red:{backgroud:"bg-red-500/20",color:"text-red-900"}};var _default=alertGhost;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/alert/alertGradient.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/alert/alertGradient.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var alertGradient={"blue-gray":{backgroud:"bg-gradient-to-tr from-blue-gray-600 to-blue-gray-400",color:"text-white"},gray:{backgroud:"bg-gradient-to-tr from-gray-900 to-gray-800",color:"text-white"},brown:{backgroud:"bg-gradient-to-tr from-brown-600 to-brown-400",color:"text-white"},"deep-orange":{backgroud:"bg-gradient-to-tr from-deep-orange-600 to-deep-orange-400",color:"text-white"},orange:{backgroud:"bg-gradient-to-tr from-orange-600 to-orange-400",color:"text-white"},amber:{backgroud:"bg-gradient-to-tr from-amber-600 to-amber-400",color:"text-black"},yellow:{backgroud:"bg-gradient-to-tr from-yellow-600 to-yellow-400",color:"text-black"},lime:{backgroud:"bg-gradient-to-tr from-lime-600 to-lime-400",color:"text-black"},"light-green":{backgroud:"bg-gradient-to-tr from-light-green-600 to-light-green-400",color:"text-white"},green:{backgroud:"bg-gradient-to-tr from-green-600 to-green-400",color:"text-white"},teal:{backgroud:"bg-gradient-to-tr from-teal-600 to-teal-400",color:"text-white"},cyan:{backgroud:"bg-gradient-to-tr from-cyan-600 to-cyan-400",color:"text-white"},"light-blue":{backgroud:"bg-gradient-to-tr from-light-blue-600 to-light-blue-400",color:"text-white"},blue:{backgroud:"bg-gradient-to-tr from-blue-600 to-blue-400",color:"text-white"},indigo:{backgroud:"bg-gradient-to-tr from-indigo-600 to-indigo-400",color:"text-white"},"deep-purple":{backgroud:"bg-gradient-to-tr from-deep-purple-600 to-deep-purple-400",color:"text-white"},purple:{backgroud:"bg-gradient-to-tr from-purple-600 to-purple-400",color:"text-white"},pink:{backgroud:"bg-gradient-to-tr from-pink-600 to-pink-400",color:"text-white"},red:{backgroud:"bg-gradient-to-tr from-red-600 to-red-400",color:"text-white"}};var _default=alertGradient;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/alert/alertOutlined.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/alert/alertOutlined.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var alertOutlined={"blue-gray":{border:"border border-blue-gray-500",color:"text-blue-gray-700"},gray:{border:"border border-gray-900",color:"text-gray-900"},brown:{border:"border border-brown-500",color:"text-brown-700"},"deep-orange":{border:"border border-deep-orange-500",color:"text-deep-orange-700"},orange:{border:"border border-orange-500",color:"text-orange-700"},amber:{border:"border border-amber-500",color:"text-amber-700"},yellow:{border:"border border-yellow-500",color:"text-yellow-700"},lime:{border:"border border-lime-500",color:"text-lime-700"},"light-green":{border:"border border-light-green-500",color:"text-light-green-700"},green:{border:"border border-green-500",color:"text-green-700"},teal:{border:"border border-teal-500",color:"text-teal-700"},cyan:{border:"border border-cyan-500",color:"text-cyan-700"},"light-blue":{border:"border border-light-blue-500",color:"text-light-blue-700"},blue:{border:"border border-blue-500",color:"text-blue-700"},indigo:{border:"border border-indigo-500",color:"text-indigo-700"},"deep-purple":{border:"border border-deep-purple-500",color:"text-deep-purple-700"},purple:{border:"border border-purple-500",color:"text-purple-700"},pink:{border:"border border-pink-500",color:"text-pink-700"},red:{border:"border border-red-500",color:"text-red-700"}};var _default=alertOutlined;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/alert/index.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/alert/index.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{alert:function(){return alert},default:function(){return _default}});var _alertFilled=_interopRequireDefault(__webpack_require__(/*! ./alertFilled */ "./node_modules/@material-tailwind/react/theme/components/alert/alertFilled.js"));var _alertGradient=_interopRequireDefault(__webpack_require__(/*! ./alertGradient */ "./node_modules/@material-tailwind/react/theme/components/alert/alertGradient.js"));var _alertOutlined=_interopRequireDefault(__webpack_require__(/*! ./alertOutlined */ "./node_modules/@material-tailwind/react/theme/components/alert/alertOutlined.js"));var _alertGhost=_interopRequireDefault(__webpack_require__(/*! ./alertGhost */ "./node_modules/@material-tailwind/react/theme/components/alert/alertGhost.js"));var _alert=__webpack_require__(/*! ../../../types/components/alert */ "./node_modules/@material-tailwind/react/types/components/alert.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var alert={defaultProps:{variant:"filled",color:"gray",icon:undefined,open:true,action:undefined,onClose:undefined,animate:{unmount:{},mount:{}},className:""},valid:{variants:_alert.propTypesVariant,colors:_alert.propTypesColor},styles:{base:{alert:{position:"relative",display:"block",width:"w-full",fontFamily:"font-sans",fontSize:"text-base",fontWeight:"font-regular",px:"px-4",py:"py-4",borderRadius:"rounded-lg"},action:{position:"!absolute",top:"top-3",right:"right-3"}},variants:{filled:_alertFilled.default,gradient:_alertGradient.default,outlined:_alertOutlined.default,ghost:_alertGhost.default}}};var _default=alert;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/avatar/avatarBorderColor.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/avatar/avatarBorderColor.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var avatarBorderColor={white:{borderColor:"border-white"},"blue-gray":{borderColor:"border-blue-gray-500"},gray:{borderColor:"border-gray-900"},brown:{borderColor:"border-brown-500"},"deep-orange":{borderColor:"border-deep-orange-500"},orange:{borderColor:"border-orange-500"},amber:{borderColor:"border-amber-500"},yellow:{borderColor:"border-yellow-500"},lime:{borderColor:"border-lime-500"},"light-green":{borderColor:"border-light-green-500"},green:{borderColor:"border-green-500"},teal:{borderColor:"border-teal-500"},cyan:{borderColor:"border-cyan-500"},"light-blue":{borderColor:"border-light-blue-500"},blue:{borderColor:"border-blue-500"},indigo:{borderColor:"border-indigo-500"},"deep-purple":{borderColor:"border-deep-purple-500"},purple:{borderColor:"border-purple-500"},pink:{borderColor:"border-pink-500"},red:{borderColor:"border-red-500"}};var _default=avatarBorderColor;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/avatar/index.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/avatar/index.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{avatar:function(){return avatar},default:function(){return _default}});var _avatar=__webpack_require__(/*! ../../../types/components/avatar */ "./node_modules/@material-tailwind/react/types/components/avatar.js");var _avatarBorderColor=_interopRequireDefault(__webpack_require__(/*! ./avatarBorderColor */ "./node_modules/@material-tailwind/react/theme/components/avatar/avatarBorderColor.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var avatar={defaultProps:{variant:"circular",size:"md",className:"",withBorder:false,color:"gray"},valid:{variants:_avatar.propTypesVariant,sizes:_avatar.propTypesSize,colors:_avatar.propTypesColor},styles:{base:{initial:{display:"inline-block",position:"relative",objectFit:"object-cover",objectPosition:"object-center"},withBorder:{border:"border-2"}},sizes:{xs:{width:"w-6",height:"h-6",borderRadius:"rounded-md"},sm:{width:"w-9",height:"h-9",borderRadius:"rounded-md"},md:{width:"w-12",height:"h-12",borderRadius:"rounded-lg"},lg:{width:"w-[58px]",height:"h-[58px]",borderRadius:"rounded-lg"},xl:{width:"w-[74px]",height:"h-[74px]",borderRadius:"rounded-xl"},xxl:{width:"w-[110px]",height:"h-[110px]",borderRadius:"rounded-2xl"}},variants:{rounded:{},square:{borderRadius:"!rounded-none"},circular:{borderRadius:"!rounded-full"}},borderColor:_avatarBorderColor.default}};var _default=avatar;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/badge/badgeColors.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/badge/badgeColors.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var badgeColors={white:{backgroud:"bg-white",color:"text-blue-gray-900"},"blue-gray":{backgroud:"bg-blue-gray-500",color:"text-white"},gray:{backgroud:"bg-gray-500",color:"text-white"},brown:{backgroud:"bg-brown-500",color:"text-white"},"deep-orange":{backgroud:"bg-deep-orange-500",color:"text-white"},orange:{backgroud:"bg-orange-500",color:"text-white"},amber:{backgroud:"bg-amber-500",color:"text-black"},yellow:{backgroud:"bg-yellow-500",color:"text-black"},lime:{backgroud:"bg-lime-500",color:"text-black"},"light-green":{backgroud:"bg-light-green-500",color:"text-white"},green:{backgroud:"bg-green-500",color:"text-white"},teal:{backgroud:"bg-teal-500",color:"text-white"},cyan:{backgroud:"bg-cyan-500",color:"text-white"},"light-blue":{backgroud:"bg-light-blue-500",color:"text-white"},blue:{backgroud:"bg-blue-500",color:"text-white"},indigo:{backgroud:"bg-indigo-500",color:"text-white"},"deep-purple":{backgroud:"bg-deep-purple-500",color:"text-white"},purple:{backgroud:"bg-purple-500",color:"text-white"},pink:{backgroud:"bg-pink-500",color:"text-white"},red:{backgroud:"bg-red-500",color:"text-white"}};var _default=badgeColors;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/badge/index.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/badge/index.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{badge:function(){return badge},default:function(){return _default}});var _badge=__webpack_require__(/*! ../../../types/components/badge */ "./node_modules/@material-tailwind/react/types/components/badge.js");var _badgeColors=_interopRequireDefault(__webpack_require__(/*! ./badgeColors */ "./node_modules/@material-tailwind/react/theme/components/badge/badgeColors.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var badge={defaultProps:{color:"red",invisible:false,withBorder:false,overlap:"square",content:undefined,placement:"top-end",className:undefined,containerProps:undefined},valid:{colors:_badge.propTypesColor,overlaps:_badge.propTypesOverlap,placements:_badge.propTypesPlacement},styles:{base:{container:{position:"relative",display:"inline-flex"},badge:{initial:{position:"absolute",minWidth:"min-w-[12px]",minHeight:"min-h-[12px]",borderRadius:"rounded-full",paddingY:"py-1",paddingX:"px-1",fontSize:"text-xs",fontWeight:"font-medium",content:"content-['']",lineHeight:"leading-none",display:"grid",placeItems:"place-items-center"},withBorder:{borderWidth:"border-2",borderColor:"border-white"},withContent:{minWidth:"min-w-[24px]",minHeight:"min-h-[24px]"}}},placements:{"top-start":{square:{top:"top-[4%]",left:"left-[2%]",translateX:"-translate-x-2/4",translateY:"-translate-y-2/4"},circular:{top:"top-[14%]",left:"left-[14%]",translateX:"-translate-x-2/4",translateY:"-translate-y-2/4"}},"top-end":{square:{top:"top-[4%]",right:"right-[2%]",translateX:"translate-x-2/4",translateY:"-translate-y-2/4"},circular:{top:"top-[14%]",right:"right-[14%]",translateX:"translate-x-2/4",translateY:"-translate-y-2/4"}},"bottom-start":{square:{bottom:"bottom-[4%]",left:"left-[2%]",translateX:"-translate-x-2/4",translateY:"translate-y-2/4"},circular:{bottom:"bottom-[14%]",left:"left-[14%]",translateX:"-translate-x-2/4",translateY:"translate-y-2/4"}},"bottom-end":{square:{bottom:"bottom-[4%]",right:"right-[2%]",translateX:"translate-x-2/4",translateY:"translate-y-2/4"},circular:{bottom:"bottom-[14%]",right:"right-[14%]",translateX:"translate-x-2/4",translateY:"translate-y-2/4"}}},colors:_badgeColors.default}};var _default=badge;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/breadcrumbs/index.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/breadcrumbs/index.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{breadcrumbs:function(){return breadcrumbs},default:function(){return _default}});var breadcrumbs={defaultProps:{className:"",fullWidth:false,separator:"/"},styles:{base:{root:{initial:{width:"w-max"},fullWidth:{display:"block",width:"w-full"}},list:{display:"flex",flexWrap:"flex-wrap",alignItems:"items-center",width:"w-full",bg:"bg-blue-gray-50",bgOpacity:"bg-opacity-60",py:"py-2",px:"px-4",borderRadius:"rounded-md"},item:{initial:{display:"flex",alignItems:"items-center",color:"text-blue-gray-900",fontSmoothing:"antialiased",fontFamily:"font-sans",fontSize:"text-sm",fontWeight:"font-normal",lineHeight:"leading-normal",cursor:"cursor-pointer",transition:"transition-colors duration-300",hover:"hover:text-light-blue-500"},disabled:{pointerEvents:"pointer-events-none"}},separator:{color:"text-blue-gray-500",fontSize:"text-sm",fontSmoothing:"antialiased",fontFamily:"font-sans",fontWeight:"font-normal",lineHeight:"leading-normal",px:"mx-2",pointerEvents:"pointer-events-none",userSelcet:"select-none"}}}};var _default=breadcrumbs;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/button/buttonFilled.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/button/buttonFilled.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var buttonFilled={white:{background:"bg-white",color:"text-blue-gray-900",shadow:"shadow-md shadow-blue-gray-500/10",hover:"hover:shadow-lg hover:shadow-blue-gray-500/20",focus:"focus:opacity-[0.85] focus:shadow-none",active:"active:opacity-[0.85] active:shadow-none"},black:{background:"bg-gray-900",color:"text-white",shadow:"shadow-md shadow-gray-900/10",hover:"hover:shadow-lg hover:shadow-gray-900/20",focus:"focus:opacity-[0.85] focus:shadow-none",active:"active:opacity-[0.85] active:shadow-none"},"blue-gray":{background:"bg-blue-gray-500",color:"text-white",shadow:"shadow-md shadow-blue-gray-500/20",hover:"hover:shadow-lg hover:shadow-blue-gray-500/40",focus:"focus:opacity-[0.85] focus:shadow-none",active:"active:opacity-[0.85] active:shadow-none"},gray:{background:"bg-gray-900",color:"text-white",shadow:"shadow-md shadow-gray-900/10",hover:"hover:shadow-lg hover:shadow-gray-900/20",focus:"focus:opacity-[0.85] focus:shadow-none",active:"active:opacity-[0.85] active:shadow-none"},brown:{background:"bg-brown-500",color:"text-white",shadow:"shadow-md shadow-brown-500/20",hover:"hover:shadow-lg hover:shadow-brown-500/40",focus:"focus:opacity-[0.85] focus:shadow-none",active:"active:opacity-[0.85] active:shadow-none"},"deep-orange":{background:"bg-deep-orange-500",color:"text-white",shadow:"shadow-md shadow-deep-orange-500/20",hover:"hover:shadow-lg hover:shadow-deep-orange-500/40",focus:"focus:opacity-[0.85] focus:shadow-none",active:"active:opacity-[0.85] active:shadow-none"},orange:{background:"bg-orange-500",color:"text-white",shadow:"shadow-md shadow-orange-500/20",hover:"hover:shadow-lg hover:shadow-orange-500/40",focus:"focus:opacity-[0.85] focus:shadow-none",active:"active:opacity-[0.85] active:shadow-none"},amber:{background:"bg-amber-500",color:"text-black",shadow:"shadow-md shadow-amber-500/20",hover:"hover:shadow-lg hover:shadow-amber-500/40",focus:"focus:opacity-[0.85] focus:shadow-none",active:"active:opacity-[0.85] active:shadow-none"},yellow:{background:"bg-yellow-500",color:"text-black",shadow:"shadow-md shadow-yellow-500/20",hover:"hover:shadow-lg hover:shadow-yellow-500/40",focus:"focus:opacity-[0.85] focus:shadow-none",active:"active:opacity-[0.85] active:shadow-none"},lime:{background:"bg-lime-500",color:"text-black",shadow:"shadow-md shadow-lime-500/20",hover:"hover:shadow-lg hover:shadow-lime-500/40",focus:"focus:opacity-[0.85] focus:shadow-none",active:"active:opacity-[0.85] active:shadow-none"},"light-green":{background:"bg-light-green-500",color:"text-white",shadow:"shadow-md shadow-light-green-500/20",hover:"hover:shadow-lg hover:shadow-light-green-500/40",focus:"focus:opacity-[0.85] focus:shadow-none",active:"active:opacity-[0.85] active:shadow-none"},green:{background:"bg-green-500",color:"text-white",shadow:"shadow-md shadow-green-500/20",hover:"hover:shadow-lg hover:shadow-green-500/40",focus:"focus:opacity-[0.85] focus:shadow-none",active:"active:opacity-[0.85] active:shadow-none"},teal:{background:"bg-teal-500",color:"text-white",shadow:"shadow-md shadow-teal-500/20",hover:"hover:shadow-lg hover:shadow-teal-500/40",focus:"focus:opacity-[0.85] focus:shadow-none",active:"active:opacity-[0.85] active:shadow-none"},cyan:{background:"bg-cyan-500",color:"text-white",shadow:"shadow-md shadow-cyan-500/20",hover:"hover:shadow-lg hover:shadow-cyan-500/40",focus:"focus:opacity-[0.85] focus:shadow-none",active:"active:opacity-[0.85] active:shadow-none"},"light-blue":{background:"bg-light-blue-500",color:"text-white",shadow:"shadow-md shadow-light-blue-500/20",hover:"hover:shadow-lg hover:shadow-light-blue-500/40",focus:"focus:opacity-[0.85] focus:shadow-none",active:"active:opacity-[0.85] active:shadow-none"},blue:{background:"bg-blue-500",color:"text-white",shadow:"shadow-md shadow-blue-500/20",hover:"hover:shadow-lg hover:shadow-blue-500/40",focus:"focus:opacity-[0.85] focus:shadow-none",active:"active:opacity-[0.85] active:shadow-none"},indigo:{background:"bg-indigo-500",color:"text-white",shadow:"shadow-md shadow-indigo-500/20",hover:"hover:shadow-lg hover:shadow-indigo-500/40",focus:"focus:opacity-[0.85] focus:shadow-none",active:"active:opacity-[0.85] active:shadow-none"},"deep-purple":{background:"bg-deep-purple-500",color:"text-white",shadow:"shadow-md shadow-deep-purple-500/20",hover:"hover:shadow-lg hover:shadow-deep-purple-500/40",focus:"focus:opacity-[0.85] focus:shadow-none",active:"active:opacity-[0.85] active:shadow-none"},purple:{background:"bg-purple-500",color:"text-white",shadow:"shadow-md shadow-purple-500/20",hover:"hover:shadow-lg hover:shadow-purple-500/40",focus:"focus:opacity-[0.85] focus:shadow-none",active:"active:opacity-[0.85] active:shadow-none"},pink:{background:"bg-pink-500",color:"text-white",shadow:"shadow-md shadow-pink-500/20",hover:"hover:shadow-lg hover:shadow-pink-500/40",focus:"focus:opacity-[0.85] focus:shadow-none",active:"active:opacity-[0.85] active:shadow-none"},red:{background:"bg-red-500",color:"text-white",shadow:"shadow-md shadow-red-500/20",hover:"hover:shadow-lg hover:shadow-red-500/40",focus:"focus:opacity-[0.85] focus:shadow-none",active:"active:opacity-[0.85] active:shadow-none"}};var _default=buttonFilled;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/button/buttonGradient.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/button/buttonGradient.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var buttonGradient={white:{background:"bg-white",color:"text-blue-gray-900",shadow:"shadow-md shadow-blue-gray-500/10",hover:"hover:shadow-lg hover:shadow-blue-gray-500/20",focus:"focus:opacity-[0.85] focus:shadow-none",active:"active:opacity-[0.85] active:shadow-none"},black:{background:"bg-gradient-to-tr from-gray-900 to-gray-800",color:"text-white",shadow:"shadow-md shadow-gray-900/10",hover:"hover:shadow-lg hover:shadow-gray-900/20",active:"active:opacity-[0.85]"},"blue-gray":{background:"bg-gradient-to-tr from-blue-gray-600 to-blue-gray-400",color:"text-white",shadow:"shadow-md shadow-blue-gray-500/20",hover:"hover:shadow-lg hover:shadow-blue-gray-500/40",active:"active:opacity-[0.85]"},gray:{background:"bg-gradient-to-tr from-gray-900 to-gray-800",color:"text-white",shadow:"shadow-md shadow-gray-900/10",hover:"hover:shadow-lg hover:shadow-gray-900/20",active:"active:opacity-[0.85]"},brown:{background:"bg-gradient-to-tr from-brown-600 to-brown-400",color:"text-white",shadow:"shadow-md shadow-brown-500/20",hover:"hover:shadow-lg hover:shadow-brown-500/40",active:"active:opacity-[0.85]"},"deep-orange":{background:"bg-gradient-to-tr from-deep-orange-600 to-deep-orange-400",color:"text-white",shadow:"shadow-md shadow-deep-orange-500/20",hover:"hover:shadow-lg hover:shadow-deep-orange-500/40",active:"active:opacity-[0.85]"},orange:{background:"bg-gradient-to-tr from-orange-600 to-orange-400",color:"text-white",shadow:"shadow-md shadow-orange-500/20",hover:"hover:shadow-lg hover:shadow-orange-500/40",active:"active:opacity-[0.85]"},amber:{background:"bg-gradient-to-tr from-amber-600 to-amber-400",color:"text-black",shadow:"shadow-md shadow-amber-500/20",hover:"hover:shadow-lg hover:shadow-amber-500/40",active:"active:opacity-[0.85]"},yellow:{background:"bg-gradient-to-tr from-yellow-600 to-yellow-400",color:"text-black",shadow:"shadow-md shadow-yellow-500/20",hover:"hover:shadow-lg hover:shadow-yellow-500/40",active:"active:opacity-[0.85]"},lime:{background:"bg-gradient-to-tr from-lime-600 to-lime-400",color:"text-black",shadow:"shadow-md shadow-lime-500/20",hover:"hover:shadow-lg hover:shadow-lime-500/40",active:"active:opacity-[0.85]"},"light-green":{background:"bg-gradient-to-tr from-light-green-600 to-light-green-400",color:"text-white",shadow:"shadow-md shadow-light-green-500/20",hover:"hover:shadow-lg hover:shadow-light-green-500/40",active:"active:opacity-[0.85]"},green:{background:"bg-gradient-to-tr from-green-600 to-green-400",color:"text-white",shadow:"shadow-md shadow-green-500/20",hover:"hover:shadow-lg hover:shadow-green-500/40",active:"active:opacity-[0.85]"},teal:{background:"bg-gradient-to-tr from-teal-600 to-teal-400",color:"text-white",shadow:"shadow-md shadow-teal-500/20",hover:"hover:shadow-lg hover:shadow-teal-500/40",active:"active:opacity-[0.85]"},cyan:{background:"bg-gradient-to-tr from-cyan-600 to-cyan-400",color:"text-white",shadow:"shadow-md shadow-cyan-500/20",hover:"hover:shadow-lg hover:shadow-cyan-500/40",active:"active:opacity-[0.85]"},"light-blue":{background:"bg-gradient-to-tr from-light-blue-600 to-light-blue-400",color:"text-white",shadow:"shadow-md shadow-light-blue-500/20",hover:"hover:shadow-lg hover:shadow-light-blue-500/40",active:"active:opacity-[0.85]"},blue:{background:"bg-gradient-to-tr from-blue-600 to-blue-400",color:"text-white",shadow:"shadow-md shadow-blue-500/20",hover:"hover:shadow-lg hover:shadow-blue-500/40",active:"active:opacity-[0.85]"},indigo:{background:"bg-gradient-to-tr from-indigo-600 to-indigo-400",color:"text-white",shadow:"shadow-md shadow-indigo-500/20",hover:"hover:shadow-lg hover:shadow-indigo-500/40",active:"active:opacity-[0.85]"},"deep-purple":{background:"bg-gradient-to-tr from-deep-purple-600 to-deep-purple-400",color:"text-white",shadow:"shadow-md shadow-deep-purple-500/20",hover:"hover:shadow-lg hover:shadow-deep-purple-500/40",active:"active:opacity-[0.85]"},purple:{background:"bg-gradient-to-tr from-purple-600 to-purple-400",color:"text-white",shadow:"shadow-md shadow-purple-500/20",hover:"hover:shadow-lg hover:shadow-purple-500/40",active:"active:opacity-[0.85]"},pink:{background:"bg-gradient-to-tr from-pink-600 to-pink-400",color:"text-white",shadow:"shadow-md shadow-pink-500/20",hover:"hover:shadow-lg hover:shadow-pink-500/40",active:"active:opacity-[0.85]"},red:{background:"bg-gradient-to-tr from-red-600 to-red-400",color:"text-white",shadow:"shadow-md shadow-red-500/20",hover:"hover:shadow-lg hover:shadow-red-500/40",active:"active:opacity-[0.85]"}};var _default=buttonGradient;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/button/buttonOutlined.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/button/buttonOutlined.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var buttonOutlined={white:{border:"border border-white",color:"text-white",hover:"hover:opacity-75",focus:"focus:ring focus:ring-white/50",active:"active:opacity-[0.85]"},black:{border:"border border-gray-900",color:"text-gray-900",hover:"hover:opacity-75",focus:"focus:ring focus:ring-gray-300",active:"active:opacity-[0.85]"},"blue-gray":{border:"border border-blue-gray-500",color:"text-blue-gray-500",hover:"hover:opacity-75",focus:"focus:ring focus:ring-blue-gray-200",active:"active:opacity-[0.85]"},gray:{border:"border border-gray-900",color:"text-gray-900",hover:"hover:opacity-75",focus:"focus:ring focus:ring-gray-300",active:"active:opacity-[0.85]"},brown:{border:"border border-brown-500",color:"text-brown-500",hover:"hover:opacity-75",focus:"focus:ring focus:ring-brown-200",active:"active:opacity-[0.85]"},"deep-orange":{border:"border border-deep-orange-500",color:"text-deep-orange-500",hover:"hover:opacity-75",focus:"focus:ring focus:ring-deep-orange-200",active:"active:opacity-[0.85]"},orange:{border:"border border-orange-500",color:"text-orange-500",hover:"hover:opacity-75",focus:"focus:ring focus:ring-orange-200",active:"active:opacity-[0.85]"},amber:{border:"border border-amber-500",color:"text-amber-500",hover:"hover:opacity-75",focus:"focus:ring focus:ring-amber-200",active:"active:opacity-[0.85]"},yellow:{border:"border border-yellow-500",color:"text-yellow-500",hover:"hover:opacity-75",focus:"focus:ring focus:ring-yellow-200",active:"active:opacity-[0.85]"},lime:{border:"border border-lime-500",color:"text-lime-500",hover:"hover:opacity-75",focus:"focus:ring focus:ring-lime-200",active:"active:opacity-[0.85]"},"light-green":{border:"border border-light-green-500",color:"text-light-green-500",hover:"hover:opacity-75",focus:"focus:ring focus:ring-light-green-200",active:"active:opacity-[0.85]"},green:{border:"border border-green-500",color:"text-green-500",hover:"hover:opacity-75",focus:"focus:ring focus:ring-green-200",active:"active:opacity-[0.85]"},teal:{border:"border border-teal-500",color:"text-teal-500",hover:"hover:opacity-75",focus:"focus:ring focus:ring-teal-200",active:"active:opacity-[0.85]"},cyan:{border:"border border-cyan-500",color:"text-cyan-500",hover:"hover:opacity-75",focus:"focus:ring focus:ring-cyan-200",active:"active:opacity-[0.85]"},"light-blue":{border:"border border-light-blue-500",color:"text-light-blue-500",hover:"hover:opacity-75",focus:"focus:ring focus:ring-light-blue-200",active:"active:opacity-[0.85]"},blue:{border:"border border-blue-500",color:"text-blue-500",hover:"hover:opacity-75",focus:"focus:ring focus:ring-blue-200",active:"active:opacity-[0.85]"},indigo:{border:"border border-indigo-500",color:"text-indigo-500",hover:"hover:opacity-75",focus:"focus:ring focus:ring-indigo-200",active:"active:opacity-[0.85]"},"deep-purple":{border:"border border-deep-purple-500",color:"text-deep-purple-500",hover:"hover:opacity-75",focus:"focus:ring focus:ring-deep-purple-200",active:"active:opacity-[0.85]"},purple:{border:"border border-purple-500",color:"text-purple-500",hover:"hover:opacity-75",focus:"focus:ring focus:ring-purple-200",active:"active:opacity-[0.85]"},pink:{border:"border border-pink-500",color:"text-pink-500",hover:"hover:opacity-75",focus:"focus:ring focus:ring-pink-200",active:"active:opacity-[0.85]"},red:{border:"border border-red-500",color:"text-red-500",hover:"hover:opacity-75",focus:"focus:ring focus:ring-red-200",active:"active:opacity-[0.85]"}};var _default=buttonOutlined;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/button/buttonText.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/button/buttonText.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var buttonText={white:{color:"text-white",hover:"hover:bg-white/10",active:"active:bg-white/30"},black:{color:"text-gray-900",hover:"hover:bg-gray-900/10",active:"active:bg-gray-900/20"},"blue-gray":{color:"text-blue-gray-500",hover:"hover:bg-blue-gray-500/10",active:"active:bg-blue-gray-500/30"},gray:{color:"text-gray-900",hover:"hover:bg-gray-900/10",active:"active:bg-gray-900/20"},brown:{color:"text-brown-500",hover:"hover:bg-brown-500/10",active:"active:bg-brown-500/30"},"deep-orange":{color:"text-deep-orange-500",hover:"hover:bg-deep-orange-500/10",active:"active:bg-deep-orange-500/30"},orange:{color:"text-orange-500",hover:"hover:bg-orange-500/10",active:"active:bg-orange-500/30"},amber:{color:"text-amber-500",hover:"hover:bg-amber-500/10",active:"active:bg-amber-500/30"},yellow:{color:"text-yellow-500",hover:"hover:bg-yellow-500/10",active:"active:bg-yellow-500/30"},lime:{color:"text-lime-500",hover:"hover:bg-lime-500/10",active:"active:bg-lime-500/30"},"light-green":{color:"text-light-green-500",hover:"hover:bg-light-green-500/10",active:"active:bg-light-green-500/30"},green:{color:"text-green-500",hover:"hover:bg-green-500/10",active:"active:bg-green-500/30"},teal:{color:"text-teal-500",hover:"hover:bg-teal-500/10",active:"active:bg-teal-500/30"},cyan:{color:"text-cyan-500",hover:"hover:bg-cyan-500/10",active:"active:bg-cyan-500/30"},"light-blue":{color:"text-light-blue-500",hover:"hover:bg-light-blue-500/10",active:"active:bg-light-blue-500/30"},blue:{color:"text-blue-500",hover:"hover:bg-blue-500/10",active:"active:bg-blue-500/30"},indigo:{color:"text-indigo-500",hover:"hover:bg-indigo-500/10",active:"active:bg-indigo-500/30"},"deep-purple":{color:"text-deep-purple-500",hover:"hover:bg-deep-purple-500/10",active:"active:bg-deep-purple-500/30"},purple:{color:"text-purple-500",hover:"hover:bg-purple-500/10",active:"active:bg-purple-500/30"},pink:{color:"text-pink-500",hover:"hover:bg-pink-500/10",active:"active:bg-pink-500/30"},red:{color:"text-red-500",hover:"hover:bg-red-500/10",active:"active:bg-red-500/30"}};var _default=buttonText;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/button/index.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/button/index.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{button:function(){return button},default:function(){return _default}});var _buttonFilled=_interopRequireDefault(__webpack_require__(/*! ./buttonFilled */ "./node_modules/@material-tailwind/react/theme/components/button/buttonFilled.js"));var _buttonGradient=_interopRequireDefault(__webpack_require__(/*! ./buttonGradient */ "./node_modules/@material-tailwind/react/theme/components/button/buttonGradient.js"));var _buttonOutlined=_interopRequireDefault(__webpack_require__(/*! ./buttonOutlined */ "./node_modules/@material-tailwind/react/theme/components/button/buttonOutlined.js"));var _buttonText=_interopRequireDefault(__webpack_require__(/*! ./buttonText */ "./node_modules/@material-tailwind/react/theme/components/button/buttonText.js"));var _button=__webpack_require__(/*! ../../../types/components/button */ "./node_modules/@material-tailwind/react/types/components/button.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var button={defaultProps:{variant:"filled",size:"md",color:"gray",fullWidth:false,ripple:true,className:""},valid:{variants:_button.propTypesVariant,sizes:_button.propTypesSize,colors:_button.propTypesColor},styles:{base:{initial:{verticalAlign:"align-middle",userSelect:"select-none",fontFamily:"font-sans",fontWeight:"font-bold",textAlign:"text-center",textTransform:"uppercase",transition:"transition-all",disabled:"disabled:opacity-50 disabled:shadow-none disabled:pointer-events-none"},fullWidth:{display:"block",width:"w-full"}},sizes:{sm:{fontSize:"text-xs",py:"py-2",px:"px-4",borderRadius:"rounded-lg"},md:{fontSize:"text-xs",py:"py-3",px:"px-6",borderRadius:"rounded-lg"},lg:{fontSize:"text-sm",py:"py-3.5",px:"px-7",borderRadius:"rounded-lg"}},variants:{filled:_buttonFilled.default,gradient:_buttonGradient.default,outlined:_buttonOutlined.default,text:_buttonText.default}}};var _default=button;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/buttonGroup/buttonGroupDividerColor.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/buttonGroup/buttonGroupDividerColor.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var buttonGroupDividerColor={white:{divideColor:"divide-blue-gray-50"},black:{divideColor:"divide-gray-800"},"blue-gray":{divideColor:"divide-blue-gray-600"},gray:{divideColor:"divide-gray-800"},brown:{divideColor:"divide-brown-600"},"deep-orange":{divideColor:"divide-deep-orange-600"},orange:{divideColor:"divide-orange-600"},amber:{divideColor:"divide-amber-600"},yellow:{divideColor:"divide-yellow-600"},lime:{divideColor:"divide-lime-600"},"light-green":{divideColor:"divide-light-green-600"},green:{divideColor:"divide-green-600"},teal:{divideColor:"divide-teal-600"},cyan:{divideColor:"divide-cyan-600"},"light-blue":{divideColor:"divide-light-blue-600"},blue:{divideColor:"divide-blue-600"},indigo:{divideColor:"divide-indigo-600"},"deep-purple":{divideColor:"divide-deep-purple-600"},purple:{divideColor:"divide-purple-600"},pink:{divideColor:"divide-pink-600"},red:{divideColor:"divide-red-600"}};var _default=buttonGroupDividerColor;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/buttonGroup/index.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/buttonGroup/index.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{buttonGroup:function(){return buttonGroup},default:function(){return _default}});var _buttonGroupDividerColor=_interopRequireDefault(__webpack_require__(/*! ./buttonGroupDividerColor */ "./node_modules/@material-tailwind/react/theme/components/buttonGroup/buttonGroupDividerColor.js"));var _button=__webpack_require__(/*! ../../../types/components/button */ "./node_modules/@material-tailwind/react/types/components/button.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var buttonGroup={defaultProps:{variant:"filled",size:"md",color:"gray",fullWidth:false,ripple:true,className:""},valid:{variants:_button.propTypesVariant,sizes:_button.propTypesSize,colors:_button.propTypesColor},styles:{base:{initial:{display:"flex",flexDirection:"row"},fullWidth:{width:"w-full"}},dividerColor:_buttonGroupDividerColor.default}};var _default=buttonGroup;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/card/cardBody.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/card/cardBody.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{cardBody:function(){return cardBody},default:function(){return _default}});var cardBody={defaultProps:{className:""},styles:{base:{p:"p-6"}}};var _default=cardBody;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/card/cardFilled.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/card/cardFilled.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var cardFilled={transparent:{backgroud:"bg-transparent",color:"text-gray-700",shadow:"shadow-none"},white:{backgroud:"bg-white",color:"text-gray-700"},"blue-gray":{backgroud:"bg-blue-gray-500",color:"text-white",shadow:"shadow-blue-gray-500/40"},gray:{backgroud:"bg-gray-900",color:"text-white",shadow:"shadow-gray-900/20"},brown:{backgroud:"bg-brown-500",color:"text-white",shadow:"shadow-brown-500/40"},"deep-orange":{backgroud:"bg-deep-orange-500",color:"text-white",shadow:"shadow-deep-orange-500/40"},orange:{backgroud:"bg-orange-500",color:"text-white",shadow:"shadow-orange-500/40"},amber:{backgroud:"bg-amber-500",color:"text-gray-700",shadow:"shadow-amber-500/40"},yellow:{backgroud:"bg-yellow-500",color:"text-gray-700",shadow:"shadow-yellow-500/40"},lime:{backgroud:"bg-lime-500",color:"text-gray-700",shadow:"shadow-lime-500/40"},"light-green":{backgroud:"bg-light-green-500",color:"text-white",shadow:"shadow-light-green-500/40"},green:{backgroud:"bg-green-500",color:"text-white",shadow:"shadow-green-500/40"},teal:{backgroud:"bg-teal-500",color:"text-white",shadow:"shadow-teal-500/40"},cyan:{backgroud:"bg-cyan-500",color:"text-white",shadow:"shadow-cyan-500/40"},"light-blue":{backgroud:"bg-light-blue-500",color:"text-white",shadow:"shadow-light-blue-500/40"},blue:{backgroud:"bg-blue-500",color:"text-white",shadow:"shadow-blue-500/40"},indigo:{backgroud:"bg-indigo-500",color:"text-white",shadow:"shadow-indigo-500/40"},"deep-purple":{backgroud:"bg-deep-purple-500",color:"text-white",shadow:"shadow-deep-purple-500/40"},purple:{backgroud:"bg-purple-500",color:"text-white",shadow:"shadow-purple-500/40"},pink:{backgroud:"bg-pink-500",color:"text-white",shadow:"shadow-pink-500/40"},red:{backgroud:"bg-red-500",color:"text-white",shadow:"shadow-red-500/40"}};var _default=cardFilled;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/card/cardFooter.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/card/cardFooter.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{cardFooter:function(){return cardFooter},default:function(){return _default}});var cardFooter={defaultProps:{className:""},styles:{base:{initial:{p:"p-6"},divider:{borderWidth:"border-t",borderColor:"border-blue-gray-50"}}}};var _default=cardFooter;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/card/cardGradient.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/card/cardGradient.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var cardGradient={transparent:{backgroud:"bg-transparent",color:"text-gray-700",shadow:"shadow-none"},white:{backgroud:"bg-white",color:"text-gray-700"},"blue-gray":{backgroud:"bg-gradient-to-tr from-blue-gray-600 to-blue-gray-400",color:"text-white",shadow:"shadow-blue-gray-500/40"},gray:{backgroud:"bg-gradient-to-tr from-gray-900 to-gray-800",color:"text-white",shadow:"shadow-gray-900/20"},brown:{backgroud:"bg-gradient-to-tr from-brown-600 to-brown-400",color:"text-white",shadow:"shadow-brown-500/40"},"deep-orange":{backgroud:"bg-gradient-to-tr from-deep-orange-600 to-deep-orange-400",color:"text-white",shadow:"shadow-deep-orange-500/40"},orange:{backgroud:"bg-gradient-to-tr from-orange-600 to-orange-400",color:"text-white",shadow:"shadow-orange-500/40"},amber:{backgroud:"bg-gradient-to-tr from-amber-600 to-amber-400",color:"text-gray-700",shadow:"shadow-amber-500/40"},yellow:{backgroud:"bg-gradient-to-tr from-yellow-600 to-yellow-400",color:"text-gray-700",shadow:"shadow-yellow-500/40"},lime:{backgroud:"bg-gradient-to-tr from-lime-600 to-lime-400",color:"text-gray-700",shadow:"shadow-lime-500/40"},"light-green":{backgroud:"bg-gradient-to-tr from-light-green-600 to-light-green-400",color:"text-white",shadow:"shadow-light-green-500/40"},green:{backgroud:"bg-gradient-to-tr from-green-600 to-green-400",color:"text-white",shadow:"shadow-green-500/40"},teal:{backgroud:"bg-gradient-to-tr from-teal-600 to-teal-400",color:"text-white",shadow:"shadow-teal-500/40"},cyan:{backgroud:"bg-gradient-to-tr from-cyan-600 to-cyan-400",color:"text-white",shadow:"shadow-cyan-500/40"},"light-blue":{backgroud:"bg-gradient-to-tr from-light-blue-600 to-light-blue-400",color:"text-white",shadow:"shadow-light-blue-500/40"},blue:{backgroud:"bg-gradient-to-tr from-blue-600 to-blue-400",color:"text-white",shadow:"shadow-blue-500/40"},indigo:{backgroud:"bg-gradient-to-tr from-indigo-600 to-indigo-400",color:"text-white",shadow:"shadow-indigo-500/40"},"deep-purple":{backgroud:"bg-gradient-to-tr from-deep-purple-600 to-deep-purple-400",color:"text-white",shadow:"shadow-deep-purple-500/40"},purple:{backgroud:"bg-gradient-to-tr from-purple-600 to-purple-400",color:"text-white",shadow:"shadow-purple-500/40"},pink:{backgroud:"bg-gradient-to-tr from-pink-600 to-pink-400",color:"text-white",shadow:"shadow-pink-500/40"},red:{backgroud:"bg-gradient-to-tr from-red-600 to-red-400",color:"text-white",shadow:"shadow-red-500/40"}};var _default=cardGradient;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/card/cardHeader.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/card/cardHeader.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var _cardFilled=_interopRequireDefault(__webpack_require__(/*! ./cardFilled */ "./node_modules/@material-tailwind/react/theme/components/card/cardFilled.js"));var _cardGradient=_interopRequireDefault(__webpack_require__(/*! ./cardGradient */ "./node_modules/@material-tailwind/react/theme/components/card/cardGradient.js"));var _card=__webpack_require__(/*! ../../../types/components/card */ "./node_modules/@material-tailwind/react/types/components/card.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var cardHeader={defaultProps:{variant:"filled",color:"white",shadow:true,floated:true,className:""},valid:{variants:_card.propTypesVariant,colors:_card.propTypesColor},styles:{base:{initial:{position:"relative",backgroundClip:"bg-clip-border",mt:"mt-4",mx:"mx-4",borderRadius:"rounded-xl",overflow:"overflow-hidden"},shadow:{boxShadow:"shadow-lg"},floated:{mt:"-mt-6"}},variants:{filled:_cardFilled.default,gradient:_cardGradient.default}}};var _default=cardHeader;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/card/index.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/card/index.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var _cardFilled=_interopRequireDefault(__webpack_require__(/*! ./cardFilled */ "./node_modules/@material-tailwind/react/theme/components/card/cardFilled.js"));var _cardGradient=_interopRequireDefault(__webpack_require__(/*! ./cardGradient */ "./node_modules/@material-tailwind/react/theme/components/card/cardGradient.js"));var _card=__webpack_require__(/*! ../../../types/components/card */ "./node_modules/@material-tailwind/react/types/components/card.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var card={defaultProps:{variant:"filled",color:"white",shadow:true,className:""},valid:{variants:_card.propTypesVariant,colors:_card.propTypesColor},styles:{base:{initial:{position:"relative",display:"flex",flexDirection:"flex-col",backgroundClip:"bg-clip-border",borderRadius:"rounded-xl"},shadow:{boxShadow:"shadow-md"}},variants:{filled:_cardFilled.default,gradient:_cardGradient.default}}};var _default=card;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/carousel/index.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/carousel/index.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{carousel:function(){return carousel},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var carousel={defaultProps:{prevArrow:function(param){var loop=param.loop,handlePrev=param.handlePrev,firstIndex=param.firstIndex;return _react.default.createElement("button",{onClick:handlePrev,disabled:!loop&&firstIndex,className:"!absolute top-2/4 left-4 -translate-y-2/4 rounded-full select-none transition-all disabled:opacity-50 disabled:shadow-none disabled:pointer-events-none w-12 max-w-[48px] h-12 max-h-[48px] text-white hover:bg-white/10 active:bg-white/30 grid place-items-center"},_react.default.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24",stroke:"currentColor",strokeWidth:3,className:"-ml-1 h-7 w-7"},_react.default.createElement("path",{strokeLinecap:"round",strokeLinejoin:"round",d:"M15.75 19.5L8.25 12l7.5-7.5"})))},nextArrow:function(param){var loop=param.loop,handleNext=param.handleNext,lastIndex=param.lastIndex;return _react.default.createElement("button",{onClick:handleNext,disabled:!loop&&lastIndex,className:"!absolute top-2/4 right-4 -translate-y-2/4 rounded-full select-none transition-all disabled:opacity-50 disabled:shadow-none disabled:pointer-events-none w-12 max-w-[48px] h-12 max-h-[48px] text-white hover:bg-white/10 active:bg-white/30 grid place-items-center"},_react.default.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24",stroke:"currentColor",strokeWidth:3,className:"ml-1 h-7 w-7"},_react.default.createElement("path",{strokeLinecap:"round",strokeLinejoin:"round",d:"M8.25 4.5l7.5 7.5-7.5 7.5"})))},navigation:function(param){var setActiveIndex=param.setActiveIndex,activeIndex=param.activeIndex,length=param.length;return _react.default.createElement("div",{className:"absolute bottom-4 left-2/4 z-50 flex -translate-x-2/4 gap-2"},new Array(length).fill("").map(function(_,i){return _react.default.createElement("span",{key:i,className:"block h-3 w-3 cursor-pointer rounded-full transition-colors content-[''] ".concat(activeIndex===i?"bg-white":"bg-white/50"),onClick:function(){return setActiveIndex(i)}})}))},autoplay:false,autoplayDelay:5e3,transition:{type:"tween",duration:.5},loop:false,className:""},styles:{base:{carousel:{position:"relative",width:"w-full",height:"h-full",overflowX:"overflow-x-hidden",display:"flex"},slide:{width:"w-full",height:"h-full",display:"inline-block",flex:"flex-none"}}}};var _default=carousel;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/checkbox/checkboxColors.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/checkbox/checkboxColors.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var checkboxColors={"blue-gray":{background:"checked:bg-blue-gray-500",border:"checked:border-blue-gray-500",before:"checked:before:bg-blue-gray-500"},gray:{background:"checked:bg-gray-900",border:"checked:border-gray-900",before:"checked:before:bg-gray-900"},brown:{background:"checked:bg-brown-500",border:"checked:border-brown-500",before:"checked:before:bg-brown-500"},"deep-orange":{background:"checked:bg-deep-orange-500",border:"checked:border-deep-orange-500",before:"checked:before:bg-deep-orange-500"},orange:{background:"checked:bg-orange-500",border:"checked:border-orange-500",before:"checked:before:bg-orange-500"},amber:{background:"checked:bg-amber-500",border:"checked:border-amber-500",before:"checked:before:bg-amber-500"},yellow:{background:"checked:bg-yellow-500",border:"checked:border-yellow-500",before:"checked:before:bg-yellow-500"},lime:{background:"checked:bg-lime-500",border:"checked:border-lime-500",before:"checked:before:bg-lime-500"},"light-green":{background:"checked:bg-light-green-500",border:"checked:border-light-green-500",before:"checked:before:bg-light-green-500"},green:{background:"checked:bg-green-500",border:"checked:border-green-500",before:"checked:before:bg-green-500"},teal:{background:"checked:bg-teal-500",border:"checked:border-teal-500",before:"checked:before:bg-teal-500"},cyan:{background:"checked:bg-cyan-500",border:"checked:border-cyan-500",before:"checked:before:bg-cyan-500"},"light-blue":{background:"checked:bg-light-blue-500",border:"checked:border-light-blue-500",before:"checked:before:bg-light-blue-500"},blue:{background:"checked:bg-blue-500",border:"checked:border-blue-500",before:"checked:before:bg-blue-500"},indigo:{background:"checked:bg-indigo-500",border:"checked:border-indigo-500",before:"checked:before:bg-indigo-500"},"deep-purple":{background:"checked:bg-deep-purple-500",border:"checked:border-deep-purple-500",before:"checked:before:bg-deep-purple-500"},purple:{background:"checked:bg-purple-500",border:"checked:border-purple-500",before:"checked:before:bg-purple-500"},pink:{background:"checked:bg-pink-500",border:"checked:border-pink-500",before:"checked:before:bg-pink-500"},red:{background:"checked:bg-red-500",border:"checked:border-red-500",before:"checked:before:bg-red-500"}};var _default=checkboxColors;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/checkbox/index.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/checkbox/index.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{checkbox:function(){return checkbox},default:function(){return _default}});var _checkboxColors=_interopRequireDefault(__webpack_require__(/*! ./checkboxColors */ "./node_modules/@material-tailwind/react/theme/components/checkbox/checkboxColors.js"));var _checkbox=__webpack_require__(/*! ../../../types/components/checkbox */ "./node_modules/@material-tailwind/react/types/components/checkbox.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var checkbox={defaultProps:{color:"gray",label:undefined,icon:undefined,ripple:true,className:"",disabled:false,containerProps:undefined,labelProps:undefined,iconProps:undefined},valid:{colors:_checkbox.propTypesColor},styles:{base:{root:{display:"inline-flex",alignItems:"items-center"},container:{position:"relative",display:"flex",alignItems:"items-center",cursor:"cursor-pointer",p:"p-3",borderRadius:"rounded-full"},input:{peer:"peer",position:"relative",appearance:"appearance-none",width:"w-5",height:"h-5",borderWidth:"border",borderRadius:"rounded-md",borderColor:"border-blue-gray-200",cursor:"cursor-pointer",transition:"transition-all",before:{content:"before:content['']",display:"before:block",bg:"before:bg-blue-gray-500",width:"before:w-12",height:"before:h-12",borderRadius:"before:rounded-full",position:"before:absolute",top:"before:top-2/4",left:"before:left-2/4",transform:"before:-translate-y-2/4 before:-translate-x-2/4",opacity:"before:opacity-0 hover:before:opacity-10",transition:"before:transition-opacity"}},label:{color:"text-gray-700",fontWeight:"font-light",userSelect:"select-none",cursor:"cursor-pointer",mt:"mt-px"},icon:{color:"text-white",position:"absolute",top:"top-2/4",left:"left-2/4",translate:"-translate-y-2/4 -translate-x-2/4",pointerEvents:"pointer-events-none",opacity:"opacity-0 peer-checked:opacity-100",transition:"transition-opacity"},disabled:{opacity:"opacity-50",pointerEvents:"pointer-events-none"}},colors:_checkboxColors.default}};var _default=checkbox;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/chip/chipFilled.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/chip/chipFilled.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var chipFilled={"blue-gray":{backgroud:"bg-blue-gray-500",color:"text-white"},gray:{backgroud:"bg-gray-900",color:"text-white"},brown:{backgroud:"bg-brown-500",color:"text-white"},"deep-orange":{backgroud:"bg-deep-orange-500",color:"text-white"},orange:{backgroud:"bg-orange-500",color:"text-white"},amber:{backgroud:"bg-amber-500",color:"text-black"},yellow:{backgroud:"bg-yellow-500",color:"text-black"},lime:{backgroud:"bg-lime-500",color:"text-black"},"light-green":{backgroud:"bg-light-green-500",color:"text-white"},green:{backgroud:"bg-green-500",color:"text-white"},teal:{backgroud:"bg-teal-500",color:"text-white"},cyan:{backgroud:"bg-cyan-500",color:"text-white"},"light-blue":{backgroud:"bg-light-blue-500",color:"text-white"},blue:{backgroud:"bg-blue-500",color:"text-white"},indigo:{backgroud:"bg-indigo-500",color:"text-white"},"deep-purple":{backgroud:"bg-deep-purple-500",color:"text-white"},purple:{backgroud:"bg-purple-500",color:"text-white"},pink:{backgroud:"bg-pink-500",color:"text-white"},red:{backgroud:"bg-red-500",color:"text-white"}};var _default=chipFilled;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/chip/chipGhost.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/chip/chipGhost.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var chipGhost={"blue-gray":{backgroud:"bg-blue-gray-500/20",color:"text-blue-gray-900"},gray:{backgroud:"bg-gray-900/10",color:"text-gray-900"},brown:{backgroud:"bg-brown-500/20",color:"text-brown-900"},"deep-orange":{backgroud:"bg-deep-orange-500/20",color:"text-deep-orange-900"},orange:{backgroud:"bg-orange-500/20",color:"text-orange-900"},amber:{backgroud:"bg-amber-500/20",color:"text-amber-900"},yellow:{backgroud:"bg-yellow-500/20",color:"text-yellow-900"},lime:{backgroud:"bg-lime-500/20",color:"text-lime-900"},"light-green":{backgroud:"bg-light-green-500/20",color:"text-light-green-900"},green:{backgroud:"bg-green-500/20",color:"text-green-900"},teal:{backgroud:"bg-teal-500/20",color:"text-teal-900"},cyan:{backgroud:"bg-cyan-500/20",color:"text-cyan-900"},"light-blue":{backgroud:"bg-light-blue-500/20",color:"text-light-blue-900"},blue:{backgroud:"bg-blue-500/20",color:"text-blue-900"},indigo:{backgroud:"bg-indigo-500/20",color:"text-indigo-900"},"deep-purple":{backgroud:"bg-deep-purple-500/20",color:"text-deep-purple-900"},purple:{backgroud:"bg-purple-500/20",color:"text-purple-900"},pink:{backgroud:"bg-pink-500/20",color:"text-pink-900"},red:{backgroud:"bg-red-500/20",color:"text-red-900"}};var _default=chipGhost;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/chip/chipGradient.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/chip/chipGradient.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var chipGradient={"blue-gray":{backgroud:"bg-gradient-to-tr from-blue-gray-600 to-blue-gray-400",color:"text-white"},gray:{backgroud:"bg-gradient-to-tr from-gray-900 to-gray-800",color:"text-white"},brown:{backgroud:"bg-gradient-to-tr from-brown-600 to-brown-400",color:"text-white"},"deep-orange":{backgroud:"bg-gradient-to-tr from-deep-orange-600 to-deep-orange-400",color:"text-white"},orange:{backgroud:"bg-gradient-to-tr from-orange-600 to-orange-400",color:"text-white"},amber:{backgroud:"bg-gradient-to-tr from-amber-600 to-amber-400",color:"text-black"},yellow:{backgroud:"bg-gradient-to-tr from-yellow-600 to-yellow-400",color:"text-black"},lime:{backgroud:"bg-gradient-to-tr from-lime-600 to-lime-400",color:"text-black"},"light-green":{backgroud:"bg-gradient-to-tr from-light-green-600 to-light-green-400",color:"text-white"},green:{backgroud:"bg-gradient-to-tr from-green-600 to-green-400",color:"text-white"},teal:{backgroud:"bg-gradient-to-tr from-teal-600 to-teal-400",color:"text-white"},cyan:{backgroud:"bg-gradient-to-tr from-cyan-600 to-cyan-400",color:"text-white"},"light-blue":{backgroud:"bg-gradient-to-tr from-light-blue-600 to-light-blue-400",color:"text-white"},blue:{backgroud:"bg-gradient-to-tr from-blue-600 to-blue-400",color:"text-white"},indigo:{backgroud:"bg-gradient-to-tr from-indigo-600 to-indigo-400",color:"text-white"},"deep-purple":{backgroud:"bg-gradient-to-tr from-deep-purple-600 to-deep-purple-400",color:"text-white"},purple:{backgroud:"bg-gradient-to-tr from-purple-600 to-purple-400",color:"text-white"},pink:{backgroud:"bg-gradient-to-tr from-pink-600 to-pink-400",color:"text-white"},red:{backgroud:"bg-gradient-to-tr from-red-600 to-red-400",color:"text-white"}};var _default=chipGradient;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/chip/chipOutlined.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/chip/chipOutlined.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var chipOutlined={"blue-gray":{border:"border border-blue-gray-500",color:"text-blue-gray-700"},gray:{border:"border border-gray-900",color:"text-gray-700"},brown:{border:"border border-brown-500",color:"text-brown-700"},"deep-orange":{border:"border border-deep-orange-500",color:"text-deep-orange-700"},orange:{border:"border border-orange-500",color:"text-orange-700"},amber:{border:"border border-amber-500",color:"text-amber-700"},yellow:{border:"border border-yellow-500",color:"text-yellow-700"},lime:{border:"border border-lime-500",color:"text-lime-700"},"light-green":{border:"border border-light-green-500",color:"text-light-green-700"},green:{border:"border border-green-500",color:"text-green-700"},teal:{border:"border border-teal-500",color:"text-teal-700"},cyan:{border:"border border-cyan-500",color:"text-cyan-700"},"light-blue":{border:"border border-light-blue-500",color:"text-light-blue-700"},blue:{border:"border border-blue-500",color:"text-blue-700"},indigo:{border:"border border-indigo-500",color:"text-indigo-700"},"deep-purple":{border:"border border-deep-purple-500",color:"text-deep-purple-700"},purple:{border:"border border-purple-500",color:"text-purple-700"},pink:{border:"border border-pink-500",color:"text-pink-700"},red:{border:"border border-red-500",color:"text-red-700"}};var _default=chipOutlined;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/chip/index.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/chip/index.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{chip:function(){return chip},default:function(){return _default}});var _chipFilled=_interopRequireDefault(__webpack_require__(/*! ./chipFilled */ "./node_modules/@material-tailwind/react/theme/components/chip/chipFilled.js"));var _chipGradient=_interopRequireDefault(__webpack_require__(/*! ./chipGradient */ "./node_modules/@material-tailwind/react/theme/components/chip/chipGradient.js"));var _chipOutlined=_interopRequireDefault(__webpack_require__(/*! ./chipOutlined */ "./node_modules/@material-tailwind/react/theme/components/chip/chipOutlined.js"));var _chipGhost=_interopRequireDefault(__webpack_require__(/*! ./chipGhost */ "./node_modules/@material-tailwind/react/theme/components/chip/chipGhost.js"));var _chip=__webpack_require__(/*! ../../../types/components/chip */ "./node_modules/@material-tailwind/react/types/components/chip.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var chip={defaultProps:{variant:"filled",size:"md",color:"gray",icon:undefined,open:true,onClose:undefined,action:undefined,animate:{unmount:{},mount:{}},className:""},valid:{variants:_chip.propTypesVariant,sizes:_chip.propTypesSize,colors:_chip.propTypesColor},styles:{base:{chip:{position:"relative",display:"grid",placeItems:"items-center",fontFamily:"font-sans",fontWeight:"font-bold",textTransform:"uppercase",lineHeight:"leading-none",whiteSpace:"whitespace-nowrap",userSelect:"select-none"},action:{position:"!absolute",top:"top-2/4",right:"right-1",translate:"-translate-y-2/4",mx:"mx-px",rounded:"rounded-md"},icon:{position:"absolute",top:"top-2/4",translate:"-translate-y-2/4"}},sizes:{sm:{chip:{py:"py-1",px:"px-2",fontSize:"text-xs",borderRadius:"rounded-md"},action:{width:"w-4",height:"h-4"},icon:{width:"w-4",height:"h-4",left:"left-1"}},md:{chip:{py:"py-1.5",px:"px-3",fontSize:"text-xs",borderRadius:"rounded-lg"},action:{width:"w-5",height:"h-5"},icon:{width:"w-5",height:"h-5",left:"left-1.5"}},lg:{chip:{py:"py-2",px:"px-4",fontSize:"text-xs",borderRadius:"rounded-lg"},action:{width:"w-6",height:"h-6"},icon:{width:"w-6",height:"h-6",left:"left-1.5"}}},variants:{filled:_chipFilled.default,gradient:_chipGradient.default,outlined:_chipOutlined.default,ghost:_chipGhost.default}}};var _default=chip;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/collapse/index.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/collapse/index.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{collapse:function(){return collapse},default:function(){return _default}});var collapse={defaultProps:{animate:{unmount:{},mount:{}},className:""},styles:{base:{display:"block",width:"w-full",basis:"basis-full",overflow:"overflow-hidden"}}};var _default=collapse;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/dialog/dialogBody.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/dialog/dialogBody.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{dialogBody:function(){return dialogBody},default:function(){return _default}});var dialogBody={defaultProps:{className:"",divider:false},styles:{base:{initial:{position:"relative",p:"p-4",color:"text-blue-gray-500",fontSmoothing:"antialiased",fontFamily:"font-sans",fontSize:"text-base",fontWeight:"font-light",lineHeight:"leading-relaxed"},divider:{borderTop:"border-t",borderTopColor:"border-t-blue-gray-100",borderBottom:"border-b",borderBottomColor:"border-b-blue-gray-100"}}}};var _default=dialogBody;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/dialog/dialogFooter.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/dialog/dialogFooter.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{dialogFooter:function(){return dialogFooter},default:function(){return _default}});var dialogFooter={defaultProps:{className:""},styles:{base:{display:"flex",alignItems:"items-center",justifyContent:"justify-end",flexShrink:"shrink-0",flexWrap:"flex-wrap",p:"p-4",color:"text-blue-gray-500"}}};var _default=dialogFooter;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/dialog/dialogHeader.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/dialog/dialogHeader.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{dialogHeader:function(){return dialogHeader},default:function(){return _default}});var dialogHeader={defaultProps:{className:""},styles:{base:{display:"flex",alignItems:"items-center",flexShrink:"shrink-0",p:"p-4",color:"text-blue-gray-900",fontSmoothing:"antialiased",fontFamily:"font-sans",fontSize:"text-2xl",fontWeight:"font-semibold",lineHeight:"leading-snug"}}};var _default=dialogHeader;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/dialog/index.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/dialog/index.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{dialog:function(){return dialog},default:function(){return _default}});var _dialog=__webpack_require__(/*! ../../../types/components/dialog */ "./node_modules/@material-tailwind/react/types/components/dialog.js");var dialog={defaultProps:{size:"md",dismiss:{},animate:{unmount:{},mount:{}},className:""},valid:{sizes:_dialog.propTypesSize},styles:{base:{backdrop:{display:"grid",placeItems:"place-items-center",position:"fixed",top:0,left:0,width:"w-screen",height:"h-screen",backgroundColor:"bg-black",backgroundOpacity:"bg-opacity-60",backdropFilter:"backdrop-blur-sm"},container:{position:"relative",bg:"bg-white",m:"m-4",borderRadius:"rounded-lg",boxShadow:"shadow-2xl",color:"text-blue-gray-500",fontSmoothing:"antialiased",fontFamily:"font-sans",fontSize:"text-base",fontWeight:"font-light",lineHeight:"leading-relaxed"}},sizes:{xs:{width:"w-full md:w-3/5 lg:w-2/5 2xl:w-1/4",minWidth:"min-w-[80%] md:min-w-[60%] lg:min-w-[40%] 2xl:min-w-[25%]",maxWidth:"max-w-[80%] md:max-w-[60%] lg:max-w-[40%] 2xl:max-w-[25%]"},sm:{width:"w-full md:w-2/3 lg:w-2/4 2xl:w-1/3",minWidth:"min-w-[80%] md:min-w-[66.666667%] lg:min-w-[50%] 2xl:min-w-[33.333333%]",maxWidth:"max-w-[80%] md:max-w-[66.666667%] lg:max-w-[50%] 2xl:max-w-[33.333333%]"},md:{width:"w-full md:w-3/4 lg:w-3/5 2xl:w-2/5",minWidth:"min-w-[90%] md:min-w-[75%] lg:min-w-[60%] 2xl:min-w-[40%]",maxWidth:"max-w-[90%] md:max-w-[75%] lg:max-w-[60%] 2xl:max-w-[40%]"},lg:{width:"w-full md:w-5/6 lg:w-3/4 2xl:w-3/5",minWidth:"min-w-[90%] md:min-w-[83.333333%] lg:min-w-[75%] 2xl:min-w-[60%]",maxWidth:"max-w-[90%] md:max-w-[83.333333%] lg:max-w-[75%] 2xl:max-w-[60%]"},xl:{width:"w-full md:w-5/6 2xl:w-3/4",minWidth:"min-w-[95%] md:min-w-[83.333333%] 2xl:min-w-[75%]",maxWidth:"max-w-[95%] md:max-w-[83.333333%] 2xl:max-w-[75%]"},xxl:{display:"flex",flexDirection:"flex-col",width:"w-screen",minWidth:"min-w-[100vw]",maxWidth:"max-w-[100vw]",height:"h-screen",minHeight:"min-h-[100vh]",maxHeight:"max-h-[100vh]",m:"m-0",borderRadius:"rounded-none"}}}};var _default=dialog;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/drawer/index.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/drawer/index.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{drawer:function(){return drawer},default:function(){return _default}});var drawer={defaultProps:{size:300,overlay:true,placement:"left",overlayProps:undefined,className:"",dismiss:undefined,onClose:undefined,transition:{type:"tween",duration:.3}},styles:{base:{drawer:{position:"fixed",zIndex:"z-[9999]",pointerEvents:"pointer-events-auto",backgroundColor:"bg-white",boxSizing:"box-border",width:"w-full",boxShadow:"shadow-2xl shadow-blue-gray-900/10"},overlay:{position:"absolute",inset:"inset-0",width:"w-full",height:"h-full",pointerEvents:"pointer-events-auto",zIndex:"z-[9995]",backgroundColor:"bg-black",backgroundOpacity:"bg-opacity-60",backdropBlur:"backdrop-blur-sm"}}}};var _default=drawer;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/iconButton/index.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/iconButton/index.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{iconButton:function(){return iconButton},default:function(){return _default}});var _buttonFilled=_interopRequireDefault(__webpack_require__(/*! ../button/buttonFilled */ "./node_modules/@material-tailwind/react/theme/components/button/buttonFilled.js"));var _buttonGradient=_interopRequireDefault(__webpack_require__(/*! ../button/buttonGradient */ "./node_modules/@material-tailwind/react/theme/components/button/buttonGradient.js"));var _buttonOutlined=_interopRequireDefault(__webpack_require__(/*! ../button/buttonOutlined */ "./node_modules/@material-tailwind/react/theme/components/button/buttonOutlined.js"));var _buttonText=_interopRequireDefault(__webpack_require__(/*! ../button/buttonText */ "./node_modules/@material-tailwind/react/theme/components/button/buttonText.js"));var _button=__webpack_require__(/*! ../../../types/components/button */ "./node_modules/@material-tailwind/react/types/components/button.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var iconButton={defaultProps:{variant:"filled",size:"md",color:"gray",fullWidth:false,ripple:true,className:""},valid:{variants:_button.propTypesVariant,sizes:_button.propTypesSize,colors:_button.propTypesColor},styles:{base:{position:"relative",verticalAlign:"align-middle",userSelect:"select-none",fontFamily:"font-sans",fontWeight:"font-medium",textAlign:"text-center",textTransform:"uppercase",transition:"transition-all",disabled:"disabled:opacity-50 disabled:shadow-none disabled:pointer-events-none"},sizes:{sm:{width:"w-8",maxWidth:"max-w-[32px]",height:"h-8",maxHeight:"max-h-[32px]",borderRadius:"rounded-lg",fontSize:"text-xs"},md:{width:"w-10",maxWidth:"max-w-[40px]",height:"h-10",maxHeight:"max-h-[40px]",borderRadius:"rounded-lg",fontSize:"text-xs"},lg:{width:"w-12",maxWidth:"max-w-[48px]",height:"h-12",maxHeight:"max-h-[48px]",borderRadius:"rounded-lg",fontSize:"text-sm"}},variants:{filled:_buttonFilled.default,gradient:_buttonGradient.default,outlined:_buttonOutlined.default,text:_buttonText.default}}};var _default=iconButton;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/input/index.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/input/index.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{input:function(){return input},default:function(){return _default}});var _inputOutlined=_interopRequireDefault(__webpack_require__(/*! ./inputOutlined */ "./node_modules/@material-tailwind/react/theme/components/input/inputOutlined/index.js"));var _inputStandard=_interopRequireDefault(__webpack_require__(/*! ./inputStandard */ "./node_modules/@material-tailwind/react/theme/components/input/inputStandard/index.js"));var _inputStatic=_interopRequireDefault(__webpack_require__(/*! ./inputStatic */ "./node_modules/@material-tailwind/react/theme/components/input/inputStatic/index.js"));var _input=__webpack_require__(/*! ../../../types/components/input */ "./node_modules/@material-tailwind/react/types/components/input.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var input={defaultProps:{variant:"outlined",size:"md",color:"gray",label:"",error:false,success:false,icon:undefined,labelProps:undefined,containerProps:undefined,shrink:false,className:""},valid:{variants:_input.propTypesVariant,sizes:_input.propTypesSize,colors:_input.propTypesColor},styles:{base:{container:{position:"relative",width:"w-full",minWidth:"min-w-[200px]"},input:{peer:"peer",width:"w-full",height:"h-full",bg:"bg-transparent",color:"text-blue-gray-700",fontFamily:"font-sans",fontWeight:"font-normal",outline:"outline outline-0 focus:outline-0",disabled:"disabled:bg-blue-gray-50 disabled:border-0 disabled:cursor-not-allowed",transition:"transition-all"},label:{display:"flex",width:"w-full",height:"h-full",userSelect:"select-none",pointerEvents:"pointer-events-none",position:"absolute",left:"left-0",fontWeight:"font-normal",overflow:"!overflow-visible",textOverflow:"truncate",color:"peer-placeholder-shown:text-blue-gray-500",lineHeight:"leading-tight peer-focus:leading-tight",disabled:"peer-disabled:text-transparent peer-disabled:peer-placeholder-shown:text-blue-gray-500",transition:"transition-all"},icon:{display:"grid",placeItems:"place-items-center",position:"absolute",color:"text-blue-gray-500"},asterisk:{display:"inline-block",color:"text-red-500",ml:"ml-0.5"}},variants:{outlined:_inputOutlined.default,standard:_inputStandard.default,static:_inputStatic.default}}};var _default=input;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/input/inputOutlined/index.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/input/inputOutlined/index.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var _inputOutlinedLabel=_interopRequireDefault(__webpack_require__(/*! ./inputOutlinedLabel */ "./node_modules/@material-tailwind/react/theme/components/input/inputOutlined/inputOutlinedLabel.js"));var _inputOutlinedColors=_interopRequireDefault(__webpack_require__(/*! ./inputOutlinedColors */ "./node_modules/@material-tailwind/react/theme/components/input/inputOutlined/inputOutlinedColors.js"));var _inputOutlinedLabelColors=_interopRequireDefault(__webpack_require__(/*! ./inputOutlinedLabelColors */ "./node_modules/@material-tailwind/react/theme/components/input/inputOutlined/inputOutlinedLabelColors.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var inputOutlined={base:{input:{borderWidth:"placeholder-shown:border",borderColor:"placeholder-shown:border-blue-gray-200 placeholder-shown:border-t-blue-gray-200",floated:{borderWidth:"border focus:border-2",borderColor:"border-t-transparent focus:border-t-transparent"},placeholder:"placeholder:opacity-0 focus:placeholder:opacity-100"},inputWithIcon:{pr:"!pr-9"},icon:{top:"top-2/4",right:"right-3",transform:"-translate-y-2/4"},label:_inputOutlinedLabel.default},sizes:{md:{container:{height:"h-10"},input:{fontSize:"text-sm",px:"px-3",py:"py-2.5",borderRadius:"rounded-[7px]"},label:{lineHeight:"peer-placeholder-shown:leading-[3.75]"},icon:{width:"w-5",height:"h-5"}},lg:{container:{height:"h-11"},input:{fontSize:"text-sm",px:"px-3",py:"py-3",borderRadius:"rounded-md"},label:{lineHeight:"peer-placeholder-shown:leading-[4.1]"},icon:{width:"w-6",height:"h-6"}}},colors:{input:_inputOutlinedColors.default,label:_inputOutlinedLabelColors.default},error:{input:{borderColor:"border-red-500 placeholder-shown:border-t-red-500 placeholder-shown:border-red-500",borderColorFocused:"focus:border-red-500"},label:{color:"text-red-500 peer-focus:text-red-500 peer-placeholder-shown:text-red-500",before:"before:border-red-500 peer-focus:before:border-red-500",after:"after:border-red-500 peer-focus:after:border-red-500"}},success:{input:{borderColor:"border-green-500 placeholder-shown:border-t-green-500 placeholder-shown:border-green-500",borderColorFocused:"focus:border-green-500"},label:{color:"text-green-500 peer-focus:text-green-500 peer-placeholder-shown:text-green-500",before:"before:border-green-500 peer-focus:before:border-green-500",after:"after:border-green-500 peer-focus:after:border-green-500"}},shrink:{input:{borderTop:"!border-t-transparent"},label:{fontSize:"!text-[11px]",lineHeight:"!leading-tight",borderColor:"before:!border-blue-gray-200 after:!border-blue-gray-200"}}};var _default=inputOutlined;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/input/inputOutlined/inputOutlinedColors.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/input/inputOutlined/inputOutlinedColors.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var inputOutlinedColors={black:{color:"text-black",borderColor:"border-black",borderColorFocused:"focus:border-black"},white:{color:"!text-white",borderColor:"border-white",borderColorFocused:"focus:border-white"},"blue-gray":{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-blue-gray-500"},gray:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-gray-900"},brown:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-brown-500"},"deep-orange":{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-deep-orange-500"},orange:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-orange-500"},amber:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-amber-500"},yellow:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-yellow-500"},lime:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-lime-500"},"light-green":{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-light-green-500"},green:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-green-500"},teal:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-teal-500"},cyan:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-cyan-500"},"light-blue":{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-light-blue-500"},blue:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-blue-500"},indigo:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-indigo-500"},"deep-purple":{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-deep-purple-500"},purple:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-purple-500"},pink:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-pink-500"},red:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-red-500"}};var _default=inputOutlinedColors;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/input/inputOutlined/inputOutlinedLabel.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/input/inputOutlined/inputOutlinedLabel.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var inputOutlinedLabel={position:"-top-1.5",fontSize:"peer-placeholder-shown:text-sm",floated:{fontSize:"text-[11px] peer-focus:text-[11px]"},before:{content:"before:content[' ']",display:"before:block",boxSizing:"before:box-border",width:"before:w-2.5",height:"before:h-1.5",mt:"before:mt-[6.5px]",mr:"before:mr-1",borderColor:"peer-placeholder-shown:before:border-transparent",borderRadius:"before:rounded-tl-md",floated:{bt:"before:border-t peer-focus:before:border-t-2",bl:"before:border-l peer-focus:before:border-l-2"},pointerEvents:"before:pointer-events-none",transition:"before:transition-all",disabled:"peer-disabled:before:border-transparent"},after:{content:"after:content[' ']",display:"after:block",flexGrow:"after:flex-grow",boxSizing:"after:box-border",width:"after:w-2.5",height:"after:h-1.5",mt:"after:mt-[6.5px]",ml:"after:ml-1",borderColor:"peer-placeholder-shown:after:border-transparent",borderRadius:"after:rounded-tr-md",floated:{bt:"after:border-t peer-focus:after:border-t-2",br:"after:border-r peer-focus:after:border-r-2"},pointerEvents:"after:pointer-events-none",transition:"after:transition-all",disabled:"peer-disabled:after:border-transparent"}};var _default=inputOutlinedLabel;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/input/inputOutlined/inputOutlinedLabelColors.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/input/inputOutlined/inputOutlinedLabelColors.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var inputOutlinedLabelColors={black:{color:"!text-black peer-focus:text-black",before:"before:border-black peer-focus:before:!border-black",after:"after:border-black peer-focus:after:!border-black"},white:{color:"!text-white peer-focus:text-white",before:"before:border-white peer-focus:before:!border-white",after:"after:border-white peer-focus:after:!border-white"},"blue-gray":{color:"text-blue-gray-400 peer-focus:text-blue-gray-500",before:"before:border-blue-gray-200 peer-focus:before:!border-blue-gray-500",after:"after:border-blue-gray-200 peer-focus:after:!border-blue-gray-500"},gray:{color:"text-gray-500 peer-focus:text-gray-900",before:"before:border-blue-gray-200 peer-focus:before:!border-gray-900",after:"after:border-blue-gray-200 peer-focus:after:!border-gray-900"},brown:{color:"text-blue-gray-400 peer-focus:text-brown-500",before:"before:border-blue-gray-200 peer-focus:before:!border-brown-500",after:"after:border-blue-gray-200 peer-focus:after:!border-brown-500"},"deep-orange":{color:"text-blue-gray-400 peer-focus:text-deep-orange-500",before:"before:border-blue-gray-200 peer-focus:before:!border-deep-orange-500",after:"after:border-blue-gray-200 peer-focus:after:!border-deep-orange-500"},orange:{color:"text-blue-gray-400 peer-focus:text-orange-500",before:"before:border-blue-gray-200 peer-focus:before:!border-orange-500",after:"after:border-blue-gray-200 peer-focus:after:!border-orange-500"},amber:{color:"text-blue-gray-400 peer-focus:text-amber-500",before:"before:border-blue-gray-200 peer-focus:before:!border-amber-500",after:"after:border-blue-gray-200 peer-focus:after:!border-amber-500"},yellow:{color:"text-blue-gray-400 peer-focus:text-yellow-500",before:"before:border-blue-gray-200 peer-focus:before:!border-yellow-500",after:"after:border-blue-gray-200 peer-focus:after:!border-yellow-500"},lime:{color:"text-blue-gray-400 peer-focus:text-lime-500",before:"before:border-blue-gray-200 peer-focus:before:!border-lime-500",after:"after:border-blue-gray-200 peer-focus:after:!border-lime-500"},"light-green":{color:"text-blue-gray-400 peer-focus:text-light-green-500",before:"before:border-blue-gray-200 peer-focus:before:!border-light-green-500",after:"after:border-blue-gray-200 peer-focus:after:!border-light-green-500"},green:{color:"text-blue-gray-400 peer-focus:text-green-500",before:"before:border-blue-gray-200 peer-focus:before:!border-green-500",after:"after:border-blue-gray-200 peer-focus:after:!border-green-500"},teal:{color:"text-blue-gray-400 peer-focus:text-teal-500",before:"before:border-blue-gray-200 peer-focus:before:!border-teal-500",after:"after:border-blue-gray-200 peer-focus:after:!border-teal-500"},cyan:{color:"text-blue-gray-400 peer-focus:text-cyan-500",before:"before:border-blue-gray-200 peer-focus:before:!border-cyan-500",after:"after:border-blue-gray-200 peer-focus:after:!border-cyan-500"},"light-blue":{color:"text-blue-gray-400 peer-focus:text-light-blue-500",before:"before:border-blue-gray-200 peer-focus:before:!border-light-blue-500",after:"after:border-blue-gray-200 peer-focus:after:!border-light-blue-500"},blue:{color:"text-blue-gray-400 peer-focus:text-blue-500",before:"before:border-blue-gray-200 peer-focus:before:!border-blue-500",after:"after:border-blue-gray-200 peer-focus:after:!border-blue-500"},indigo:{color:"text-blue-gray-400 peer-focus:text-indigo-500",before:"before:border-blue-gray-200 peer-focus:before:!border-indigo-500",after:"after:border-blue-gray-200 peer-focus:after:!border-indigo-500"},"deep-purple":{color:"text-blue-gray-400 peer-focus:text-deep-purple-500",before:"before:border-blue-gray-200 peer-focus:before:!border-deep-purple-500",after:"after:border-blue-gray-200 peer-focus:after:!border-deep-purple-500"},purple:{color:"text-blue-gray-400 peer-focus:text-purple-500",before:"before:border-blue-gray-200 peer-focus:before:!border-purple-500",after:"after:border-blue-gray-200 peer-focus:after:!border-purple-500"},pink:{color:"text-blue-gray-400 peer-focus:text-pink-500",before:"before:border-blue-gray-200 peer-focus:before:!border-pink-500",after:"after:border-blue-gray-200 peer-focus:after:!border-pink-500"},red:{color:"text-blue-gray-400 peer-focus:text-red-500",before:"before:border-blue-gray-200 peer-focus:before:!border-red-500",after:"after:border-blue-gray-200 peer-focus:after:!border-red-500"}};var _default=inputOutlinedLabelColors;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/input/inputStandard/index.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/input/inputStandard/index.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var _inputStandardLabel=_interopRequireDefault(__webpack_require__(/*! ./inputStandardLabel */ "./node_modules/@material-tailwind/react/theme/components/input/inputStandard/inputStandardLabel.js"));var _inputStandardColors=_interopRequireDefault(__webpack_require__(/*! ./inputStandardColors */ "./node_modules/@material-tailwind/react/theme/components/input/inputStandard/inputStandardColors.js"));var _inputStandardLabelColors=_interopRequireDefault(__webpack_require__(/*! ./inputStandardLabelColors */ "./node_modules/@material-tailwind/react/theme/components/input/inputStandard/inputStandardLabelColors.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var inputStandard={base:{input:{borderWidth:"border-b",borderColor:"placeholder-shown:border-blue-gray-200",placeholder:"placeholder:opacity-0 focus:placeholder:opacity-100"},inputWithIcon:{pr:"!pr-7"},icon:{top:"top-2/4",right:"right-0",transform:"-translate-y-1/4"},label:_inputStandardLabel.default},sizes:{md:{container:{height:"h-11"},input:{fontSize:"text-sm",pt:"pt-4",pb:"pb-1.5"},label:{lineHeight:"peer-placeholder-shown:leading-[4.25]"},icon:{width:"w-5",height:"h-5"}},lg:{container:{height:"h-12"},input:{fontSize:"text-sm",px:"px-px",pt:"pt-5",pb:"pb-2"},label:{lineHeight:"peer-placeholder-shown:leading-[4.875]"},icon:{width:"w-6",height:"h-6"}}},colors:{input:_inputStandardColors.default,label:_inputStandardLabelColors.default},error:{input:{borderColor:"border-red-500 placeholder-shown:border-red-500",borderColorFocused:"focus:border-red-500"},label:{color:"text-red-500 peer-focus:text-red-500 peer-placeholder-shown:text-red-500",after:"after:border-red-500 peer-focus:after:border-red-500"}},success:{input:{borderColor:"border-green-500 placeholder-shown:border-green-500",borderColorFocused:"focus:border-green-500"},label:{color:"text-green-500 peer-focus:text-green-500 peer-placeholder-shown:text-green-500",after:"after:border-green-500 peer-focus:after:border-green-500"}},shrink:{input:{},label:{fontSize:"!text-[11px]",lineHeight:"!leading-tight"}}};var _default=inputStandard;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/input/inputStandard/inputStandardColors.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/input/inputStandard/inputStandardColors.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var inputStandardColors={black:{color:"text-black",borderColor:"border-black",borderColorFocused:"focus:border-black"},white:{color:"!text-white",borderColor:"border-white",borderColorFocused:"focus:border-white"},"blue-gray":{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-blue-gray-900"},gray:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-gray-500"},brown:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-brown-500"},"deep-orange":{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-deep-orange-500"},orange:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-orange-500"},amber:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-amber-500"},yellow:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-yellow-500"},lime:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-lime-500"},"light-green":{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-light-green-500"},green:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-green-500"},teal:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-teal-500"},cyan:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-cyan-500"},"light-blue":{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-light-blue-500"},blue:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-blue-500"},indigo:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-indigo-500"},"deep-purple":{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-deep-purple-500"},purple:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-purple-500"},pink:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-pink-500"},red:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-red-500"}};var _default=inputStandardColors;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/input/inputStandard/inputStandardLabel.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/input/inputStandard/inputStandardLabel.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var inputStandardLabel={position:"-top-1.5",fontSize:"peer-placeholder-shown:text-sm",floated:{fontSize:"text-[11px] peer-focus:text-[11px]"},after:{content:"after:content['']",display:"after:block",width:"after:w-full",position:"after:absolute",bottom:"after:-bottom-1.5",left:"left-0",borderWidth:"after:border-b-2",scale:"after:scale-x-0",floated:{scale:"peer-focus:after:scale-x-100"},transition:"after:transition-transform after:duration-300"}};var _default=inputStandardLabel;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/input/inputStandard/inputStandardLabelColors.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/input/inputStandard/inputStandardLabelColors.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var inputStandardLabelColors={black:{color:"!text-black peer-focus:text-black",after:"after:border-black peer-focus:after:border-black"},white:{color:"!text-white peer-focus:text-white",after:"after:border-white peer-focus:after:border-white"},"blue-gray":{color:"text-blue-gray-500 peer-focus:text-blue-gray-500",after:"after:border-blue-gray-500 peer-focus:after:border-blue-gray-500"},gray:{color:"text-gray-500 peer-focus:text-gray-900",after:"after:border-gray-500 peer-focus:after:border-gray-900"},brown:{color:"text-blue-gray-500 peer-focus:text-brown-500",after:"after:border-brown-500 peer-focus:after:border-brown-500"},"deep-orange":{color:"text-blue-gray-500 peer-focus:text-deep-orange-500",after:"after:border-deep-orange-500 peer-focus:after:border-deep-orange-500"},orange:{color:"text-blue-gray-500 peer-focus:text-orange-500",after:"after:border-orange-500 peer-focus:after:border-orange-500"},amber:{color:"text-blue-gray-500 peer-focus:text-amber-500",after:"after:border-amber-500 peer-focus:after:border-amber-500"},yellow:{color:"text-blue-gray-500 peer-focus:text-yellow-500",after:"after:border-yellow-500 peer-focus:after:border-yellow-500"},lime:{color:"text-blue-gray-500 peer-focus:text-lime-500",after:"after:border-lime-500 peer-focus:after:border-lime-500"},"light-green":{color:"text-blue-gray-500 peer-focus:text-light-green-500",after:"after:border-light-green-500 peer-focus:after:border-light-green-500"},green:{color:"text-blue-gray-500 peer-focus:text-green-500",after:"after:border-green-500 peer-focus:after:border-green-500"},teal:{color:"text-blue-gray-500 peer-focus:text-teal-500",after:"after:border-teal-500 peer-focus:after:border-teal-500"},cyan:{color:"text-blue-gray-500 peer-focus:text-cyan-500",after:"after:border-cyan-500 peer-focus:after:border-cyan-500"},"light-blue":{color:"text-blue-gray-500 peer-focus:text-light-blue-500",after:"after:border-light-blue-500 peer-focus:after:border-light-blue-500"},blue:{color:"text-blue-gray-500 peer-focus:text-blue-500",after:"after:border-blue-500 peer-focus:after:border-blue-500"},indigo:{color:"text-blue-gray-500 peer-focus:text-indigo-500",after:"after:border-indigo-500 peer-focus:after:border-indigo-500"},"deep-purple":{color:"text-blue-gray-500 peer-focus:text-deep-purple-500",after:"after:border-deep-purple-500 peer-focus:after:border-deep-purple-500"},purple:{color:"text-blue-gray-500 peer-focus:text-purple-500",after:"after:border-purple-500 peer-focus:after:border-purple-500"},pink:{color:"text-blue-gray-500 peer-focus:text-pink-500",after:"after:border-pink-500 peer-focus:after:border-pink-500"},red:{color:"text-blue-gray-500 peer-focus:text-red-500",after:"after:border-red-500 peer-focus:after:border-red-500"}};var _default=inputStandardLabelColors;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/input/inputStatic/index.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/input/inputStatic/index.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var _inputStaticLabel=_interopRequireDefault(__webpack_require__(/*! ./inputStaticLabel */ "./node_modules/@material-tailwind/react/theme/components/input/inputStatic/inputStaticLabel.js"));var _inputStaticColors=_interopRequireDefault(__webpack_require__(/*! ./inputStaticColors */ "./node_modules/@material-tailwind/react/theme/components/input/inputStatic/inputStaticColors.js"));var _inputStaticLabelColors=_interopRequireDefault(__webpack_require__(/*! ./inputStaticLabelColors */ "./node_modules/@material-tailwind/react/theme/components/input/inputStatic/inputStaticLabelColors.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var inputStatic={base:{input:{borderWidth:"border-b",borderColor:"placeholder-shown:border-blue-gray-200"},inputWithIcon:{pr:"!pr-7"},icon:{top:"top-2/4",right:"right-0",transform:"-translate-y-1/4"},label:_inputStaticLabel.default},sizes:{md:{container:{height:"h-11"},input:{fontSize:"text-sm",pt:"pt-4",pb:"pb-1.5"},label:{lineHeight:"peer-placeholder-shown:leading-tight"},icon:{width:"w-5",height:"h-5"}},lg:{container:{height:"h-12"},input:{fontSize:"text-sm",px:"px-px",pt:"pt-5",pb:"pb-2"},label:{lineHeight:"peer-placeholder-shown:leading-tight"},icon:{width:"w-6",height:"h-6"}}},colors:{input:_inputStaticColors.default,label:_inputStaticLabelColors.default},error:{input:{borderColor:"border-red-500 placeholder-shown:border-red-500",borderColorFocused:"focus:border-red-500"},label:{color:"text-red-500 peer-focus:text-red-500 peer-placeholder-shown:text-red-500",after:"after:border-red-500 peer-focus:after:border-red-500"}},success:{input:{borderColor:"border-green-500 placeholder-shown:border-green-500",borderColorFocused:"focus:border-green-500"},label:{color:"text-green-500 peer-focus:text-green-500 peer-placeholder-shown:text-green-500",after:"after:border-green-500 peer-focus:after:border-green-500"}},shrink:{input:{},label:{}}};var _default=inputStatic;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/input/inputStatic/inputStaticColors.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/input/inputStatic/inputStaticColors.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var inputStaticColors={black:{color:"text-black",borderColor:"border-black",borderColorFocused:"focus:border-black"},white:{color:"!text-white",borderColor:"border-white",borderColorFocused:"focus:border-white"},"blue-gray":{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-blue-gray-500"},gray:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-gray-900"},brown:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-brown-500"},"deep-orange":{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-deep-orange-500"},orange:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-orange-500"},amber:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-amber-500"},yellow:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-yellow-500"},lime:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-lime-500"},"light-green":{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-light-green-500"},green:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-green-500"},teal:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-teal-500"},cyan:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-cyan-500"},"light-blue":{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-light-blue-500"},blue:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-blue-500"},indigo:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-indigo-500"},"deep-purple":{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-deep-purple-500"},purple:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-purple-500"},pink:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-pink-500"},red:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-red-500"}};var _default=inputStaticColors;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/input/inputStatic/inputStaticLabel.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/input/inputStatic/inputStaticLabel.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var inputStaticLabel={position:"-top-2.5",fontSize:"text-sm peer-focus:text-sm",after:{content:"after:content[' ']",display:"after:block",width:"after:w-full",position:"after:absolute",bottom:"after:-bottom-2.5",left:"left-0",borderWidth:"after:border-b-2",scale:"after:scale-x-0",floated:{scale:"peer-focus:after:scale-x-100"},transition:"after:transition-transform after:duration-300"}};var _default=inputStaticLabel;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/input/inputStatic/inputStaticLabelColors.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/input/inputStatic/inputStaticLabelColors.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var inputStaticLabelColors={black:{color:"!text-black peer-focus:!text-black",after:"after:border-black peer-focus:after:border-black"},white:{color:"!text-white peer-focus:!text-white",after:"after:border-white peer-focus:after:border-white"},"blue-gray":{color:"text-blue-gray-500 peer-focus:text-blue-gray-500",after:"after:border-blue-gray-500 peer-focus:after:border-blue-gray-500"},gray:{color:"text-gray-500 peer-focus:text-gray-900",after:"after:border-gray-500 peer-focus:after:border-gray-900"},brown:{color:"text-blue-gray-500 peer-focus:text-brown-500",after:"after:border-brown-500 peer-focus:after:border-brown-500"},"deep-orange":{color:"text-blue-gray-500 peer-focus:text-deep-orange-500",after:"after:border-deep-orange-500 peer-focus:after:border-deep-orange-500"},orange:{color:"text-blue-gray-500 peer-focus:text-orange-500",after:"after:border-orange-500 peer-focus:after:border-orange-500"},amber:{color:"text-blue-gray-500 peer-focus:text-amber-500",after:"after:border-amber-500 peer-focus:after:border-amber-500"},yellow:{color:"text-blue-gray-500 peer-focus:text-yellow-500",after:"after:border-yellow-500 peer-focus:after:border-yellow-500"},lime:{color:"text-blue-gray-500 peer-focus:text-lime-500",after:"after:border-lime-500 peer-focus:after:border-lime-500"},"light-green":{color:"text-blue-gray-500 peer-focus:text-light-green-500",after:"after:border-light-green-500 peer-focus:after:border-light-green-500"},green:{color:"text-blue-gray-500 peer-focus:text-green-500",after:"after:border-green-500 peer-focus:after:border-green-500"},teal:{color:"text-blue-gray-500 peer-focus:text-teal-500",after:"after:border-teal-500 peer-focus:after:border-teal-500"},cyan:{color:"text-blue-gray-500 peer-focus:text-cyan-500",after:"after:border-cyan-500 peer-focus:after:border-cyan-500"},"light-blue":{color:"text-blue-gray-500 peer-focus:text-light-blue-500",after:"after:border-light-blue-500 peer-focus:after:border-light-blue-500"},blue:{color:"text-blue-gray-500 peer-focus:text-blue-500",after:"after:border-blue-500 peer-focus:after:border-blue-500"},indigo:{color:"text-blue-gray-500 peer-focus:text-indigo-500",after:"after:border-indigo-500 peer-focus:after:border-indigo-500"},"deep-purple":{color:"text-blue-gray-500 peer-focus:text-deep-purple-500",after:"after:border-deep-purple-500 peer-focus:after:border-deep-purple-500"},purple:{color:"text-blue-gray-500 peer-focus:text-purple-500",after:"after:border-purple-500 peer-focus:after:border-purple-500"},pink:{color:"text-blue-gray-500 peer-focus:text-pink-500",after:"after:border-pink-500 peer-focus:after:border-pink-500"},red:{color:"text-blue-gray-500 peer-focus:text-red-500",after:"after:border-red-500 peer-focus:after:border-red-500"}};var _default=inputStaticLabelColors;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/list/index.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/list/index.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{list:function(){return list},default:function(){return _default}});var list={defaultProps:{ripple:true,className:""},styles:{base:{list:{display:"flex",flexDirection:"flex-col",gap:"gap-1",minWidth:"min-w-[240px]",p:"p-2",fontFamily:"font-sans",fontSize:"text-base",fontWeight:"font-normal",color:"text-blue-gray-700"},item:{initial:{display:"flex",alignItems:"items-center",width:"w-full",padding:"p-3",borderRadius:"rounded-lg",textAlign:"text-start",lightHeight:"leading-tight",transition:"transition-all",bg:"hover:bg-blue-gray-50 hover:bg-opacity-80 focus:bg-blue-gray-50 focus:bg-opacity-80 active:bg-blue-gray-50 active:bg-opacity-80",color:"hover:text-blue-gray-900 focus:text-blue-gray-900 active:text-blue-gray-900",outline:"outline-none"},selected:{bg:"bg-blue-gray-50/50",color:"text-blue-gray-700"},disabled:{opacity:"opacity-50",cursor:"cursor-not-allowed",pointerEvents:"pointer-events-none",userSelect:"select-none",bg:"hover:bg-transparent focus:bg-transparent active:bg-transparent",color:"hover:text-blue-gray-500 focus:text-blue-gray-500 active:text-blue-gray-500"}},itemPrefix:{display:"grid",placeItems:"place-items-center",marginRight:"mr-4"},itemSuffix:{display:"grid",placeItems:"place-items-center",marginRight:"ml-auto justify-self-end"}}}};var _default=list;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/menu/index.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/menu/index.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{menu:function(){return menu},default:function(){return _default}});var menu={defaultProps:{placement:"bottom",offset:5,dismiss:{itemPress:true},animate:{unmount:{},mount:{}},lockScroll:false},styles:{base:{menu:{bg:"bg-white",minWidth:"min-w-[180px]",p:"p-3",border:"border border-blue-gray-50",borderRadius:"rounded-md",boxShadow:"shadow-lg shadow-blue-gray-500/10",fontFamily:"font-sans",fontSize:"text-sm",fontWeight:"font-normal",color:"text-blue-gray-500",overflow:"overflow-auto",outline:"focus:outline-none",zIndex:"z-[999]"},item:{initial:{display:"block",width:"w-full",pt:"pt-[9px]",pb:"pb-2",px:"px-3",borderRadius:"rounded-md",textAlign:"text-start",lightHeight:"leading-tight",cursor:"cursor-pointer",userSelect:"select-none",transition:"transition-all",bg:"hover:bg-blue-gray-50 hover:bg-opacity-80 focus:bg-blue-gray-50 focus:bg-opacity-80 active:bg-blue-gray-50 active:bg-opacity-80",color:"hover:text-blue-gray-900 focus:text-blue-gray-900 active:text-blue-gray-900",outline:"outline-none"},disabled:{opacity:"opacity-50",cursor:"cursor-not-allowed",pointerEvents:"pointer-events-none",userSelect:"select-none",bg:"hover:bg-transparent focus:bg-transparent active:bg-transparent",color:"hover:text-blue-gray-500 focus:text-blue-gray-500 active:text-blue-gray-500"}}}}};var _default=menu;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/navbar/index.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/navbar/index.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{navbar:function(){return navbar},default:function(){return _default}});var _navbarFilled=_interopRequireDefault(__webpack_require__(/*! ./navbarFilled */ "./node_modules/@material-tailwind/react/theme/components/navbar/navbarFilled.js"));var _navbarGradient=_interopRequireDefault(__webpack_require__(/*! ./navbarGradient */ "./node_modules/@material-tailwind/react/theme/components/navbar/navbarGradient.js"));var _navbar=__webpack_require__(/*! ../../../types/components/navbar */ "./node_modules/@material-tailwind/react/types/components/navbar.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var navbar={defaultProps:{variant:"filled",color:"white",shadow:true,blurred:true,fullWidth:false,className:""},valid:{variants:_navbar.propTypesVariant,colors:_navbar.propTypesColor},styles:{base:{navbar:{initial:{display:"block",width:"w-full",maxWidth:"max-w-screen-2xl",borderRadius:"rounded-xl",py:"py-4",px:"px-8"},shadow:{boxShadow:"shadow-md"},blurred:{backdropFilter:"backdrop-saturate-200 backdrop-blur-2xl",bgOpacity:"bg-opacity-80",borderWidth:"border",borderColor:"border-white/80"},fullWidth:{width:"w-full",maxWidth:"max-w-full",rounded:"rounded-none",px:"px-4"}},mobileNav:{display:"block",width:"w-full",basis:"basis-full",overflow:"overflow-hidden"}},variants:{filled:_navbarFilled.default,gradient:_navbarGradient.default}}};var _default=navbar;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/navbar/navbarFilled.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/navbar/navbarFilled.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var navbarFilled={transparent:{background:"bg-transparent",color:"text-white",boxShadow:"shadow-none"},white:{background:"bg-white",color:"text-white"},"blue-gray":{background:"bg-blue-gray-500",color:"text-white"},gray:{background:"bg-gray-500",color:"text-white"},brown:{background:"bg-brown-500",color:"text-white"},"deep-orange":{background:"bg-deep-orange-500",color:"text-white"},orange:{background:"bg-orange-500",color:"text-white"},amber:{background:"bg-amber-500",color:"text-black"},yellow:{background:"bg-yellow-500",color:"text-black"},lime:{background:"bg-lime-500",color:"text-black"},"light-green":{background:"bg-light-green-500",color:"text-white"},green:{background:"bg-green-500",color:"text-white"},teal:{background:"bg-teal-500",color:"text-white"},cyan:{background:"bg-cyan-500",color:"text-white"},"light-blue":{background:"bg-light-blue-500",color:"text-white"},blue:{background:"bg-blue-500",color:"text-white"},indigo:{background:"bg-indigo-500",color:"text-white"},"deep-purple":{background:"bg-deep-purple-500",color:"text-white"},purple:{background:"bg-purple-500",color:"text-white"},pink:{background:"bg-pink-500",color:"text-white"},red:{background:"bg-red-500",color:"text-white"}};var _default=navbarFilled;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/navbar/navbarGradient.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/navbar/navbarGradient.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var navbarGradient={transparent:{background:"bg-transparent",color:"text-blue-gray-900",boxShadow:"shadow-none"},white:{background:"bg-white",color:"text-blue-gray-900"},"blue-gray":{background:"bg-gradient-to-tr from-blue-gray-600 to-blue-gray-400",color:"text-white"},gray:{background:"bg-gradient-to-tr from-gray-600 to-gray-400",color:"text-white"},brown:{background:"bg-gradient-to-tr from-brown-600 to-brown-400",color:"text-white"},"deep-orange":{background:"bg-gradient-to-tr from-deep-orange-600 to-deep-orange-400",color:"text-white"},orange:{background:"bg-gradient-to-tr from-orange-600 to-orange-400",color:"text-white"},amber:{background:"bg-gradient-to-tr from-amber-600 to-amber-400",color:"text-black"},yellow:{background:"bg-gradient-to-tr from-yellow-600 to-yellow-400",color:"text-black"},lime:{background:"bg-gradient-to-tr from-lime-600 to-lime-400",color:"text-black"},"light-green":{background:"bg-gradient-to-tr from-light-green-600 to-light-green-400",color:"text-white"},green:{background:"bg-gradient-to-tr from-green-600 to-green-400",color:"text-white"},teal:{background:"bg-gradient-to-tr from-teal-600 to-teal-400",color:"text-white"},cyan:{background:"bg-gradient-to-tr from-cyan-600 to-cyan-400",color:"text-white"},"light-blue":{background:"bg-gradient-to-tr from-light-blue-600 to-light-blue-400",color:"text-white"},blue:{background:"bg-gradient-to-tr from-blue-600 to-blue-400",color:"text-white"},indigo:{background:"bg-gradient-to-tr from-indigo-600 to-indigo-400",color:"text-white"},"deep-purple":{background:"bg-gradient-to-tr from-deep-purple-600 to-deep-purple-400",color:"text-white"},purple:{background:"bg-gradient-to-tr from-purple-600 to-purple-400",color:"text-white"},pink:{background:"bg-gradient-to-tr from-pink-600 to-pink-400",color:"text-white"},red:{background:"bg-gradient-to-tr from-red-600 to-red-400",color:"text-white"}};var _default=navbarGradient;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/popover/index.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/popover/index.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{popover:function(){return popover},default:function(){return _default}});var popover={defaultProps:{placement:"top",offset:5,dismiss:{},animate:{unmount:{},mount:{}},className:""},styles:{base:{bg:"bg-white",p:"p-4",border:"border border-blue-gray-50",borderRadius:"rounded-lg",boxShadow:"shadow-lg shadow-blue-gray-500/10",fontFamily:"font-sans",fontSize:"text-sm",fontWeight:"font-normal",color:"text-blue-gray-500",outline:"focus:outline-none",overflowWrap:"break-words",whiteSpace:"whitespace-normal"}}};var _default=popover;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/progress/index.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/progress/index.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{progress:function(){return progress},default:function(){return _default}});var _progressFilled=_interopRequireDefault(__webpack_require__(/*! ./progressFilled */ "./node_modules/@material-tailwind/react/theme/components/progress/progressFilled.js"));var _progressGradient=_interopRequireDefault(__webpack_require__(/*! ./progressGradient */ "./node_modules/@material-tailwind/react/theme/components/progress/progressGradient.js"));var _progress=__webpack_require__(/*! ../../../types/components/progress */ "./node_modules/@material-tailwind/react/types/components/progress.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var progress={defaultProps:{variant:"filled",color:"gray",size:"md",value:0,label:false,className:"",barProps:{}},valid:{variants:_progress.propTypesVariant,colors:_progress.propTypesColor,sizes:_progress.propTypesSize},styles:{base:{container:{initial:{display:"flex",justifyContent:"flex-start",bg:"bg-blue-gray-50",overflow:"overflow-hidden",width:"w-full",fontFamily:"font-sans",borderRadius:"rounded-full",fontSize:"text-xs",fontWeight:"font-medium"},withLabel:{}},bar:{display:"flex",justifyContent:"justify-center",alignItems:"items-center",height:"h-full",overflow:"overflow-hidden",wordBreak:"break-all",borderRadius:"rounded-full"}},sizes:{sm:{container:{initial:{height:"h-1.5"},withLabel:{height:"h-3.5"}},bar:{}},md:{container:{initial:{height:"h-2.5"},withLabel:{height:"h-4"}},bar:{}},lg:{container:{initial:{height:"h-3.5"},withLabel:{height:"h-5"}},bar:{}}},variants:{filled:_progressFilled.default,gradient:_progressGradient.default}}};var _default=progress;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/progress/progressFilled.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/progress/progressFilled.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var progressFilled={"blue-gray":{backgroud:"bg-blue-gray-500",color:"text-white"},gray:{backgroud:"bg-gray-900",color:"text-white"},brown:{backgroud:"bg-brown-500",color:"text-white"},"deep-orange":{backgroud:"bg-deep-orange-500",color:"text-white"},orange:{backgroud:"bg-orange-500",color:"text-white"},amber:{backgroud:"bg-amber-500",color:"text-black"},yellow:{backgroud:"bg-yellow-500",color:"text-black"},lime:{backgroud:"bg-lime-500",color:"text-black"},"light-green":{backgroud:"bg-light-green-500",color:"text-white"},green:{backgroud:"bg-green-500",color:"text-white"},teal:{backgroud:"bg-teal-500",color:"text-white"},cyan:{backgroud:"bg-cyan-500",color:"text-white"},"light-blue":{backgroud:"bg-light-blue-500",color:"text-white"},blue:{backgroud:"bg-blue-500",color:"text-white"},indigo:{backgroud:"bg-indigo-500",color:"text-white"},"deep-purple":{backgroud:"bg-deep-purple-500",color:"text-white"},purple:{backgroud:"bg-purple-500",color:"text-white"},pink:{backgroud:"bg-pink-500",color:"text-white"},red:{backgroud:"bg-red-500",color:"text-white"}};var _default=progressFilled;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/progress/progressGradient.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/progress/progressGradient.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var progressGradient={"blue-gray":{backgroud:"bg-gradient-to-tr from-blue-gray-600 to-blue-gray-400",color:"text-white"},gray:{backgroud:"bg-gradient-to-tr from-gray-900 to-gray-800",color:"text-white"},brown:{backgroud:"bg-gradient-to-tr from-brown-600 to-brown-400",color:"text-white"},"deep-orange":{backgroud:"bg-gradient-to-tr from-deep-orange-600 to-deep-orange-400",color:"text-white"},orange:{backgroud:"bg-gradient-to-tr from-orange-600 to-orange-400",color:"text-white"},amber:{backgroud:"bg-gradient-to-tr from-amber-600 to-amber-400",color:"text-black"},yellow:{backgroud:"bg-gradient-to-tr from-yellow-600 to-yellow-400",color:"text-black"},lime:{backgroud:"bg-gradient-to-tr from-lime-600 to-lime-400",color:"text-black"},"light-green":{backgroud:"bg-gradient-to-tr from-light-green-600 to-light-green-400",color:"text-white"},green:{backgroud:"bg-gradient-to-tr from-green-600 to-green-400",color:"text-white"},teal:{backgroud:"bg-gradient-to-tr from-teal-600 to-teal-400",color:"text-white"},cyan:{backgroud:"bg-gradient-to-tr from-cyan-600 to-cyan-400",color:"text-white"},"light-blue":{backgroud:"bg-gradient-to-tr from-light-blue-600 to-light-blue-400",color:"text-white"},blue:{backgroud:"bg-gradient-to-tr from-blue-600 to-blue-400",color:"text-white"},indigo:{backgroud:"bg-gradient-to-tr from-indigo-600 to-indigo-400",color:"text-white"},"deep-purple":{backgroud:"bg-gradient-to-tr from-deep-purple-600 to-deep-purple-400",color:"text-white"},purple:{backgroud:"bg-gradient-to-tr from-purple-600 to-purple-400",color:"text-white"},pink:{backgroud:"bg-gradient-to-tr from-pink-600 to-pink-400",color:"text-white"},red:{backgroud:"bg-gradient-to-tr from-red-600 to-red-400",color:"text-white"}};var _default=progressGradient;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/radio/index.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/radio/index.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{radio:function(){return radio},default:function(){return _default}});var _radioColors=_interopRequireDefault(__webpack_require__(/*! ./radioColors */ "./node_modules/@material-tailwind/react/theme/components/radio/radioColors.js"));var _checkbox=__webpack_require__(/*! ../../../types/components/checkbox */ "./node_modules/@material-tailwind/react/types/components/checkbox.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var radio={defaultProps:{color:"gray",label:undefined,icon:undefined,ripple:true,className:"",disabled:false,containerProps:undefined,labelProps:undefined,iconProps:undefined},valid:{colors:_checkbox.propTypesColor},styles:{base:{root:{display:"inline-flex",alignItems:"items-center"},container:{position:"relative",display:"flex",alignItems:"items-center",cursor:"cursor-pointer",p:"p-3",borderRadius:"rounded-full"},input:{peer:"peer",position:"relative",appearance:"appearance-none",width:"w-5",height:"h-5",borderWidth:"border",borderRadius:"rounded-full",borderColor:"border-blue-gray-200",cursor:"cursor-pointer",transition:"transition-all",before:{content:"before:content['']",display:"before:block",bg:"before:bg-blue-gray-500",width:"before:w-12",height:"before:h-12",borderRadius:"before:rounded-full",position:"before:absolute",top:"before:top-2/4",left:"before:left-2/4",transform:"before:-translate-y-2/4 before:-translate-x-2/4",opacity:"before:opacity-0 hover:before:opacity-10",transition:"before:transition-opacity"}},label:{color:"text-gray-700",fontWeight:"font-light",userSelect:"select-none",cursor:"cursor-pointer",mt:"mt-px"},icon:{position:"absolute",top:"top-2/4",left:"left-2/4",translate:"-translate-y-2/4 -translate-x-2/4",pointerEvents:"pointer-events-none",opacity:"opacity-0 peer-checked:opacity-100",transition:"transition-opacity"},disabled:{opacity:"opacity-50",pointerEvents:"pointer-events-none"}},colors:_radioColors.default}};var _default=radio;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/radio/radioColors.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/radio/radioColors.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var radioColors={"blue-gray":{color:"text-blue-gray-500",border:"checked:border-blue-gray-500",before:"checked:before:bg-blue-gray-500"},gray:{color:"text-gray-900",border:"checked:border-gray-900",before:"checked:before:bg-gray-900"},brown:{color:"text-brown-500",border:"checked:border-brown-500",before:"checked:before:bg-brown-500"},"deep-orange":{color:"text-deep-orange-500",border:"checked:border-deep-orange-500",before:"checked:before:bg-deep-orange-500"},orange:{color:"text-orange-500",border:"checked:border-orange-500",before:"checked:before:bg-orange-500"},amber:{color:"text-amber-500",border:"checked:border-amber-500",before:"checked:before:bg-amber-500"},yellow:{color:"text-yellow-500",border:"checked:border-yellow-500",before:"checked:before:bg-yellow-500"},lime:{color:"text-lime-500",border:"checked:border-lime-500",before:"checked:before:bg-lime-500"},"light-green":{color:"text-light-green-500",border:"checked:border-light-green-500",before:"checked:before:bg-light-green-500"},green:{color:"text-green-500",border:"checked:border-green-500",before:"checked:before:bg-green-500"},teal:{color:"text-teal-500",border:"checked:border-teal-500",before:"checked:before:bg-teal-500"},cyan:{color:"text-cyan-500",border:"checked:border-cyan-500",before:"checked:before:bg-cyan-500"},"light-blue":{color:"text-light-blue-500",border:"checked:border-light-blue-500",before:"checked:before:bg-light-blue-500"},blue:{color:"text-blue-500",border:"checked:border-blue-500",before:"checked:before:bg-blue-500"},indigo:{color:"text-indigo-500",border:"checked:border-indigo-500",before:"checked:before:bg-indigo-500"},"deep-purple":{color:"text-deep-purple-500",border:"checked:border-deep-purple-500",before:"checked:before:bg-deep-purple-500"},purple:{color:"text-purple-500",border:"checked:border-purple-500",before:"checked:before:bg-purple-500"},pink:{color:"text-pink-500",border:"checked:border-pink-500",before:"checked:before:bg-pink-500"},red:{color:"text-red-500",border:"checked:border-red-500",before:"checked:before:bg-red-500"}};var _default=radioColors;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/rating/index.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/rating/index.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{rating:function(){return rating},default:function(){return _default}});var _react=_interopRequireDefault(__webpack_require__(/*! react */ "react"));var _rating=__webpack_require__(/*! ../../../types/components/rating */ "./node_modules/@material-tailwind/react/types/components/rating.js");var _ratingColors=_interopRequireDefault(__webpack_require__(/*! ./ratingColors */ "./node_modules/@material-tailwind/react/theme/components/rating/ratingColors.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var rating={defaultProps:{count:5,value:0,ratedIcon:_react.default.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"currentColor",className:"w-6 h-6"},_react.default.createElement("path",{fillRule:"evenodd",d:"M10.788 3.21c.448-1.077 1.976-1.077 2.424 0l2.082 5.007 5.404.433c1.164.093 1.636 1.545.749 2.305l-4.117 3.527 1.257 5.273c.271 1.136-.964 2.033-1.96 1.425L12 18.354 7.373 21.18c-.996.608-2.231-.29-1.96-1.425l1.257-5.273-4.117-3.527c-.887-.76-.415-2.212.749-2.305l5.404-.433 2.082-5.006z",clipRule:"evenodd"})),unratedIcon:_react.default.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24",strokeWidth:1.5,stroke:"currentColor",className:"w-6 h-6"},_react.default.createElement("path",{strokeLinecap:"round",strokeLinejoin:"round",d:"M11.48 3.499a.562.562 0 011.04 0l2.125 5.111a.563.563 0 00.475.345l5.518.442c.499.04.701.663.321.988l-4.204 3.602a.563.563 0 00-.182.557l1.285 5.385a.562.562 0 01-.84.61l-4.725-2.885a.563.563 0 00-.586 0L6.982 20.54a.562.562 0 01-.84-.61l1.285-5.386a.562.562 0 00-.182-.557l-4.204-3.602a.563.563 0 01.321-.988l5.518-.442a.563.563 0 00.475-.345L11.48 3.5z"})),ratedColor:"yellow",unratedColor:"blue-gray",className:undefined,onChange:undefined,readonly:false},valid:{colors:_rating.propTypesColor},styles:{base:{rating:{display:"inline-flex",alignItems:"items-center"},icon:{width:"w-5",height:"h-5",color:"text-inherit",cursor:"cursor-pointer"}},colors:_ratingColors.default}};var _default=rating;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/rating/ratingColors.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/rating/ratingColors.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var ratingColors={white:{color:"text-white"},"blue-gray":{color:"text-blue-gray-500"},gray:{color:"text-gray-500"},brown:{color:"text-brown-500"},"deep-orange":{color:"text-deep-orange-500"},orange:{color:"text-orange-500"},amber:{color:"text-amber-500"},yellow:{color:"text-yellow-700"},lime:{color:"text-lime-500"},"light-green":{color:"text-light-green-500"},green:{color:"text-green-500"},teal:{color:"text-teal-500"},cyan:{color:"text-cyan-500"},"light-blue":{color:"text-light-blue-500"},blue:{color:"text-blue-500"},indigo:{color:"text-indigo-500"},"deep-purple":{color:"text-deep-purple-500"},purple:{color:"text-purple-500"},pink:{color:"text-pink-500"},red:{color:"text-red-500"}};var _default=ratingColors;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/select/index.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/select/index.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{select:function(){return select},default:function(){return _default}});var _selectOutlined=_interopRequireDefault(__webpack_require__(/*! ./selectOutlined */ "./node_modules/@material-tailwind/react/theme/components/select/selectOutlined/index.js"));var _selectStandard=_interopRequireDefault(__webpack_require__(/*! ./selectStandard */ "./node_modules/@material-tailwind/react/theme/components/select/selectStandard/index.js"));var _selectStatic=_interopRequireDefault(__webpack_require__(/*! ./selectStatic */ "./node_modules/@material-tailwind/react/theme/components/select/selectStatic/index.js"));var _select=__webpack_require__(/*! ../../../types/components/select */ "./node_modules/@material-tailwind/react/types/components/select.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var select={defaultProps:{variant:"outlined",color:"gray",size:"md",label:"",error:false,success:false,arrow:undefined,value:undefined,onChange:undefined,selected:undefined,offset:5,dismiss:{},animate:{unmount:{},mount:{}},autoHeight:false,lockScroll:false,labelProps:{},menuProps:{},className:"",disabled:false,containerProps:undefined},valid:{variants:_select.propTypesVariant,sizes:_select.propTypesSize,colors:_select.propTypesColor},styles:{base:{container:{position:"relative",width:"w-full",minWidth:"min-w-[200px]"},select:{peer:"peer",width:"w-full",height:"h-full",bg:"bg-transparent",color:"text-blue-gray-700",fontFamily:"font-sans",fontWeight:"font-normal",textAlign:"text-left",outline:"outline outline-0 focus:outline-0",disabled:"disabled:bg-blue-gray-50 disabled:border-0 disabled:cursor-not-allowed",transition:"transition-all"},arrow:{initial:{display:"grid",placeItems:"place-items-center",position:"absolute",top:"top-2/4",right:"right-2",pt:"pt-px",width:"w-5",height:"h-5",color:"text-blue-gray-400",transform:"rotate-0 -translate-y-2/4",transition:"transition-all"},active:{transform:"rotate-180",mt:"mt-px"}},label:{display:"flex",width:"w-full",height:"h-full",userSelect:"select-none",pointerEvents:"pointer-events-none",position:"absolute",left:"left-0",fontWeight:"font-normal",transition:"transition-all"},menu:{width:"w-full",maxHeight:"max-h-96",bg:"bg-white",p:"p-3",border:"border border-blue-gray-50",borderRadius:"rounded-md",boxShadow:"shadow-lg shadow-blue-gray-500/10",fontFamily:"font-sans",fontSize:"text-sm",fontWeight:"font-normal",color:"text-blue-gray-500",overflow:"overflow-auto",outline:"focus:outline-none"},option:{initial:{pt:"pt-[9px]",pb:"pb-2",px:"px-3",borderRadius:"rounded-md",lightHeight:"leading-tight",cursor:"cursor-pointer",userSelect:"select-none",background:"hover:bg-blue-gray-50 focus:bg-blue-gray-50",opacity:"hover:bg-opacity-80 focus:bg-opacity-80",color:"hover:text-blue-gray-900 focus:text-blue-gray-900",outline:"outline outline-0",transition:"transition-all"},active:{bg:"bg-blue-gray-50 bg-opacity-80",color:"text-blue-gray-900"},disabled:{opacity:"opacity-50",cursor:"cursor-not-allowed",userSelect:"select-none",pointerEvents:"pointer-events-none"}}},variants:{outlined:_selectOutlined.default,standard:_selectStandard.default,static:_selectStatic.default}}};var _default=select;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/select/selectOutlined/index.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/select/selectOutlined/index.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var _selectOutlinedLabel=_interopRequireDefault(__webpack_require__(/*! ./selectOutlinedLabel */ "./node_modules/@material-tailwind/react/theme/components/select/selectOutlined/selectOutlinedLabel.js"));var _selectOutlinedColors=_interopRequireDefault(__webpack_require__(/*! ./selectOutlinedColors */ "./node_modules/@material-tailwind/react/theme/components/select/selectOutlined/selectOutlinedColors.js"));var _selectOutlinedLabelColors=_interopRequireDefault(__webpack_require__(/*! ./selectOutlinedLabelColors */ "./node_modules/@material-tailwind/react/theme/components/select/selectOutlined/selectOutlinedLabelColors.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var selectOutlined={base:{select:{},label:_selectOutlinedLabel.default},sizes:{md:{container:{height:"h-10"},select:{fontSize:"text-sm",px:"px-3",py:"py-2.5",borderRadius:"rounded-[7px]"},label:{initial:{},states:{close:{lineHeight:"leading-[3.75]"},open:{lineHeight:"leading-tight"},withValue:{lineHeight:"leading-tight"}}}},lg:{container:{height:"h-11"},select:{fontSize:"text-sm",px:"px-3",py:"py-3",borderRadius:"rounded-[7px]"},label:{initial:{},states:{close:{lineHeight:"leading-[4.1]"},open:{lineHeight:"leading-tight"},withValue:{lineHeight:"leading-tight"}}}}},colors:{select:_selectOutlinedColors.default,label:_selectOutlinedLabelColors.default},states:{close:{select:{borderWidth:"border"},label:{fontSize:"text-sm",disabled:"peer-disabled:text-blue-gray-400",before:{bt:"before:border-t-transparent",bl:"before:border-l-transparent"},after:{bt:"after:border-t-transparent",br:"after:border-r-transparent"}}},open:{select:{borderWidth:"border-2",borderColor:"border-t-transparent"},label:{fontSize:"text-[11px]",disabled:"peer-disabled:text-transparent",before:{bt:"before:border-t-2",bl:"before:border-l-2"},after:{bt:"after:border-t-2",br:"after:border-r-2"}}},withValue:{select:{borderWidth:"border",borderColor:"border-t-transparent"},label:{fontSize:"text-[11px]",disabled:"peer-disabled:text-transparent",before:{bt:"before:border-t",bl:"before:border-l"},after:{bt:"after:border-t",br:"after:border-r"}}}},error:{select:{initial:{},states:{close:{borderColor:"border-red-500"},open:{borderColor:"border-red-500",borderTopColor:"border-t-transparent"},withValue:{borderColor:"border-red-500",borderTopColor:"border-t-transparent"}}},label:{initial:{},states:{close:{color:"text-red-500",before:"before:border-red-500",after:"after:border-red-500"},open:{color:"text-red-500",before:"before:border-red-500",after:"after:border-red-500"},withValue:{color:"text-red-500",before:"before:border-red-500",after:"after:border-red-500"}}}},success:{select:{initial:{},states:{close:{borderColor:"border-green-500"},open:{borderColor:"border-green-500",borderTopColor:"border-t-transparent"},withValue:{borderColor:"border-green-500",borderTopColor:"border-t-transparent"}}},label:{initial:{},states:{close:{color:"text-green-500",before:"before:border-green-500",after:"after:border-green-500"},open:{color:"text-green-500",before:"before:border-green-500",after:"after:border-green-500"},withValue:{color:"text-green-500",before:"before:border-green-500",after:"after:border-green-500"}}}}};var _default=selectOutlined;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/select/selectOutlined/selectOutlinedColors.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/select/selectOutlined/selectOutlinedColors.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var selectOutlinedColors={"blue-gray":{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-blue-gray-500",borderTopColor:"border-t-transparent"},withValue:{borderColor:"border-blue-gray-200",borderTopColor:"border-t-transparent"}},gray:{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-gray-900",borderTopColor:"border-t-transparent"},withValue:{borderColor:"border-blue-gray-200",borderTopColor:"border-t-transparent"}},brown:{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-brown-500",borderTopColor:"border-t-transparent"},withValue:{borderColor:"border-blue-gray-200",borderTopColor:"border-t-transparent"}},"deep-orange":{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-deep-orange-500",borderTopColor:"border-t-transparent"},withValue:{borderColor:"border-blue-gray-200",borderTopColor:"border-t-transparent"}},orange:{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-orange-500",borderTopColor:"border-t-transparent"},withValue:{borderColor:"border-blue-gray-200",borderTopColor:"border-t-transparent"}},amber:{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-amber-500",borderTopColor:"border-t-transparent"},withValue:{borderColor:"border-blue-gray-200",borderTopColor:"border-t-transparent"}},yellow:{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-yellow-500",borderTopColor:"border-t-transparent"},withValue:{borderColor:"border-blue-gray-200",borderTopColor:"border-t-transparent"}},lime:{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-lime-500",borderTopColor:"border-t-transparent"},withValue:{borderColor:"border-blue-gray-200",borderTopColor:"border-t-transparent"}},"light-green":{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-light-green-500",borderTopColor:"border-t-transparent"},withValue:{borderColor:"border-blue-gray-200",borderTopColor:"border-t-transparent"}},green:{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-green-500",borderTopColor:"border-t-transparent"},withValue:{borderColor:"border-blue-gray-200",borderTopColor:"border-t-transparent"}},teal:{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-teal-500",borderTopColor:"border-t-transparent"},withValue:{borderColor:"border-blue-gray-200",borderTopColor:"border-t-transparent"}},cyan:{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-cyan-500",borderTopColor:"border-t-transparent"},withValue:{borderColor:"border-blue-gray-200",borderTopColor:"border-t-transparent"}},"light-blue":{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-light-blue-500",borderTopColor:"border-t-transparent"},withValue:{borderColor:"border-blue-gray-200",borderTopColor:"border-t-transparent"}},blue:{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-blue-500",borderTopColor:"border-t-transparent"},withValue:{borderColor:"border-blue-gray-200",borderTopColor:"border-t-transparent"}},indigo:{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-indigo-500",borderTopColor:"border-t-transparent"},withValue:{borderColor:"border-blue-gray-200",borderTopColor:"border-t-transparent"}},"deep-purple":{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-deep-purple-500",borderTopColor:"border-t-transparent"},withValue:{borderColor:"border-blue-gray-200",borderTopColor:"border-t-transparent"}},purple:{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-purple-500",borderTopColor:"border-t-transparent"},withValue:{borderColor:"border-blue-gray-200",borderTopColor:"border-t-transparent"}},pink:{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-pink-500",borderTopColor:"border-t-transparent"},withValue:{borderColor:"border-blue-gray-200",borderTopColor:"border-t-transparent"}},red:{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-red-500",borderTopColor:"border-t-transparent"},withValue:{borderColor:"border-blue-gray-200",borderTopColor:"border-t-transparent"}}};var _default=selectOutlinedColors;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/select/selectOutlined/selectOutlinedLabel.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/select/selectOutlined/selectOutlinedLabel.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var selectOutlinedLabel={position:"-top-1.5",before:{content:"before:content[' ']",display:"before:block",boxSizing:"before:box-border",width:"before:w-2.5",height:"before:h-1.5",mt:"before:mt-[6.5px]",mr:"before:mr-1",borderRadius:"before:rounded-tl-md",pointerEvents:"before:pointer-events-none",transition:"before:transition-all",disabled:"peer-disabled:before:border-transparent"},after:{content:"after:content[' ']",display:"after:block",flexGrow:"after:flex-grow",boxSizing:"after:box-border",width:"after:w-2.5",height:"after:h-1.5",mt:"after:mt-[6.5px]",ml:"after:ml-1",borderRadius:"after:rounded-tr-md",pointerEvents:"after:pointer-events-none",transition:"after:transition-all",disabled:"peer-disabled:after:border-transparent"}};var _default=selectOutlinedLabel;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/select/selectOutlined/selectOutlinedLabelColors.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/select/selectOutlined/selectOutlinedLabelColors.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var selectOutlinedLabelColors={"blue-gray":{close:{color:"text-blue-gray-400",before:"before:border-transparent",after:"after:border-transparent"},open:{color:"text-blue-gray-500",before:"before:border-blue-gray-500",after:"after:border-blue-gray-500"},withValue:{color:"text-blue-gray-400",before:"before:border-blue-gray-200",after:"after:border-blue-gray-200"}},gray:{close:{color:"text-blue-gray-400",before:"before:border-transparent",after:"after:border-transparent"},open:{color:"text-gray-900",before:"before:border-gray-900",after:"after:border-gray-900"},withValue:{color:"text-blue-gray-400",before:"before:border-blue-gray-200",after:"after:border-blue-gray-200"}},brown:{close:{color:"text-blue-gray-400",before:"before:border-transparent",after:"after:border-transparent"},open:{color:"text-brown-500",before:"before:border-brown-500",after:"after:border-brown-500"},withValue:{color:"text-blue-gray-400",before:"before:border-blue-gray-200",after:"after:border-blue-gray-200"}},"deep-orange":{close:{color:"text-blue-gray-400",before:"before:border-transparent",after:"after:border-transparent"},open:{color:"text-deep-orange-500",before:"before:border-deep-orange-500",after:"after:border-deep-orange-500"},withValue:{color:"text-blue-gray-400",before:"before:border-blue-gray-200",after:"after:border-blue-gray-200"}},orange:{close:{color:"text-blue-gray-400",before:"before:border-transparent",after:"after:border-transparent"},open:{color:"text-orange-500",before:"before:border-orange-500",after:"after:border-orange-500"},withValue:{color:"text-blue-gray-400",before:"before:border-blue-gray-200",after:"after:border-blue-gray-200"}},amber:{close:{color:"text-blue-gray-400",before:"before:border-transparent",after:"after:border-transparent"},open:{color:"text-amber-500",before:"before:border-amber-500",after:"after:border-amber-500"},withValue:{color:"text-blue-gray-400",before:"before:border-blue-gray-200",after:"after:border-blue-gray-200"}},yellow:{close:{color:"text-blue-gray-400",before:"before:border-transparent",after:"after:border-transparent"},open:{color:"text-yellow-500",before:"before:border-yellow-500",after:"after:border-yellow-500"},withValue:{color:"text-blue-gray-400",before:"before:border-blue-gray-200",after:"after:border-blue-gray-200"}},lime:{close:{color:"text-blue-gray-400",before:"before:border-transparent",after:"after:border-transparent"},open:{color:"text-lime-500",before:"before:border-lime-500",after:"after:border-lime-500"},withValue:{color:"text-blue-gray-400",before:"before:border-blue-gray-200",after:"after:border-blue-gray-200"}},"light-green":{close:{color:"text-blue-gray-400",before:"before:border-transparent",after:"after:border-transparent"},open:{color:"text-light-green-500",before:"before:border-light-green-500",after:"after:border-light-green-500"},withValue:{color:"text-blue-gray-400",before:"before:border-blue-gray-200",after:"after:border-blue-gray-200"}},green:{close:{color:"text-blue-gray-400",before:"before:border-transparent",after:"after:border-transparent"},open:{color:"text-green-500",before:"before:border-green-500",after:"after:border-green-500"},withValue:{color:"text-blue-gray-400",before:"before:border-blue-gray-200",after:"after:border-blue-gray-200"}},teal:{close:{color:"text-blue-gray-400",before:"before:border-transparent",after:"after:border-transparent"},open:{color:"text-teal-500",before:"before:border-teal-500",after:"after:border-teal-500"},withValue:{color:"text-blue-gray-400",before:"before:border-blue-gray-200",after:"after:border-blue-gray-200"}},cyan:{close:{color:"text-blue-gray-400",before:"before:border-transparent",after:"after:border-transparent"},open:{color:"text-cyan-500",before:"before:border-cyan-500",after:"after:border-cyan-500"},withValue:{color:"text-blue-gray-400",before:"before:border-blue-gray-200",after:"after:border-blue-gray-200"}},"light-blue":{close:{color:"text-blue-gray-400",before:"before:border-transparent",after:"after:border-transparent"},open:{color:"text-light-blue-500",before:"before:border-light-blue-500",after:"after:border-light-blue-500"},withValue:{color:"text-blue-gray-400",before:"before:border-blue-gray-200",after:"after:border-blue-gray-200"}},blue:{close:{color:"text-blue-gray-400",before:"before:border-transparent",after:"after:border-transparent"},open:{color:"text-blue-500",before:"before:border-blue-500",after:"after:border-blue-500"},withValue:{color:"text-blue-gray-400",before:"before:border-blue-gray-200",after:"after:border-blue-gray-200"}},indigo:{close:{color:"text-blue-gray-400",before:"before:border-transparent",after:"after:border-transparent"},open:{color:"text-indigo-500",before:"before:border-indigo-500",after:"after:border-indigo-500"},withValue:{color:"text-blue-gray-400",before:"before:border-blue-gray-200",after:"after:border-blue-gray-200"}},"deep-purple":{close:{color:"text-blue-gray-400",before:"before:border-transparent",after:"after:border-transparent"},open:{color:"text-deep-purple-500",before:"before:border-deep-purple-500",after:"after:border-deep-purple-500"},withValue:{color:"text-blue-gray-400",before:"before:border-blue-gray-200",after:"after:border-blue-gray-200"}},purple:{close:{color:"text-blue-gray-400",before:"before:border-transparent",after:"after:border-transparent"},open:{color:"text-purple-500",before:"before:border-purple-500",after:"after:border-purple-500"},withValue:{color:"text-blue-gray-400",before:"before:border-blue-gray-200",after:"after:border-blue-gray-200"}},pink:{close:{color:"text-blue-gray-400",before:"before:border-transparent",after:"after:border-transparent"},open:{color:"text-pink-500",before:"before:border-pink-500",after:"after:border-pink-500"},withValue:{color:"text-blue-gray-400",before:"before:border-blue-gray-200",after:"after:border-blue-gray-200"}},red:{close:{color:"text-blue-gray-400",before:"before:border-transparent",after:"after:border-transparent"},open:{color:"text-red-500",before:"before:border-red-500",after:"after:border-red-500"},withValue:{color:"text-blue-gray-400",before:"before:border-blue-gray-200",after:"after:border-blue-gray-200"}}};var _default=selectOutlinedLabelColors;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/select/selectStandard/index.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/select/selectStandard/index.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var _selectStandardLabel=_interopRequireDefault(__webpack_require__(/*! ./selectStandardLabel */ "./node_modules/@material-tailwind/react/theme/components/select/selectStandard/selectStandardLabel.js"));var _selectStandardColors=_interopRequireDefault(__webpack_require__(/*! ./selectStandardColors */ "./node_modules/@material-tailwind/react/theme/components/select/selectStandard/selectStandardColors.js"));var _selectStandardLabelColors=_interopRequireDefault(__webpack_require__(/*! ./selectStandardLabelColors */ "./node_modules/@material-tailwind/react/theme/components/select/selectStandard/selectStandardLabelColors.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var selectStandard={base:{select:{},label:_selectStandardLabel.default},sizes:{md:{container:{height:"h-11"},select:{fontSize:"text-sm",pt:"pt-4",pb:"pb-1.5"},label:{initial:{},states:{close:{lineHeight:"leading-[4.25]"},open:{lineHeight:"leading-tight"},withValue:{lineHeight:"leading-tight"}}}},lg:{container:{height:"h-12"},select:{fontSize:"text-sm",px:"px-px",pt:"pt-5",pb:"pb-2"},label:{initial:{},states:{close:{lineHeight:"leading-[4.875]"},open:{lineHeight:"leading-tight"},withValue:{lineHeight:"leading-tight"}}}}},colors:{select:_selectStandardColors.default,label:_selectStandardLabelColors.default},states:{close:{select:{borderWidth:"border-b"},label:{fontSize:"text-sm",disabled:"peer-disabled:text-blue-gray-400",after:{transform:"after:scale-x-0"}}},open:{select:{borderWidth:"border-b"},label:{fontSize:"text-[11px]",disabled:"peer-disabled:text-transparent",after:{transform:"after:scale-x-100"}}},withValue:{select:{borderWidth:"border-b"},label:{fontSize:"text-[11px]",disabled:"peer-disabled:text-transparent",after:{transform:"after:scale-x-0"}}}},error:{select:{initial:{},states:{close:{borderColor:"border-red-500"},open:{borderColor:"border-red-500"},withValue:{borderColor:"border-red-500"}}},label:{initial:{},states:{close:{color:"text-red-500",after:"after:border-red-500"},open:{color:"text-red-500",after:"after:border-red-500"},withValue:{color:"text-red-500",after:"after:border-red-500"}}}},success:{select:{initial:{},states:{close:{borderColor:"border-green-500"},open:{borderColor:"border-green-500"},withValue:{borderColor:"border-green-500"}}},label:{initial:{},states:{close:{color:"text-green-500",after:"after:border-green-500"},open:{color:"text-green-500",after:"after:border-green-500"},withValue:{color:"text-green-500",after:"after:border-green-500"}}}}};var _default=selectStandard;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/select/selectStandard/selectStandardColors.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/select/selectStandard/selectStandardColors.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var selectStandardColors={"blue-gray":{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-blue-gray-500"},withValue:{borderColor:"border-blue-gray-200"}},gray:{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-gray-900"},withValue:{borderColor:"border-blue-gray-200"}},brown:{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-brown-500"},withValue:{borderColor:"border-blue-gray-200"}},"deep-orange":{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-deep-orange-500"},withValue:{borderColor:"border-blue-gray-200"}},orange:{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-orange-500"},withValue:{borderColor:"border-blue-gray-200"}},amber:{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-amber-500"},withValue:{borderColor:"border-blue-gray-200"}},yellow:{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-yellow-500"},withValue:{borderColor:"border-blue-gray-200"}},lime:{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-lime-500"},withValue:{borderColor:"border-blue-gray-200"}},"light-green":{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-light-green-500"},withValue:{borderColor:"border-blue-gray-200"}},green:{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-green-500"},withValue:{borderColor:"border-blue-gray-200"}},teal:{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-teal-500"},withValue:{borderColor:"border-blue-gray-200"}},cyan:{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-cyan-500"},withValue:{borderColor:"border-blue-gray-200"}},"light-blue":{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-light-blue-500"},withValue:{borderColor:"border-blue-gray-200"}},blue:{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-blue-500"},withValue:{borderColor:"border-blue-gray-200"}},indigo:{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-indigo-500"},withValue:{borderColor:"border-blue-gray-200"}},"deep-purple":{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-deep-purple-500"},withValue:{borderColor:"border-blue-gray-200"}},purple:{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-purple-500"},withValue:{borderColor:"border-blue-gray-200"}},pink:{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-pink-500"},withValue:{borderColor:"border-blue-gray-200"}},red:{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-red-500"},withValue:{borderColor:"border-blue-gray-200"}}};var _default=selectStandardColors;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/select/selectStandard/selectStandardLabel.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/select/selectStandard/selectStandardLabel.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var selectStandardLabel={position:"-top-1.5",after:{content:"after:content[' ']",display:"after:block",width:"after:w-full",position:"after:absolute",bottom:"after:-bottom-1.5",left:"left-0",borderWidth:"after:border-b-2",transition:"after:transition-transform after:duration-300"}};var _default=selectStandardLabel;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/select/selectStandard/selectStandardLabelColors.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/select/selectStandard/selectStandardLabelColors.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var selectStandardLabelColors={"blue-gray":{close:{color:"text-blue-gray-500",after:"after:border-blue-gray-500"},open:{color:"text-blue-gray-500",after:"after:border-blue-gray-500"},withValue:{color:"text-blue-gray-500",after:"after:border-blue-gray-50"}},gray:{close:{color:"text-blue-gray-500",after:"after:border-gray-500"},open:{color:"text-gray-900",after:"after:border-gray-900"},withValue:{color:"text-blue-gray-500",after:"after:border-gray-500"}},brown:{close:{color:"text-blue-gray-500",after:"after:border-brown-500"},open:{color:"text-brown-500",after:"after:border-brown-500"},withValue:{color:"text-blue-gray-500",after:"after:border-brown-500"}},"deep-orange":{close:{color:"text-blue-gray-500",after:"after:border-deep-orange-500"},open:{color:"text-deep-orange-500",after:"after:border-deep-orange-500"},withValue:{color:"text-blue-gray-500",after:"after:border-deep-orange-500"}},orange:{close:{color:"text-blue-gray-500",after:"after:border-orange-500"},open:{color:"text-orange-500",after:"after:border-orange-500"},withValue:{color:"text-blue-gray-500",after:"after:border-orange-500"}},amber:{close:{color:"text-blue-gray-500",after:"after:border-amber-500"},open:{color:"text-amber-500",after:"after:border-amber-500"},withValue:{color:"text-blue-gray-500",after:"after:border-amber-500"}},yellow:{close:{color:"text-blue-gray-500",after:"after:border-yellow-500"},open:{color:"text-yellow-500",after:"after:border-yellow-500"},withValue:{color:"text-blue-gray-500",after:"after:border-yellow-500"}},lime:{close:{color:"text-blue-gray-500",after:"after:border-lime-500"},open:{color:"text-lime-500",after:"after:border-lime-500"},withValue:{color:"text-blue-gray-500",after:"after:border-lime-500"}},"light-green":{close:{color:"text-blue-gray-500",after:"after:border-light-green-500"},open:{color:"text-light-green-500",after:"after:border-light-green-500"},withValue:{color:"text-blue-gray-500",after:"after:border-light-green-500"}},green:{close:{color:"text-blue-gray-500",after:"after:border-green-500"},open:{color:"text-green-500",after:"after:border-green-500"},withValue:{color:"text-blue-gray-500",after:"after:border-green-500"}},teal:{close:{color:"text-blue-gray-500",after:"after:border-teal-500"},open:{color:"text-teal-500",after:"after:border-teal-500"},withValue:{color:"text-blue-gray-500",after:"after:border-teal-500"}},cyan:{close:{color:"text-blue-gray-500",after:"after:border-cyan-500"},open:{color:"text-cyan-500",after:"after:border-cyan-500"},withValue:{color:"text-blue-gray-500",after:"after:border-cyan-500"}},"light-blue":{close:{color:"text-blue-gray-500",after:"after:border-light-blue-500"},open:{color:"text-light-blue-500",after:"after:border-light-blue-500"},withValue:{color:"text-blue-gray-500",after:"after:border-light-blue-500"}},blue:{close:{color:"text-blue-gray-500",after:"after:border-blue-500"},open:{color:"text-blue-500",after:"after:border-blue-500"},withValue:{color:"text-blue-gray-500",after:"after:border-blue-500"}},indigo:{close:{color:"text-blue-gray-500",after:"after:border-indigo-500"},open:{color:"text-indigo-500",after:"after:border-indigo-500"},withValue:{color:"text-blue-gray-500",after:"after:border-indigo-500"}},"deep-purple":{close:{color:"text-blue-gray-500",after:"after:border-deep-purple-500"},open:{color:"text-deep-purple-500",after:"after:border-deep-purple-500"},withValue:{color:"text-blue-gray-500",after:"after:border-deep-purple-500"}},purple:{close:{color:"text-blue-gray-500",after:"after:border-purple-500"},open:{color:"text-purple-500",after:"after:border-purple-500"},withValue:{color:"text-blue-gray-500",after:"after:border-purple-500"}},pink:{close:{color:"text-blue-gray-500",after:"after:border-pink-500"},open:{color:"text-pink-500",after:"after:border-pink-500"},withValue:{color:"text-blue-gray-500",after:"after:border-pink-500"}},red:{close:{color:"text-blue-gray-500",after:"after:border-red-500"},open:{color:"text-red-500",after:"after:border-red-500"},withValue:{color:"text-blue-gray-500",after:"after:border-red-500"}}};var _default=selectStandardLabelColors;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/select/selectStatic/index.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/select/selectStatic/index.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var _selectStaticLabel=_interopRequireDefault(__webpack_require__(/*! ./selectStaticLabel */ "./node_modules/@material-tailwind/react/theme/components/select/selectStatic/selectStaticLabel.js"));var _selectStaticColors=_interopRequireDefault(__webpack_require__(/*! ./selectStaticColors */ "./node_modules/@material-tailwind/react/theme/components/select/selectStatic/selectStaticColors.js"));var _selectStaticLabelColors=_interopRequireDefault(__webpack_require__(/*! ./selectStaticLabelColors */ "./node_modules/@material-tailwind/react/theme/components/select/selectStatic/selectStaticLabelColors.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var selectStatic={base:{select:{},label:_selectStaticLabel.default},sizes:{md:{container:{height:"h-11"},select:{fontSize:"text-sm",pt:"pt-4",pb:"pb-1.5"},label:{initial:{},states:{close:{lineHeight:"leading-tight"},open:{lineHeight:"leading-tight"},withValue:{lineHeight:"leading-tight"}}}},lg:{container:{height:"h-12"},select:{fontSize:"text-sm",px:"px-px",pt:"pt-5",pb:"pb-2"},label:{initial:{},states:{close:{lineHeight:"leading-tight"},open:{lineHeight:"leading-tight"},withValue:{lineHeight:"leading-tight"}}}}},colors:{select:_selectStaticColors.default,label:_selectStaticLabelColors.default},states:{close:{select:{borderWidth:"border-b"},label:{fontSize:"text-sm",disabled:"peer-disabled:text-blue-gray-400",after:{transform:"after:scale-x-0"}}},open:{select:{borderWidth:"border-b"},label:{fontSize:"text-sm",disabled:"peer-disabled:text-transparent",after:{transform:"after:scale-x-100"}}},withValue:{select:{borderWidth:"border-b"},label:{fontSize:"text-sm",disabled:"peer-disabled:text-transparent",after:{transform:"after:scale-x-0"}}}},error:{select:{initial:{},states:{close:{borderColor:"border-red-500"},open:{borderColor:"border-red-500"},withValue:{borderColor:"border-red-500"}}},label:{initial:{},states:{close:{color:"text-red-500",after:"after:border-red-500"},open:{color:"text-red-500",after:"after:border-red-500"},withValue:{color:"text-red-500",after:"after:border-red-500"}}}},success:{select:{initial:{},states:{close:{borderColor:"border-green-500"},open:{borderColor:"border-green-500"},withValue:{borderColor:"border-green-500"}}},label:{initial:{},states:{close:{color:"text-green-500",after:"after:border-green-500"},open:{color:"text-green-500",after:"after:border-green-500"},withValue:{color:"text-green-500",after:"after:border-green-500"}}}}};var _default=selectStatic;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/select/selectStatic/selectStaticColors.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/select/selectStatic/selectStaticColors.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var selectStaticColors={"blue-gray":{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-blue-gray-500"},withValue:{borderColor:"border-blue-gray-200"}},gray:{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-gray-900"},withValue:{borderColor:"border-blue-gray-200"}},brown:{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-brown-500"},withValue:{borderColor:"border-blue-gray-200"}},"deep-orange":{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-deep-orange-500"},withValue:{borderColor:"border-blue-gray-200"}},orange:{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-orange-500"},withValue:{borderColor:"border-blue-gray-200"}},amber:{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-amber-500"},withValue:{borderColor:"border-blue-gray-200"}},yellow:{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-yellow-500"},withValue:{borderColor:"border-blue-gray-200"}},lime:{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-lime-500"},withValue:{borderColor:"border-blue-gray-200"}},"light-green":{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-light-green-500"},withValue:{borderColor:"border-blue-gray-200"}},green:{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-green-500"},withValue:{borderColor:"border-blue-gray-200"}},teal:{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-teal-500"},withValue:{borderColor:"border-blue-gray-200"}},cyan:{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-cyan-500"},withValue:{borderColor:"border-blue-gray-200"}},"light-blue":{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-light-blue-500"},withValue:{borderColor:"border-blue-gray-200"}},blue:{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-blue-500"},withValue:{borderColor:"border-blue-gray-200"}},indigo:{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-indigo-500"},withValue:{borderColor:"border-blue-gray-200"}},"deep-purple":{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-deep-purple-500"},withValue:{borderColor:"border-blue-gray-200"}},purple:{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-purple-500"},withValue:{borderColor:"border-blue-gray-200"}},pink:{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-pink-500"},withValue:{borderColor:"border-blue-gray-200"}},red:{close:{borderColor:"border-blue-gray-200"},open:{borderColor:"border-red-500"},withValue:{borderColor:"border-blue-gray-200"}}};var _default=selectStaticColors;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/select/selectStatic/selectStaticLabel.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/select/selectStatic/selectStaticLabel.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var selectStaticLabel={position:"-top-2.5",after:{content:"after:content[' ']",display:"after:block",width:"after:w-full",position:"after:absolute",bottom:"after:-bottom-2.5",left:"left-0",borderWidth:"after:border-b-2",transition:"after:transition-transform after:duration-300"}};var _default=selectStaticLabel;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/select/selectStatic/selectStaticLabelColors.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/select/selectStatic/selectStaticLabelColors.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var selectStaticLabelColors={"blue-gray":{close:{color:"text-blue-gray-500",after:"after:border-blue-gray-500"},open:{color:"text-blue-gray-500",after:"after:border-blue-gray-500"},withValue:{color:"text-blue-gray-500",after:"after:border-blue-gray-50"}},gray:{close:{color:"text-blue-gray-500",after:"after:border-gray-500"},open:{color:"text-gray-900",after:"after:border-gray-900"},withValue:{color:"text-blue-gray-500",after:"after:border-gray-500"}},brown:{close:{color:"text-blue-gray-500",after:"after:border-brown-500"},open:{color:"text-brown-500",after:"after:border-brown-500"},withValue:{color:"text-blue-gray-500",after:"after:border-brown-500"}},"deep-orange":{close:{color:"text-blue-gray-500",after:"after:border-deep-orange-500"},open:{color:"text-deep-orange-500",after:"after:border-deep-orange-500"},withValue:{color:"text-blue-gray-500",after:"after:border-deep-orange-500"}},orange:{close:{color:"text-blue-gray-500",after:"after:border-orange-500"},open:{color:"text-orange-500",after:"after:border-orange-500"},withValue:{color:"text-blue-gray-500",after:"after:border-orange-500"}},amber:{close:{color:"text-blue-gray-500",after:"after:border-amber-500"},open:{color:"text-amber-500",after:"after:border-amber-500"},withValue:{color:"text-blue-gray-500",after:"after:border-amber-500"}},yellow:{close:{color:"text-blue-gray-500",after:"after:border-yellow-500"},open:{color:"text-yellow-500",after:"after:border-yellow-500"},withValue:{color:"text-blue-gray-500",after:"after:border-yellow-500"}},lime:{close:{color:"text-blue-gray-500",after:"after:border-lime-500"},open:{color:"text-lime-500",after:"after:border-lime-500"},withValue:{color:"text-blue-gray-500",after:"after:border-lime-500"}},"light-green":{close:{color:"text-blue-gray-500",after:"after:border-light-green-500"},open:{color:"text-light-green-500",after:"after:border-light-green-500"},withValue:{color:"text-blue-gray-500",after:"after:border-light-green-500"}},green:{close:{color:"text-blue-gray-500",after:"after:border-green-500"},open:{color:"text-green-500",after:"after:border-green-500"},withValue:{color:"text-blue-gray-500",after:"after:border-green-500"}},teal:{close:{color:"text-blue-gray-500",after:"after:border-teal-500"},open:{color:"text-teal-500",after:"after:border-teal-500"},withValue:{color:"text-blue-gray-500",after:"after:border-teal-500"}},cyan:{close:{color:"text-blue-gray-500",after:"after:border-cyan-500"},open:{color:"text-cyan-500",after:"after:border-cyan-500"},withValue:{color:"text-blue-gray-500",after:"after:border-cyan-500"}},"light-blue":{close:{color:"text-blue-gray-500",after:"after:border-light-blue-500"},open:{color:"text-light-blue-500",after:"after:border-light-blue-500"},withValue:{color:"text-blue-gray-500",after:"after:border-light-blue-500"}},blue:{close:{color:"text-blue-gray-500",after:"after:border-blue-500"},open:{color:"text-blue-500",after:"after:border-blue-500"},withValue:{color:"text-blue-gray-500",after:"after:border-blue-500"}},indigo:{close:{color:"text-blue-gray-500",after:"after:border-indigo-500"},open:{color:"text-indigo-500",after:"after:border-indigo-500"},withValue:{color:"text-blue-gray-500",after:"after:border-indigo-500"}},"deep-purple":{close:{color:"text-blue-gray-500",after:"after:border-deep-purple-500"},open:{color:"text-deep-purple-500",after:"after:border-deep-purple-500"},withValue:{color:"text-blue-gray-500",after:"after:border-deep-purple-500"}},purple:{close:{color:"text-blue-gray-500",after:"after:border-purple-500"},open:{color:"text-purple-500",after:"after:border-purple-500"},withValue:{color:"text-blue-gray-500",after:"after:border-purple-500"}},pink:{close:{color:"text-blue-gray-500",after:"after:border-pink-500"},open:{color:"text-pink-500",after:"after:border-pink-500"},withValue:{color:"text-blue-gray-500",after:"after:border-pink-500"}},red:{close:{color:"text-blue-gray-500",after:"after:border-red-500"},open:{color:"text-red-500",after:"after:border-red-500"},withValue:{color:"text-blue-gray-500",after:"after:border-red-500"}}};var _default=selectStaticLabelColors;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/slider/index.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/slider/index.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{slider:function(){return slider},default:function(){return _default}});var _slider=__webpack_require__(/*! ../../../types/components/slider */ "./node_modules/@material-tailwind/react/types/components/slider.js");var _sliderColor=_interopRequireDefault(__webpack_require__(/*! ./sliderColor */ "./node_modules/@material-tailwind/react/theme/components/slider/sliderColor.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var slider={defaultProps:{color:"gray",size:"md",min:undefined,max:undefined,step:"any",className:"",trackClassName:"",thumbClassName:"",barClassName:"",inputProps:undefined},valid:{sizes:_slider.propTypesSize,colors:_slider.propTypesColor},styles:{base:{container:{position:"relative",width:"w-full",minWidth:"min-w-[200px]"},slider:{width:"w-full",position:"absolute",inset:"inset-0",backgroundColor:"bg-transparent",cursor:"cursor-pointer",outline:"focus:outline-none focus:outline-0",appearance:"appearance-none [-webkit-appearance:none]"},track:{height:"[&::-webkit-slider-runnable-track]:h-full [&::-moz-range-track]:h-full",borderRadius:"[&::-webkit-slider-runnable-track]:rounded-full [&::-moz-range-track]:rounded-full",backgroundColor:"[&::-webkit-slider-runnable-track]:bg-blue-gray-100 [&::-moz-range-track]:bg-blue-gray-100"},thumb:{appearance:"[&::-moz-range-thumb]:appearance-none [&::-moz-range-thumb]:[-webkit-appearance:none] [&::-webkit-slider-thumb]:appearance-none [&::-webkit-slider-thumb]:[-webkit-appearance:none]",borderRadius:"[&::-moz-range-thumb]:rounded-full [&::-webkit-slider-thumb]:rounded-full",border:"[&::-moz-range-thumb]:border-0 [&::-webkit-slider-thumb]:border-0",ringWidth:"[&::-moz-range-thumb]:ring-2 [&::-webkit-slider-thumb]:ring-2",ringColor:"[&::-moz-range-thumb]:ring-current [&::-webkit-slider-thumb]:ring-current",backgroundColor:"[&::-moz-range-thumb]:bg-white [&::-webkit-slider-thumb]:bg-white",position:"[&::-moz-range-thumb]:relative [&::-webkit-slider-thumb]:relative",zIndex:"[&::-moz-range-thumb]:z-20 [&::-webkit-slider-thumb]:z-20"},bar:{position:"absolute",inset:"inset-0",zIndex:"z-10",borderRadius:"rounded-l-full",height:"h-full",pointerEvents:"pointer-events-none",backgroundColor:"bg-current"}},sizes:{sm:{container:{height:"h-1"},thumb:{width:"[&::-moz-range-thumb]:w-2.5 [&::-webkit-slider-thumb]:w-2.5",height:"[&::-moz-range-thumb]:h-2.5 [&::-webkit-slider-thumb]:h-2.5",marginTop:"[&::-moz-range-thumb]:-mt-[3px] [&::-webkit-slider-thumb]:-mt-[3px]"},slider:{},track:{},bar:{}},md:{container:{height:"h-2"},thumb:{width:"[&::-moz-range-thumb]:w-3.5 [&::-webkit-slider-thumb]:w-3.5",height:"[&::-moz-range-thumb]:h-3.5 [&::-webkit-slider-thumb]:h-3.5",marginTop:"[&::-moz-range-thumb]:-mt-[3px] [&::-webkit-slider-thumb]:-mt-[3px]"},slider:{},track:{},bar:{}},lg:{container:{height:"h-3"},thumb:{width:"[&::-moz-range-thumb]:w-5 [&::-webkit-slider-thumb]:w-5",height:"[&::-moz-range-thumb]:h-5 [&::-webkit-slider-thumb]:h-5",marginTop:"[&::-moz-range-thumb]:-mt-1 [&::-webkit-slider-thumb]:-mt-1"},slider:{},track:{},bar:{}}},colors:_sliderColor.default}};var _default=slider;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/slider/sliderColor.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/slider/sliderColor.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var sliderColor={"blue-gray":{color:"text-blue-gray-500"},gray:{color:"text-gray-900"},brown:{color:"text-brown-500"},"deep-orange":{color:"text-deep-orange-500"},orange:{color:"text-orange-500"},amber:{color:"text-amber-500"},yellow:{color:"text-yellow-500"},lime:{color:"text-lime-500"},"light-green":{color:"text-light-green-500"},green:{color:"text-green-500"},teal:{color:"text-teal-500"},cyan:{color:"text-cyan-500"},"light-blue":{color:"text-light-blue-500"},blue:{color:"text-blue-500"},indigo:{color:"text-indigo-500"},"deep-purple":{color:"text-deep-purple-500"},purple:{color:"text-purple-500"},pink:{color:"text-pink-500"},red:{color:"text-red-500"}};var _default=sliderColor;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/speedDial/index.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/speedDial/index.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));_exportStar(__webpack_require__(/*! ./speedDial */ "./node_modules/@material-tailwind/react/theme/components/speedDial/speedDial.js"),exports);_exportStar(__webpack_require__(/*! ./speedDialContent */ "./node_modules/@material-tailwind/react/theme/components/speedDial/speedDialContent.js"),exports);_exportStar(__webpack_require__(/*! ./speedDialAction */ "./node_modules/@material-tailwind/react/theme/components/speedDial/speedDialAction.js"),exports);function _exportStar(from,to){Object.keys(from).forEach(function(k){if(k!=="default"&&!Object.prototype.hasOwnProperty.call(to,k))Object.defineProperty(to,k,{enumerable:true,get:function(){return from[k]}})});return from}

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/speedDial/speedDial.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/speedDial/speedDial.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{speedDial:function(){return speedDial},default:function(){return _default}});var speedDial={defaultProps:{offset:5,placement:"top",dismiss:undefined,animate:{unmount:{},mount:{}}}};var _default=speedDial;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/speedDial/speedDialAction.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/speedDial/speedDialAction.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{speedDialAction:function(){return speedDialAction},default:function(){return _default}});var speedDialAction={styles:{display:"flex",flexDirection:"flex-col",alignItems:"items-center",justifyContent:"justify-center",gap:"gap-1",padding:"p-1",margin:"m-0.5",borderWidth:"border",minWidth:"min-w-[48px]",fontFamily:"font-normal",minHeight:"min-h-[48px]",backgroundColor:"bg-white",borderRadius:"rounded-full",borderColor:"border-blue-gray-50",scale:"hover:scale-110 focus:scale-110 active:scale-100",transition:"transition-transform duration-300 ease-in-out"}};var _default=speedDialAction;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/speedDial/speedDialContent.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/speedDial/speedDialContent.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{speedDialContent:function(){return speedDialContent},default:function(){return _default}});var speedDialContent={styles:{padding:"p-0.5",width:"w-max",display:"flex",flexDirection:"flex-col",alignItems:"items-center",gap:"gap-1"}};var _default=speedDialContent;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/spinner/index.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/spinner/index.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{spinner:function(){return spinner},default:function(){return _default}});var _spinner=__webpack_require__(/*! ../../../types/components/spinner */ "./node_modules/@material-tailwind/react/types/components/spinner.js");var _spinnerColor=_interopRequireDefault(__webpack_require__(/*! ./spinnerColor */ "./node_modules/@material-tailwind/react/theme/components/spinner/spinnerColor.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var spinner={defaultProps:{color:"gray",className:""},valid:{colors:_spinner.propTypesColor},styles:{base:{color:"text-gray-300",animation:"animate-spin"},colors:_spinnerColor.default}};var _default=spinner;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/spinner/spinnerColor.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/spinner/spinnerColor.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var spinnerColor={white:{color:"text-white"},"blue-gray":{color:"text-blue-gray-500"},gray:{color:"text-gray-900"},brown:{color:"text-brown-500"},"deep-orange":{color:"text-deep-orange-500"},orange:{color:"text-orange-500"},amber:{color:"text-amber-500"},yellow:{color:"text-yellow-500"},lime:{color:"text-lime-500"},"light-green":{color:"text-light-green-500"},green:{color:"text-green-500"},teal:{color:"text-teal-500"},cyan:{color:"text-cyan-500"},"light-blue":{color:"text-light-blue-500"},blue:{color:"text-blue-500"},indigo:{color:"text-indigo-500"},"deep-purple":{color:"text-deep-purple-500"},purple:{color:"text-purple-500"},pink:{color:"text-pink-500"},red:{color:"text-red-500"}};var _default=spinnerColor;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/stepper/index.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/stepper/index.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));_exportStar(__webpack_require__(/*! ./step */ "./node_modules/@material-tailwind/react/theme/components/stepper/step.js"),exports);_exportStar(__webpack_require__(/*! ./stepper */ "./node_modules/@material-tailwind/react/theme/components/stepper/stepper.js"),exports);function _exportStar(from,to){Object.keys(from).forEach(function(k){if(k!=="default"&&!Object.prototype.hasOwnProperty.call(to,k))Object.defineProperty(to,k,{enumerable:true,get:function(){return from[k]}})});return from}

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/stepper/step.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/stepper/step.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{step:function(){return step},default:function(){return _default}});var step={styles:{base:{initial:{position:"relative",zIndex:"z-10",display:"grid",placeItems:"place-items-center",width:"w-10",height:"h-10",borderRadius:"rounded-full",backgroundColor:"bg-gray-300",color:"text-gray-900",fontWeight:"font-bold",transition:"transition-all duration-300"},active:{backgroundColor:"bg-gray-900",color:"text-white"},completed:{backgroundColor:"bg-gray-900",color:"text-white"}}}};var _default=step;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/stepper/stepper.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/stepper/stepper.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{stepper:function(){return stepper},default:function(){return _default}});var stepper={styles:{base:{stepper:{width:"w-full",position:"relative",display:"flex",alignItems:"items-center",justifyContent:"justify-between"},line:{initial:{position:"absolute",left:"left-0",top:"top-2/4",height:"h-0.5",width:"w-full",transform:"-translate-y-2/4",backgroundColor:"bg-gray-300"},active:{backgroundColor:"bg-gray-900",transition:"transition-all",duration:"duration-500"}}}}};var _default=stepper;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/switch/index.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/switch/index.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{switchButton:function(){return switchButton},default:function(){return _default}});var _switchColors=_interopRequireDefault(__webpack_require__(/*! ./switchColors */ "./node_modules/@material-tailwind/react/theme/components/switch/switchColors.js"));var _checkbox=__webpack_require__(/*! ../../../types/components/checkbox */ "./node_modules/@material-tailwind/react/types/components/checkbox.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var switchButton={defaultProps:{color:"gray",label:"",ripple:true,className:"",disabled:false,containerProps:undefined,labelProps:undefined,circleProps:undefined},valid:{colors:_checkbox.propTypesColor},styles:{base:{root:{display:"inline-flex",alignItems:"items-center"},container:{position:"relative",display:"inline-block",width:"w-8",height:"h-4",cursor:"cursor-pointer",borderRadius:"rounded-full"},input:{peer:"peer",appearance:"appearance-none",width:"w-8",height:"h-4",position:"absolute",background:"bg-blue-gray-100",borderRadius:"rounded-full",cursor:"cursor-pointer",transition:"transition-colors duration-300"},circle:{bg:"bg-white",width:"w-5",height:"h-5",borderWidth:"border",borderColor:"border-blue-gray-100",borderRadius:"rounded-full",boxShadow:"shadow-md",position:"absolute",top:"top-2/4",left:"-left-1",transform:"-translate-y-2/4 peer-checked:translate-x-full",transition:"transition-all duration-300",cursor:"cursor-pointer",before:{content:"before:content['']",display:"before:block",bg:"before:bg-blue-gray-500",width:"before:w-10",height:"before:h-10",borderRadius:"before:rounded-full",position:"before:absolute",top:"before:top-2/4",left:"before:left-2/4",transform:"before:-translate-y-2/4 before:-translate-x-2/4",transition:"before:transition-opacity",opacity:"before:opacity-0 hover:before:opacity-10"}},ripple:{display:"inline-block",top:"top-2/4",left:"left-2/4",transform:"-translate-x-2/4 -translate-y-2/4",p:"p-5",borderRadius:"rounded-full"},label:{color:"text-gray-700",fontWeight:"font-light",userSelect:"select-none",cursor:"cursor-pointer",mt:"mt-px",ml:"ml-3",mb:"mb-0"},disabled:{opacity:"opacity-50",pointerEvents:"pointer-events-none"}},colors:_switchColors.default}};var _default=switchButton;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/switch/switchColors.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/switch/switchColors.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var switchColors={"blue-gray":{input:"checked:bg-blue-gray-500",circle:"peer-checked:border-blue-gray-500",before:"peer-checked:before:bg-blue-gray-500"},gray:{input:"checked:bg-gray-900",circle:"peer-checked:border-gray-900",before:"peer-checked:before:bg-gray-900"},brown:{input:"checked:bg-brown-500",circle:"peer-checked:border-brown-500",before:"peer-checked:before:bg-brown-500"},"deep-orange":{input:"checked:bg-deep-orange-500",circle:"peer-checked:border-deep-orange-500",before:"peer-checked:before:bg-deep-orange-500"},orange:{input:"checked:bg-orange-500",circle:"peer-checked:border-orange-500",before:"peer-checked:before:bg-orange-500"},amber:{input:"checked:bg-amber-500",circle:"peer-checked:border-amber-500",before:"peer-checked:before:bg-amber-500"},yellow:{input:"checked:bg-yellow-500",circle:"peer-checked:border-yellow-500",before:"peer-checked:before:bg-yellow-500"},lime:{input:"checked:bg-lime-500",circle:"peer-checked:border-lime-500",before:"peer-checked:before:bg-lime-500"},"light-green":{input:"checked:bg-light-green-500",circle:"peer-checked:border-light-green-500",before:"peer-checked:before:bg-light-green-500"},green:{input:"checked:bg-green-500",circle:"peer-checked:border-green-500",before:"peer-checked:before:bg-green-500"},teal:{input:"checked:bg-teal-500",circle:"peer-checked:border-teal-500",before:"peer-checked:before:bg-teal-500"},cyan:{input:"checked:bg-cyan-500",circle:"peer-checked:border-cyan-500",before:"peer-checked:before:bg-cyan-500"},"light-blue":{input:"checked:bg-light-blue-500",circle:"peer-checked:border-light-blue-500",before:"peer-checked:before:bg-light-blue-500"},blue:{input:"checked:bg-blue-500",circle:"peer-checked:border-blue-500",before:"peer-checked:before:bg-blue-500"},indigo:{input:"checked:bg-indigo-500",circle:"peer-checked:border-indigo-500",before:"peer-checked:before:bg-indigo-500"},"deep-purple":{input:"checked:bg-deep-purple-500",circle:"peer-checked:border-deep-purple-500",before:"peer-checked:before:bg-deep-purple-500"},purple:{input:"checked:bg-purple-500",circle:"peer-checked:border-purple-500",before:"peer-checked:before:bg-purple-500"},pink:{input:"checked:bg-pink-500",circle:"peer-checked:border-pink-500",before:"peer-checked:before:bg-pink-500"},red:{input:"checked:bg-red-500",circle:"peer-checked:border-red-500",before:"peer-checked:before:bg-red-500"}};var _default=switchColors;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/tabs/index.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/tabs/index.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{tabs:function(){return tabs},default:function(){return _default}});var tabs={defaultProps:{className:"",orientation:"horizontal"},styles:{base:{overflow:"overflow-hidden"},horizontal:{display:"block"},vertical:{display:"flex"}}};var _default=tabs;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/tabs/tab.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/tabs/tab.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{tab:function(){return tab},default:function(){return _default}});var tab={defaultProps:{className:"",activeClassName:"",disabled:false},styles:{base:{tab:{initial:{display:"flex",alignItems:"items-center",justifyContent:"justify-center",textAlign:"text-center",width:"w-full",height:"h-full",position:"relative",bg:"bg-transparent",py:"py-1",px:"px-2",color:"text-blue-gray-900",fontSmoothing:"antialiased",fontFamily:"font-sans",fontSize:"text-base",fontWeight:"font-normal",lineHeight:"leading-relaxed",userSelect:"select-none",cursor:"cursor-pointer"},disabled:{opacity:"opacity-50",cursor:"cursor-not-allowed",pointerEvents:"pointer-events-none",userSelect:"select-none"}},indicator:{position:"absolute",inset:"inset-0",zIndex:"z-10",height:"h-full",bg:"bg-white",borderRadius:"rounded-md",boxShadow:"shadow"}}}};var _default=tab;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/tabs/tabPanel.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/tabs/tabPanel.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{tabPanel:function(){return tabPanel},default:function(){return _default}});var tabPanel={defaultProps:{className:""},styles:{base:{width:"w-full",height:"h-max",color:"text-gray-700",p:"p-4",fontSmoothing:"antialiased",fontFamily:"font-sans",fontSize:"text-base",fontWeight:"font-light",lineHeight:"leading-relaxed"}}};var _default=tabPanel;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/tabs/tabsBody.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/tabs/tabsBody.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{tabsBody:function(){return tabsBody},default:function(){return _default}});var tabsBody={defaultProps:{animate:{unmount:{},mount:{}},className:""},styles:{base:{display:"block",width:"w-full",position:"relative",bg:"bg-transparent",overflow:"overflow-hidden"}}};var _default=tabsBody;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/tabs/tabsHeader.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/tabs/tabsHeader.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{tabsHeader:function(){return tabsHeader},default:function(){return _default}});var tabsHeader={defaultProps:{className:""},styles:{base:{display:"flex",position:"relative",bg:"bg-blue-gray-50",bgOpacity:"bg-opacity-60",borderRadius:"rounded-lg",p:"p-1"},horizontal:{flexDirection:"flex-row"},vertical:{flexDirection:"flex-col"}}};var _default=tabsHeader;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/textarea/index.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/textarea/index.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{textarea:function(){return textarea},default:function(){return _default}});var _textareaOutlined=_interopRequireDefault(__webpack_require__(/*! ./textareaOutlined */ "./node_modules/@material-tailwind/react/theme/components/textarea/textareaOutlined/index.js"));var _textareaStandard=_interopRequireDefault(__webpack_require__(/*! ./textareaStandard */ "./node_modules/@material-tailwind/react/theme/components/textarea/textareaStandard/index.js"));var _textareaStatic=_interopRequireDefault(__webpack_require__(/*! ./textareaStatic */ "./node_modules/@material-tailwind/react/theme/components/textarea/textareaStatic/index.js"));var _input=__webpack_require__(/*! ../../../types/components/input */ "./node_modules/@material-tailwind/react/types/components/input.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var textarea={defaultProps:{variant:"outlined",size:"md",color:"gray",label:"",error:false,success:false,resize:true,labelProps:undefined,containerProps:undefined,shrink:false,className:""},valid:{variants:_input.propTypesVariant,sizes:_input.propTypesSize,colors:_input.propTypesColor},styles:{base:{container:{position:"relative",width:"w-full",minWidth:"min-w-[200px]"},textarea:{peer:"peer",width:"w-full",height:"h-full",minHeight:"min-h-[100px]",bg:"bg-transparent",color:"text-blue-gray-700",fontFamily:"font-sans",fontWeight:"font-normal",outline:"outline outline-0 focus:outline-0",resize:"resize-y",disabled:"disabled:bg-blue-gray-50 disabled:border-0 disabled:resize-none disabled:cursor-not-allowed",transition:"transition-all"},label:{display:"flex",width:"w-full",height:"h-full",userSelect:"select-none",pointerEvents:"pointer-events-none",position:"absolute",left:"left-0",fontWeight:"font-normal",color:"peer-placeholder-shown:text-blue-gray-500",lineHeight:"leading-tight peer-focus:leading-tight",disabled:"peer-disabled:text-transparent peer-disabled:peer-placeholder-shown:text-blue-gray-500",transition:"transition-all"},asterisk:{display:"inline-block",color:"text-red-500",ml:"ml-0.5"}},variants:{outlined:_textareaOutlined.default,standard:_textareaStandard.default,static:_textareaStatic.default}}};var _default=textarea;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/textarea/textareaOutlined/index.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/textarea/textareaOutlined/index.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var _textareaOutlinedLabel=_interopRequireDefault(__webpack_require__(/*! ./textareaOutlinedLabel */ "./node_modules/@material-tailwind/react/theme/components/textarea/textareaOutlined/textareaOutlinedLabel.js"));var _textareaOutlinedColors=_interopRequireDefault(__webpack_require__(/*! ./textareaOutlinedColors */ "./node_modules/@material-tailwind/react/theme/components/textarea/textareaOutlined/textareaOutlinedColors.js"));var _textareaOutlinedLabelColors=_interopRequireDefault(__webpack_require__(/*! ./textareaOutlinedLabelColors */ "./node_modules/@material-tailwind/react/theme/components/textarea/textareaOutlined/textareaOutlinedLabelColors.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var textareaOutlined={base:{textarea:{borderWidth:"placeholder-shown:border",borderColor:"placeholder-shown:border-blue-gray-200 placeholder-shown:border-t-blue-gray-200",floated:{borderWidth:"border focus:border-2",borderColor:"border-t-transparent focus:border-t-transparent"}},label:_textareaOutlinedLabel.default},sizes:{md:{container:{height:"h-10"},textarea:{fontSize:"text-sm",px:"px-3",py:"py-2.5",borderRadius:"rounded-[7px]"},label:{lineHeight:"peer-placeholder-shown:leading-[3.75]"}},lg:{container:{height:"h-11"},textarea:{fontSize:"text-sm",px:"px-3",py:"py-3",borderRadius:"rounded-md"},label:{lineHeight:"peer-placeholder-shown:leading-[4.1]"}}},colors:{textarea:_textareaOutlinedColors.default,label:_textareaOutlinedLabelColors.default},error:{textarea:{borderColor:"border-red-500 placeholder-shown:border-t-red-500 placeholder-shown:border-red-500",borderColorFocused:"focus:border-red-500"},label:{color:"text-red-500 peer-focus:text-red-500 peer-placeholder-shown:text-red-500",before:"before:border-red-500 peer-focus:before:border-red-500",after:"after:border-red-500 peer-focus:after:border-red-500"}},success:{textarea:{borderColor:"border-green-500 placeholder-shown:border-t-green-500 placeholder-shown:border-green-500",borderColorFocused:"focus:border-green-500"},label:{color:"text-green-500 peer-focus:text-green-500 peer-placeholder-shown:text-green-500",before:"before:border-green-500 peer-focus:before:border-green-500",after:"after:border-green-500 peer-focus:after:border-green-500"}},shrink:{textarea:{borderTop:"!border-t-transparent"},label:{fontSize:"!text-[11px]",lineHeight:"!leading-tight",borderColor:"before:!border-blue-gray-200 after:!border-blue-gray-200"}}};var _default=textareaOutlined;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/textarea/textareaOutlined/textareaOutlinedColors.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/textarea/textareaOutlined/textareaOutlinedColors.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var textareaOutlinedColors={black:{color:"!text-black",borderColor:"!border-black",borderColorFocused:"focus:!border-black"},white:{color:"!text-white",borderColor:"!border-white",borderColorFocused:"focus:!border-white"},"blue-gray":{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-blue-gray-500"},gray:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-gray-900"},brown:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-brown-500"},"deep-orange":{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-deep-orange-500"},orange:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-orange-500"},amber:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-amber-500"},yellow:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-yellow-500"},lime:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-lime-500"},"light-green":{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-light-green-500"},green:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-green-500"},teal:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-teal-500"},cyan:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-cyan-500"},"light-blue":{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-light-blue-500"},blue:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-blue-500"},indigo:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-indigo-500"},"deep-purple":{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-deep-purple-500"},purple:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-purple-500"},pink:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-pink-500"},red:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-red-500"}};var _default=textareaOutlinedColors;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/textarea/textareaOutlined/textareaOutlinedLabel.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/textarea/textareaOutlined/textareaOutlinedLabel.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var textareaOutlinedLabel={position:"-top-1.5",fontSize:"peer-placeholder-shown:text-sm",floated:{fontSize:"text-[11px] peer-focus:text-[11px]"},before:{content:"before:content[' ']",display:"before:block",boxSizing:"before:box-border",width:"before:w-2.5",height:"before:h-1.5",mt:"before:mt-[6.5px]",mr:"before:mr-1",borderColor:"peer-placeholder-shown:before:border-transparent",borderRadius:"before:rounded-tl-md",floated:{bt:"before:border-t peer-focus:before:border-t-2",bl:"before:border-l peer-focus:before:border-l-2"},pointerEvents:"before:pointer-events-none",transition:"before:transition-all",disabled:"peer-disabled:before:border-transparent"},after:{content:"after:content[' ']",display:"after:block",flexGrow:"after:flex-grow",boxSizing:"after:box-border",width:"after:w-2.5",height:"after:h-1.5",mt:"after:mt-[6.5px]",ml:"after:ml-1",borderColor:"peer-placeholder-shown:after:border-transparent",borderRadius:"after:rounded-tr-md",floated:{bt:"after:border-t peer-focus:after:border-t-2",br:"after:border-r peer-focus:after:border-r-2"},pointerEvents:"after:pointer-events-none",transition:"after:transition-all",disabled:"peer-disabled:after:border-transparent"}};var _default=textareaOutlinedLabel;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/textarea/textareaOutlined/textareaOutlinedLabelColors.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/textarea/textareaOutlined/textareaOutlinedLabelColors.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var textareaOutlinedLabelColors={black:{color:"!text-black peer-focus:!text-black",before:"before:!border-black peer-focus:before:!border-black",after:"after:!border-black peer-focus:after:!border-black"},white:{color:"!text-white peer-focus:!text-white",before:"before:!border-white peer-focus:before:!border-white",after:"after:!border-white peer-focus:after:!border-white"},"blue-gray":{color:"text-blue-gray-400 peer-focus:text-blue-gray-500",before:"before:border-blue-gray-200 peer-focus:before:!border-blue-gray-500",after:"after:border-blue-gray-200 peer-focus:after:!border-blue-gray-500"},gray:{color:"text-blue-gray-400 peer-focus:text-gray-900",before:"before:border-blue-gray-200 peer-focus:before:!border-gray-900",after:"after:border-blue-gray-200 peer-focus:after:!border-gray-900"},brown:{color:"text-blue-gray-400 peer-focus:text-brown-500",before:"before:border-blue-gray-200 peer-focus:before:!border-brown-500",after:"after:border-blue-gray-200 peer-focus:after:!border-brown-500"},"deep-orange":{color:"text-blue-gray-400 peer-focus:text-deep-orange-500",before:"before:border-blue-gray-200 peer-focus:before:!border-deep-orange-500",after:"after:border-blue-gray-200 peer-focus:after:!border-deep-orange-500"},orange:{color:"text-blue-gray-400 peer-focus:text-orange-500",before:"before:border-blue-gray-200 peer-focus:before:!border-orange-500",after:"after:border-blue-gray-200 peer-focus:after:!border-orange-500"},amber:{color:"text-blue-gray-400 peer-focus:text-amber-500",before:"before:border-blue-gray-200 peer-focus:before:!border-amber-500",after:"after:border-blue-gray-200 peer-focus:after:!border-amber-500"},yellow:{color:"text-blue-gray-400 peer-focus:text-yellow-500",before:"before:border-blue-gray-200 peer-focus:before:!border-yellow-500",after:"after:border-blue-gray-200 peer-focus:after:!border-yellow-500"},lime:{color:"text-blue-gray-400 peer-focus:text-lime-500",before:"before:border-blue-gray-200 peer-focus:before:!border-lime-500",after:"after:border-blue-gray-200 peer-focus:after:!border-lime-500"},"light-green":{color:"text-blue-gray-400 peer-focus:text-light-green-500",before:"before:border-blue-gray-200 peer-focus:before:!border-light-green-500",after:"after:border-blue-gray-200 peer-focus:after:!border-light-green-500"},green:{color:"text-blue-gray-400 peer-focus:text-green-500",before:"before:border-blue-gray-200 peer-focus:before:!border-green-500",after:"after:border-blue-gray-200 peer-focus:after:!border-green-500"},teal:{color:"text-blue-gray-400 peer-focus:text-teal-500",before:"before:border-blue-gray-200 peer-focus:before:!border-teal-500",after:"after:border-blue-gray-200 peer-focus:after:!border-teal-500"},cyan:{color:"text-blue-gray-400 peer-focus:text-cyan-500",before:"before:border-blue-gray-200 peer-focus:before:!border-cyan-500",after:"after:border-blue-gray-200 peer-focus:after:!border-cyan-500"},"light-blue":{color:"text-blue-gray-400 peer-focus:text-light-blue-500",before:"before:border-blue-gray-200 peer-focus:before:!border-light-blue-500",after:"after:border-blue-gray-200 peer-focus:after:!border-light-blue-500"},blue:{color:"text-blue-gray-400 peer-focus:text-blue-500",before:"before:border-blue-gray-200 peer-focus:before:!border-blue-500",after:"after:border-blue-gray-200 peer-focus:after:!border-blue-500"},indigo:{color:"text-blue-gray-400 peer-focus:text-indigo-500",before:"before:border-blue-gray-200 peer-focus:before:!border-indigo-500",after:"after:border-blue-gray-200 peer-focus:after:!border-indigo-500"},"deep-purple":{color:"text-blue-gray-400 peer-focus:text-deep-purple-500",before:"before:border-blue-gray-200 peer-focus:before:!border-deep-purple-500",after:"after:border-blue-gray-200 peer-focus:after:!border-deep-purple-500"},purple:{color:"text-blue-gray-400 peer-focus:text-purple-500",before:"before:border-blue-gray-200 peer-focus:before:!border-purple-500",after:"after:border-blue-gray-200 peer-focus:after:!border-purple-500"},pink:{color:"text-blue-gray-400 peer-focus:text-pink-500",before:"before:border-blue-gray-200 peer-focus:before:!border-pink-500",after:"after:border-blue-gray-200 peer-focus:after:!border-pink-500"},red:{color:"text-blue-gray-400 peer-focus:text-red-500",before:"before:border-blue-gray-200 peer-focus:before:!border-red-500",after:"after:border-blue-gray-200 peer-focus:after:!border-red-500"}};var _default=textareaOutlinedLabelColors;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/textarea/textareaStandard/index.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/textarea/textareaStandard/index.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var _textareaStandardLabel=_interopRequireDefault(__webpack_require__(/*! ./textareaStandardLabel */ "./node_modules/@material-tailwind/react/theme/components/textarea/textareaStandard/textareaStandardLabel.js"));var _textareaStandardColors=_interopRequireDefault(__webpack_require__(/*! ./textareaStandardColors */ "./node_modules/@material-tailwind/react/theme/components/textarea/textareaStandard/textareaStandardColors.js"));var _textareaStandardLabelColors=_interopRequireDefault(__webpack_require__(/*! ./textareaStandardLabelColors */ "./node_modules/@material-tailwind/react/theme/components/textarea/textareaStandard/textareaStandardLabelColors.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var textareaStandard={base:{textarea:{borderWidth:"border-b",borderColor:"placeholder-shown:border-blue-gray-200"},label:_textareaStandardLabel.default},sizes:{md:{container:{height:"h-11"},textarea:{fontSize:"text-sm",pt:"pt-4",pb:"pb-1.5",mt:"mt-1.5"},label:{lineHeight:"peer-placeholder-shown:leading-[4.25]"}},lg:{container:{height:"h-12"},textarea:{fontSize:"text-sm",px:"px-px",pt:"pt-5",pb:"pb-2"},label:{lineHeight:"peer-placeholder-shown:leading-[4.875]"}}},colors:{textarea:_textareaStandardColors.default,label:_textareaStandardLabelColors.default},error:{textarea:{borderColor:"border-red-500 placeholder-shown:border-red-500",borderColorFocused:"focus:border-red-500"},label:{color:"text-red-500 peer-focus:text-red-500 peer-placeholder-shown:text-red-500",after:"after:border-red-500 peer-focus:after:border-red-500"}},success:{textarea:{borderColor:"border-green-500 placeholder-shown:border-green-500",borderColorFocused:"focus:border-green-500"},label:{color:"text-green-500 peer-focus:text-green-500 peer-placeholder-shown:text-green-500",after:"after:border-green-500 peer-focus:after:border-green-500"}},shrink:{textarea:{},label:{fontSize:"!text-[11px]",lineHeight:"!leading-tight"}}};var _default=textareaStandard;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/textarea/textareaStandard/textareaStandardColors.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/textarea/textareaStandard/textareaStandardColors.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var textareaStandardColors={black:{color:"!text-black",borderColor:"!border-black",borderColorFocused:"focus:!border-black"},white:{color:"!text-white",borderColor:"!border-white",borderColorFocused:"focus:!border-white"},"blue-gray":{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-blue-gray-500"},gray:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-gray-900"},brown:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-brown-500"},"deep-orange":{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-deep-orange-500"},orange:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-orange-500"},amber:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-amber-500"},yellow:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-yellow-500"},lime:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-lime-500"},"light-green":{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-light-green-500"},green:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-green-500"},teal:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-teal-500"},cyan:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-cyan-500"},"light-blue":{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-light-blue-500"},blue:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-blue-500"},indigo:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-indigo-500"},"deep-purple":{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-deep-purple-500"},purple:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-purple-500"},pink:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-pink-500"},red:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-red-500"}};var _default=textareaStandardColors;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/textarea/textareaStandard/textareaStandardLabel.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/textarea/textareaStandard/textareaStandardLabel.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var textareaStandardLabel={position:"-top-1.5",fontSize:"peer-placeholder-shown:text-sm",floated:{fontSize:"text-[11px] peer-focus:text-[11px]"},after:{content:"after:content[' ']",display:"after:block",width:"after:w-full",position:"after:absolute",bottom:"after:-bottom-0",left:"left-0",borderWidth:"after:border-b-2",scale:"after:scale-x-0",floated:{scale:"peer-focus:after:scale-x-100"},transition:"after:transition-transform after:duration-300"}};var _default=textareaStandardLabel;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/textarea/textareaStandard/textareaStandardLabelColors.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/textarea/textareaStandard/textareaStandardLabelColors.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var textareaStandardLabelColors={black:{color:"!text-black peer-focus:!text-black",after:"after:!border-black peer-focus:after:!border-black"},white:{color:"!text-white peer-focus:!text-white",after:"after:!border-white peer-focus:after:!border-white"},"blue-gray":{color:"text-blue-gray-500 peer-focus:text-blue-gray-500",after:"after:border-blue-gray-500 peer-focus:after:!border-blue-gray-500"},gray:{color:"text-gray-500 peer-focus:text-gray-900",after:"after:border-gray-500 peer-focus:after:!border-gray-900"},brown:{color:"text-blue-gray-500 peer-focus:text-brown-500",after:"after:border-brown-500 peer-focus:after:!border-brown-500"},"deep-orange":{color:"text-blue-gray-500 peer-focus:text-deep-orange-500",after:"after:border-deep-orange-500 peer-focus:after:!border-deep-orange-500"},orange:{color:"text-blue-gray-500 peer-focus:text-orange-500",after:"after:border-orange-500 peer-focus:after:!border-orange-500"},amber:{color:"text-blue-gray-500 peer-focus:text-amber-500",after:"after:border-amber-500 peer-focus:after:!border-amber-500"},yellow:{color:"text-blue-gray-500 peer-focus:text-yellow-500",after:"after:border-yellow-500 peer-focus:after:!border-yellow-500"},lime:{color:"text-blue-gray-500 peer-focus:text-lime-500",after:"after:border-lime-500 peer-focus:after:!border-lime-500"},"light-green":{color:"text-blue-gray-500 peer-focus:text-light-green-500",after:"after:border-light-green-500 peer-focus:after:!border-light-green-500"},green:{color:"text-blue-gray-500 peer-focus:text-green-500",after:"after:border-green-500 peer-focus:after:!border-green-500"},teal:{color:"text-blue-gray-500 peer-focus:text-teal-500",after:"after:border-teal-500 peer-focus:after:!border-teal-500"},cyan:{color:"text-blue-gray-500 peer-focus:text-cyan-500",after:"after:border-cyan-500 peer-focus:after:!border-cyan-500"},"light-blue":{color:"text-blue-gray-500 peer-focus:text-light-blue-500",after:"after:border-light-blue-500 peer-focus:after:!border-light-blue-500"},blue:{color:"text-blue-gray-500 peer-focus:text-blue-500",after:"after:border-blue-500 peer-focus:after:!border-blue-500"},indigo:{color:"text-blue-gray-500 peer-focus:text-indigo-500",after:"after:border-indigo-500 peer-focus:after:!border-indigo-500"},"deep-purple":{color:"text-blue-gray-500 peer-focus:text-deep-purple-500",after:"after:border-deep-purple-500 peer-focus:after:!border-deep-purple-500"},purple:{color:"text-blue-gray-500 peer-focus:text-purple-500",after:"after:border-purple-500 peer-focus:after:!border-purple-500"},pink:{color:"text-blue-gray-500 peer-focus:text-pink-500",after:"after:border-pink-500 peer-focus:after:!border-pink-500"},red:{color:"text-blue-gray-500 peer-focus:text-red-500",after:"after:border-red-500 peer-focus:after:!border-red-500"}};var _default=textareaStandardLabelColors;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/textarea/textareaStatic/index.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/textarea/textareaStatic/index.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var _textareaStaticLabel=_interopRequireDefault(__webpack_require__(/*! ./textareaStaticLabel */ "./node_modules/@material-tailwind/react/theme/components/textarea/textareaStatic/textareaStaticLabel.js"));var _textareaStaticColors=_interopRequireDefault(__webpack_require__(/*! ./textareaStaticColors */ "./node_modules/@material-tailwind/react/theme/components/textarea/textareaStatic/textareaStaticColors.js"));var _textareaStaticLabelColors=_interopRequireDefault(__webpack_require__(/*! ./textareaStaticLabelColors */ "./node_modules/@material-tailwind/react/theme/components/textarea/textareaStatic/textareaStaticLabelColors.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var textareaStatic={base:{textarea:{borderWidth:"border-b",borderColor:"placeholder-shown:border-blue-gray-200"},label:_textareaStaticLabel.default},sizes:{md:{container:{height:"h-11"},textarea:{fontSize:"text-sm",pt:"pt-4",pb:"pb-1.5",mt:"mt-1.5"},label:{lineHeight:"peer-placeholder-shown:leading-tight"}},lg:{container:{height:"h-12"},textarea:{fontSize:"text-sm",px:"px-px",pt:"pt-5",pb:"pb-2"},label:{lineHeight:"peer-placeholder-shown:leading-tight"}}},colors:{textarea:_textareaStaticColors.default,label:_textareaStaticLabelColors.default},error:{textarea:{borderColor:"border-red-500 placeholder-shown:border-red-500",borderColorFocused:"focus:border-red-500"},label:{color:"text-red-500 peer-focus:text-red-500 peer-placeholder-shown:text-red-500",after:"after:border-red-500 peer-focus:after:border-red-500"}},success:{textarea:{borderColor:"border-green-500 placeholder-shown:border-green-500",borderColorFocused:"focus:border-green-500"},label:{color:"text-green-500 peer-focus:text-green-500 peer-placeholder-shown:text-green-500",after:"after:border-green-500 peer-focus:after:border-green-500"}},shrink:{textarea:{},label:{}}};var _default=textareaStatic;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/textarea/textareaStatic/textareaStaticColors.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/textarea/textareaStatic/textareaStaticColors.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var textareaStaticColors={black:{color:"!text-black",borderColor:"!border-black",borderColorFocused:"focus:!border-black"},white:{color:"!text-white",borderColor:"!border-white",borderColorFocused:"focus:!border-white"},"blue-gray":{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-blue-gray-500"},gray:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-gray-900"},brown:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-brown-500"},"deep-orange":{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-deep-orange-500"},orange:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-orange-500"},amber:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-amber-500"},yellow:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-yellow-500"},lime:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-lime-500"},"light-green":{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-light-green-500"},green:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-green-500"},teal:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-teal-500"},cyan:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-cyan-500"},"light-blue":{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-light-blue-500"},blue:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-blue-500"},indigo:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-indigo-500"},"deep-purple":{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-deep-purple-500"},purple:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-purple-500"},pink:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-pink-500"},red:{borderColor:"border-blue-gray-200",borderColorFocused:"focus:border-red-500"}};var _default=textareaStaticColors;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/textarea/textareaStatic/textareaStaticLabel.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/textarea/textareaStatic/textareaStaticLabel.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var textareaStaticLabel={position:"-top-2.5",fontSize:"text-sm peer-focus:text-sm",after:{content:"after:content[' ']",display:"after:block",width:"after:w-full",position:"after:absolute",bottom:"after:-bottom-1",left:"left-0",borderWidth:"after:border-b-2",scale:"after:scale-x-0",floated:{scale:"peer-focus:after:scale-x-100"},transition:"after:transition-transform after:duration-300"}};var _default=textareaStaticLabel;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/textarea/textareaStatic/textareaStaticLabelColors.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/textarea/textareaStatic/textareaStaticLabelColors.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var textareaStaticLabelColors={black:{color:"!text-black peer-focus:!text-black",after:"after:!border-black peer-focus:after:!border-black"},white:{color:"!text-white peer-focus:!text-white",after:"after:!border-white peer-focus:after:!border-white"},"blue-gray":{color:"text-blue-gray-500 peer-focus:text-blue-gray-500",after:"after:border-blue-gray-500 peer-focus:after:border-blue-gray-500"},gray:{color:"text-gray-500 peer-focus:text-gray-900",after:"after:border-gray-500 peer-focus:after:border-gray-900"},brown:{color:"text-blue-gray-500 peer-focus:text-brown-500",after:"after:border-brown-500 peer-focus:after:border-brown-500"},"deep-orange":{color:"text-blue-gray-500 peer-focus:text-deep-orange-500",after:"after:border-deep-orange-500 peer-focus:after:border-deep-orange-500"},orange:{color:"text-blue-gray-500 peer-focus:text-orange-500",after:"after:border-orange-500 peer-focus:after:border-orange-500"},amber:{color:"text-blue-gray-500 peer-focus:text-amber-500",after:"after:border-amber-500 peer-focus:after:border-amber-500"},yellow:{color:"text-blue-gray-500 peer-focus:text-yellow-500",after:"after:border-yellow-500 peer-focus:after:border-yellow-500"},lime:{color:"text-blue-gray-500 peer-focus:text-lime-500",after:"after:border-lime-500 peer-focus:after:border-lime-500"},"light-green":{color:"text-blue-gray-500 peer-focus:text-light-green-500",after:"after:border-light-green-500 peer-focus:after:border-light-green-500"},green:{color:"text-blue-gray-500 peer-focus:text-green-500",after:"after:border-green-500 peer-focus:after:border-green-500"},teal:{color:"text-blue-gray-500 peer-focus:text-teal-500",after:"after:border-teal-500 peer-focus:after:border-teal-500"},cyan:{color:"text-blue-gray-500 peer-focus:text-cyan-500",after:"after:border-cyan-500 peer-focus:after:border-cyan-500"},"light-blue":{color:"text-blue-gray-500 peer-focus:text-light-blue-500",after:"after:border-light-blue-500 peer-focus:after:border-light-blue-500"},blue:{color:"text-blue-gray-500 peer-focus:text-blue-500",after:"after:border-blue-500 peer-focus:after:border-blue-500"},indigo:{color:"text-blue-gray-500 peer-focus:text-indigo-500",after:"after:border-indigo-500 peer-focus:after:border-indigo-500"},"deep-purple":{color:"text-blue-gray-500 peer-focus:text-deep-purple-500",after:"after:border-deep-purple-500 peer-focus:after:border-deep-purple-500"},purple:{color:"text-blue-gray-500 peer-focus:text-purple-500",after:"after:border-purple-500 peer-focus:after:border-purple-500"},pink:{color:"text-blue-gray-500 peer-focus:text-pink-500",after:"after:border-pink-500 peer-focus:after:border-pink-500"},red:{color:"text-blue-gray-500 peer-focus:text-red-500",after:"after:border-red-500 peer-focus:after:border-red-500"}};var _default=textareaStaticLabelColors;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/timeline/index.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/timeline/index.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));_exportStar(__webpack_require__(/*! ./timeline */ "./node_modules/@material-tailwind/react/theme/components/timeline/timeline.js"),exports);_exportStar(__webpack_require__(/*! ./timelineItem */ "./node_modules/@material-tailwind/react/theme/components/timeline/timelineItem.js"),exports);_exportStar(__webpack_require__(/*! ./timelineIcon */ "./node_modules/@material-tailwind/react/theme/components/timeline/timelineIcon.js"),exports);_exportStar(__webpack_require__(/*! ./timelineHeader */ "./node_modules/@material-tailwind/react/theme/components/timeline/timelineHeader.js"),exports);_exportStar(__webpack_require__(/*! ./timelineBody */ "./node_modules/@material-tailwind/react/theme/components/timeline/timelineBody.js"),exports);_exportStar(__webpack_require__(/*! ./timelineConnector */ "./node_modules/@material-tailwind/react/theme/components/timeline/timelineConnector.js"),exports);function _exportStar(from,to){Object.keys(from).forEach(function(k){if(k!=="default"&&!Object.prototype.hasOwnProperty.call(to,k))Object.defineProperty(to,k,{enumerable:true,get:function(){return from[k]}})});return from}

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/timeline/timeline.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/timeline/timeline.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{timeline:function(){return timeline},default:function(){return _default}});var timeline={styles:{base:{display:"w-full",position:"flex",flexDirection:"flex-col"}}};var _default=timeline;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/timeline/timelineBody.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/timeline/timelineBody.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{timelineBody:function(){return timelineBody},default:function(){return _default}});var timelineBody={styles:{base:{display:"flex",gap:"gap-4"}}};var _default=timelineBody;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/timeline/timelineConnector.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/timeline/timelineConnector.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{timelineConnector:function(){return timelineConnector},default:function(){return _default}});var timelineConnector={styles:{base:{container:{position:"absolute",left:"left-0",display:"grid",justifyContent:"justify-center",backgroundColor:"bg-transparent",transition:"transition-opacity duration-200"},line:{width:"w-0.5",height:"h-full",backgroundColor:"bg-blue-gray-100"}}}};var _default=timelineConnector;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/timeline/timelineHeader.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/timeline/timelineHeader.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{timelineHeader:function(){return timelineHeader},default:function(){return _default}});var timelineHeader={styles:{base:{display:"flex",alignItems:"items-center",gap:"gap-4"}}};var _default=timelineHeader;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/timeline/timelineIcon.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/timeline/timelineIcon.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{timelineIcon:function(){return timelineIcon},default:function(){return _default}});var _ghost=_interopRequireDefault(__webpack_require__(/*! ./timelineIconColors/ghost */ "./node_modules/@material-tailwind/react/theme/components/timeline/timelineIconColors/ghost.js"));var _filled=_interopRequireDefault(__webpack_require__(/*! ./timelineIconColors/filled */ "./node_modules/@material-tailwind/react/theme/components/timeline/timelineIconColors/filled.js"));var _outlined=_interopRequireDefault(__webpack_require__(/*! ./timelineIconColors/outlined */ "./node_modules/@material-tailwind/react/theme/components/timeline/timelineIconColors/outlined.js"));var _gradient=_interopRequireDefault(__webpack_require__(/*! ./timelineIconColors/gradient */ "./node_modules/@material-tailwind/react/theme/components/timeline/timelineIconColors/gradient.js"));var _timeline=__webpack_require__(/*! ../../../types/components/timeline */ "./node_modules/@material-tailwind/react/types/components/timeline.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var timelineIcon={defaultProps:{color:"gray",variant:"filled"},valid:{colors:_timeline.propTypeColor,variants:_timeline.propTypeVariant},styles:{base:{width:"w-max",height:"w-max",padding:"p-1.5",position:"relative",zIndex:"z-[2]",flexShrink:"flex-shrink-0",borderRadius:"rounded-full",overflow:"overflow-hidden"},variants:{ghost:_ghost.default,filled:_filled.default,outlined:_outlined.default,gradient:_gradient.default}}};var _default=timelineIcon;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/timeline/timelineIconColors/filled.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/timeline/timelineIconColors/filled.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var filled={transparent:{backgroud:"bg-transparent",color:"text-blue-gray-900"},white:{backgroud:"bg-white",color:"text-blue-gray-900"},"blue-gray":{backgroud:"bg-blue-gray-500",color:"text-white"},gray:{backgroud:"bg-gray-900",color:"text-white"},brown:{backgroud:"bg-brown-500",color:"text-white"},"deep-orange":{backgroud:"bg-deep-orange-500",color:"text-white"},orange:{backgroud:"bg-orange-500",color:"text-white"},amber:{backgroud:"bg-amber-500",color:"text-black"},yellow:{backgroud:"bg-yellow-500",color:"text-black"},lime:{backgroud:"bg-lime-500",color:"text-black"},"light-green":{backgroud:"bg-light-green-500",color:"text-white"},green:{backgroud:"bg-green-500",color:"text-white"},teal:{backgroud:"bg-teal-500",color:"text-white"},cyan:{backgroud:"bg-cyan-500",color:"text-white"},"light-blue":{backgroud:"bg-light-blue-500",color:"text-white"},blue:{backgroud:"bg-blue-500",color:"text-white"},indigo:{backgroud:"bg-indigo-500",color:"text-white"},"deep-purple":{backgroud:"bg-deep-purple-500",color:"text-white"},purple:{backgroud:"bg-purple-500",color:"text-white"},pink:{backgroud:"bg-pink-500",color:"text-white"},red:{backgroud:"bg-red-500",color:"text-white"}};var _default=filled;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/timeline/timelineIconColors/ghost.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/timeline/timelineIconColors/ghost.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var ghost={transparent:{backgroud:"bg-transparent",color:"text-blue-gray-900"},white:{color:"text-white",background:"bg-white/10"},"blue-gray":{color:"text-blue-gray-500",background:"bg-blue-gray-500/10"},gray:{color:"text-gray-900",background:"bg-gray-900/10"},brown:{color:"text-brown-500",background:"bg-brown-500/10"},"deep-orange":{color:"text-deep-orange-500",background:"bg-deep-orange-500/10"},orange:{color:"text-orange-500",background:"bg-orange-500/10"},amber:{color:"text-amber-500",background:"bg-amber-500/10"},yellow:{color:"text-yellow-500",background:"bg-yellow-500/10"},lime:{color:"text-lime-500",background:"bg-lime-500/10"},"light-green":{color:"text-light-green-500",background:"bg-light-green-500/10"},green:{color:"text-green-500",background:"bg-green-500/10"},teal:{color:"text-teal-500",background:"bg-teal-500/10"},cyan:{color:"text-cyan-500",background:"bg-cyan-500/10"},"light-blue":{color:"text-light-blue-500",background:"bg-light-blue-500/10"},blue:{color:"text-blue-500",background:"bg-blue-500/10"},indigo:{color:"text-indigo-500",background:"bg-indigo-500/10"},"deep-purple":{color:"text-deep-purple-500",background:"bg-deep-purple-500/10"},purple:{color:"text-purple-500",background:"bg-purple-500/10"},pink:{color:"text-pink-500",background:"bg-pink-500/10"},red:{color:"text-red-500",background:"bg-red-500/10"}};var _default=ghost;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/timeline/timelineIconColors/gradient.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/timeline/timelineIconColors/gradient.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var gradient={transparent:{backgroud:"bg-transparent",color:"text-blue-gray-900"},white:{backgroud:"bg-white",color:"text-blue-gray-900"},"blue-gray":{backgroud:"bg-gradient-to-tr from-blue-gray-600 to-blue-gray-400",color:"text-white"},gray:{backgroud:"bg-gradient-to-tr from-gray-900 to-gray-800",color:"text-white"},brown:{backgroud:"bg-gradient-to-tr from-brown-600 to-brown-400",color:"text-white"},"deep-orange":{backgroud:"bg-gradient-to-tr from-deep-orange-600 to-deep-orange-400",color:"text-white"},orange:{backgroud:"bg-gradient-to-tr from-orange-600 to-orange-400",color:"text-white"},amber:{backgroud:"bg-gradient-to-tr from-amber-600 to-amber-400",color:"text-black"},yellow:{backgroud:"bg-gradient-to-tr from-yellow-600 to-yellow-400",color:"text-black"},lime:{backgroud:"bg-gradient-to-tr from-lime-600 to-lime-400",color:"text-black"},"light-green":{backgroud:"bg-gradient-to-tr from-light-green-600 to-light-green-400",color:"text-white"},green:{backgroud:"bg-gradient-to-tr from-green-600 to-green-400",color:"text-white"},teal:{backgroud:"bg-gradient-to-tr from-teal-600 to-teal-400",color:"text-white"},cyan:{backgroud:"bg-gradient-to-tr from-cyan-600 to-cyan-400",color:"text-white"},"light-blue":{backgroud:"bg-gradient-to-tr from-light-blue-600 to-light-blue-400",color:"text-white"},blue:{backgroud:"bg-gradient-to-tr from-blue-600 to-blue-400",color:"text-white"},indigo:{backgroud:"bg-gradient-to-tr from-indigo-600 to-indigo-400",color:"text-white"},"deep-purple":{backgroud:"bg-gradient-to-tr from-deep-purple-600 to-deep-purple-400",color:"text-white"},purple:{backgroud:"bg-gradient-to-tr from-purple-600 to-purple-400",color:"text-white"},pink:{backgroud:"bg-gradient-to-tr from-pink-600 to-pink-400",color:"text-white"},red:{backgroud:"bg-gradient-to-tr from-red-600 to-red-400",color:"text-white"}};var _default=gradient;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/timeline/timelineIconColors/outlined.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/timeline/timelineIconColors/outlined.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var outlined={transparent:{backgroud:"bg-transparent",color:"text-blue-gray-900"},white:{border:"border border-white",color:"text-white"},"blue-gray":{border:"border border-blue-gray-500",color:"text-blue-gray-500"},gray:{border:"border border-gray-900",color:"text-gray-900"},brown:{border:"border border-brown-500",color:"text-brown-500"},"deep-orange":{border:"border border-deep-orange-500",color:"text-deep-orange-500"},orange:{border:"border border-orange-500",color:"text-orange-500"},amber:{border:"border border-amber-500",color:"text-amber-500"},yellow:{border:"border border-yellow-500",color:"text-yellow-500"},lime:{border:"border border-lime-500",color:"text-lime-500"},"light-green":{border:"border border-light-green-500",color:"text-light-green-500"},green:{border:"border border-green-500",color:"text-green-500"},teal:{border:"border border-teal-500",color:"text-teal-500"},cyan:{border:"border border-cyan-500",color:"text-cyan-500"},"light-blue":{border:"border border-light-blue-500",color:"text-light-blue-500"},blue:{border:"border border-blue-500",color:"text-blue-500"},indigo:{border:"border border-indigo-500",color:"text-indigo-500"},"deep-purple":{border:"border border-deep-purple-500",color:"text-deep-purple-500"},purple:{border:"border border-purple-500",color:"text-purple-500"},pink:{border:"border border-pink-500",color:"text-pink-500"},red:{border:"border border-red-500",color:"text-red-500"}};var _default=outlined;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/timeline/timelineItem.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/timeline/timelineItem.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{timelineItem:function(){return timelineItem},default:function(){return _default}});var _timeline=__webpack_require__(/*! ../../../types/components/timeline */ "./node_modules/@material-tailwind/react/types/components/timeline.js");var timelineItem={defaultProps:{color:"gray",variant:"filled"},valid:{colors:_timeline.propTypeColor,variants:_timeline.propTypeVariant},styles:{base:{display:"flex",position:"relative",flexDirection:"flex-col",gap:"gap-2"}}};var _default=timelineItem;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/tooltip/index.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/tooltip/index.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{tooltip:function(){return tooltip},default:function(){return _default}});var tooltip={defaultProps:{interactive:false,placement:"top",offset:5,dismiss:{},animate:{unmount:{},mount:{}},className:""},styles:{base:{bg:"bg-black",py:"py-1.5",px:"px-3",borderRadius:"rounded-lg",fontFamily:"font-sans",fontSize:"text-sm",fontWeight:"font-normal",color:"text-white",outline:"focus:outline-none",overflowWrap:"break-words",zIndex:"z-[999]",whiteSpace:"whitespace-normal"}}};var _default=tooltip;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/typography/index.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/typography/index.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{typography:function(){return typography},default:function(){return _default}});var _typographyColors=_interopRequireDefault(__webpack_require__(/*! ./typographyColors */ "./node_modules/@material-tailwind/react/theme/components/typography/typographyColors.js"));var _typography=__webpack_require__(/*! ../../../types/components/typography */ "./node_modules/@material-tailwind/react/types/components/typography.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var typography={defaultProps:{variant:"paragraph",color:"inherit",textGradient:false,className:""},valid:{variants:_typography.propTypesVariant,colors:_typography.propTypesColor},styles:{variants:{h1:{display:"block",fontSmoothing:"antialiased",letterSpacing:"tracking-normal",fontFamily:"font-sans",fontSize:"text-5xl",fontWeight:"font-semibold",lineHeight:"leading-tight"},h2:{display:"block",fontSmoothing:"antialiased",letterSpacing:"tracking-normal",fontFamily:"font-sans",fontSize:"text-4xl",fontWeight:"font-semibold",lineHeight:"leading-[1.3]"},h3:{display:"block",fontSmoothing:"antialiased",letterSpacing:"tracking-normal",fontFamily:"font-sans",fontSize:"text-3xl",fontWeight:"font-semibold",lineHeight:"leading-snug"},h4:{display:"block",fontSmoothing:"antialiased",letterSpacing:"tracking-normal",fontFamily:"font-sans",fontSize:"text-2xl",fontWeight:"font-semibold",lineHeight:"leading-snug"},h5:{display:"block",fontSmoothing:"antialiased",letterSpacing:"tracking-normal",fontFamily:"font-sans",fontSize:"text-xl",fontWeight:"font-semibold",lineHeight:"leading-snug"},h6:{display:"block",fontSmoothing:"antialiased",letterSpacing:"tracking-normal",fontFamily:"font-sans",fontSize:"text-base",fontWeight:"font-semibold",lineHeight:"leading-relaxed"},lead:{display:"block",fontSmoothing:"antialiased",fontFamily:"font-sans",fontSize:"text-xl",fontWeight:"font-normal",lineHeight:"leading-relaxed"},paragraph:{display:"block",fontSmoothing:"antialiased",fontFamily:"font-sans",fontSize:"text-base",fontWeight:"font-light",lineHeight:"leading-relaxed"},small:{display:"block",fontSmoothing:"antialiased",fontFamily:"font-sans",fontSize:"text-sm",fontWeight:"font-light",lineHeight:"leading-normal"}},textGradient:{bgClip:"bg-clip-text",color:"text-transparent"},colors:_typographyColors.default}};var _default=typography;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/components/typography/typographyColors.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/components/typography/typographyColors.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var typographyColors={inherit:{color:"text-inherit"},current:{color:"text-current"},black:{color:"text-black"},white:{color:"text-white"},"blue-gray":{color:"text-blue-gray-900",gradient:"bg-gradient-to-tr from-blue-gray-600 to-blue-gray-400"},gray:{color:"text-gray-700",gradient:"bg-gradient-to-tr from-gray-600 to-gray-400"},brown:{color:"text-brown-500",gradient:"bg-gradient-to-tr from-brown-600 to-brown-400"},"deep-orange":{color:"text-deep-orange-500",gradient:"bg-gradient-to-tr from-deep-orange-600 to-deep-orange-400"},orange:{color:"text-orange-500",gradient:"bg-gradient-to-tr from-orange-600 to-orange-400"},amber:{color:"text-amber-500",gradient:"bg-gradient-to-tr from-amber-600 to-amber-400"},yellow:{color:"text-yellow-500",gradient:"bg-gradient-to-tr from-yellow-600 to-yellow-400"},lime:{color:"text-lime-500",gradient:"bg-gradient-to-tr from-lime-600 to-lime-400"},"light-green":{color:"text-light-green-500",gradient:"bg-gradient-to-tr from-light-green-600 to-light-green-400"},green:{color:"text-green-500",gradient:"bg-gradient-to-tr from-green-600 to-green-400"},teal:{color:"text-teal-500",gradient:"bg-gradient-to-tr from-teal-600 to-teal-400"},cyan:{color:"text-cyan-500",gradient:"bg-gradient-to-tr from-cyan-600 to-cyan-400"},"light-blue":{color:"text-light-blue-500",gradient:"bg-gradient-to-tr from-light-blue-600 to-light-blue-400"},blue:{color:"text-blue-500",gradient:"bg-gradient-to-tr from-blue-600 to-blue-400"},indigo:{color:"text-indigo-500",gradient:"bg-gradient-to-tr from-indigo-600 to-indigo-400"},"deep-purple":{color:"text-deep-purple-500",gradient:"bg-gradient-to-tr from-deep-purple-600 to-deep-purple-400"},purple:{color:"text-purple-500",gradient:"bg-gradient-to-tr from-purple-600 to-purple-400"},pink:{color:"text-pink-500",gradient:"bg-gradient-to-tr from-pink-600 to-pink-400"},red:{color:"text-red-500",gradient:"bg-gradient-to-tr from-red-600 to-red-400"}};var _default=typographyColors;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/theme/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/theme/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));var _accordion=_interopRequireDefault(_exportStar(__webpack_require__(/*! ./components/accordion */ "./node_modules/@material-tailwind/react/theme/components/accordion/index.js"),exports));var _alert=_interopRequireDefault(_exportStar(__webpack_require__(/*! ./components/alert */ "./node_modules/@material-tailwind/react/theme/components/alert/index.js"),exports));var _avatar=_interopRequireDefault(_exportStar(__webpack_require__(/*! ./components/avatar */ "./node_modules/@material-tailwind/react/theme/components/avatar/index.js"),exports));var _breadcrumbs=_interopRequireDefault(_exportStar(__webpack_require__(/*! ./components/breadcrumbs */ "./node_modules/@material-tailwind/react/theme/components/breadcrumbs/index.js"),exports));var _button=_interopRequireDefault(_exportStar(__webpack_require__(/*! ./components/button */ "./node_modules/@material-tailwind/react/theme/components/button/index.js"),exports));var _card=_interopRequireDefault(_exportStar(__webpack_require__(/*! ./components/card */ "./node_modules/@material-tailwind/react/theme/components/card/index.js"),exports));var _cardBody=_interopRequireDefault(_exportStar(__webpack_require__(/*! ./components/card/cardBody */ "./node_modules/@material-tailwind/react/theme/components/card/cardBody.js"),exports));var _cardFooter=_interopRequireDefault(_exportStar(__webpack_require__(/*! ./components/card/cardFooter */ "./node_modules/@material-tailwind/react/theme/components/card/cardFooter.js"),exports));var _cardHeader=_interopRequireDefault(_exportStar(__webpack_require__(/*! ./components/card/cardHeader */ "./node_modules/@material-tailwind/react/theme/components/card/cardHeader.js"),exports));var _checkbox=_interopRequireDefault(_exportStar(__webpack_require__(/*! ./components/checkbox */ "./node_modules/@material-tailwind/react/theme/components/checkbox/index.js"),exports));var _chip=_interopRequireDefault(_exportStar(__webpack_require__(/*! ./components/chip */ "./node_modules/@material-tailwind/react/theme/components/chip/index.js"),exports));var _dialog=_interopRequireDefault(_exportStar(__webpack_require__(/*! ./components/dialog */ "./node_modules/@material-tailwind/react/theme/components/dialog/index.js"),exports));var _dialogBody=_interopRequireDefault(_exportStar(__webpack_require__(/*! ./components/dialog/dialogBody */ "./node_modules/@material-tailwind/react/theme/components/dialog/dialogBody.js"),exports));var _dialogFooter=_interopRequireDefault(_exportStar(__webpack_require__(/*! ./components/dialog/dialogFooter */ "./node_modules/@material-tailwind/react/theme/components/dialog/dialogFooter.js"),exports));var _dialogHeader=_interopRequireDefault(_exportStar(__webpack_require__(/*! ./components/dialog/dialogHeader */ "./node_modules/@material-tailwind/react/theme/components/dialog/dialogHeader.js"),exports));var _iconButton=_interopRequireDefault(_exportStar(__webpack_require__(/*! ./components/iconButton */ "./node_modules/@material-tailwind/react/theme/components/iconButton/index.js"),exports));var _input=_interopRequireDefault(_exportStar(__webpack_require__(/*! ./components/input */ "./node_modules/@material-tailwind/react/theme/components/input/index.js"),exports));var _menu=_interopRequireDefault(_exportStar(__webpack_require__(/*! ./components/menu */ "./node_modules/@material-tailwind/react/theme/components/menu/index.js"),exports));var _navbar=_interopRequireDefault(_exportStar(__webpack_require__(/*! ./components/navbar */ "./node_modules/@material-tailwind/react/theme/components/navbar/index.js"),exports));var _popover=_interopRequireDefault(_exportStar(__webpack_require__(/*! ./components/popover */ "./node_modules/@material-tailwind/react/theme/components/popover/index.js"),exports));var _progress=_interopRequireDefault(_exportStar(__webpack_require__(/*! ./components/progress */ "./node_modules/@material-tailwind/react/theme/components/progress/index.js"),exports));var _radio=_interopRequireDefault(_exportStar(__webpack_require__(/*! ./components/radio */ "./node_modules/@material-tailwind/react/theme/components/radio/index.js"),exports));var _select=_interopRequireDefault(_exportStar(__webpack_require__(/*! ./components/select */ "./node_modules/@material-tailwind/react/theme/components/select/index.js"),exports));var _switch=_interopRequireDefault(_exportStar(__webpack_require__(/*! ./components/switch */ "./node_modules/@material-tailwind/react/theme/components/switch/index.js"),exports));var _tab=_interopRequireDefault(_exportStar(__webpack_require__(/*! ./components/tabs/tab */ "./node_modules/@material-tailwind/react/theme/components/tabs/tab.js"),exports));var _tabs=_interopRequireDefault(_exportStar(__webpack_require__(/*! ./components/tabs */ "./node_modules/@material-tailwind/react/theme/components/tabs/index.js"),exports));var _tabsBody=_interopRequireDefault(_exportStar(__webpack_require__(/*! ./components/tabs/tabsBody */ "./node_modules/@material-tailwind/react/theme/components/tabs/tabsBody.js"),exports));var _tabsHeader=_interopRequireDefault(_exportStar(__webpack_require__(/*! ./components/tabs/tabsHeader */ "./node_modules/@material-tailwind/react/theme/components/tabs/tabsHeader.js"),exports));var _tabPanel=_interopRequireDefault(_exportStar(__webpack_require__(/*! ./components/tabs/tabPanel */ "./node_modules/@material-tailwind/react/theme/components/tabs/tabPanel.js"),exports));var _textarea=_interopRequireDefault(_exportStar(__webpack_require__(/*! ./components/textarea */ "./node_modules/@material-tailwind/react/theme/components/textarea/index.js"),exports));var _tooltip=_interopRequireDefault(_exportStar(__webpack_require__(/*! ./components/tooltip */ "./node_modules/@material-tailwind/react/theme/components/tooltip/index.js"),exports));var _typography=_interopRequireDefault(_exportStar(__webpack_require__(/*! ./components/typography */ "./node_modules/@material-tailwind/react/theme/components/typography/index.js"),exports));var _collapse=_interopRequireDefault(_exportStar(__webpack_require__(/*! ./components/collapse */ "./node_modules/@material-tailwind/react/theme/components/collapse/index.js"),exports));var _list=_interopRequireDefault(_exportStar(__webpack_require__(/*! ./components/list */ "./node_modules/@material-tailwind/react/theme/components/list/index.js"),exports));var _buttonGroup=_interopRequireDefault(_exportStar(__webpack_require__(/*! ./components/buttonGroup */ "./node_modules/@material-tailwind/react/theme/components/buttonGroup/index.js"),exports));var _carousel=_interopRequireDefault(_exportStar(__webpack_require__(/*! ./components/carousel */ "./node_modules/@material-tailwind/react/theme/components/carousel/index.js"),exports));var _drawer=_interopRequireDefault(_exportStar(__webpack_require__(/*! ./components/drawer */ "./node_modules/@material-tailwind/react/theme/components/drawer/index.js"),exports));var _badge=_interopRequireDefault(_exportStar(__webpack_require__(/*! ./components/badge */ "./node_modules/@material-tailwind/react/theme/components/badge/index.js"),exports));var _rating=_interopRequireDefault(_exportStar(__webpack_require__(/*! ./components/rating */ "./node_modules/@material-tailwind/react/theme/components/rating/index.js"),exports));var _slider=_interopRequireDefault(_exportStar(__webpack_require__(/*! ./components/slider */ "./node_modules/@material-tailwind/react/theme/components/slider/index.js"),exports));var _spinner=_interopRequireDefault(_exportStar(__webpack_require__(/*! ./components/spinner */ "./node_modules/@material-tailwind/react/theme/components/spinner/index.js"),exports));var _timeline=_exportStar(__webpack_require__(/*! ./components/timeline */ "./node_modules/@material-tailwind/react/theme/components/timeline/index.js"),exports);var _stepper=_exportStar(__webpack_require__(/*! ./components/stepper */ "./node_modules/@material-tailwind/react/theme/components/stepper/index.js"),exports);var _speedDial=_exportStar(__webpack_require__(/*! ./components/speedDial */ "./node_modules/@material-tailwind/react/theme/components/speedDial/index.js"),exports);function _exportStar(from,to){Object.keys(from).forEach(function(k){if(k!=="default"&&!Object.prototype.hasOwnProperty.call(to,k))Object.defineProperty(to,k,{enumerable:true,get:function(){return from[k]}})});return from}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var theme={accordion:_accordion.default,alert:_alert.default,avatar:_avatar.default,breadcrumbs:_breadcrumbs.default,button:_button.default,card:_card.default,cardBody:_cardBody.default,cardFooter:_cardFooter.default,cardHeader:_cardHeader.default,checkbox:_checkbox.default,chip:_chip.default,dialog:_dialog.default,dialogBody:_dialogBody.default,dialogFooter:_dialogFooter.default,dialogHeader:_dialogHeader.default,iconButton:_iconButton.default,input:_input.default,menu:_menu.default,navbar:_navbar.default,popover:_popover.default,progress:_progress.default,radio:_radio.default,select:_select.default,switch:_switch.default,tab:_tab.default,tabs:_tabs.default,tabsBody:_tabsBody.default,tabsHeader:_tabsHeader.default,tabPanel:_tabPanel.default,textarea:_textarea.default,tooltip:_tooltip.default,typography:_typography.default,collapse:_collapse.default,list:_list.default,buttonGroup:_buttonGroup.default,carousel:_carousel.default,drawer:_drawer.default,badge:_badge.default,rating:_rating.default,slider:_slider.default,spinner:_spinner.default,timeline:_timeline.timeline,timelineItem:_timeline.timelineItem,timelineIcon:_timeline.timelineIcon,timelineHeader:_timeline.timelineHeader,timelineBody:_timeline.timelineBody,timelineConnector:_timeline.timelineConnector,step:_stepper.step,stepper:_stepper.stepper,speedDial:_speedDial.speedDial,speedDialContent:_speedDial.speedDialContent,speedDialAction:_speedDial.speedDialAction};var _default=theme;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/types/components/accordion.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/types/components/accordion.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{propTypesOpen:function(){return propTypesOpen},propTypesIcon:function(){return propTypesIcon},propTypesAnimate:function(){return propTypesAnimate},propTypesDisabled:function(){return propTypesDisabled},propTypesClassName:function(){return propTypesClassName},propTypesValue:function(){return propTypesValue},propTypesChildren:function(){return propTypesChildren}});var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _generic=__webpack_require__(/*! ../generic */ "./node_modules/@material-tailwind/react/types/generic.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var propTypesOpen=_propTypes.default.bool.isRequired;var propTypesIcon=_propTypes.default.node;var propTypesAnimate=_generic.propTypesAnimation;var propTypesDisabled=_propTypes.default.bool;var propTypesClassName=_propTypes.default.string;var propTypesValue=_propTypes.default.instanceOf(Object).isRequired;var propTypesChildren=_propTypes.default.node.isRequired;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/types/components/alert.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/types/components/alert.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{propTypesVariant:function(){return propTypesVariant},propTypesColor:function(){return propTypesColor},propTypesIcon:function(){return propTypesIcon},propTypesOpen:function(){return propTypesOpen},propTypesOnClose:function(){return propTypesOnClose},propTypesAction:function(){return propTypesAction},propTypesAnimate:function(){return propTypesAnimate},propTypesClassName:function(){return propTypesClassName},propTypesChildren:function(){return propTypesChildren}});var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _generic=__webpack_require__(/*! ../generic */ "./node_modules/@material-tailwind/react/types/generic.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var propTypesVariant=["filled","gradient","outlined","ghost"];var propTypesColor=_generic.propTypesColors;var propTypesIcon=_propTypes.default.node;var propTypesOpen=_propTypes.default.bool;var propTypesOnClose=_propTypes.default.func;var propTypesAction=_propTypes.default.node;var propTypesAnimate=_generic.propTypesAnimation;var propTypesClassName=_propTypes.default.string;var propTypesChildren=_propTypes.default.node.isRequired;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/types/components/avatar.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/types/components/avatar.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{propTypesVariant:function(){return propTypesVariant},propTypesSize:function(){return propTypesSize},propTypesClassName:function(){return propTypesClassName},propTypesWithBorder:function(){return propTypesWithBorder},propTypesColor:function(){return propTypesColor}});var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _generic=__webpack_require__(/*! ../generic */ "./node_modules/@material-tailwind/react/types/generic.js");function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _iterableToArray(iter){if(typeof Symbol!=="undefined"&&iter[Symbol.iterator]!=null||iter["@@iterator"]!=null)return Array.from(iter)}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||_unsupportedIterableToArray(arr)||_nonIterableSpread()}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(n);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}var propTypesVariant=["circular","rounded","square"];var propTypesSize=["xs","sm","md","lg","xl","xxl"];var propTypesClassName=_propTypes.default.string;var propTypesWithBorder=_propTypes.default.bool;var propTypesColor=["white"].concat(_toConsumableArray(_generic.propTypesColors));

/***/ }),

/***/ "./node_modules/@material-tailwind/react/types/components/badge.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/types/components/badge.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{propTypesColor:function(){return propTypesColor},propTypesInvisible:function(){return propTypesInvisible},propTypesWithBorder:function(){return propTypesWithBorder},propTypesOverlap:function(){return propTypesOverlap},propTypesPlacement:function(){return propTypesPlacement},propTypesClassName:function(){return propTypesClassName},propTypesContent:function(){return propTypesContent},propTypesChildren:function(){return propTypesChildren},propTypesContainerProps:function(){return propTypesContainerProps},propTypesContainerRef:function(){return propTypesContainerRef}});var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _generic=__webpack_require__(/*! ../generic */ "./node_modules/@material-tailwind/react/types/generic.js");function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _iterableToArray(iter){if(typeof Symbol!=="undefined"&&iter[Symbol.iterator]!=null||iter["@@iterator"]!=null)return Array.from(iter)}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||_unsupportedIterableToArray(arr)||_nonIterableSpread()}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(n);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}var propTypesColor=["white"].concat(_toConsumableArray(_generic.propTypesColors));var propTypesInvisible=_propTypes.default.bool;var propTypesWithBorder=_propTypes.default.bool;var propTypesOverlap=["circular","square"];var propTypesPlacement=["top-start","top-end","bottom-start","bottom-end"];var propTypesClassName=_propTypes.default.string;var propTypesContent=_propTypes.default.node;var propTypesChildren=_propTypes.default.node.isRequired;var propTypesContainerProps=_propTypes.default.instanceOf(Object);var propTypesContainerRef=_propTypes.default.oneOfType([_propTypes.default.func,_propTypes.default.shape({current:_propTypes.default.any})]);

/***/ }),

/***/ "./node_modules/@material-tailwind/react/types/components/breadcrumbs.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/types/components/breadcrumbs.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{propTypesSeparator:function(){return propTypesSeparator},propTypesFullWidth:function(){return propTypesFullWidth},propTypesClassName:function(){return propTypesClassName},propTypesChildren:function(){return propTypesChildren}});var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var propTypesSeparator=_propTypes.default.node;var propTypesFullWidth=_propTypes.default.bool;var propTypesClassName=_propTypes.default.string;var propTypesChildren=_propTypes.default.node.isRequired;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/types/components/button.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/types/components/button.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{propTypesVariant:function(){return propTypesVariant},propTypesSize:function(){return propTypesSize},propTypesColor:function(){return propTypesColor},propTypesFullWidth:function(){return propTypesFullWidth},propTypesRipple:function(){return propTypesRipple},propTypesClassName:function(){return propTypesClassName},propTypesChildren:function(){return propTypesChildren},propTypesLoading:function(){return propTypesLoading}});var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _generic=__webpack_require__(/*! ../generic */ "./node_modules/@material-tailwind/react/types/generic.js");function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _iterableToArray(iter){if(typeof Symbol!=="undefined"&&iter[Symbol.iterator]!=null||iter["@@iterator"]!=null)return Array.from(iter)}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||_unsupportedIterableToArray(arr)||_nonIterableSpread()}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(n);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}var propTypesVariant=["filled","outlined","gradient","text"];var propTypesSize=["sm","md","lg"];var propTypesColor=["white","black"].concat(_toConsumableArray(_generic.propTypesColors));var propTypesFullWidth=_propTypes.default.bool;var propTypesRipple=_propTypes.default.bool;var propTypesClassName=_propTypes.default.string;var propTypesChildren=_propTypes.default.node.isRequired;var propTypesLoading=_propTypes.default.bool;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/types/components/card.js":
/*!************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/types/components/card.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{propTypesVariant:function(){return propTypesVariant},propTypesColor:function(){return propTypesColor},propTypesShadow:function(){return propTypesShadow},propTypesFloated:function(){return propTypesFloated},propTypesDivider:function(){return propTypesDivider},propTypesClassName:function(){return propTypesClassName},propTypesChildren:function(){return propTypesChildren}});var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _generic=__webpack_require__(/*! ../generic */ "./node_modules/@material-tailwind/react/types/generic.js");function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _iterableToArray(iter){if(typeof Symbol!=="undefined"&&iter[Symbol.iterator]!=null||iter["@@iterator"]!=null)return Array.from(iter)}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||_unsupportedIterableToArray(arr)||_nonIterableSpread()}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(n);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}var propTypesVariant=["filled","gradient"];var propTypesColor=["transparent","white"].concat(_toConsumableArray(_generic.propTypesColors));var propTypesShadow=_propTypes.default.bool;var propTypesFloated=_propTypes.default.bool;var propTypesDivider=_propTypes.default.bool;var propTypesClassName=_propTypes.default.string;var propTypesChildren=_propTypes.default.node.isRequired;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/types/components/carousel.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/types/components/carousel.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{propTypesClassName:function(){return propTypesClassName},propTypesPrevArrow:function(){return propTypesPrevArrow},propTypesNextArrow:function(){return propTypesNextArrow},propTypesNavigation:function(){return propTypesNavigation},propTypesAutoplay:function(){return propTypesAutoplay},propTypesAutoplayDelay:function(){return propTypesAutoplayDelay},propTypesTransition:function(){return propTypesTransition},propTypesLoop:function(){return propTypesLoop},propTypesChildren:function(){return propTypesChildren},propTypesSlideRef:function(){return propTypesSlideRef}});var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var propTypesClassName=_propTypes.default.string;var propTypesPrevArrow=_propTypes.default.func;var propTypesNextArrow=_propTypes.default.func;var propTypesNavigation=_propTypes.default.func;var propTypesAutoplay=_propTypes.default.bool;var propTypesAutoplayDelay=_propTypes.default.number;var propTypesTransition=_propTypes.default.object;var propTypesLoop=_propTypes.default.bool;var propTypesChildren=_propTypes.default.node.isRequired;var propTypesSlideRef=_propTypes.default.oneOfType([_propTypes.default.func,_propTypes.default.shape({current:_propTypes.default.any})]);

/***/ }),

/***/ "./node_modules/@material-tailwind/react/types/components/checkbox.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/types/components/checkbox.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{propTypesColor:function(){return propTypesColor},propTypesLabel:function(){return propTypesLabel},propTypesIcon:function(){return propTypesIcon},propTypesRipple:function(){return propTypesRipple},propTypesClassName:function(){return propTypesClassName},propTypesDisabled:function(){return propTypesDisabled},propTypesObject:function(){return propTypesObject}});var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _generic=__webpack_require__(/*! ../generic */ "./node_modules/@material-tailwind/react/types/generic.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var propTypesColor=_generic.propTypesColors;var propTypesLabel=_propTypes.default.node;var propTypesIcon=_propTypes.default.node;var propTypesRipple=_propTypes.default.bool;var propTypesClassName=_propTypes.default.string;var propTypesDisabled=_propTypes.default.bool;var propTypesObject=_propTypes.default.instanceOf(Object);

/***/ }),

/***/ "./node_modules/@material-tailwind/react/types/components/chip.js":
/*!************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/types/components/chip.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{propTypesVariant:function(){return propTypesVariant},propTypesSize:function(){return propTypesSize},propTypesColor:function(){return propTypesColor},propTypesIcon:function(){return propTypesIcon},propTypesOpen:function(){return propTypesOpen},propTypesOnClose:function(){return propTypesOnClose},propTypesAction:function(){return propTypesAction},propTypesAnimate:function(){return propTypesAnimate},propTypesClassName:function(){return propTypesClassName},propTypesValue:function(){return propTypesValue}});var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _generic=__webpack_require__(/*! ../generic */ "./node_modules/@material-tailwind/react/types/generic.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var propTypesVariant=["filled","gradient","outlined","ghost"];var propTypesSize=["sm","md","lg"];var propTypesColor=_generic.propTypesColors;var propTypesIcon=_propTypes.default.node;var propTypesOpen=_propTypes.default.bool;var propTypesOnClose=_propTypes.default.func;var propTypesAction=_propTypes.default.node;var propTypesAnimate=_generic.propTypesAnimation;var propTypesClassName=_propTypes.default.string;var propTypesValue=_propTypes.default.node.isRequired;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/types/components/collapse.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/types/components/collapse.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{propTypesClassName:function(){return propTypesClassName},propTypesChildren:function(){return propTypesChildren},propTypesOpen:function(){return propTypesOpen},propTypesAnimate:function(){return propTypesAnimate}});var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _generic=__webpack_require__(/*! ../generic */ "./node_modules/@material-tailwind/react/types/generic.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var propTypesClassName=_propTypes.default.string;var propTypesChildren=_propTypes.default.node.isRequired;var propTypesOpen=_propTypes.default.bool.isRequired;var propTypesAnimate=_generic.propTypesAnimation;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/types/components/dialog.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/types/components/dialog.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{propTypesOpen:function(){return propTypesOpen},propTypesHandler:function(){return propTypesHandler},propTypesSize:function(){return propTypesSize},propTypesDismiss:function(){return propTypesDismiss},propTypesAnimate:function(){return propTypesAnimate},propTypesDivider:function(){return propTypesDivider},propTypesClassName:function(){return propTypesClassName},propTypesChildren:function(){return propTypesChildren}});var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _generic=__webpack_require__(/*! ../generic */ "./node_modules/@material-tailwind/react/types/generic.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var propTypesOpen=_propTypes.default.bool.isRequired;var propTypesHandler=_propTypes.default.func;var propTypesSize=["xs","sm","md","lg","xl","xxl"];var propTypesDismiss=_generic.propTypesDismissType;var propTypesAnimate=_generic.propTypesAnimation;var propTypesDivider=_propTypes.default.bool;var propTypesClassName=_propTypes.default.string;var propTypesChildren=_propTypes.default.node.isRequired;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/types/components/drawer.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/types/components/drawer.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{propTypesOpen:function(){return propTypesOpen},propTypesSize:function(){return propTypesSize},propTypesOverlay:function(){return propTypesOverlay},propTypesChildren:function(){return propTypesChildren},propTypesPlacement:function(){return propTypesPlacement},propTypesOverlayProps:function(){return propTypesOverlayProps},propTypesClassName:function(){return propTypesClassName},propTypesOnClose:function(){return propTypesOnClose},propTypesDismiss:function(){return propTypesDismiss},propTypesTransition:function(){return propTypesTransition},propTypesOverlayRef:function(){return propTypesOverlayRef}});var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _generic=__webpack_require__(/*! ../generic */ "./node_modules/@material-tailwind/react/types/generic.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var propTypesOpen=_propTypes.default.bool.isRequired;var propTypesSize=_propTypes.default.number;var propTypesOverlay=_propTypes.default.bool;var propTypesChildren=_propTypes.default.node.isRequired;var propTypesPlacement=["top","right","bottom","left"];var propTypesOverlayProps=_propTypes.default.object;var propTypesClassName=_propTypes.default.string;var propTypesOnClose=_propTypes.default.func;var propTypesDismiss=_generic.propTypesDismissType;var propTypesTransition=_propTypes.default.object;var propTypesOverlayRef=_propTypes.default.oneOfType([_propTypes.default.func,_propTypes.default.shape({current:_propTypes.default.any})]);

/***/ }),

/***/ "./node_modules/@material-tailwind/react/types/components/input.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/types/components/input.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{propTypesVariant:function(){return propTypesVariant},propTypesSize:function(){return propTypesSize},propTypesColor:function(){return propTypesColor},propTypesLabel:function(){return propTypesLabel},propTypesError:function(){return propTypesError},propTypesSuccess:function(){return propTypesSuccess},propTypesIcon:function(){return propTypesIcon},propTypesResize:function(){return propTypesResize},propTypesLabelProps:function(){return propTypesLabelProps},propTypesContainerProps:function(){return propTypesContainerProps},propTypesShrink:function(){return propTypesShrink},propTypesClassName:function(){return propTypesClassName}});var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _generic=__webpack_require__(/*! ../generic */ "./node_modules/@material-tailwind/react/types/generic.js");function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _iterableToArray(iter){if(typeof Symbol!=="undefined"&&iter[Symbol.iterator]!=null||iter["@@iterator"]!=null)return Array.from(iter)}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||_unsupportedIterableToArray(arr)||_nonIterableSpread()}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(n);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}var propTypesVariant=["standard","outlined","static"];var propTypesSize=["md","lg"];var propTypesColor=["black","white"].concat(_toConsumableArray(_generic.propTypesColors));var propTypesLabel=_propTypes.default.string;var propTypesError=_propTypes.default.bool;var propTypesSuccess=_propTypes.default.bool;var propTypesIcon=_propTypes.default.node;var propTypesResize=_propTypes.default.bool;var propTypesLabelProps=_propTypes.default.instanceOf(Object);var propTypesContainerProps=_propTypes.default.instanceOf(Object);var propTypesShrink=_propTypes.default.bool;var propTypesClassName=_propTypes.default.string;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/types/components/list.js":
/*!************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/types/components/list.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{propTypesClassName:function(){return propTypesClassName},propTypesDisabled:function(){return propTypesDisabled},propTypesSelected:function(){return propTypesSelected},propTypesRipple:function(){return propTypesRipple},propTypesChildren:function(){return propTypesChildren}});var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var propTypesClassName=_propTypes.default.string;var propTypesDisabled=_propTypes.default.bool;var propTypesSelected=_propTypes.default.bool;var propTypesRipple=_propTypes.default.bool;var propTypesChildren=_propTypes.default.node.isRequired;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/types/components/menu.js":
/*!************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/types/components/menu.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{propTypesOpen:function(){return propTypesOpen},propTypesHandler:function(){return propTypesHandler},propTypesPlacement:function(){return propTypesPlacement},propTypesOffset:function(){return propTypesOffset},propTypesDismiss:function(){return propTypesDismiss},propTypesAnimate:function(){return propTypesAnimate},propTypesLockScroll:function(){return propTypesLockScroll},propTypesDisabled:function(){return propTypesDisabled},propTypesClassName:function(){return propTypesClassName},propTypesChildren:function(){return propTypesChildren},propTypesContextValue:function(){return propTypesContextValue}});var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _generic=__webpack_require__(/*! ../generic */ "./node_modules/@material-tailwind/react/types/generic.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var propTypesOpen=_propTypes.default.bool;var propTypesHandler=_propTypes.default.func;var propTypesPlacement=_generic.propTypesPlacements;var propTypesOffset=_generic.propTypesOffsetType;var propTypesDismiss=_propTypes.default.shape({itemPress:_propTypes.default.bool,enabled:_propTypes.default.bool,escapeKey:_propTypes.default.bool,referencePress:_propTypes.default.bool,referencePressEvent:_propTypes.default.oneOf(["pointerdown","mousedown","click"]),outsidePress:_propTypes.default.oneOfType([_propTypes.default.bool,_propTypes.default.func]),outsidePressEvent:_propTypes.default.oneOf(["pointerdown","mousedown","click"]),ancestorScroll:_propTypes.default.bool,bubbles:_propTypes.default.oneOfType([_propTypes.default.bool,_propTypes.default.shape({escapeKey:_propTypes.default.bool,outsidePress:_propTypes.default.bool})])});var propTypesAnimate=_generic.propTypesAnimation;var propTypesLockScroll=_propTypes.default.bool;var propTypesDisabled=_propTypes.default.bool;var propTypesClassName=_propTypes.default.string;var propTypesChildren=_propTypes.default.node.isRequired;var propTypesContextValue=_propTypes.default.shape({open:_propTypes.default.bool.isRequired,handler:_propTypes.default.func.isRequired,setInternalOpen:_propTypes.default.func.isRequired,strategy:_propTypes.default.oneOf(["fixed","absolute"]).isRequired,x:_propTypes.default.number.isRequired,y:_propTypes.default.number.isRequired,reference:_propTypes.default.func.isRequired,floating:_propTypes.default.func.isRequired,listItemsRef:_propTypes.default.instanceOf(Object).isRequired,getReferenceProps:_propTypes.default.func.isRequired,getFloatingProps:_propTypes.default.func.isRequired,getItemProps:_propTypes.default.func.isRequired,appliedAnimation:propTypesAnimate.isRequired,lockScroll:_propTypes.default.bool.isRequired,context:_propTypes.default.instanceOf(Object).isRequired,tree:_propTypes.default.any.isRequired,allowHover:_propTypes.default.bool.isRequired,activeIndex:_propTypes.default.number.isRequired,setActiveIndex:_propTypes.default.func.isRequired,nested:_propTypes.default.bool.isRequired});

/***/ }),

/***/ "./node_modules/@material-tailwind/react/types/components/navbar.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/types/components/navbar.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{propTypesVariant:function(){return propTypesVariant},propTypesColor:function(){return propTypesColor},propTypesShadow:function(){return propTypesShadow},propTypesBlurred:function(){return propTypesBlurred},propTypesFullWidth:function(){return propTypesFullWidth},propTypesClassName:function(){return propTypesClassName},propTypesChildren:function(){return propTypesChildren},propTypesOpen:function(){return propTypesOpen},propTypesAnimate:function(){return propTypesAnimate}});var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _generic=__webpack_require__(/*! ../generic */ "./node_modules/@material-tailwind/react/types/generic.js");function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _iterableToArray(iter){if(typeof Symbol!=="undefined"&&iter[Symbol.iterator]!=null||iter["@@iterator"]!=null)return Array.from(iter)}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||_unsupportedIterableToArray(arr)||_nonIterableSpread()}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(n);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}var propTypesVariant=["filled","gradient"];var propTypesColor=["transparent","white"].concat(_toConsumableArray(_generic.propTypesColors));var propTypesShadow=_propTypes.default.bool;var propTypesBlurred=_propTypes.default.bool;var propTypesFullWidth=_propTypes.default.bool;var propTypesClassName=_propTypes.default.string;var propTypesChildren=_propTypes.default.node.isRequired;var propTypesOpen=_propTypes.default.bool.isRequired;var propTypesAnimate=_generic.propTypesAnimation;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/types/components/popover.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/types/components/popover.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{propTypesOpen:function(){return propTypesOpen},propTypesHandler:function(){return propTypesHandler},propTypesPlacement:function(){return propTypesPlacement},propTypesOffset:function(){return propTypesOffset},propTypesDismiss:function(){return propTypesDismiss},propTypesAnimate:function(){return propTypesAnimate},propTypesContent:function(){return propTypesContent},propTypesInteractive:function(){return propTypesInteractive},propTypesClassName:function(){return propTypesClassName},propTypesChildren:function(){return propTypesChildren},propTypesContextValue:function(){return propTypesContextValue}});var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _generic=__webpack_require__(/*! ../generic */ "./node_modules/@material-tailwind/react/types/generic.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var propTypesOpen=_propTypes.default.bool;var propTypesHandler=_propTypes.default.func;var propTypesPlacement=_generic.propTypesPlacements;var propTypesOffset=_generic.propTypesOffsetType;var propTypesDismiss=_generic.propTypesDismissType;var propTypesAnimate=_generic.propTypesAnimation;var propTypesContent=_propTypes.default.node;var propTypesInteractive=_propTypes.default.bool;var propTypesClassName=_propTypes.default.string;var propTypesChildren=_propTypes.default.node.isRequired;var propTypesContextValue=_propTypes.default.shape({open:_propTypes.default.bool.isRequired,strategy:_propTypes.default.oneOf(["fixed","absolute"]).isRequired,x:_propTypes.default.number,y:_propTypes.default.number,context:_propTypes.default.instanceOf(Object).isRequired,reference:_propTypes.default.func.isRequired,floating:_propTypes.default.func.isRequired,getReferenceProps:_propTypes.default.func.isRequired,getFloatingProps:_propTypes.default.func.isRequired,appliedAnimation:propTypesAnimate.isRequired,labelId:_propTypes.default.string.isRequired,descriptionId:_propTypes.default.string.isRequired}).isRequired;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/types/components/progress.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/types/components/progress.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{propTypesVariant:function(){return propTypesVariant},propTypesColor:function(){return propTypesColor},propTypesSize:function(){return propTypesSize},propTypesValue:function(){return propTypesValue},propTypesLabel:function(){return propTypesLabel},propTypesBarProps:function(){return propTypesBarProps},propTypesClassName:function(){return propTypesClassName}});var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _generic=__webpack_require__(/*! ../generic */ "./node_modules/@material-tailwind/react/types/generic.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var propTypesVariant=["filled","gradient"];var propTypesColor=_generic.propTypesColors;var propTypesSize=["sm","md","lg"];var propTypesValue=_propTypes.default.number;var propTypesLabel=_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.bool]);var propTypesBarProps=_propTypes.default.instanceOf(Object);var propTypesClassName=_propTypes.default.string;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/types/components/rating.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/types/components/rating.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{propTypesCount:function(){return propTypesCount},propTypesValue:function(){return propTypesValue},propTypesRatedIcon:function(){return propTypesRatedIcon},propTypesUnratedIcon:function(){return propTypesUnratedIcon},propTypesColor:function(){return propTypesColor},propTypesOnChange:function(){return propTypesOnChange},propTypesClassName:function(){return propTypesClassName},propTypesReadonly:function(){return propTypesReadonly}});var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _generic=__webpack_require__(/*! ../generic */ "./node_modules/@material-tailwind/react/types/generic.js");function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _iterableToArray(iter){if(typeof Symbol!=="undefined"&&iter[Symbol.iterator]!=null||iter["@@iterator"]!=null)return Array.from(iter)}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||_unsupportedIterableToArray(arr)||_nonIterableSpread()}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(n);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}var propTypesCount=_propTypes.default.number;var propTypesValue=_propTypes.default.number;var propTypesRatedIcon=_propTypes.default.oneOfType([_propTypes.default.node,_propTypes.default.instanceOf(Object)]);var propTypesUnratedIcon=_propTypes.default.oneOfType([_propTypes.default.node,_propTypes.default.instanceOf(Object)]);var propTypesColor=["white"].concat(_toConsumableArray(_generic.propTypesColors));var propTypesOnChange=_propTypes.default.func;var propTypesClassName=_propTypes.default.string;var propTypesReadonly=_propTypes.default.bool;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/types/components/select.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/types/components/select.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{propTypesVariant:function(){return propTypesVariant},propTypesSize:function(){return propTypesSize},propTypesColor:function(){return propTypesColor},propTypesLabel:function(){return propTypesLabel},propTypesError:function(){return propTypesError},propTypesSuccess:function(){return propTypesSuccess},propTypesArrow:function(){return propTypesArrow},propTypesValue:function(){return propTypesValue},propTypesOnChange:function(){return propTypesOnChange},propTypesSelected:function(){return propTypesSelected},propTypesOffset:function(){return propTypesOffset},propTypesDismiss:function(){return propTypesDismiss},propTypesAnimate:function(){return propTypesAnimate},propTypesAutoHeight:function(){return propTypesAutoHeight},propTypesLockScroll:function(){return propTypesLockScroll},propTypesLabelProps:function(){return propTypesLabelProps},propTypesMenuProps:function(){return propTypesMenuProps},propTypesIndex:function(){return propTypesIndex},propTypesDisabled:function(){return propTypesDisabled},propTypesClassName:function(){return propTypesClassName},propTypesName:function(){return propTypesName},propTypesChildren:function(){return propTypesChildren},propTypesContainerProps:function(){return propTypesContainerProps},propTypesContextValue:function(){return propTypesContextValue}});var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _generic=__webpack_require__(/*! ../generic */ "./node_modules/@material-tailwind/react/types/generic.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var propTypesVariant=["standard","outlined","static"];var propTypesSize=["md","lg"];var propTypesColor=_generic.propTypesColors;var propTypesLabel=_propTypes.default.string;var propTypesError=_propTypes.default.bool;var propTypesSuccess=_propTypes.default.bool;var propTypesArrow=_propTypes.default.node;var propTypesValue=_propTypes.default.string;var propTypesOnChange=_propTypes.default.func;var propTypesSelected=_propTypes.default.func;var propTypesOffset=_generic.propTypesOffsetType;var propTypesDismiss=_generic.propTypesDismissType;var propTypesAnimate=_generic.propTypesAnimation;var propTypesAutoHeight=_propTypes.default.bool;var propTypesLockScroll=_propTypes.default.bool;var propTypesLabelProps=_propTypes.default.instanceOf(Object);var propTypesMenuProps=_propTypes.default.instanceOf(Object);var propTypesIndex=_propTypes.default.number;var propTypesDisabled=_propTypes.default.bool;var propTypesClassName=_propTypes.default.string;var propTypesName=_propTypes.default.string;var propTypesChildren=_propTypes.default.node.isRequired;var propTypesContainerProps=_propTypes.default.instanceOf(Object);var propTypesContextValue=_propTypes.default.shape({selectedIndex:_propTypes.default.number.isRequired,setSelectedIndex:_propTypes.default.func.isRequired,activeIndex:_propTypes.default.oneOfType([_propTypes.default.number,_propTypes.default.instanceOf(null)]),setActiveIndex:_propTypes.default.func.isRequired,listRef:_propTypes.default.instanceOf(Object).isRequired,setOpen:_propTypes.default.func.isRequired,onChange:_propTypes.default.func.isRequired,getItemProps:_propTypes.default.func.isRequired,dataRef:_propTypes.default.instanceOf(Object).isRequired}).isRequired;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/types/components/slider.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/types/components/slider.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{propTypesColor:function(){return propTypesColor},propTypesSize:function(){return propTypesSize},propTypesClassName:function(){return propTypesClassName},propTypesTrackClassName:function(){return propTypesTrackClassName},propTypesThumbClassName:function(){return propTypesThumbClassName},propTypesBarClassName:function(){return propTypesBarClassName},propTypesDefaultValue:function(){return propTypesDefaultValue},propTypesValue:function(){return propTypesValue},propTypesOnChange:function(){return propTypesOnChange},propTypesMin:function(){return propTypesMin},propTypesMax:function(){return propTypesMax},propTypesStep:function(){return propTypesStep},propTypesInputRef:function(){return propTypesInputRef},propTypesInputProps:function(){return propTypesInputProps}});var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _generic=__webpack_require__(/*! ../generic */ "./node_modules/@material-tailwind/react/types/generic.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var propTypesColor=_generic.propTypesColors;var propTypesSize=["sm","md","lg"];var propTypesClassName=_propTypes.default.string;var propTypesTrackClassName=_propTypes.default.string;var propTypesThumbClassName=_propTypes.default.string;var propTypesBarClassName=_propTypes.default.string;var propTypesDefaultValue=_propTypes.default.oneOfType([_propTypes.default.number,_propTypes.default.string]);var propTypesValue=_propTypes.default.oneOfType([_propTypes.default.number,_propTypes.default.string]);var propTypesOnChange=_propTypes.default.func;var propTypesMin=_propTypes.default.oneOfType([_propTypes.default.number,_propTypes.default.string]);var propTypesMax=_propTypes.default.oneOfType([_propTypes.default.number,_propTypes.default.string]);var propTypesStep=_propTypes.default.oneOfType([_propTypes.default.number,_propTypes.default.string]);var propTypesInputRef=_propTypes.default.oneOfType([_propTypes.default.func,_propTypes.default.shape({current:_propTypes.default.any})]);var propTypesInputProps=_propTypes.default.instanceOf(Object);

/***/ }),

/***/ "./node_modules/@material-tailwind/react/types/components/speedDial.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/types/components/speedDial.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{propTypesOpen:function(){return propTypesOpen},propTypesHanlder:function(){return propTypesHanlder},propTypesPlacement:function(){return propTypesPlacement},propTypesOffset:function(){return propTypesOffset},propTypesDismiss:function(){return propTypesDismiss},propTypesChildren:function(){return propTypesChildren},propTypesAnimate:function(){return propTypesAnimate},propTypesClassName:function(){return propTypesClassName}});var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _generic=__webpack_require__(/*! ../generic */ "./node_modules/@material-tailwind/react/types/generic.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var propTypesOpen=_propTypes.default.bool;var propTypesHanlder=_propTypes.default.func;var propTypesPlacement=_propTypes.default.oneOf(_generic.propTypesPlacements);var propTypesOffset=_generic.propTypesOffsetType;var propTypesDismiss=_generic.propTypesDismissType;var propTypesChildren=_propTypes.default.node.isRequired;var propTypesAnimate=_generic.propTypesAnimation;var propTypesClassName=_propTypes.default.string;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/types/components/spinner.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/types/components/spinner.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{propTypesColor:function(){return propTypesColor},propTypesClassName:function(){return propTypesClassName}});var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _generic=__webpack_require__(/*! ../generic */ "./node_modules/@material-tailwind/react/types/generic.js");function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _iterableToArray(iter){if(typeof Symbol!=="undefined"&&iter[Symbol.iterator]!=null||iter["@@iterator"]!=null)return Array.from(iter)}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||_unsupportedIterableToArray(arr)||_nonIterableSpread()}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(n);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}var propTypesColor=["white"].concat(_toConsumableArray(_generic.propTypesColors));var propTypesClassName=_propTypes.default.string;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/types/components/stepper.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/types/components/stepper.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{propTypesActiveStep:function(){return propTypesActiveStep},propTypesIsLastStep:function(){return propTypesIsLastStep},propTypesIsFirstStep:function(){return propTypesIsFirstStep},propTypesChildren:function(){return propTypesChildren},propTypesClassName:function(){return propTypesClassName}});var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var propTypesActiveStep=_propTypes.default.number;var propTypesIsLastStep=_propTypes.default.func;var propTypesIsFirstStep=_propTypes.default.func;var propTypesChildren=_propTypes.default.node;var propTypesClassName=_propTypes.default.string;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/types/components/tabs.js":
/*!************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/types/components/tabs.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{propTypesId:function(){return propTypesId},propTypesValue:function(){return propTypesValue},propTypesAnimate:function(){return propTypesAnimate},propTypesDisabled:function(){return propTypesDisabled},propTypesClassName:function(){return propTypesClassName},propTypesOrientation:function(){return propTypesOrientation},propTypesIndicator:function(){return propTypesIndicator},propTypesChildren:function(){return propTypesChildren}});var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _generic=__webpack_require__(/*! ../generic */ "./node_modules/@material-tailwind/react/types/generic.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var propTypesId=_propTypes.default.string;var propTypesValue=_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.number]).isRequired;var propTypesAnimate=_generic.propTypesAnimation;var propTypesDisabled=_propTypes.default.bool;var propTypesClassName=_propTypes.default.string;var propTypesOrientation=_propTypes.default.oneOf(["horizontal","vertical"]);var propTypesIndicator=_propTypes.default.instanceOf(Object);var propTypesChildren=_propTypes.default.node.isRequired;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/types/components/timeline.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/types/components/timeline.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{propTypeClassName:function(){return propTypeClassName},propTypeChildren:function(){return propTypeChildren},propTypeColor:function(){return propTypeColor},propTypeVariant:function(){return propTypeVariant}});var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _generic=__webpack_require__(/*! ../generic */ "./node_modules/@material-tailwind/react/types/generic.js");function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _iterableToArray(iter){if(typeof Symbol!=="undefined"&&iter[Symbol.iterator]!=null||iter["@@iterator"]!=null)return Array.from(iter)}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||_unsupportedIterableToArray(arr)||_nonIterableSpread()}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(n);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}var propTypeClassName=_propTypes.default.string;var propTypeChildren=_propTypes.default.node;var propTypeColor=["white"].concat(_toConsumableArray(_generic.propTypesColors));var propTypeVariant=["filled","outlined","ghost","gradient"];

/***/ }),

/***/ "./node_modules/@material-tailwind/react/types/components/typography.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/types/components/typography.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{propTypesVariant:function(){return propTypesVariant},propTypesColor:function(){return propTypesColor},propTypesAs:function(){return propTypesAs},propTypesTextGradient:function(){return propTypesTextGradient},propTypesClassName:function(){return propTypesClassName},propTypesChildren:function(){return propTypesChildren}});var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));var _generic=__webpack_require__(/*! ../generic */ "./node_modules/@material-tailwind/react/types/generic.js");function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _iterableToArray(iter){if(typeof Symbol!=="undefined"&&iter[Symbol.iterator]!=null||iter["@@iterator"]!=null)return Array.from(iter)}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||_unsupportedIterableToArray(arr)||_nonIterableSpread()}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(n);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}var propTypesVariant=["h1","h2","h3","h4","h5","h6","lead","paragraph","small"];var propTypesColor=["inherit","current","black","white"].concat(_toConsumableArray(_generic.propTypesColors));var propTypesAs=_propTypes.default.elementType;var propTypesTextGradient=_propTypes.default.bool;var propTypesClassName=_propTypes.default.string;var propTypesChildren=_propTypes.default.node.isRequired;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/types/generic.js":
/*!****************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/types/generic.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{propTypesColors:function(){return propTypesColors},propTypesAnimation:function(){return propTypesAnimation},propTypesDismissType:function(){return propTypesDismissType},propTypesOffsetType:function(){return propTypesOffsetType},propTypesPlacements:function(){return propTypesPlacements}});var _propTypes=_interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var propTypesColors=["blue-gray","gray","brown","deep-orange","orange","amber","yellow","lime","light-green","green","teal","cyan","light-blue","blue","indigo","deep-purple","purple","pink","red"];var propTypesAnimation=_propTypes.default.shape({mount:_propTypes.default.instanceOf(Object),unmount:_propTypes.default.instanceOf(Object)});var propTypesDismissType=_propTypes.default.shape({enabled:_propTypes.default.bool,escapeKey:_propTypes.default.bool,referencePress:_propTypes.default.bool,referencePressEvent:_propTypes.default.oneOf(["pointerdown","mousedown","click"]),outsidePress:_propTypes.default.oneOfType([_propTypes.default.bool,_propTypes.default.func]),outsidePressEvent:_propTypes.default.oneOf(["pointerdown","mousedown","click"]),ancestorScroll:_propTypes.default.bool,bubbles:_propTypes.default.oneOfType([_propTypes.default.bool,_propTypes.default.shape({escapeKey:_propTypes.default.bool,outsidePress:_propTypes.default.bool})])});var propTypesOffsetType=_propTypes.default.oneOfType([_propTypes.default.number,_propTypes.default.shape({mainAxis:_propTypes.default.number,crossAxis:_propTypes.default.number,alignmentAxis:_propTypes.default.number})]);var propTypesPlacements=["top-start","top","top-end","right-start","right","right-end","bottom-start","bottom","bottom-end","left-start","left","left-end"];

/***/ }),

/***/ "./node_modules/@material-tailwind/react/utils/combineMerge.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/utils/combineMerge.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return combineMerge}}));var _deepmerge=_interopRequireDefault(__webpack_require__(/*! deepmerge */ "./node_modules/deepmerge/dist/cjs.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function combineMerge(target,source,options){var destination=target.slice();source.forEach(function(item,index){if(typeof destination[index]==="undefined"){destination[index]=options.cloneUnlessOtherwiseSpecified(item,options)}else if(options.isMergeableObject(item)){destination[index]=(0,_deepmerge.default)(target[index],item,options)}else if(target.indexOf(item)===-1){destination.push(item)}});return destination}

/***/ }),

/***/ "./node_modules/@material-tailwind/react/utils/findMatch.js":
/*!******************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/utils/findMatch.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return _default}}));function findMatch(data,find,defaultValue){var founded=data.findIndex(function(el){return el===find});return founded>=0?find:defaultValue}var _default=findMatch;

/***/ }),

/***/ "./node_modules/@material-tailwind/react/utils/objectsToArray.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/utils/objectsToArray.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return objectsToArray}}));function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}function _iterableToArray(iter){if(typeof Symbol!=="undefined"&&iter[Symbol.iterator]!=null||iter["@@iterator"]!=null)return Array.from(iter)}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||_unsupportedIterableToArray(arr)||_nonIterableSpread()}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(n);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}function objectsToArray(object){var result=[];Object.values(object).forEach(function(value){if(typeof value==="string"){result=_toConsumableArray(result).concat([value])}else if(typeof value==="object"&&!Array.isArray(value)&&value!==null){result=_toConsumableArray(result).concat(_toConsumableArray(objectsToArray(value)))}return undefined});return result}

/***/ }),

/***/ "./node_modules/@material-tailwind/react/utils/objectsToString.js":
/*!************************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/utils/objectsToString.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));Object.defineProperty(exports, "default", ({enumerable:true,get:function(){return objectsToString}}));var _objectsToArray=_interopRequireDefault(__webpack_require__(/*! ./objectsToArray */ "./node_modules/@material-tailwind/react/utils/objectsToArray.js"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function objectsToString(object){return(0,_objectsToArray.default)(object).join(" ")}

/***/ }),

/***/ "./node_modules/@motionone/animation/dist/Animation.es.js":
/*!****************************************************************!*\
  !*** ./node_modules/@motionone/animation/dist/Animation.es.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Animation: () => (/* binding */ Animation)
/* harmony export */ });
/* harmony import */ var _motionone_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @motionone/utils */ "./node_modules/@motionone/utils/dist/defaults.es.js");
/* harmony import */ var _motionone_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @motionone/utils */ "./node_modules/@motionone/utils/dist/interpolate.es.js");
/* harmony import */ var _motionone_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @motionone/utils */ "./node_modules/@motionone/utils/dist/is-easing-generator.es.js");
/* harmony import */ var _motionone_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @motionone/utils */ "./node_modules/@motionone/utils/dist/is-easing-list.es.js");
/* harmony import */ var _motionone_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @motionone/utils */ "./node_modules/@motionone/utils/dist/noop.es.js");
/* harmony import */ var _utils_easing_es_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/easing.es.js */ "./node_modules/@motionone/animation/dist/utils/easing.es.js");



class Animation {
    constructor(output, keyframes = [0, 1], { easing, duration: initialDuration = _motionone_utils__WEBPACK_IMPORTED_MODULE_0__.defaults.duration, delay = _motionone_utils__WEBPACK_IMPORTED_MODULE_0__.defaults.delay, endDelay = _motionone_utils__WEBPACK_IMPORTED_MODULE_0__.defaults.endDelay, repeat = _motionone_utils__WEBPACK_IMPORTED_MODULE_0__.defaults.repeat, offset, direction = "normal", autoplay = true, } = {}) {
        this.startTime = null;
        this.rate = 1;
        this.t = 0;
        this.cancelTimestamp = null;
        this.easing = _motionone_utils__WEBPACK_IMPORTED_MODULE_4__.noopReturn;
        this.duration = 0;
        this.totalDuration = 0;
        this.repeat = 0;
        this.playState = "idle";
        this.finished = new Promise((resolve, reject) => {
            this.resolve = resolve;
            this.reject = reject;
        });
        easing = easing || _motionone_utils__WEBPACK_IMPORTED_MODULE_0__.defaults.easing;
        if ((0,_motionone_utils__WEBPACK_IMPORTED_MODULE_2__.isEasingGenerator)(easing)) {
            const custom = easing.createAnimation(keyframes);
            easing = custom.easing;
            keyframes = custom.keyframes || keyframes;
            initialDuration = custom.duration || initialDuration;
        }
        this.repeat = repeat;
        this.easing = (0,_motionone_utils__WEBPACK_IMPORTED_MODULE_3__.isEasingList)(easing) ? _motionone_utils__WEBPACK_IMPORTED_MODULE_4__.noopReturn : (0,_utils_easing_es_js__WEBPACK_IMPORTED_MODULE_5__.getEasingFunction)(easing);
        this.updateDuration(initialDuration);
        const interpolate$1 = (0,_motionone_utils__WEBPACK_IMPORTED_MODULE_1__.interpolate)(keyframes, offset, (0,_motionone_utils__WEBPACK_IMPORTED_MODULE_3__.isEasingList)(easing) ? easing.map(_utils_easing_es_js__WEBPACK_IMPORTED_MODULE_5__.getEasingFunction) : _motionone_utils__WEBPACK_IMPORTED_MODULE_4__.noopReturn);
        this.tick = (timestamp) => {
            var _a;
            // TODO: Temporary fix for OptionsResolver typing
            delay = delay;
            let t = 0;
            if (this.pauseTime !== undefined) {
                t = this.pauseTime;
            }
            else {
                t = (timestamp - this.startTime) * this.rate;
            }
            this.t = t;
            // Convert to seconds
            t /= 1000;
            // Rebase on delay
            t = Math.max(t - delay, 0);
            /**
             * If this animation has finished, set the current time
             * to the total duration.
             */
            if (this.playState === "finished" && this.pauseTime === undefined) {
                t = this.totalDuration;
            }
            /**
             * Get the current progress (0-1) of the animation. If t is >
             * than duration we'll get values like 2.5 (midway through the
             * third iteration)
             */
            const progress = t / this.duration;
            // TODO progress += iterationStart
            /**
             * Get the current iteration (0 indexed). For instance the floor of
             * 2.5 is 2.
             */
            let currentIteration = Math.floor(progress);
            /**
             * Get the current progress of the iteration by taking the remainder
             * so 2.5 is 0.5 through iteration 2
             */
            let iterationProgress = progress % 1.0;
            if (!iterationProgress && progress >= 1) {
                iterationProgress = 1;
            }
            /**
             * If iteration progress is 1 we count that as the end
             * of the previous iteration.
             */
            iterationProgress === 1 && currentIteration--;
            /**
             * Reverse progress if we're not running in "normal" direction
             */
            const iterationIsOdd = currentIteration % 2;
            if (direction === "reverse" ||
                (direction === "alternate" && iterationIsOdd) ||
                (direction === "alternate-reverse" && !iterationIsOdd)) {
                iterationProgress = 1 - iterationProgress;
            }
            const p = t >= this.totalDuration ? 1 : Math.min(iterationProgress, 1);
            const latest = interpolate$1(this.easing(p));
            output(latest);
            const isAnimationFinished = this.pauseTime === undefined &&
                (this.playState === "finished" || t >= this.totalDuration + endDelay);
            if (isAnimationFinished) {
                this.playState = "finished";
                (_a = this.resolve) === null || _a === void 0 ? void 0 : _a.call(this, latest);
            }
            else if (this.playState !== "idle") {
                this.frameRequestId = requestAnimationFrame(this.tick);
            }
        };
        if (autoplay)
            this.play();
    }
    play() {
        const now = performance.now();
        this.playState = "running";
        if (this.pauseTime !== undefined) {
            this.startTime = now - this.pauseTime;
        }
        else if (!this.startTime) {
            this.startTime = now;
        }
        this.cancelTimestamp = this.startTime;
        this.pauseTime = undefined;
        this.frameRequestId = requestAnimationFrame(this.tick);
    }
    pause() {
        this.playState = "paused";
        this.pauseTime = this.t;
    }
    finish() {
        this.playState = "finished";
        this.tick(0);
    }
    stop() {
        var _a;
        this.playState = "idle";
        if (this.frameRequestId !== undefined) {
            cancelAnimationFrame(this.frameRequestId);
        }
        (_a = this.reject) === null || _a === void 0 ? void 0 : _a.call(this, false);
    }
    cancel() {
        this.stop();
        this.tick(this.cancelTimestamp);
    }
    reverse() {
        this.rate *= -1;
    }
    commitStyles() { }
    updateDuration(duration) {
        this.duration = duration;
        this.totalDuration = duration * (this.repeat + 1);
    }
    get currentTime() {
        return this.t;
    }
    set currentTime(t) {
        if (this.pauseTime !== undefined || this.rate === 0) {
            this.pauseTime = t;
        }
        else {
            this.startTime = performance.now() - t / this.rate;
        }
    }
    get playbackRate() {
        return this.rate;
    }
    set playbackRate(rate) {
        this.rate = rate;
    }
}




/***/ }),

/***/ "./node_modules/@motionone/animation/dist/utils/easing.es.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@motionone/animation/dist/utils/easing.es.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getEasingFunction: () => (/* binding */ getEasingFunction)
/* harmony export */ });
/* harmony import */ var _motionone_easing__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @motionone/easing */ "./node_modules/@motionone/easing/dist/cubic-bezier.es.js");
/* harmony import */ var _motionone_easing__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @motionone/easing */ "./node_modules/@motionone/easing/dist/steps.es.js");
/* harmony import */ var _motionone_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @motionone/utils */ "./node_modules/@motionone/utils/dist/is-cubic-bezier.es.js");
/* harmony import */ var _motionone_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @motionone/utils */ "./node_modules/@motionone/utils/dist/is-function.es.js");
/* harmony import */ var _motionone_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @motionone/utils */ "./node_modules/@motionone/utils/dist/noop.es.js");



const namedEasings = {
    ease: (0,_motionone_easing__WEBPACK_IMPORTED_MODULE_0__.cubicBezier)(0.25, 0.1, 0.25, 1.0),
    "ease-in": (0,_motionone_easing__WEBPACK_IMPORTED_MODULE_0__.cubicBezier)(0.42, 0.0, 1.0, 1.0),
    "ease-in-out": (0,_motionone_easing__WEBPACK_IMPORTED_MODULE_0__.cubicBezier)(0.42, 0.0, 0.58, 1.0),
    "ease-out": (0,_motionone_easing__WEBPACK_IMPORTED_MODULE_0__.cubicBezier)(0.0, 0.0, 0.58, 1.0),
};
const functionArgsRegex = /\((.*?)\)/;
function getEasingFunction(definition) {
    // If already an easing function, return
    if ((0,_motionone_utils__WEBPACK_IMPORTED_MODULE_3__.isFunction)(definition))
        return definition;
    // If an easing curve definition, return bezier function
    if ((0,_motionone_utils__WEBPACK_IMPORTED_MODULE_2__.isCubicBezier)(definition))
        return (0,_motionone_easing__WEBPACK_IMPORTED_MODULE_0__.cubicBezier)(...definition);
    // If we have a predefined easing function, return
    const namedEasing = namedEasings[definition];
    if (namedEasing)
        return namedEasing;
    // If this is a steps function, attempt to create easing curve
    if (definition.startsWith("steps")) {
        const args = functionArgsRegex.exec(definition);
        if (args) {
            const argsArray = args[1].split(",");
            return (0,_motionone_easing__WEBPACK_IMPORTED_MODULE_1__.steps)(parseFloat(argsArray[0]), argsArray[1].trim());
        }
    }
    return _motionone_utils__WEBPACK_IMPORTED_MODULE_4__.noopReturn;
}




/***/ }),

/***/ "./node_modules/@motionone/dom/dist/animate/animate-style.es.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@motionone/dom/dist/animate/animate-style.es.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   animateStyle: () => (/* binding */ animateStyle)
/* harmony export */ });
/* harmony import */ var _data_es_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./data.es.js */ "./node_modules/@motionone/dom/dist/animate/data.es.js");
/* harmony import */ var _utils_css_var_es_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/css-var.es.js */ "./node_modules/@motionone/dom/dist/animate/utils/css-var.es.js");
/* harmony import */ var _motionone_animation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @motionone/animation */ "./node_modules/@motionone/animation/dist/Animation.es.js");
/* harmony import */ var _motionone_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @motionone/utils */ "./node_modules/@motionone/utils/dist/defaults.es.js");
/* harmony import */ var _motionone_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @motionone/utils */ "./node_modules/@motionone/utils/dist/is-easing-generator.es.js");
/* harmony import */ var _motionone_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @motionone/utils */ "./node_modules/@motionone/utils/dist/is-easing-list.es.js");
/* harmony import */ var _motionone_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @motionone/utils */ "./node_modules/@motionone/utils/dist/is-number.es.js");
/* harmony import */ var _motionone_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @motionone/utils */ "./node_modules/@motionone/utils/dist/noop.es.js");
/* harmony import */ var _motionone_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @motionone/utils */ "./node_modules/@motionone/utils/dist/time.es.js");
/* harmony import */ var _utils_transforms_es_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./utils/transforms.es.js */ "./node_modules/@motionone/dom/dist/animate/utils/transforms.es.js");
/* harmony import */ var _utils_easing_es_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utils/easing.es.js */ "./node_modules/@motionone/dom/dist/animate/utils/easing.es.js");
/* harmony import */ var _utils_feature_detection_es_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utils/feature-detection.es.js */ "./node_modules/@motionone/dom/dist/animate/utils/feature-detection.es.js");
/* harmony import */ var _utils_keyframes_es_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./utils/keyframes.es.js */ "./node_modules/@motionone/dom/dist/animate/utils/keyframes.es.js");
/* harmony import */ var _style_es_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./style.es.js */ "./node_modules/@motionone/dom/dist/animate/style.es.js");
/* harmony import */ var _utils_get_style_name_es_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./utils/get-style-name.es.js */ "./node_modules/@motionone/dom/dist/animate/utils/get-style-name.es.js");
/* harmony import */ var _utils_stop_animation_es_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./utils/stop-animation.es.js */ "./node_modules/@motionone/dom/dist/animate/utils/stop-animation.es.js");












function getDevToolsRecord() {
    return window.__MOTION_DEV_TOOLS_RECORD;
}
function animateStyle(element, key, keyframesDefinition, options = {}) {
    const record = getDevToolsRecord();
    const isRecording = options.record !== false && record;
    let animation;
    let { duration = _motionone_utils__WEBPACK_IMPORTED_MODULE_3__.defaults.duration, delay = _motionone_utils__WEBPACK_IMPORTED_MODULE_3__.defaults.delay, endDelay = _motionone_utils__WEBPACK_IMPORTED_MODULE_3__.defaults.endDelay, repeat = _motionone_utils__WEBPACK_IMPORTED_MODULE_3__.defaults.repeat, easing = _motionone_utils__WEBPACK_IMPORTED_MODULE_3__.defaults.easing, direction, offset, allowWebkitAcceleration = false, } = options;
    const data = (0,_data_es_js__WEBPACK_IMPORTED_MODULE_0__.getAnimationData)(element);
    let canAnimateNatively = _utils_feature_detection_es_js__WEBPACK_IMPORTED_MODULE_11__.supports.waapi();
    const valueIsTransform = (0,_utils_transforms_es_js__WEBPACK_IMPORTED_MODULE_9__.isTransform)(key);
    /**
     * If this is an individual transform, we need to map its
     * key to a CSS variable and update the element's transform style
     */
    valueIsTransform && (0,_utils_transforms_es_js__WEBPACK_IMPORTED_MODULE_9__.addTransformToElement)(element, key);
    const name = (0,_utils_get_style_name_es_js__WEBPACK_IMPORTED_MODULE_14__.getStyleName)(key);
    const motionValue = (0,_data_es_js__WEBPACK_IMPORTED_MODULE_0__.getMotionValue)(data.values, name);
    /**
     * Get definition of value, this will be used to convert numerical
     * keyframes into the default value type.
     */
    const definition = _utils_transforms_es_js__WEBPACK_IMPORTED_MODULE_9__.transformDefinitions.get(name);
    /**
     * Stop the current animation, if any. Because this will trigger
     * commitStyles (DOM writes) and we might later trigger DOM reads,
     * this is fired now and we return a factory function to create
     * the actual animation that can get called in batch,
     */
    (0,_utils_stop_animation_es_js__WEBPACK_IMPORTED_MODULE_15__.stopAnimation)(motionValue.animation, !((0,_motionone_utils__WEBPACK_IMPORTED_MODULE_4__.isEasingGenerator)(easing) && motionValue.generator) &&
        options.record !== false);
    /**
     * Batchable factory function containing all DOM reads.
     */
    return () => {
        const readInitialValue = () => { var _a, _b; return (_b = (_a = _style_es_js__WEBPACK_IMPORTED_MODULE_13__.style.get(element, name)) !== null && _a !== void 0 ? _a : definition === null || definition === void 0 ? void 0 : definition.initialValue) !== null && _b !== void 0 ? _b : 0; };
        /**
         * Replace null values with the previous keyframe value, or read
         * it from the DOM if it's the first keyframe.
         */
        let keyframes = (0,_utils_keyframes_es_js__WEBPACK_IMPORTED_MODULE_12__.hydrateKeyframes)((0,_utils_keyframes_es_js__WEBPACK_IMPORTED_MODULE_12__.keyframesList)(keyframesDefinition), readInitialValue);
        if ((0,_motionone_utils__WEBPACK_IMPORTED_MODULE_4__.isEasingGenerator)(easing)) {
            const custom = easing.createAnimation(keyframes, readInitialValue, valueIsTransform, name, motionValue);
            easing = custom.easing;
            if (custom.keyframes !== undefined)
                keyframes = custom.keyframes;
            if (custom.duration !== undefined)
                duration = custom.duration;
        }
        /**
         * If this is a CSS variable we need to register it with the browser
         * before it can be animated natively. We also set it with setProperty
         * rather than directly onto the element.style object.
         */
        if ((0,_utils_css_var_es_js__WEBPACK_IMPORTED_MODULE_1__.isCssVar)(name)) {
            if (_utils_feature_detection_es_js__WEBPACK_IMPORTED_MODULE_11__.supports.cssRegisterProperty()) {
                (0,_utils_css_var_es_js__WEBPACK_IMPORTED_MODULE_1__.registerCssVariable)(name);
            }
            else {
                canAnimateNatively = false;
            }
        }
        /**
         * If we can animate this value with WAAPI, do so. Currently this only
         * feature detects CSS.registerProperty but could check WAAPI too.
         */
        if (canAnimateNatively) {
            /**
             * Convert numbers to default value types. Currently this only supports
             * transforms but it could also support other value types.
             */
            if (definition) {
                keyframes = keyframes.map((value) => (0,_motionone_utils__WEBPACK_IMPORTED_MODULE_6__.isNumber)(value) ? definition.toDefaultUnit(value) : value);
            }
            /**
             * If this browser doesn't support partial/implicit keyframes we need to
             * explicitly provide one.
             */
            if (keyframes.length === 1 &&
                (!_utils_feature_detection_es_js__WEBPACK_IMPORTED_MODULE_11__.supports.partialKeyframes() || isRecording)) {
                keyframes.unshift(readInitialValue());
            }
            const animationOptions = {
                delay: _motionone_utils__WEBPACK_IMPORTED_MODULE_8__.time.ms(delay),
                duration: _motionone_utils__WEBPACK_IMPORTED_MODULE_8__.time.ms(duration),
                endDelay: _motionone_utils__WEBPACK_IMPORTED_MODULE_8__.time.ms(endDelay),
                easing: !(0,_motionone_utils__WEBPACK_IMPORTED_MODULE_5__.isEasingList)(easing) ? (0,_utils_easing_es_js__WEBPACK_IMPORTED_MODULE_10__.convertEasing)(easing) : undefined,
                direction,
                iterations: repeat + 1,
                fill: "both",
            };
            animation = element.animate({
                [name]: keyframes,
                offset,
                easing: (0,_motionone_utils__WEBPACK_IMPORTED_MODULE_5__.isEasingList)(easing) ? easing.map(_utils_easing_es_js__WEBPACK_IMPORTED_MODULE_10__.convertEasing) : undefined,
            }, animationOptions);
            /**
             * Polyfill finished Promise in browsers that don't support it
             */
            if (!animation.finished) {
                animation.finished = new Promise((resolve, reject) => {
                    animation.onfinish = resolve;
                    animation.oncancel = reject;
                });
            }
            const target = keyframes[keyframes.length - 1];
            animation.finished
                .then(() => {
                // Apply styles to target
                _style_es_js__WEBPACK_IMPORTED_MODULE_13__.style.set(element, name, target);
                // Ensure fill modes don't persist
                animation.cancel();
            })
                .catch(_motionone_utils__WEBPACK_IMPORTED_MODULE_7__.noop);
            /**
             * This forces Webkit to run animations on the main thread by exploiting
             * this condition:
             * https://trac.webkit.org/browser/webkit/trunk/Source/WebCore/platform/graphics/ca/GraphicsLayerCA.cpp?rev=281238#L1099
             *
             * This fixes Webkit's timing bugs, like accelerated animations falling
             * out of sync with main thread animations and massive delays in starting
             * accelerated animations in WKWebView.
             */
            if (!allowWebkitAcceleration)
                animation.playbackRate = 1.000001;
            /**
             * If we can't animate the value natively then we can fallback to the numbers-only
             * polyfill for transforms.
             */
        }
        else if (valueIsTransform) {
            /**
             * If any keyframe is a string (because we measured it from the DOM), we need to convert
             * it into a number before passing to the Animation polyfill.
             */
            keyframes = keyframes.map((value) => typeof value === "string" ? parseFloat(value) : value);
            /**
             * If we only have a single keyframe, we need to create an initial keyframe by reading
             * the current value from the DOM.
             */
            if (keyframes.length === 1) {
                keyframes.unshift(parseFloat(readInitialValue()));
            }
            const render = (latest) => {
                if (definition)
                    latest = definition.toDefaultUnit(latest);
                _style_es_js__WEBPACK_IMPORTED_MODULE_13__.style.set(element, name, latest);
            };
            animation = new _motionone_animation__WEBPACK_IMPORTED_MODULE_2__.Animation(render, keyframes, Object.assign(Object.assign({}, options), { duration,
                easing }));
        }
        else {
            const target = keyframes[keyframes.length - 1];
            _style_es_js__WEBPACK_IMPORTED_MODULE_13__.style.set(element, name, definition && (0,_motionone_utils__WEBPACK_IMPORTED_MODULE_6__.isNumber)(target)
                ? definition.toDefaultUnit(target)
                : target);
        }
        if (isRecording) {
            record(element, key, keyframes, {
                duration,
                delay: delay,
                easing,
                repeat,
                offset,
            }, "motion-one");
        }
        motionValue.setAnimation(animation);
        return animation;
    };
}




/***/ }),

/***/ "./node_modules/@motionone/dom/dist/animate/data.es.js":
/*!*************************************************************!*\
  !*** ./node_modules/@motionone/dom/dist/animate/data.es.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getAnimationData: () => (/* binding */ getAnimationData),
/* harmony export */   getMotionValue: () => (/* binding */ getMotionValue)
/* harmony export */ });
/* harmony import */ var _motionone_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @motionone/types */ "./node_modules/@motionone/types/dist/MotionValue.es.js");


const data = new WeakMap();
function getAnimationData(element) {
    if (!data.has(element)) {
        data.set(element, {
            transforms: [],
            values: new Map(),
        });
    }
    return data.get(element);
}
function getMotionValue(motionValues, name) {
    if (!motionValues.has(name)) {
        motionValues.set(name, new _motionone_types__WEBPACK_IMPORTED_MODULE_0__.MotionValue());
    }
    return motionValues.get(name);
}




/***/ }),

/***/ "./node_modules/@motionone/dom/dist/animate/index.es.js":
/*!**************************************************************!*\
  !*** ./node_modules/@motionone/dom/dist/animate/index.es.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   animate: () => (/* binding */ animate)
/* harmony export */ });
/* harmony import */ var _animate_style_es_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./animate-style.es.js */ "./node_modules/@motionone/dom/dist/animate/animate-style.es.js");
/* harmony import */ var _utils_options_es_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/options.es.js */ "./node_modules/@motionone/dom/dist/animate/utils/options.es.js");
/* harmony import */ var _utils_resolve_elements_es_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/resolve-elements.es.js */ "./node_modules/@motionone/dom/dist/utils/resolve-elements.es.js");
/* harmony import */ var _utils_controls_es_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/controls.es.js */ "./node_modules/@motionone/dom/dist/animate/utils/controls.es.js");
/* harmony import */ var _utils_stagger_es_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/stagger.es.js */ "./node_modules/@motionone/dom/dist/utils/stagger.es.js");






function animate(elements, keyframes, options = {}) {
    elements = (0,_utils_resolve_elements_es_js__WEBPACK_IMPORTED_MODULE_2__.resolveElements)(elements);
    const numElements = elements.length;
    /**
     * Create and start new animations
     */
    const animationFactories = [];
    for (let i = 0; i < numElements; i++) {
        const element = elements[i];
        for (const key in keyframes) {
            const valueOptions = (0,_utils_options_es_js__WEBPACK_IMPORTED_MODULE_1__.getOptions)(options, key);
            valueOptions.delay = (0,_utils_stagger_es_js__WEBPACK_IMPORTED_MODULE_4__.resolveOption)(valueOptions.delay, i, numElements);
            const animation = (0,_animate_style_es_js__WEBPACK_IMPORTED_MODULE_0__.animateStyle)(element, key, keyframes[key], valueOptions);
            animationFactories.push(animation);
        }
    }
    return (0,_utils_controls_es_js__WEBPACK_IMPORTED_MODULE_3__.withControls)(animationFactories, options, 
    /**
     * TODO:
     * If easing is set to spring or glide, duration will be dynamically
     * generated. Ideally we would dynamically generate this from
     * animation.effect.getComputedTiming().duration but this isn't
     * supported in iOS13 or our number polyfill. Perhaps it's possible
     * to Proxy animations returned from animateStyle that has duration
     * as a getter.
     */
    options.duration);
}




/***/ }),

/***/ "./node_modules/@motionone/dom/dist/animate/style.es.js":
/*!**************************************************************!*\
  !*** ./node_modules/@motionone/dom/dist/animate/style.es.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   style: () => (/* binding */ style)
/* harmony export */ });
/* harmony import */ var _utils_css_var_es_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/css-var.es.js */ "./node_modules/@motionone/dom/dist/animate/utils/css-var.es.js");
/* harmony import */ var _utils_get_style_name_es_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/get-style-name.es.js */ "./node_modules/@motionone/dom/dist/animate/utils/get-style-name.es.js");
/* harmony import */ var _utils_transforms_es_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/transforms.es.js */ "./node_modules/@motionone/dom/dist/animate/utils/transforms.es.js");




const style = {
    get: (element, name) => {
        name = (0,_utils_get_style_name_es_js__WEBPACK_IMPORTED_MODULE_1__.getStyleName)(name);
        let value = (0,_utils_css_var_es_js__WEBPACK_IMPORTED_MODULE_0__.isCssVar)(name)
            ? element.style.getPropertyValue(name)
            : getComputedStyle(element)[name];
        if (!value && value !== 0) {
            const definition = _utils_transforms_es_js__WEBPACK_IMPORTED_MODULE_2__.transformDefinitions.get(name);
            if (definition)
                value = definition.initialValue;
        }
        return value;
    },
    set: (element, name, value) => {
        name = (0,_utils_get_style_name_es_js__WEBPACK_IMPORTED_MODULE_1__.getStyleName)(name);
        if ((0,_utils_css_var_es_js__WEBPACK_IMPORTED_MODULE_0__.isCssVar)(name)) {
            element.style.setProperty(name, value);
        }
        else {
            element.style[name] = value;
        }
    },
};




/***/ }),

/***/ "./node_modules/@motionone/dom/dist/animate/utils/controls.es.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@motionone/dom/dist/animate/utils/controls.es.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   controls: () => (/* binding */ controls),
/* harmony export */   withControls: () => (/* binding */ withControls)
/* harmony export */ });
/* harmony import */ var _motionone_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @motionone/utils */ "./node_modules/@motionone/utils/dist/defaults.es.js");
/* harmony import */ var _motionone_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @motionone/utils */ "./node_modules/@motionone/utils/dist/noop.es.js");
/* harmony import */ var _motionone_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @motionone/utils */ "./node_modules/@motionone/utils/dist/time.es.js");
/* harmony import */ var _stop_animation_es_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./stop-animation.es.js */ "./node_modules/@motionone/dom/dist/animate/utils/stop-animation.es.js");



const createAnimation = (factory) => factory();
const withControls = (animationFactory, options, duration = _motionone_utils__WEBPACK_IMPORTED_MODULE_0__.defaults.duration) => {
    return new Proxy({
        animations: animationFactory.map(createAnimation).filter(Boolean),
        duration,
        options,
    }, controls);
};
/**
 * TODO:
 * Currently this returns the first animation, ideally it would return
 * the first active animation.
 */
const getActiveAnimation = (state) => state.animations[0];
const controls = {
    get: (target, key) => {
        const activeAnimation = getActiveAnimation(target);
        switch (key) {
            case "duration":
                return target.duration;
            case "currentTime":
                return _motionone_utils__WEBPACK_IMPORTED_MODULE_2__.time.s((activeAnimation === null || activeAnimation === void 0 ? void 0 : activeAnimation[key]) || 0);
            case "playbackRate":
            case "playState":
                return activeAnimation === null || activeAnimation === void 0 ? void 0 : activeAnimation[key];
            case "finished":
                if (!target.finished) {
                    target.finished = Promise.all(target.animations.map(selectFinished)).catch(_motionone_utils__WEBPACK_IMPORTED_MODULE_1__.noop);
                }
                return target.finished;
            case "stop":
                return () => {
                    target.animations.forEach((animation) => (0,_stop_animation_es_js__WEBPACK_IMPORTED_MODULE_3__.stopAnimation)(animation));
                };
            case "forEachNative":
                /**
                 * This is for internal use only, fire a callback for each
                 * underlying animation.
                 */
                return (callback) => {
                    target.animations.forEach((animation) => callback(animation, target));
                };
            default:
                return typeof (activeAnimation === null || activeAnimation === void 0 ? void 0 : activeAnimation[key]) === "undefined"
                    ? undefined
                    : () => target.animations.forEach((animation) => animation[key]());
        }
    },
    set: (target, key, value) => {
        switch (key) {
            case "currentTime":
                value = _motionone_utils__WEBPACK_IMPORTED_MODULE_2__.time.ms(value);
            case "currentTime":
            case "playbackRate":
                for (let i = 0; i < target.animations.length; i++) {
                    target.animations[i][key] = value;
                }
                return true;
        }
        return false;
    },
};
const selectFinished = (animation) => animation.finished;




/***/ }),

/***/ "./node_modules/@motionone/dom/dist/animate/utils/css-var.es.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@motionone/dom/dist/animate/utils/css-var.es.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isCssVar: () => (/* binding */ isCssVar),
/* harmony export */   registerCssVariable: () => (/* binding */ registerCssVariable),
/* harmony export */   registeredProperties: () => (/* binding */ registeredProperties)
/* harmony export */ });
/* harmony import */ var _transforms_es_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transforms.es.js */ "./node_modules/@motionone/dom/dist/animate/utils/transforms.es.js");


const isCssVar = (name) => name.startsWith("--");
const registeredProperties = new Set();
function registerCssVariable(name) {
    if (registeredProperties.has(name))
        return;
    registeredProperties.add(name);
    try {
        const { syntax, initialValue } = _transforms_es_js__WEBPACK_IMPORTED_MODULE_0__.transformDefinitions.has(name)
            ? _transforms_es_js__WEBPACK_IMPORTED_MODULE_0__.transformDefinitions.get(name)
            : {};
        CSS.registerProperty({
            name,
            inherits: false,
            syntax,
            initialValue,
        });
    }
    catch (e) { }
}




/***/ }),

/***/ "./node_modules/@motionone/dom/dist/animate/utils/easing.es.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@motionone/dom/dist/animate/utils/easing.es.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   convertEasing: () => (/* binding */ convertEasing),
/* harmony export */   cubicBezierAsString: () => (/* binding */ cubicBezierAsString)
/* harmony export */ });
/* harmony import */ var _motionone_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @motionone/utils */ "./node_modules/@motionone/utils/dist/is-cubic-bezier.es.js");


const convertEasing = (easing) => (0,_motionone_utils__WEBPACK_IMPORTED_MODULE_0__.isCubicBezier)(easing) ? cubicBezierAsString(easing) : easing;
const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;




/***/ }),

/***/ "./node_modules/@motionone/dom/dist/animate/utils/feature-detection.es.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@motionone/dom/dist/animate/utils/feature-detection.es.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   supports: () => (/* binding */ supports)
/* harmony export */ });
const testAnimation = (keyframes) => document.createElement("div").animate(keyframes, { duration: 0.001 });
const featureTests = {
    cssRegisterProperty: () => typeof CSS !== "undefined" &&
        Object.hasOwnProperty.call(CSS, "registerProperty"),
    waapi: () => Object.hasOwnProperty.call(Element.prototype, "animate"),
    partialKeyframes: () => {
        try {
            testAnimation({ opacity: [1] });
        }
        catch (e) {
            return false;
        }
        return true;
    },
    finished: () => Boolean(testAnimation({ opacity: [0, 1] }).finished),
};
const results = {};
const supports = {};
for (const key in featureTests) {
    supports[key] = () => {
        if (results[key] === undefined)
            results[key] = featureTests[key]();
        return results[key];
    };
}




/***/ }),

/***/ "./node_modules/@motionone/dom/dist/animate/utils/get-style-name.es.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@motionone/dom/dist/animate/utils/get-style-name.es.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getStyleName: () => (/* binding */ getStyleName)
/* harmony export */ });
/* harmony import */ var _transforms_es_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transforms.es.js */ "./node_modules/@motionone/dom/dist/animate/utils/transforms.es.js");


function getStyleName(key) {
    if (_transforms_es_js__WEBPACK_IMPORTED_MODULE_0__.transformAlias[key])
        key = _transforms_es_js__WEBPACK_IMPORTED_MODULE_0__.transformAlias[key];
    return (0,_transforms_es_js__WEBPACK_IMPORTED_MODULE_0__.isTransform)(key) ? (0,_transforms_es_js__WEBPACK_IMPORTED_MODULE_0__.asTransformCssVar)(key) : key;
}




/***/ }),

/***/ "./node_modules/@motionone/dom/dist/animate/utils/keyframes.es.js":
/*!************************************************************************!*\
  !*** ./node_modules/@motionone/dom/dist/animate/utils/keyframes.es.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   hydrateKeyframes: () => (/* binding */ hydrateKeyframes),
/* harmony export */   keyframesList: () => (/* binding */ keyframesList)
/* harmony export */ });
function hydrateKeyframes(keyframes, readInitialValue) {
    for (let i = 0; i < keyframes.length; i++) {
        if (keyframes[i] === null) {
            keyframes[i] = i ? keyframes[i - 1] : readInitialValue();
        }
    }
    return keyframes;
}
const keyframesList = (keyframes) => Array.isArray(keyframes) ? keyframes : [keyframes];




/***/ }),

/***/ "./node_modules/@motionone/dom/dist/animate/utils/options.es.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@motionone/dom/dist/animate/utils/options.es.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getOptions: () => (/* binding */ getOptions)
/* harmony export */ });
const getOptions = (options, key) => 
/**
 * TODO: Make test for this
 * Always return a new object otherwise delay is overwritten by results of stagger
 * and this results in no stagger
 */
options[key] ? Object.assign(Object.assign({}, options), options[key]) : Object.assign({}, options);




/***/ }),

/***/ "./node_modules/@motionone/dom/dist/animate/utils/stop-animation.es.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@motionone/dom/dist/animate/utils/stop-animation.es.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   stopAnimation: () => (/* binding */ stopAnimation)
/* harmony export */ });
function stopAnimation(animation, needsCommit = true) {
    if (!animation || animation.playState === "finished")
        return;
    // Suppress error thrown by WAAPI
    try {
        if (animation.stop) {
            animation.stop();
        }
        else {
            needsCommit && animation.commitStyles();
            animation.cancel();
        }
    }
    catch (e) { }
}




/***/ }),

/***/ "./node_modules/@motionone/dom/dist/animate/utils/style-object.es.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@motionone/dom/dist/animate/utils/style-object.es.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createStyles: () => (/* binding */ createStyles)
/* harmony export */ });
/* harmony import */ var _motionone_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @motionone/utils */ "./node_modules/@motionone/utils/dist/is-number.es.js");
/* harmony import */ var _transforms_es_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transforms.es.js */ "./node_modules/@motionone/dom/dist/animate/utils/transforms.es.js");



function createStyles(keyframes) {
    const initialKeyframes = {};
    const transformKeys = [];
    for (let key in keyframes) {
        const value = keyframes[key];
        if ((0,_transforms_es_js__WEBPACK_IMPORTED_MODULE_1__.isTransform)(key)) {
            if (_transforms_es_js__WEBPACK_IMPORTED_MODULE_1__.transformAlias[key])
                key = _transforms_es_js__WEBPACK_IMPORTED_MODULE_1__.transformAlias[key];
            transformKeys.push(key);
            key = (0,_transforms_es_js__WEBPACK_IMPORTED_MODULE_1__.asTransformCssVar)(key);
        }
        let initialKeyframe = Array.isArray(value) ? value[0] : value;
        /**
         * If this is a number and we have a default value type, convert the number
         * to this type.
         */
        const definition = _transforms_es_js__WEBPACK_IMPORTED_MODULE_1__.transformDefinitions.get(key);
        if (definition) {
            initialKeyframe = (0,_motionone_utils__WEBPACK_IMPORTED_MODULE_0__.isNumber)(value)
                ? definition.toDefaultUnit(value)
                : value;
        }
        initialKeyframes[key] = initialKeyframe;
    }
    if (transformKeys.length) {
        initialKeyframes.transform = (0,_transforms_es_js__WEBPACK_IMPORTED_MODULE_1__.buildTransformTemplate)(transformKeys);
    }
    return initialKeyframes;
}




/***/ }),

/***/ "./node_modules/@motionone/dom/dist/animate/utils/style-string.es.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@motionone/dom/dist/animate/utils/style-string.es.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createStyleString: () => (/* binding */ createStyleString)
/* harmony export */ });
/* harmony import */ var _style_object_es_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./style-object.es.js */ "./node_modules/@motionone/dom/dist/animate/utils/style-object.es.js");


const camelLetterToPipeLetter = (letter) => `-${letter.toLowerCase()}`;
const camelToPipeCase = (str) => str.replace(/[A-Z]/g, camelLetterToPipeLetter);
function createStyleString(target = {}) {
    const styles = (0,_style_object_es_js__WEBPACK_IMPORTED_MODULE_0__.createStyles)(target);
    let style = "";
    for (const key in styles) {
        style += key.startsWith("--") ? key : camelToPipeCase(key);
        style += `: ${styles[key]}; `;
    }
    return style;
}




/***/ }),

/***/ "./node_modules/@motionone/dom/dist/animate/utils/transforms.es.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@motionone/dom/dist/animate/utils/transforms.es.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   addTransformToElement: () => (/* binding */ addTransformToElement),
/* harmony export */   asTransformCssVar: () => (/* binding */ asTransformCssVar),
/* harmony export */   axes: () => (/* binding */ axes),
/* harmony export */   buildTransformTemplate: () => (/* binding */ buildTransformTemplate),
/* harmony export */   compareTransformOrder: () => (/* binding */ compareTransformOrder),
/* harmony export */   isTransform: () => (/* binding */ isTransform),
/* harmony export */   transformAlias: () => (/* binding */ transformAlias),
/* harmony export */   transformDefinitions: () => (/* binding */ transformDefinitions)
/* harmony export */ });
/* harmony import */ var _motionone_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @motionone/utils */ "./node_modules/@motionone/utils/dist/array.es.js");
/* harmony import */ var _motionone_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @motionone/utils */ "./node_modules/@motionone/utils/dist/noop.es.js");
/* harmony import */ var _data_es_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data.es.js */ "./node_modules/@motionone/dom/dist/animate/data.es.js");



/**
 * A list of all transformable axes. We'll use this list to generated a version
 * of each axes for each transform.
 */
const axes = ["", "X", "Y", "Z"];
/**
 * An ordered array of each transformable value. By default, transform values
 * will be sorted to this order.
 */
const order = ["translate", "scale", "rotate", "skew"];
const transformAlias = {
    x: "translateX",
    y: "translateY",
    z: "translateZ",
};
const rotation = {
    syntax: "<angle>",
    initialValue: "0deg",
    toDefaultUnit: (v) => v + "deg",
};
const baseTransformProperties = {
    translate: {
        syntax: "<length-percentage>",
        initialValue: "0px",
        toDefaultUnit: (v) => v + "px",
    },
    rotate: rotation,
    scale: {
        syntax: "<number>",
        initialValue: 1,
        toDefaultUnit: _motionone_utils__WEBPACK_IMPORTED_MODULE_1__.noopReturn,
    },
    skew: rotation,
};
const transformDefinitions = new Map();
const asTransformCssVar = (name) => `--motion-${name}`;
/**
 * Generate a list of every possible transform key
 */
const transforms = ["x", "y", "z"];
order.forEach((name) => {
    axes.forEach((axis) => {
        transforms.push(name + axis);
        transformDefinitions.set(asTransformCssVar(name + axis), baseTransformProperties[name]);
    });
});
/**
 * A function to use with Array.sort to sort transform keys by their default order.
 */
const compareTransformOrder = (a, b) => transforms.indexOf(a) - transforms.indexOf(b);
/**
 * Provide a quick way to check if a string is the name of a transform
 */
const transformLookup = new Set(transforms);
const isTransform = (name) => transformLookup.has(name);
const addTransformToElement = (element, name) => {
    // Map x to translateX etc
    if (transformAlias[name])
        name = transformAlias[name];
    const { transforms } = (0,_data_es_js__WEBPACK_IMPORTED_MODULE_2__.getAnimationData)(element);
    (0,_motionone_utils__WEBPACK_IMPORTED_MODULE_0__.addUniqueItem)(transforms, name);
    /**
     * TODO: An optimisation here could be to cache the transform in element data
     * and only update if this has changed.
     */
    element.style.transform = buildTransformTemplate(transforms);
};
const buildTransformTemplate = (transforms) => transforms
    .sort(compareTransformOrder)
    .reduce(transformListToString, "")
    .trim();
const transformListToString = (template, name) => `${template} ${name}(var(${asTransformCssVar(name)}))`;




/***/ }),

/***/ "./node_modules/@motionone/dom/dist/easing/create-generator-easing.es.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@motionone/dom/dist/easing/create-generator-easing.es.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createGeneratorEasing: () => (/* binding */ createGeneratorEasing)
/* harmony export */ });
/* harmony import */ var _motionone_generators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @motionone/generators */ "./node_modules/@motionone/generators/dist/utils/pregenerate-keyframes.es.js");
/* harmony import */ var _motionone_generators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @motionone/generators */ "./node_modules/@motionone/generators/dist/utils/velocity.es.js");


function createGeneratorEasing(createGenerator) {
    const keyframesCache = new WeakMap();
    return (options = {}) => {
        const generatorCache = new Map();
        const getGenerator = (from = 0, to = 100, velocity = 0, isScale = false) => {
            const key = `${from}-${to}-${velocity}-${isScale}`;
            if (!generatorCache.has(key)) {
                generatorCache.set(key, createGenerator(Object.assign({ from,
                    to,
                    velocity, restSpeed: isScale ? 0.05 : 2, restDistance: isScale ? 0.01 : 0.5 }, options)));
            }
            return generatorCache.get(key);
        };
        const getKeyframes = (generator) => {
            if (!keyframesCache.has(generator)) {
                keyframesCache.set(generator, (0,_motionone_generators__WEBPACK_IMPORTED_MODULE_0__.pregenerateKeyframes)(generator));
            }
            return keyframesCache.get(generator);
        };
        return {
            createAnimation: (keyframes, getOrigin, canUseGenerator, name, motionValue) => {
                var _a, _b;
                let settings;
                const numKeyframes = keyframes.length;
                let shouldUseGenerator = canUseGenerator &&
                    numKeyframes <= 2 &&
                    keyframes.every(isNumberOrNull);
                if (shouldUseGenerator) {
                    const target = keyframes[numKeyframes - 1];
                    const unresolvedOrigin = numKeyframes === 1 ? null : keyframes[0];
                    let velocity = 0;
                    let origin = 0;
                    const prevGenerator = motionValue === null || motionValue === void 0 ? void 0 : motionValue.generator;
                    if (prevGenerator) {
                        /**
                         * If we have a generator for this value we can use it to resolve
                         * the animations's current value and velocity.
                         */
                        const { animation, generatorStartTime } = motionValue;
                        const startTime = (animation === null || animation === void 0 ? void 0 : animation.startTime) || generatorStartTime || 0;
                        const currentTime = (animation === null || animation === void 0 ? void 0 : animation.currentTime) || performance.now() - startTime;
                        const prevGeneratorCurrent = prevGenerator(currentTime).current;
                        origin = (_a = unresolvedOrigin) !== null && _a !== void 0 ? _a : prevGeneratorCurrent;
                        if (numKeyframes === 1 ||
                            (numKeyframes === 2 && keyframes[0] === null)) {
                            velocity = (0,_motionone_generators__WEBPACK_IMPORTED_MODULE_1__.calcGeneratorVelocity)((t) => prevGenerator(t).current, currentTime, prevGeneratorCurrent);
                        }
                    }
                    else {
                        origin = (_b = unresolvedOrigin) !== null && _b !== void 0 ? _b : parseFloat(getOrigin());
                    }
                    const generator = getGenerator(origin, target, velocity, name === null || name === void 0 ? void 0 : name.includes("scale"));
                    const keyframesMetadata = getKeyframes(generator);
                    settings = Object.assign(Object.assign({}, keyframesMetadata), { easing: "linear" });
                    // TODO Add test for this
                    if (motionValue) {
                        motionValue.generator = generator;
                        motionValue.generatorStartTime = performance.now();
                    }
                }
                else {
                    const keyframesMetadata = getKeyframes(getGenerator(0, 100));
                    settings = {
                        easing: "ease",
                        duration: keyframesMetadata.overshootDuration,
                    };
                }
                return settings;
            },
        };
    };
}
const isNumberOrNull = (value) => typeof value !== "string";




/***/ }),

/***/ "./node_modules/@motionone/dom/dist/easing/glide/index.es.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@motionone/dom/dist/easing/glide/index.es.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   glide: () => (/* binding */ glide)
/* harmony export */ });
/* harmony import */ var _motionone_generators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @motionone/generators */ "./node_modules/@motionone/generators/dist/glide/index.es.js");
/* harmony import */ var _create_generator_easing_es_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../create-generator-easing.es.js */ "./node_modules/@motionone/dom/dist/easing/create-generator-easing.es.js");



const glide = (0,_create_generator_easing_es_js__WEBPACK_IMPORTED_MODULE_1__.createGeneratorEasing)(_motionone_generators__WEBPACK_IMPORTED_MODULE_0__.glide);




/***/ }),

/***/ "./node_modules/@motionone/dom/dist/easing/spring/index.es.js":
/*!********************************************************************!*\
  !*** ./node_modules/@motionone/dom/dist/easing/spring/index.es.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   spring: () => (/* binding */ spring)
/* harmony export */ });
/* harmony import */ var _motionone_generators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @motionone/generators */ "./node_modules/@motionone/generators/dist/spring/index.es.js");
/* harmony import */ var _create_generator_easing_es_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../create-generator-easing.es.js */ "./node_modules/@motionone/dom/dist/easing/create-generator-easing.es.js");



const spring = (0,_create_generator_easing_es_js__WEBPACK_IMPORTED_MODULE_1__.createGeneratorEasing)(_motionone_generators__WEBPACK_IMPORTED_MODULE_0__.spring);




/***/ }),

/***/ "./node_modules/@motionone/dom/dist/gestures/in-view.es.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@motionone/dom/dist/gestures/in-view.es.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   inView: () => (/* binding */ inView)
/* harmony export */ });
/* harmony import */ var _utils_resolve_elements_es_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/resolve-elements.es.js */ "./node_modules/@motionone/dom/dist/utils/resolve-elements.es.js");


const thresholds = {
    any: 0,
    all: 1,
};
function inView(elementOrSelector, onStart, { root, margin: rootMargin, amount = "any" } = {}) {
    /**
     * If this browser doesn't support IntersectionObserver, return a dummy stop function.
     * Default triggering of onStart is tricky - it could be used for starting/stopping
     * videos, lazy loading content etc. We could provide an option to enable a fallback, or
     * provide a fallback callback option.
     */
    if (typeof IntersectionObserver === "undefined") {
        return () => { };
    }
    const elements = (0,_utils_resolve_elements_es_js__WEBPACK_IMPORTED_MODULE_0__.resolveElements)(elementOrSelector);
    const activeIntersections = new WeakMap();
    const onIntersectionChange = (entries) => {
        entries.forEach((entry) => {
            const onEnd = activeIntersections.get(entry.target);
            /**
             * If there's no change to the intersection, we don't need to
             * do anything here.
             */
            if (entry.isIntersecting === Boolean(onEnd))
                return;
            if (entry.isIntersecting) {
                const newOnEnd = onStart(entry);
                if (typeof newOnEnd === "function") {
                    activeIntersections.set(entry.target, newOnEnd);
                }
                else {
                    observer.unobserve(entry.target);
                }
            }
            else if (onEnd) {
                onEnd(entry);
                activeIntersections.delete(entry.target);
            }
        });
    };
    const observer = new IntersectionObserver(onIntersectionChange, {
        root,
        rootMargin,
        threshold: typeof amount === "number" ? amount : thresholds[amount],
    });
    elements.forEach((element) => observer.observe(element));
    return () => observer.disconnect();
}




/***/ }),

/***/ "./node_modules/@motionone/dom/dist/gestures/resize/handle-element.es.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@motionone/dom/dist/gestures/resize/handle-element.es.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   resizeElement: () => (/* binding */ resizeElement)
/* harmony export */ });
/* harmony import */ var _utils_resolve_elements_es_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/resolve-elements.es.js */ "./node_modules/@motionone/dom/dist/utils/resolve-elements.es.js");


const resizeHandlers = new WeakMap();
let observer;
function getElementSize(target, borderBoxSize) {
    if (borderBoxSize) {
        const { inlineSize, blockSize } = borderBoxSize[0];
        return { width: inlineSize, height: blockSize };
    }
    else if (target instanceof SVGElement && "getBBox" in target) {
        return target.getBBox();
    }
    else {
        return {
            width: target.offsetWidth,
            height: target.offsetHeight,
        };
    }
}
function notifyTarget({ target, contentRect, borderBoxSize, }) {
    var _a;
    (_a = resizeHandlers.get(target)) === null || _a === void 0 ? void 0 : _a.forEach((handler) => {
        handler({
            target,
            contentSize: contentRect,
            get size() {
                return getElementSize(target, borderBoxSize);
            },
        });
    });
}
function notifyAll(entries) {
    entries.forEach(notifyTarget);
}
function createResizeObserver() {
    if (typeof ResizeObserver === "undefined")
        return;
    observer = new ResizeObserver(notifyAll);
}
function resizeElement(target, handler) {
    if (!observer)
        createResizeObserver();
    const elements = (0,_utils_resolve_elements_es_js__WEBPACK_IMPORTED_MODULE_0__.resolveElements)(target);
    elements.forEach((element) => {
        let elementHandlers = resizeHandlers.get(element);
        if (!elementHandlers) {
            elementHandlers = new Set();
            resizeHandlers.set(element, elementHandlers);
        }
        elementHandlers.add(handler);
        observer === null || observer === void 0 ? void 0 : observer.observe(element);
    });
    return () => {
        elements.forEach((element) => {
            const elementHandlers = resizeHandlers.get(element);
            elementHandlers === null || elementHandlers === void 0 ? void 0 : elementHandlers.delete(handler);
            if (!(elementHandlers === null || elementHandlers === void 0 ? void 0 : elementHandlers.size)) {
                observer === null || observer === void 0 ? void 0 : observer.unobserve(element);
            }
        });
    };
}




/***/ }),

/***/ "./node_modules/@motionone/dom/dist/gestures/resize/handle-window.es.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@motionone/dom/dist/gestures/resize/handle-window.es.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   resizeWindow: () => (/* binding */ resizeWindow)
/* harmony export */ });
const windowCallbacks = new Set();
let windowResizeHandler;
function createWindowResizeHandler() {
    windowResizeHandler = () => {
        const size = {
            width: window.innerWidth,
            height: window.innerHeight,
        };
        const info = {
            target: window,
            size,
            contentSize: size,
        };
        windowCallbacks.forEach((callback) => callback(info));
    };
    window.addEventListener("resize", windowResizeHandler);
}
function resizeWindow(callback) {
    windowCallbacks.add(callback);
    if (!windowResizeHandler)
        createWindowResizeHandler();
    return () => {
        windowCallbacks.delete(callback);
        if (!windowCallbacks.size && windowResizeHandler) {
            windowResizeHandler = undefined;
        }
    };
}




/***/ }),

/***/ "./node_modules/@motionone/dom/dist/gestures/resize/index.es.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@motionone/dom/dist/gestures/resize/index.es.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   resize: () => (/* binding */ resize)
/* harmony export */ });
/* harmony import */ var _handle_element_es_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./handle-element.es.js */ "./node_modules/@motionone/dom/dist/gestures/resize/handle-element.es.js");
/* harmony import */ var _handle_window_es_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./handle-window.es.js */ "./node_modules/@motionone/dom/dist/gestures/resize/handle-window.es.js");



function resize(a, b) {
    return typeof a === "function" ? (0,_handle_window_es_js__WEBPACK_IMPORTED_MODULE_1__.resizeWindow)(a) : (0,_handle_element_es_js__WEBPACK_IMPORTED_MODULE_0__.resizeElement)(a, b);
}




/***/ }),

/***/ "./node_modules/@motionone/dom/dist/gestures/scroll/index.es.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@motionone/dom/dist/gestures/scroll/index.es.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   scroll: () => (/* binding */ scroll)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var _resize_index_es_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../resize/index.es.js */ "./node_modules/@motionone/dom/dist/gestures/resize/index.es.js");
/* harmony import */ var _info_es_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./info.es.js */ "./node_modules/@motionone/dom/dist/gestures/scroll/info.es.js");
/* harmony import */ var _on_scroll_handler_es_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./on-scroll-handler.es.js */ "./node_modules/@motionone/dom/dist/gestures/scroll/on-scroll-handler.es.js");





const scrollListeners = new WeakMap();
const resizeListeners = new WeakMap();
const onScrollHandlers = new WeakMap();
const getEventTarget = (element) => element === document.documentElement ? window : element;
function scroll(onScroll, _a = {}) {
    var { container = document.documentElement } = _a, options = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__rest)(_a, ["container"]);
    let containerHandlers = onScrollHandlers.get(container);
    /**
     * Get the onScroll handlers for this container.
     * If one isn't found, create a new one.
     */
    if (!containerHandlers) {
        containerHandlers = new Set();
        onScrollHandlers.set(container, containerHandlers);
    }
    /**
     * Create a new onScroll handler for the provided callback.
     */
    const info = (0,_info_es_js__WEBPACK_IMPORTED_MODULE_2__.createScrollInfo)();
    const containerHandler = (0,_on_scroll_handler_es_js__WEBPACK_IMPORTED_MODULE_3__.createOnScrollHandler)(container, onScroll, info, options);
    containerHandlers.add(containerHandler);
    /**
     * Check if there's a scroll event listener for this container.
     * If not, create one.
     */
    if (!scrollListeners.has(container)) {
        const listener = () => {
            const time = performance.now();
            for (const handler of containerHandlers)
                handler.measure();
            for (const handler of containerHandlers)
                handler.update(time);
            for (const handler of containerHandlers)
                handler.notify();
        };
        scrollListeners.set(container, listener);
        const target = getEventTarget(container);
        window.addEventListener("resize", listener, { passive: true });
        if (container !== document.documentElement) {
            resizeListeners.set(container, (0,_resize_index_es_js__WEBPACK_IMPORTED_MODULE_1__.resize)(container, listener));
        }
        target.addEventListener("scroll", listener, { passive: true });
    }
    const listener = scrollListeners.get(container);
    const onLoadProcesss = requestAnimationFrame(listener);
    return () => {
        var _a;
        if (typeof onScroll !== "function")
            onScroll.stop();
        cancelAnimationFrame(onLoadProcesss);
        /**
         * Check if we even have any handlers for this container.
         */
        const containerHandlers = onScrollHandlers.get(container);
        if (!containerHandlers)
            return;
        containerHandlers.delete(containerHandler);
        if (containerHandlers.size)
            return;
        /**
         * If no more handlers, remove the scroll listener too.
         */
        const listener = scrollListeners.get(container);
        scrollListeners.delete(container);
        if (listener) {
            getEventTarget(container).removeEventListener("scroll", listener);
            (_a = resizeListeners.get(container)) === null || _a === void 0 ? void 0 : _a();
            window.removeEventListener("resize", listener);
        }
    };
}




/***/ }),

/***/ "./node_modules/@motionone/dom/dist/gestures/scroll/info.es.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@motionone/dom/dist/gestures/scroll/info.es.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createScrollInfo: () => (/* binding */ createScrollInfo),
/* harmony export */   updateScrollInfo: () => (/* binding */ updateScrollInfo)
/* harmony export */ });
/* harmony import */ var _motionone_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @motionone/utils */ "./node_modules/@motionone/utils/dist/progress.es.js");
/* harmony import */ var _motionone_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @motionone/utils */ "./node_modules/@motionone/utils/dist/velocity.es.js");


/**
 * A time in milliseconds, beyond which we consider the scroll velocity to be 0.
 */
const maxElapsed = 50;
const createAxisInfo = () => ({
    current: 0,
    offset: [],
    progress: 0,
    scrollLength: 0,
    targetOffset: 0,
    targetLength: 0,
    containerLength: 0,
    velocity: 0,
});
const createScrollInfo = () => ({
    time: 0,
    x: createAxisInfo(),
    y: createAxisInfo(),
});
const keys = {
    x: {
        length: "Width",
        position: "Left",
    },
    y: {
        length: "Height",
        position: "Top",
    },
};
function updateAxisInfo(element, axisName, info, time) {
    const axis = info[axisName];
    const { length, position } = keys[axisName];
    const prev = axis.current;
    const prevTime = info.time;
    axis.current = element["scroll" + position];
    axis.scrollLength = element["scroll" + length] - element["client" + length];
    axis.offset.length = 0;
    axis.offset[0] = 0;
    axis.offset[1] = axis.scrollLength;
    axis.progress = (0,_motionone_utils__WEBPACK_IMPORTED_MODULE_0__.progress)(0, axis.scrollLength, axis.current);
    const elapsed = time - prevTime;
    axis.velocity =
        elapsed > maxElapsed ? 0 : (0,_motionone_utils__WEBPACK_IMPORTED_MODULE_1__.velocityPerSecond)(axis.current - prev, elapsed);
}
function updateScrollInfo(element, info, time) {
    updateAxisInfo(element, "x", info, time);
    updateAxisInfo(element, "y", info, time);
    info.time = time;
}




/***/ }),

/***/ "./node_modules/@motionone/dom/dist/gestures/scroll/offsets/edge.es.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@motionone/dom/dist/gestures/scroll/offsets/edge.es.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   namedEdges: () => (/* binding */ namedEdges),
/* harmony export */   resolveEdge: () => (/* binding */ resolveEdge)
/* harmony export */ });
/* harmony import */ var _motionone_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @motionone/utils */ "./node_modules/@motionone/utils/dist/is-number.es.js");
/* harmony import */ var _motionone_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @motionone/utils */ "./node_modules/@motionone/utils/dist/is-string.es.js");


const namedEdges = {
    start: 0,
    center: 0.5,
    end: 1,
};
function resolveEdge(edge, length, inset = 0) {
    let delta = 0;
    /**
     * If we have this edge defined as a preset, replace the definition
     * with the numerical value.
     */
    if (namedEdges[edge] !== undefined) {
        edge = namedEdges[edge];
    }
    /**
     * Handle unit values
     */
    if ((0,_motionone_utils__WEBPACK_IMPORTED_MODULE_1__.isString)(edge)) {
        const asNumber = parseFloat(edge);
        if (edge.endsWith("px")) {
            delta = asNumber;
        }
        else if (edge.endsWith("%")) {
            edge = asNumber / 100;
        }
        else if (edge.endsWith("vw")) {
            delta = (asNumber / 100) * document.documentElement.clientWidth;
        }
        else if (edge.endsWith("vh")) {
            delta = (asNumber / 100) * document.documentElement.clientHeight;
        }
        else {
            edge = asNumber;
        }
    }
    /**
     * If the edge is defined as a number, handle as a progress value.
     */
    if ((0,_motionone_utils__WEBPACK_IMPORTED_MODULE_0__.isNumber)(edge)) {
        delta = length * edge;
    }
    return inset + delta;
}




/***/ }),

/***/ "./node_modules/@motionone/dom/dist/gestures/scroll/offsets/index.es.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@motionone/dom/dist/gestures/scroll/offsets/index.es.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   resolveOffsets: () => (/* binding */ resolveOffsets)
/* harmony export */ });
/* harmony import */ var _motionone_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @motionone/utils */ "./node_modules/@motionone/utils/dist/interpolate.es.js");
/* harmony import */ var _motionone_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @motionone/utils */ "./node_modules/@motionone/utils/dist/offset.es.js");
/* harmony import */ var _inset_es_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./inset.es.js */ "./node_modules/@motionone/dom/dist/gestures/scroll/offsets/inset.es.js");
/* harmony import */ var _presets_es_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./presets.es.js */ "./node_modules/@motionone/dom/dist/gestures/scroll/offsets/presets.es.js");
/* harmony import */ var _offset_es_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./offset.es.js */ "./node_modules/@motionone/dom/dist/gestures/scroll/offsets/offset.es.js");





const point = { x: 0, y: 0 };
function resolveOffsets(container, info, options) {
    let { offset: offsetDefinition = _presets_es_js__WEBPACK_IMPORTED_MODULE_3__.ScrollOffset.All } = options;
    const { target = container, axis = "y" } = options;
    const lengthLabel = axis === "y" ? "height" : "width";
    const inset = target !== container ? (0,_inset_es_js__WEBPACK_IMPORTED_MODULE_2__.calcInset)(target, container) : point;
    /**
     * Measure the target and container. If they're the same thing then we
     * use the container's scrollWidth/Height as the target, from there
     * all other calculations can remain the same.
     */
    const targetSize = target === container
        ? { width: container.scrollWidth, height: container.scrollHeight }
        : { width: target.clientWidth, height: target.clientHeight };
    const containerSize = {
        width: container.clientWidth,
        height: container.clientHeight,
    };
    /**
     * Reset the length of the resolved offset array rather than creating a new one.
     * TODO: More reusable data structures for targetSize/containerSize would also be good.
     */
    info[axis].offset.length = 0;
    /**
     * Populate the offset array by resolving the user's offset definition into
     * a list of pixel scroll offets.
     */
    let hasChanged = !info[axis].interpolate;
    const numOffsets = offsetDefinition.length;
    for (let i = 0; i < numOffsets; i++) {
        const offset = (0,_offset_es_js__WEBPACK_IMPORTED_MODULE_4__.resolveOffset)(offsetDefinition[i], containerSize[lengthLabel], targetSize[lengthLabel], inset[axis]);
        if (!hasChanged && offset !== info[axis].interpolatorOffsets[i]) {
            hasChanged = true;
        }
        info[axis].offset[i] = offset;
    }
    /**
     * If the pixel scroll offsets have changed, create a new interpolator function
     * to map scroll value into a progress.
     */
    if (hasChanged) {
        info[axis].interpolate = (0,_motionone_utils__WEBPACK_IMPORTED_MODULE_0__.interpolate)((0,_motionone_utils__WEBPACK_IMPORTED_MODULE_1__.defaultOffset)(numOffsets), info[axis].offset);
        info[axis].interpolatorOffsets = [...info[axis].offset];
    }
    info[axis].progress = info[axis].interpolate(info[axis].current);
}




/***/ }),

/***/ "./node_modules/@motionone/dom/dist/gestures/scroll/offsets/inset.es.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@motionone/dom/dist/gestures/scroll/offsets/inset.es.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   calcInset: () => (/* binding */ calcInset)
/* harmony export */ });
function calcInset(element, container) {
    let inset = { x: 0, y: 0 };
    let current = element;
    while (current && current !== container) {
        if (current instanceof HTMLElement) {
            inset.x += current.offsetLeft;
            inset.y += current.offsetTop;
            current = current.offsetParent;
        }
        else if (current instanceof SVGGraphicsElement && "getBBox" in current) {
            const { top, left } = current.getBBox();
            inset.x += left;
            inset.y += top;
            /**
             * Assign the next parent element as the <svg /> tag.
             */
            while (current && current.tagName !== "svg") {
                current = current.parentNode;
            }
        }
    }
    return inset;
}




/***/ }),

/***/ "./node_modules/@motionone/dom/dist/gestures/scroll/offsets/offset.es.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@motionone/dom/dist/gestures/scroll/offsets/offset.es.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   resolveOffset: () => (/* binding */ resolveOffset)
/* harmony export */ });
/* harmony import */ var _motionone_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @motionone/utils */ "./node_modules/@motionone/utils/dist/is-number.es.js");
/* harmony import */ var _motionone_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @motionone/utils */ "./node_modules/@motionone/utils/dist/is-string.es.js");
/* harmony import */ var _edge_es_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./edge.es.js */ "./node_modules/@motionone/dom/dist/gestures/scroll/offsets/edge.es.js");



const defaultOffset = [0, 0];
function resolveOffset(offset, containerLength, targetLength, targetInset) {
    let offsetDefinition = Array.isArray(offset) ? offset : defaultOffset;
    let targetPoint = 0;
    let containerPoint = 0;
    if ((0,_motionone_utils__WEBPACK_IMPORTED_MODULE_0__.isNumber)(offset)) {
        /**
         * If we're provided offset: [0, 0.5, 1] then each number x should become
         * [x, x], so we default to the behaviour of mapping 0 => 0 of both target
         * and container etc.
         */
        offsetDefinition = [offset, offset];
    }
    else if ((0,_motionone_utils__WEBPACK_IMPORTED_MODULE_1__.isString)(offset)) {
        offset = offset.trim();
        if (offset.includes(" ")) {
            offsetDefinition = offset.split(" ");
        }
        else {
            /**
             * If we're provided a definition like "100px" then we want to apply
             * that only to the top of the target point, leaving the container at 0.
             * Whereas a named offset like "end" should be applied to both.
             */
            offsetDefinition = [offset, _edge_es_js__WEBPACK_IMPORTED_MODULE_2__.namedEdges[offset] ? offset : `0`];
        }
    }
    targetPoint = (0,_edge_es_js__WEBPACK_IMPORTED_MODULE_2__.resolveEdge)(offsetDefinition[0], targetLength, targetInset);
    containerPoint = (0,_edge_es_js__WEBPACK_IMPORTED_MODULE_2__.resolveEdge)(offsetDefinition[1], containerLength);
    return targetPoint - containerPoint;
}




/***/ }),

/***/ "./node_modules/@motionone/dom/dist/gestures/scroll/offsets/presets.es.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@motionone/dom/dist/gestures/scroll/offsets/presets.es.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ScrollOffset: () => (/* binding */ ScrollOffset)
/* harmony export */ });
const ScrollOffset = {
    Enter: [
        [0, 1],
        [1, 1],
    ],
    Exit: [
        [0, 0],
        [1, 0],
    ],
    Any: [
        [1, 0],
        [0, 1],
    ],
    All: [
        [0, 0],
        [1, 1],
    ],
};




/***/ }),

/***/ "./node_modules/@motionone/dom/dist/gestures/scroll/on-scroll-handler.es.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@motionone/dom/dist/gestures/scroll/on-scroll-handler.es.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createOnScrollHandler: () => (/* binding */ createOnScrollHandler)
/* harmony export */ });
/* harmony import */ var _motionone_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @motionone/utils */ "./node_modules/@motionone/utils/dist/noop.es.js");
/* harmony import */ var _info_es_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./info.es.js */ "./node_modules/@motionone/dom/dist/gestures/scroll/info.es.js");
/* harmony import */ var _offsets_index_es_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./offsets/index.es.js */ "./node_modules/@motionone/dom/dist/gestures/scroll/offsets/index.es.js");




function measure(container, target = container, info) {
    /**
     * Find inset of target within scrollable container
     */
    info.x.targetOffset = 0;
    info.y.targetOffset = 0;
    if (target !== container) {
        let node = target;
        while (node && node != container) {
            info.x.targetOffset += node.offsetLeft;
            info.y.targetOffset += node.offsetTop;
            node = node.offsetParent;
        }
    }
    info.x.targetLength =
        target === container ? target.scrollWidth : target.clientWidth;
    info.y.targetLength =
        target === container ? target.scrollHeight : target.clientHeight;
    info.x.containerLength = container.clientWidth;
    info.y.containerLength = container.clientHeight;
}
function createOnScrollHandler(element, onScroll, info, options = {}) {
    const axis = options.axis || "y";
    return {
        measure: () => measure(element, options.target, info),
        update: (time) => {
            (0,_info_es_js__WEBPACK_IMPORTED_MODULE_1__.updateScrollInfo)(element, info, time);
            if (options.offset || options.target) {
                (0,_offsets_index_es_js__WEBPACK_IMPORTED_MODULE_2__.resolveOffsets)(element, info, options);
            }
        },
        notify: typeof onScroll === "function"
            ? () => onScroll(info)
            : scrubAnimation(onScroll, info[axis]),
    };
}
function scrubAnimation(controls, axisInfo) {
    controls.pause();
    controls.forEachNative((animation, { easing }) => {
        var _a, _b;
        if (animation.updateDuration) {
            if (!easing)
                animation.easing = _motionone_utils__WEBPACK_IMPORTED_MODULE_0__.noopReturn;
            animation.updateDuration(1);
        }
        else {
            const timingOptions = { duration: 1000 };
            if (!easing)
                timingOptions.easing = "linear";
            (_b = (_a = animation.effect) === null || _a === void 0 ? void 0 : _a.updateTiming) === null || _b === void 0 ? void 0 : _b.call(_a, timingOptions);
        }
    });
    return () => {
        controls.currentTime = axisInfo.progress;
    };
}




/***/ }),

/***/ "./node_modules/@motionone/dom/dist/index.es.js":
/*!******************************************************!*\
  !*** ./node_modules/@motionone/dom/dist/index.es.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ScrollOffset: () => (/* reexport safe */ _gestures_scroll_offsets_presets_es_js__WEBPACK_IMPORTED_MODULE_10__.ScrollOffset),
/* harmony export */   animate: () => (/* reexport safe */ _animate_index_es_js__WEBPACK_IMPORTED_MODULE_0__.animate),
/* harmony export */   animateStyle: () => (/* reexport safe */ _animate_animate_style_es_js__WEBPACK_IMPORTED_MODULE_1__.animateStyle),
/* harmony export */   createMotionState: () => (/* reexport safe */ _state_index_es_js__WEBPACK_IMPORTED_MODULE_14__.createMotionState),
/* harmony export */   createStyleString: () => (/* reexport safe */ _animate_utils_style_string_es_js__WEBPACK_IMPORTED_MODULE_16__.createStyleString),
/* harmony export */   createStyles: () => (/* reexport safe */ _animate_utils_style_object_es_js__WEBPACK_IMPORTED_MODULE_15__.createStyles),
/* harmony export */   getAnimationData: () => (/* reexport safe */ _animate_data_es_js__WEBPACK_IMPORTED_MODULE_12__.getAnimationData),
/* harmony export */   getStyleName: () => (/* reexport safe */ _animate_utils_get_style_name_es_js__WEBPACK_IMPORTED_MODULE_13__.getStyleName),
/* harmony export */   glide: () => (/* reexport safe */ _easing_glide_index_es_js__WEBPACK_IMPORTED_MODULE_5__.glide),
/* harmony export */   inView: () => (/* reexport safe */ _gestures_in_view_es_js__WEBPACK_IMPORTED_MODULE_7__.inView),
/* harmony export */   mountedStates: () => (/* reexport safe */ _state_index_es_js__WEBPACK_IMPORTED_MODULE_14__.mountedStates),
/* harmony export */   resize: () => (/* reexport safe */ _gestures_resize_index_es_js__WEBPACK_IMPORTED_MODULE_8__.resize),
/* harmony export */   scroll: () => (/* reexport safe */ _gestures_scroll_index_es_js__WEBPACK_IMPORTED_MODULE_9__.scroll),
/* harmony export */   spring: () => (/* reexport safe */ _easing_spring_index_es_js__WEBPACK_IMPORTED_MODULE_4__.spring),
/* harmony export */   stagger: () => (/* reexport safe */ _utils_stagger_es_js__WEBPACK_IMPORTED_MODULE_3__.stagger),
/* harmony export */   style: () => (/* reexport safe */ _animate_style_es_js__WEBPACK_IMPORTED_MODULE_6__.style),
/* harmony export */   timeline: () => (/* reexport safe */ _timeline_index_es_js__WEBPACK_IMPORTED_MODULE_2__.timeline),
/* harmony export */   withControls: () => (/* reexport safe */ _animate_utils_controls_es_js__WEBPACK_IMPORTED_MODULE_11__.withControls)
/* harmony export */ });
/* harmony import */ var _animate_index_es_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./animate/index.es.js */ "./node_modules/@motionone/dom/dist/animate/index.es.js");
/* harmony import */ var _animate_animate_style_es_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./animate/animate-style.es.js */ "./node_modules/@motionone/dom/dist/animate/animate-style.es.js");
/* harmony import */ var _timeline_index_es_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./timeline/index.es.js */ "./node_modules/@motionone/dom/dist/timeline/index.es.js");
/* harmony import */ var _utils_stagger_es_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/stagger.es.js */ "./node_modules/@motionone/dom/dist/utils/stagger.es.js");
/* harmony import */ var _easing_spring_index_es_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./easing/spring/index.es.js */ "./node_modules/@motionone/dom/dist/easing/spring/index.es.js");
/* harmony import */ var _easing_glide_index_es_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./easing/glide/index.es.js */ "./node_modules/@motionone/dom/dist/easing/glide/index.es.js");
/* harmony import */ var _animate_style_es_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./animate/style.es.js */ "./node_modules/@motionone/dom/dist/animate/style.es.js");
/* harmony import */ var _gestures_in_view_es_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./gestures/in-view.es.js */ "./node_modules/@motionone/dom/dist/gestures/in-view.es.js");
/* harmony import */ var _gestures_resize_index_es_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./gestures/resize/index.es.js */ "./node_modules/@motionone/dom/dist/gestures/resize/index.es.js");
/* harmony import */ var _gestures_scroll_index_es_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./gestures/scroll/index.es.js */ "./node_modules/@motionone/dom/dist/gestures/scroll/index.es.js");
/* harmony import */ var _gestures_scroll_offsets_presets_es_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./gestures/scroll/offsets/presets.es.js */ "./node_modules/@motionone/dom/dist/gestures/scroll/offsets/presets.es.js");
/* harmony import */ var _animate_utils_controls_es_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./animate/utils/controls.es.js */ "./node_modules/@motionone/dom/dist/animate/utils/controls.es.js");
/* harmony import */ var _animate_data_es_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./animate/data.es.js */ "./node_modules/@motionone/dom/dist/animate/data.es.js");
/* harmony import */ var _animate_utils_get_style_name_es_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./animate/utils/get-style-name.es.js */ "./node_modules/@motionone/dom/dist/animate/utils/get-style-name.es.js");
/* harmony import */ var _state_index_es_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./state/index.es.js */ "./node_modules/@motionone/dom/dist/state/index.es.js");
/* harmony import */ var _animate_utils_style_object_es_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./animate/utils/style-object.es.js */ "./node_modules/@motionone/dom/dist/animate/utils/style-object.es.js");
/* harmony import */ var _animate_utils_style_string_es_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./animate/utils/style-string.es.js */ "./node_modules/@motionone/dom/dist/animate/utils/style-string.es.js");



















/***/ }),

/***/ "./node_modules/@motionone/dom/dist/state/gestures/hover.es.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@motionone/dom/dist/state/gestures/hover.es.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   hover: () => (/* binding */ hover)
/* harmony export */ });
/* harmony import */ var _utils_events_es_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/events.es.js */ "./node_modules/@motionone/dom/dist/state/utils/events.es.js");


const mouseEvent = (element, name, action) => (event) => {
    if (event.pointerType && event.pointerType !== "mouse")
        return;
    action();
    (0,_utils_events_es_js__WEBPACK_IMPORTED_MODULE_0__.dispatchPointerEvent)(element, name, event);
};
const hover = {
    isActive: (options) => Boolean(options.hover),
    subscribe: (element, { enable, disable }) => {
        const onEnter = mouseEvent(element, "hoverstart", enable);
        const onLeave = mouseEvent(element, "hoverend", disable);
        element.addEventListener("pointerenter", onEnter);
        element.addEventListener("pointerleave", onLeave);
        return () => {
            element.removeEventListener("pointerenter", onEnter);
            element.removeEventListener("pointerleave", onLeave);
        };
    },
};




/***/ }),

/***/ "./node_modules/@motionone/dom/dist/state/gestures/in-view.es.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@motionone/dom/dist/state/gestures/in-view.es.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   inView: () => (/* binding */ inView)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var _utils_events_es_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/events.es.js */ "./node_modules/@motionone/dom/dist/state/utils/events.es.js");
/* harmony import */ var _gestures_in_view_es_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../gestures/in-view.es.js */ "./node_modules/@motionone/dom/dist/gestures/in-view.es.js");




const inView = {
    isActive: (options) => Boolean(options.inView),
    subscribe: (element, { enable, disable }, { inViewOptions = {} }) => {
        const { once } = inViewOptions, viewOptions = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__rest)(inViewOptions, ["once"]);
        return (0,_gestures_in_view_es_js__WEBPACK_IMPORTED_MODULE_2__.inView)(element, (enterEntry) => {
            enable();
            (0,_utils_events_es_js__WEBPACK_IMPORTED_MODULE_1__.dispatchViewEvent)(element, "viewenter", enterEntry);
            if (!once) {
                return (leaveEntry) => {
                    disable();
                    (0,_utils_events_es_js__WEBPACK_IMPORTED_MODULE_1__.dispatchViewEvent)(element, "viewleave", leaveEntry);
                };
            }
        }, viewOptions);
    },
};




/***/ }),

/***/ "./node_modules/@motionone/dom/dist/state/gestures/press.es.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@motionone/dom/dist/state/gestures/press.es.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   press: () => (/* binding */ press)
/* harmony export */ });
/* harmony import */ var _utils_events_es_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/events.es.js */ "./node_modules/@motionone/dom/dist/state/utils/events.es.js");


const press = {
    isActive: (options) => Boolean(options.press),
    subscribe: (element, { enable, disable }) => {
        const onPointerUp = (event) => {
            disable();
            (0,_utils_events_es_js__WEBPACK_IMPORTED_MODULE_0__.dispatchPointerEvent)(element, "pressend", event);
            window.removeEventListener("pointerup", onPointerUp);
        };
        const onPointerDown = (event) => {
            enable();
            (0,_utils_events_es_js__WEBPACK_IMPORTED_MODULE_0__.dispatchPointerEvent)(element, "pressstart", event);
            window.addEventListener("pointerup", onPointerUp);
        };
        element.addEventListener("pointerdown", onPointerDown);
        return () => {
            element.removeEventListener("pointerdown", onPointerDown);
            window.removeEventListener("pointerup", onPointerUp);
        };
    },
};




/***/ }),

/***/ "./node_modules/@motionone/dom/dist/state/index.es.js":
/*!************************************************************!*\
  !*** ./node_modules/@motionone/dom/dist/state/index.es.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createMotionState: () => (/* binding */ createMotionState),
/* harmony export */   mountedStates: () => (/* binding */ mountedStates)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var hey_listen__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! hey-listen */ "./node_modules/hey-listen/dist/hey-listen.es.js");
/* harmony import */ var _motionone_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @motionone/utils */ "./node_modules/@motionone/utils/dist/noop.es.js");
/* harmony import */ var _animate_animate_style_es_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../animate/animate-style.es.js */ "./node_modules/@motionone/dom/dist/animate/animate-style.es.js");
/* harmony import */ var _animate_style_es_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../animate/style.es.js */ "./node_modules/@motionone/dom/dist/animate/style.es.js");
/* harmony import */ var _animate_utils_options_es_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../animate/utils/options.es.js */ "./node_modules/@motionone/dom/dist/animate/utils/options.es.js");
/* harmony import */ var _utils_has_changed_es_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/has-changed.es.js */ "./node_modules/@motionone/dom/dist/state/utils/has-changed.es.js");
/* harmony import */ var _utils_resolve_variant_es_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/resolve-variant.es.js */ "./node_modules/@motionone/dom/dist/state/utils/resolve-variant.es.js");
/* harmony import */ var _utils_schedule_es_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils/schedule.es.js */ "./node_modules/@motionone/dom/dist/state/utils/schedule.es.js");
/* harmony import */ var _gestures_in_view_es_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./gestures/in-view.es.js */ "./node_modules/@motionone/dom/dist/state/gestures/in-view.es.js");
/* harmony import */ var _gestures_hover_es_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./gestures/hover.es.js */ "./node_modules/@motionone/dom/dist/state/gestures/hover.es.js");
/* harmony import */ var _gestures_press_es_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./gestures/press.es.js */ "./node_modules/@motionone/dom/dist/state/gestures/press.es.js");
/* harmony import */ var _utils_events_es_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./utils/events.es.js */ "./node_modules/@motionone/dom/dist/state/utils/events.es.js");














const gestures = { inView: _gestures_in_view_es_js__WEBPACK_IMPORTED_MODULE_9__.inView, hover: _gestures_hover_es_js__WEBPACK_IMPORTED_MODULE_10__.hover, press: _gestures_press_es_js__WEBPACK_IMPORTED_MODULE_11__.press };
/**
 * A list of state types, in priority order. If a value is defined in
 * a righter-most type, it will override any definition in a lefter-most.
 */
const stateTypes = ["initial", "animate", ...Object.keys(gestures), "exit"];
/**
 * A global store of all generated motion states. This can be used to lookup
 * a motion state for a given Element.
 */
const mountedStates = new WeakMap();
function createMotionState(options = {}, parent) {
    /**
     * The element represented by the motion state. This is an empty reference
     * when we create the state to support SSR and allow for later mounting
     * in view libraries.
     *
     * @ts-ignore
     */
    let element;
    /**
     * Calculate a depth that we can use to order motion states by tree depth.
     */
    let depth = parent ? parent.getDepth() + 1 : 0;
    /**
     * Track which states are currently active.
     */
    const activeStates = { initial: true, animate: true };
    /**
     * A map of functions that, when called, will remove event listeners for
     * a given gesture.
     */
    const gestureSubscriptions = {};
    /**
     * Initialise a context to share through motion states. This
     * will be populated by variant names (if any).
     */
    const context = {};
    for (const name of stateTypes) {
        context[name] =
            typeof options[name] === "string"
                ? options[name]
                : parent === null || parent === void 0 ? void 0 : parent.getContext()[name];
    }
    /**
     * If initial is set to false we use the animate prop as the initial
     * animation state.
     */
    const initialVariantSource = options.initial === false ? "animate" : "initial";
    /**
     * Destructure an initial target out from the resolved initial variant.
     */
    let _a = (0,_utils_resolve_variant_es_js__WEBPACK_IMPORTED_MODULE_7__.resolveVariant)(options[initialVariantSource] || context[initialVariantSource], options.variants) || {}, target = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__rest)(_a, ["transition"]);
    /**
     * The base target is a cached map of values that we'll use to animate
     * back to if a value is removed from all active state types. This
     * is usually the initial value as read from the DOM, for instance if
     * it hasn't been defined in initial.
     */
    const baseTarget = Object.assign({}, target);
    /**
     * A generator that will be processed by the global animation scheduler.
     * This yeilds when it switches from reading the DOM to writing to it
     * to prevent layout thrashing.
     */
    function* animateUpdates() {
        var _a, _b;
        const prevTarget = target;
        target = {};
        const animationOptions = {};
        for (const name of stateTypes) {
            if (!activeStates[name])
                continue;
            const variant = (0,_utils_resolve_variant_es_js__WEBPACK_IMPORTED_MODULE_7__.resolveVariant)(options[name]);
            if (!variant)
                continue;
            for (const key in variant) {
                if (key === "transition")
                    continue;
                target[key] = variant[key];
                animationOptions[key] = (0,_animate_utils_options_es_js__WEBPACK_IMPORTED_MODULE_5__.getOptions)((_b = (_a = variant.transition) !== null && _a !== void 0 ? _a : options.transition) !== null && _b !== void 0 ? _b : {}, key);
            }
        }
        const allTargetKeys = new Set([
            ...Object.keys(target),
            ...Object.keys(prevTarget),
        ]);
        const animationFactories = [];
        allTargetKeys.forEach((key) => {
            var _a;
            if (target[key] === undefined) {
                target[key] = baseTarget[key];
            }
            if ((0,_utils_has_changed_es_js__WEBPACK_IMPORTED_MODULE_6__.hasChanged)(prevTarget[key], target[key])) {
                (_a = baseTarget[key]) !== null && _a !== void 0 ? _a : (baseTarget[key] = _animate_style_es_js__WEBPACK_IMPORTED_MODULE_4__.style.get(element, key));
                animationFactories.push((0,_animate_animate_style_es_js__WEBPACK_IMPORTED_MODULE_3__.animateStyle)(element, key, target[key], animationOptions[key]));
            }
        });
        // Wait for all animation states to read from the DOM
        yield;
        const animations = animationFactories
            .map((factory) => factory())
            .filter(Boolean);
        if (!animations.length)
            return;
        const animationTarget = target;
        element.dispatchEvent((0,_utils_events_es_js__WEBPACK_IMPORTED_MODULE_12__.motionEvent)("motionstart", animationTarget));
        Promise.all(animations.map((animation) => animation.finished))
            .then(() => {
            element.dispatchEvent((0,_utils_events_es_js__WEBPACK_IMPORTED_MODULE_12__.motionEvent)("motioncomplete", animationTarget));
        })
            .catch(_motionone_utils__WEBPACK_IMPORTED_MODULE_2__.noop);
    }
    const setGesture = (name, isActive) => () => {
        activeStates[name] = isActive;
        (0,_utils_schedule_es_js__WEBPACK_IMPORTED_MODULE_8__.scheduleAnimation)(state);
    };
    const updateGestureSubscriptions = () => {
        for (const name in gestures) {
            const isGestureActive = gestures[name].isActive(options);
            const remove = gestureSubscriptions[name];
            if (isGestureActive && !remove) {
                gestureSubscriptions[name] = gestures[name].subscribe(element, {
                    enable: setGesture(name, true),
                    disable: setGesture(name, false),
                }, options);
            }
            else if (!isGestureActive && remove) {
                remove();
                delete gestureSubscriptions[name];
            }
        }
    };
    const state = {
        update: (newOptions) => {
            if (!element)
                return;
            options = newOptions;
            updateGestureSubscriptions();
            (0,_utils_schedule_es_js__WEBPACK_IMPORTED_MODULE_8__.scheduleAnimation)(state);
        },
        setActive: (name, isActive) => {
            if (!element)
                return;
            activeStates[name] = isActive;
            (0,_utils_schedule_es_js__WEBPACK_IMPORTED_MODULE_8__.scheduleAnimation)(state);
        },
        animateUpdates,
        getDepth: () => depth,
        getTarget: () => target,
        getOptions: () => options,
        getContext: () => context,
        mount: (newElement) => {
            (0,hey_listen__WEBPACK_IMPORTED_MODULE_1__.invariant)(Boolean(newElement), "Animation state must be mounted with valid Element");
            element = newElement;
            mountedStates.set(element, state);
            updateGestureSubscriptions();
            return () => {
                mountedStates.delete(element);
                (0,_utils_schedule_es_js__WEBPACK_IMPORTED_MODULE_8__.unscheduleAnimation)(state);
                for (const key in gestureSubscriptions) {
                    gestureSubscriptions[key]();
                }
            };
        },
        isMounted: () => Boolean(element),
    };
    return state;
}




/***/ }),

/***/ "./node_modules/@motionone/dom/dist/state/utils/events.es.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@motionone/dom/dist/state/utils/events.es.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   dispatchPointerEvent: () => (/* binding */ dispatchPointerEvent),
/* harmony export */   dispatchViewEvent: () => (/* binding */ dispatchViewEvent),
/* harmony export */   motionEvent: () => (/* binding */ motionEvent)
/* harmony export */ });
const motionEvent = (name, target) => new CustomEvent(name, { detail: { target } });
function dispatchPointerEvent(element, name, event) {
    element.dispatchEvent(new CustomEvent(name, { detail: { originalEvent: event } }));
}
function dispatchViewEvent(element, name, entry) {
    element.dispatchEvent(new CustomEvent(name, { detail: { originalEntry: entry } }));
}




/***/ }),

/***/ "./node_modules/@motionone/dom/dist/state/utils/has-changed.es.js":
/*!************************************************************************!*\
  !*** ./node_modules/@motionone/dom/dist/state/utils/has-changed.es.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   hasChanged: () => (/* binding */ hasChanged),
/* harmony export */   shallowCompare: () => (/* binding */ shallowCompare)
/* harmony export */ });
function hasChanged(a, b) {
    if (typeof a !== typeof b)
        return true;
    if (Array.isArray(a) && Array.isArray(b))
        return !shallowCompare(a, b);
    return a !== b;
}
function shallowCompare(next, prev) {
    const prevLength = prev.length;
    if (prevLength !== next.length)
        return false;
    for (let i = 0; i < prevLength; i++) {
        if (prev[i] !== next[i])
            return false;
    }
    return true;
}




/***/ }),

/***/ "./node_modules/@motionone/dom/dist/state/utils/is-variant.es.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@motionone/dom/dist/state/utils/is-variant.es.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isVariant: () => (/* binding */ isVariant)
/* harmony export */ });
function isVariant(definition) {
    return typeof definition === "object";
}




/***/ }),

/***/ "./node_modules/@motionone/dom/dist/state/utils/resolve-variant.es.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@motionone/dom/dist/state/utils/resolve-variant.es.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   resolveVariant: () => (/* binding */ resolveVariant)
/* harmony export */ });
/* harmony import */ var _is_variant_es_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is-variant.es.js */ "./node_modules/@motionone/dom/dist/state/utils/is-variant.es.js");


function resolveVariant(definition, variants) {
    if ((0,_is_variant_es_js__WEBPACK_IMPORTED_MODULE_0__.isVariant)(definition)) {
        return definition;
    }
    else if (definition && variants) {
        return variants[definition];
    }
}




/***/ }),

/***/ "./node_modules/@motionone/dom/dist/state/utils/schedule.es.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@motionone/dom/dist/state/utils/schedule.es.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   scheduleAnimation: () => (/* binding */ scheduleAnimation),
/* harmony export */   unscheduleAnimation: () => (/* binding */ unscheduleAnimation)
/* harmony export */ });
/* harmony import */ var _motionone_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @motionone/utils */ "./node_modules/@motionone/utils/dist/array.es.js");


let scheduled = undefined;
function processScheduledAnimations() {
    if (!scheduled)
        return;
    const generators = scheduled.sort(compareByDepth).map(fireAnimateUpdates);
    generators.forEach(fireNext);
    generators.forEach(fireNext);
    scheduled = undefined;
}
function scheduleAnimation(state) {
    if (!scheduled) {
        scheduled = [state];
        requestAnimationFrame(processScheduledAnimations);
    }
    else {
        (0,_motionone_utils__WEBPACK_IMPORTED_MODULE_0__.addUniqueItem)(scheduled, state);
    }
}
function unscheduleAnimation(state) {
    scheduled && (0,_motionone_utils__WEBPACK_IMPORTED_MODULE_0__.removeItem)(scheduled, state);
}
const compareByDepth = (a, b) => a.getDepth() - b.getDepth();
const fireAnimateUpdates = (state) => state.animateUpdates();
const fireNext = (iterator) => iterator.next();




/***/ }),

/***/ "./node_modules/@motionone/dom/dist/timeline/index.es.js":
/*!***************************************************************!*\
  !*** ./node_modules/@motionone/dom/dist/timeline/index.es.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createAnimationsFromTimeline: () => (/* binding */ createAnimationsFromTimeline),
/* harmony export */   timeline: () => (/* binding */ timeline)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var hey_listen__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! hey-listen */ "./node_modules/hey-listen/dist/hey-listen.es.js");
/* harmony import */ var _motionone_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @motionone/utils */ "./node_modules/@motionone/utils/dist/defaults.es.js");
/* harmony import */ var _motionone_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @motionone/utils */ "./node_modules/@motionone/utils/dist/is-easing-generator.es.js");
/* harmony import */ var _motionone_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @motionone/utils */ "./node_modules/@motionone/utils/dist/is-string.es.js");
/* harmony import */ var _motionone_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @motionone/utils */ "./node_modules/@motionone/utils/dist/offset.es.js");
/* harmony import */ var _motionone_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @motionone/utils */ "./node_modules/@motionone/utils/dist/progress.es.js");
/* harmony import */ var _utils_stagger_es_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/stagger.es.js */ "./node_modules/@motionone/dom/dist/utils/stagger.es.js");
/* harmony import */ var _animate_animate_style_es_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../animate/animate-style.es.js */ "./node_modules/@motionone/dom/dist/animate/animate-style.es.js");
/* harmony import */ var _animate_utils_controls_es_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../animate/utils/controls.es.js */ "./node_modules/@motionone/dom/dist/animate/utils/controls.es.js");
/* harmony import */ var _animate_utils_keyframes_es_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../animate/utils/keyframes.es.js */ "./node_modules/@motionone/dom/dist/animate/utils/keyframes.es.js");
/* harmony import */ var _animate_utils_options_es_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../animate/utils/options.es.js */ "./node_modules/@motionone/dom/dist/animate/utils/options.es.js");
/* harmony import */ var _utils_resolve_elements_es_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../utils/resolve-elements.es.js */ "./node_modules/@motionone/dom/dist/utils/resolve-elements.es.js");
/* harmony import */ var _animate_utils_transforms_es_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../animate/utils/transforms.es.js */ "./node_modules/@motionone/dom/dist/animate/utils/transforms.es.js");
/* harmony import */ var _utils_calc_time_es_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./utils/calc-time.es.js */ "./node_modules/@motionone/dom/dist/timeline/utils/calc-time.es.js");
/* harmony import */ var _utils_edit_es_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./utils/edit.es.js */ "./node_modules/@motionone/dom/dist/timeline/utils/edit.es.js");
/* harmony import */ var _utils_sort_es_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./utils/sort.es.js */ "./node_modules/@motionone/dom/dist/timeline/utils/sort.es.js");














function timeline(definition, options = {}) {
    var _a;
    const animationDefinitions = createAnimationsFromTimeline(definition, options);
    /**
     * Create and start animations
     */
    const animationFactories = animationDefinitions
        .map((definition) => (0,_animate_animate_style_es_js__WEBPACK_IMPORTED_MODULE_8__.animateStyle)(...definition))
        .filter(Boolean);
    return (0,_animate_utils_controls_es_js__WEBPACK_IMPORTED_MODULE_9__.withControls)(animationFactories, options, 
    // Get the duration from the first animation definition
    (_a = animationDefinitions[0]) === null || _a === void 0 ? void 0 : _a[3].duration);
}
function createAnimationsFromTimeline(definition, _a = {}) {
    var { defaultOptions = {} } = _a, timelineOptions = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__rest)(_a, ["defaultOptions"]);
    const animationDefinitions = [];
    const elementSequences = new Map();
    const elementCache = {};
    const timeLabels = new Map();
    let prevTime = 0;
    let currentTime = 0;
    let totalDuration = 0;
    /**
     * Build the timeline by mapping over the definition array and converting
     * the definitions into keyframes and offsets with absolute time values.
     * These will later get converted into relative offsets in a second pass.
     */
    for (let i = 0; i < definition.length; i++) {
        const segment = definition[i];
        /**
         * If this is a timeline label, mark it and skip the rest of this iteration.
         */
        if ((0,_motionone_utils__WEBPACK_IMPORTED_MODULE_4__.isString)(segment)) {
            timeLabels.set(segment, currentTime);
            continue;
        }
        else if (!Array.isArray(segment)) {
            timeLabels.set(segment.name, (0,_utils_calc_time_es_js__WEBPACK_IMPORTED_MODULE_14__.calcNextTime)(currentTime, segment.at, prevTime, timeLabels));
            continue;
        }
        const [elementDefinition, keyframes, options = {}] = segment;
        /**
         * If a relative or absolute time value has been specified we need to resolve
         * it in relation to the currentTime.
         */
        if (options.at !== undefined) {
            currentTime = (0,_utils_calc_time_es_js__WEBPACK_IMPORTED_MODULE_14__.calcNextTime)(currentTime, options.at, prevTime, timeLabels);
        }
        /**
         * Keep track of the maximum duration in this definition. This will be
         * applied to currentTime once the definition has been parsed.
         */
        let maxDuration = 0;
        /**
         * Find all the elements specified in the definition and parse value
         * keyframes from their timeline definitions.
         */
        const elements = (0,_utils_resolve_elements_es_js__WEBPACK_IMPORTED_MODULE_12__.resolveElements)(elementDefinition, elementCache);
        const numElements = elements.length;
        for (let elementIndex = 0; elementIndex < numElements; elementIndex++) {
            const element = elements[elementIndex];
            const elementSequence = getElementSequence(element, elementSequences);
            for (const key in keyframes) {
                const valueSequence = getValueSequence(key, elementSequence);
                let valueKeyframes = (0,_animate_utils_keyframes_es_js__WEBPACK_IMPORTED_MODULE_10__.keyframesList)(keyframes[key]);
                const valueOptions = (0,_animate_utils_options_es_js__WEBPACK_IMPORTED_MODULE_11__.getOptions)(options, key);
                let { duration = defaultOptions.duration || _motionone_utils__WEBPACK_IMPORTED_MODULE_2__.defaults.duration, easing = defaultOptions.easing || _motionone_utils__WEBPACK_IMPORTED_MODULE_2__.defaults.easing, } = valueOptions;
                if ((0,_motionone_utils__WEBPACK_IMPORTED_MODULE_3__.isEasingGenerator)(easing)) {
                    const valueIsTransform = (0,_animate_utils_transforms_es_js__WEBPACK_IMPORTED_MODULE_13__.isTransform)(key);
                    (0,hey_listen__WEBPACK_IMPORTED_MODULE_1__.invariant)(valueKeyframes.length === 2 || !valueIsTransform, "spring must be provided 2 keyframes within timeline");
                    const custom = easing.createAnimation(valueKeyframes, 
                    // TODO We currently only support explicit keyframes
                    // so this doesn't currently read from the DOM
                    () => "0", valueIsTransform);
                    easing = custom.easing;
                    if (custom.keyframes !== undefined)
                        valueKeyframes = custom.keyframes;
                    if (custom.duration !== undefined)
                        duration = custom.duration;
                }
                const delay = (0,_utils_stagger_es_js__WEBPACK_IMPORTED_MODULE_7__.resolveOption)(options.delay, elementIndex, numElements) || 0;
                const startTime = currentTime + delay;
                const targetTime = startTime + duration;
                /**
                 *
                 */
                let { offset = (0,_motionone_utils__WEBPACK_IMPORTED_MODULE_5__.defaultOffset)(valueKeyframes.length) } = valueOptions;
                /**
                 * If there's only one offset of 0, fill in a second with length 1
                 *
                 * TODO: Ensure there's a test that covers this removal
                 */
                if (offset.length === 1 && offset[0] === 0) {
                    offset[1] = 1;
                }
                /**
                 * Fill out if offset if fewer offsets than keyframes
                 */
                const remainder = length - valueKeyframes.length;
                remainder > 0 && (0,_motionone_utils__WEBPACK_IMPORTED_MODULE_5__.fillOffset)(offset, remainder);
                /**
                 * If only one value has been set, ie [1], push a null to the start of
                 * the keyframe array. This will let us mark a keyframe at this point
                 * that will later be hydrated with the previous value.
                 */
                valueKeyframes.length === 1 && valueKeyframes.unshift(null);
                /**
                 * Add keyframes, mapping offsets to absolute time.
                 */
                (0,_utils_edit_es_js__WEBPACK_IMPORTED_MODULE_15__.addKeyframes)(valueSequence, valueKeyframes, easing, offset, startTime, targetTime);
                maxDuration = Math.max(delay + duration, maxDuration);
                totalDuration = Math.max(targetTime, totalDuration);
            }
        }
        prevTime = currentTime;
        currentTime += maxDuration;
    }
    /**
     * For every element and value combination create a new animation.
     */
    elementSequences.forEach((valueSequences, element) => {
        for (const key in valueSequences) {
            const valueSequence = valueSequences[key];
            /**
             * Arrange all the keyframes in ascending time order.
             */
            valueSequence.sort(_utils_sort_es_js__WEBPACK_IMPORTED_MODULE_16__.compareByTime);
            const keyframes = [];
            const valueOffset = [];
            const valueEasing = [];
            /**
             * For each keyframe, translate absolute times into
             * relative offsets based on the total duration of the timeline.
             */
            for (let i = 0; i < valueSequence.length; i++) {
                const { at, value, easing } = valueSequence[i];
                keyframes.push(value);
                valueOffset.push((0,_motionone_utils__WEBPACK_IMPORTED_MODULE_6__.progress)(0, totalDuration, at));
                valueEasing.push(easing || _motionone_utils__WEBPACK_IMPORTED_MODULE_2__.defaults.easing);
            }
            /**
             * If the first keyframe doesn't land on offset: 0
             * provide one by duplicating the initial keyframe. This ensures
             * it snaps to the first keyframe when the animation starts.
             */
            if (valueOffset[0] !== 0) {
                valueOffset.unshift(0);
                keyframes.unshift(keyframes[0]);
                valueEasing.unshift("linear");
            }
            /**
             * If the last keyframe doesn't land on offset: 1
             * provide one with a null wildcard value. This will ensure it
             * stays static until the end of the animation.
             */
            if (valueOffset[valueOffset.length - 1] !== 1) {
                valueOffset.push(1);
                keyframes.push(null);
            }
            animationDefinitions.push([
                element,
                key,
                keyframes,
                Object.assign(Object.assign(Object.assign({}, defaultOptions), { duration: totalDuration, easing: valueEasing, offset: valueOffset }), timelineOptions),
            ]);
        }
    });
    return animationDefinitions;
}
function getElementSequence(element, sequences) {
    !sequences.has(element) && sequences.set(element, {});
    return sequences.get(element);
}
function getValueSequence(name, sequences) {
    if (!sequences[name])
        sequences[name] = [];
    return sequences[name];
}




/***/ }),

/***/ "./node_modules/@motionone/dom/dist/timeline/utils/calc-time.es.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@motionone/dom/dist/timeline/utils/calc-time.es.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   calcNextTime: () => (/* binding */ calcNextTime)
/* harmony export */ });
/* harmony import */ var _motionone_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @motionone/utils */ "./node_modules/@motionone/utils/dist/is-number.es.js");


function calcNextTime(current, next, prev, labels) {
    var _a;
    if ((0,_motionone_utils__WEBPACK_IMPORTED_MODULE_0__.isNumber)(next)) {
        return next;
    }
    else if (next.startsWith("-") || next.startsWith("+")) {
        return Math.max(0, current + parseFloat(next));
    }
    else if (next === "<") {
        return prev;
    }
    else {
        return (_a = labels.get(next)) !== null && _a !== void 0 ? _a : current;
    }
}




/***/ }),

/***/ "./node_modules/@motionone/dom/dist/timeline/utils/edit.es.js":
/*!********************************************************************!*\
  !*** ./node_modules/@motionone/dom/dist/timeline/utils/edit.es.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   addKeyframes: () => (/* binding */ addKeyframes),
/* harmony export */   eraseKeyframes: () => (/* binding */ eraseKeyframes)
/* harmony export */ });
/* harmony import */ var _motionone_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @motionone/utils */ "./node_modules/@motionone/utils/dist/array.es.js");
/* harmony import */ var _motionone_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @motionone/utils */ "./node_modules/@motionone/utils/dist/easing.es.js");
/* harmony import */ var _motionone_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @motionone/utils */ "./node_modules/@motionone/utils/dist/mix.es.js");


function eraseKeyframes(sequence, startTime, endTime) {
    for (let i = 0; i < sequence.length; i++) {
        const keyframe = sequence[i];
        if (keyframe.at > startTime && keyframe.at < endTime) {
            (0,_motionone_utils__WEBPACK_IMPORTED_MODULE_0__.removeItem)(sequence, keyframe);
            // If we remove this item we have to push the pointer back one
            i--;
        }
    }
}
function addKeyframes(sequence, keyframes, easing, offset, startTime, endTime) {
    /**
     * Erase every existing value between currentTime and targetTime,
     * this will essentially splice this timeline into any currently
     * defined ones.
     */
    eraseKeyframes(sequence, startTime, endTime);
    for (let i = 0; i < keyframes.length; i++) {
        sequence.push({
            value: keyframes[i],
            at: (0,_motionone_utils__WEBPACK_IMPORTED_MODULE_2__.mix)(startTime, endTime, offset[i]),
            easing: (0,_motionone_utils__WEBPACK_IMPORTED_MODULE_1__.getEasingForSegment)(easing, i),
        });
    }
}




/***/ }),

/***/ "./node_modules/@motionone/dom/dist/timeline/utils/sort.es.js":
/*!********************************************************************!*\
  !*** ./node_modules/@motionone/dom/dist/timeline/utils/sort.es.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   compareByTime: () => (/* binding */ compareByTime)
/* harmony export */ });
function compareByTime(a, b) {
    if (a.at === b.at) {
        return a.value === null ? 1 : -1;
    }
    else {
        return a.at - b.at;
    }
}




/***/ }),

/***/ "./node_modules/@motionone/dom/dist/utils/resolve-elements.es.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@motionone/dom/dist/utils/resolve-elements.es.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   resolveElements: () => (/* binding */ resolveElements)
/* harmony export */ });
function resolveElements(elements, selectorCache) {
    var _a;
    if (typeof elements === "string") {
        if (selectorCache) {
            (_a = selectorCache[elements]) !== null && _a !== void 0 ? _a : (selectorCache[elements] = document.querySelectorAll(elements));
            elements = selectorCache[elements];
        }
        else {
            elements = document.querySelectorAll(elements);
        }
    }
    else if (elements instanceof Element) {
        elements = [elements];
    }
    /**
     * Return an empty array
     */
    return Array.from(elements || []);
}




/***/ }),

/***/ "./node_modules/@motionone/dom/dist/utils/stagger.es.js":
/*!**************************************************************!*\
  !*** ./node_modules/@motionone/dom/dist/utils/stagger.es.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getFromIndex: () => (/* binding */ getFromIndex),
/* harmony export */   resolveOption: () => (/* binding */ resolveOption),
/* harmony export */   stagger: () => (/* binding */ stagger)
/* harmony export */ });
/* harmony import */ var _motionone_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @motionone/utils */ "./node_modules/@motionone/utils/dist/is-number.es.js");
/* harmony import */ var _motionone_animation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @motionone/animation */ "./node_modules/@motionone/animation/dist/utils/easing.es.js");



function stagger(duration = 0.1, { start = 0, from = 0, easing } = {}) {
    return (i, total) => {
        const fromIndex = (0,_motionone_utils__WEBPACK_IMPORTED_MODULE_0__.isNumber)(from) ? from : getFromIndex(from, total);
        const distance = Math.abs(fromIndex - i);
        let delay = duration * distance;
        if (easing) {
            const maxDelay = total * duration;
            const easingFunction = (0,_motionone_animation__WEBPACK_IMPORTED_MODULE_1__.getEasingFunction)(easing);
            delay = easingFunction(delay / maxDelay) * maxDelay;
        }
        return start + delay;
    };
}
function getFromIndex(from, total) {
    if (from === "first") {
        return 0;
    }
    else {
        const lastIndex = total - 1;
        return from === "last" ? lastIndex : lastIndex / 2;
    }
}
function resolveOption(option, i, total) {
    return typeof option === "function"
        ? option(i, total)
        : option;
}




/***/ }),

/***/ "./node_modules/@motionone/easing/dist/cubic-bezier.es.js":
/*!****************************************************************!*\
  !*** ./node_modules/@motionone/easing/dist/cubic-bezier.es.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   cubicBezier: () => (/* binding */ cubicBezier)
/* harmony export */ });
/* harmony import */ var _motionone_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @motionone/utils */ "./node_modules/@motionone/utils/dist/noop.es.js");


/*
  Bezier function generator

  This has been modified from Gaëtan Renaudeau's BezierEasing
  https://github.com/gre/bezier-easing/blob/master/src/index.js
  https://github.com/gre/bezier-easing/blob/master/LICENSE
  
  I've removed the newtonRaphsonIterate algo because in benchmarking it
  wasn't noticiably faster than binarySubdivision, indeed removing it
  usually improved times, depending on the curve.

  I also removed the lookup table, as for the added bundle size and loop we're
  only cutting ~4 or so subdivision iterations. I bumped the max iterations up
  to 12 to compensate and this still tended to be faster for no perceivable
  loss in accuracy.

  Usage
    const easeOut = cubicBezier(.17,.67,.83,.67);
    const x = easeOut(0.5); // returns 0.627...
*/
// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.
const calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) * t;
const subdivisionPrecision = 0.0000001;
const subdivisionMaxIterations = 12;
function binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {
    let currentX;
    let currentT;
    let i = 0;
    do {
        currentT = lowerBound + (upperBound - lowerBound) / 2.0;
        currentX = calcBezier(currentT, mX1, mX2) - x;
        if (currentX > 0.0) {
            upperBound = currentT;
        }
        else {
            lowerBound = currentT;
        }
    } while (Math.abs(currentX) > subdivisionPrecision &&
        ++i < subdivisionMaxIterations);
    return currentT;
}
function cubicBezier(mX1, mY1, mX2, mY2) {
    // If this is a linear gradient, return linear easing
    if (mX1 === mY1 && mX2 === mY2)
        return _motionone_utils__WEBPACK_IMPORTED_MODULE_0__.noopReturn;
    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);
    // If animation is at start/end, return t without easing
    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);
}




/***/ }),

/***/ "./node_modules/@motionone/easing/dist/steps.es.js":
/*!*********************************************************!*\
  !*** ./node_modules/@motionone/easing/dist/steps.es.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   steps: () => (/* binding */ steps)
/* harmony export */ });
/* harmony import */ var _motionone_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @motionone/utils */ "./node_modules/@motionone/utils/dist/clamp.es.js");


const steps = (steps, direction = "end") => (progress) => {
    progress =
        direction === "end"
            ? Math.min(progress, 0.999)
            : Math.max(progress, 0.001);
    const expanded = progress * steps;
    const rounded = direction === "end" ? Math.floor(expanded) : Math.ceil(expanded);
    return (0,_motionone_utils__WEBPACK_IMPORTED_MODULE_0__.clamp)(0, 1, rounded / steps);
};




/***/ }),

/***/ "./node_modules/@motionone/generators/dist/glide/index.es.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@motionone/generators/dist/glide/index.es.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   glide: () => (/* binding */ glide)
/* harmony export */ });
/* harmony import */ var _motionone_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @motionone/utils */ "./node_modules/@motionone/utils/dist/time.es.js");
/* harmony import */ var _utils_velocity_es_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/velocity.es.js */ "./node_modules/@motionone/generators/dist/utils/velocity.es.js");
/* harmony import */ var _spring_index_es_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../spring/index.es.js */ "./node_modules/@motionone/generators/dist/spring/index.es.js");




const glide = ({ from = 0, velocity = 0.0, power = 0.8, decay = 0.325, bounceDamping, bounceStiffness, changeTarget, min, max, restDistance = 0.5, restSpeed, }) => {
    decay = _motionone_utils__WEBPACK_IMPORTED_MODULE_0__.time.ms(decay);
    const state = {
        hasReachedTarget: false,
        done: false,
        current: from,
        target: from,
    };
    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);
    const nearestBoundary = (v) => {
        if (min === undefined)
            return max;
        if (max === undefined)
            return min;
        return Math.abs(min - v) < Math.abs(max - v) ? min : max;
    };
    let amplitude = power * velocity;
    const ideal = from + amplitude;
    const target = changeTarget === undefined ? ideal : changeTarget(ideal);
    state.target = target;
    /**
     * If the target has changed we need to re-calculate the amplitude, otherwise
     * the animation will start from the wrong position.
     */
    if (target !== ideal)
        amplitude = target - from;
    const calcDelta = (t) => -amplitude * Math.exp(-t / decay);
    const calcLatest = (t) => target + calcDelta(t);
    const applyFriction = (t) => {
        const delta = calcDelta(t);
        const latest = calcLatest(t);
        state.done = Math.abs(delta) <= restDistance;
        state.current = state.done ? target : latest;
    };
    /**
     * Ideally this would resolve for t in a stateless way, we could
     * do that by always precalculating the animation but as we know
     * this will be done anyway we can assume that spring will
     * be discovered during that.
     */
    let timeReachedBoundary;
    let spring$1;
    const checkCatchBoundary = (t) => {
        if (!isOutOfBounds(state.current))
            return;
        timeReachedBoundary = t;
        spring$1 = (0,_spring_index_es_js__WEBPACK_IMPORTED_MODULE_2__.spring)({
            from: state.current,
            to: nearestBoundary(state.current),
            velocity: (0,_utils_velocity_es_js__WEBPACK_IMPORTED_MODULE_1__.calcGeneratorVelocity)(calcLatest, t, state.current), // TODO: This should be passing * 1000
            damping: bounceDamping,
            stiffness: bounceStiffness,
            restDistance,
            restSpeed,
        });
    };
    checkCatchBoundary(0);
    return (t) => {
        /**
         * We need to resolve the friction to figure out if we need a
         * spring but we don't want to do this twice per frame. So here
         * we flag if we updated for this frame and later if we did
         * we can skip doing it again.
         */
        let hasUpdatedFrame = false;
        if (!spring$1 && timeReachedBoundary === undefined) {
            hasUpdatedFrame = true;
            applyFriction(t);
            checkCatchBoundary(t);
        }
        /**
         * If we have a spring and the provided t is beyond the moment the friction
         * animation crossed the min/max boundary, use the spring.
         */
        if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {
            state.hasReachedTarget = true;
            return spring$1(t - timeReachedBoundary);
        }
        else {
            state.hasReachedTarget = false;
            !hasUpdatedFrame && applyFriction(t);
            return state;
        }
    };
};




/***/ }),

/***/ "./node_modules/@motionone/generators/dist/spring/defaults.es.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@motionone/generators/dist/spring/defaults.es.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   defaults: () => (/* binding */ defaults)
/* harmony export */ });
const defaults = {
    stiffness: 100.0,
    damping: 10.0,
    mass: 1.0,
};




/***/ }),

/***/ "./node_modules/@motionone/generators/dist/spring/index.es.js":
/*!********************************************************************!*\
  !*** ./node_modules/@motionone/generators/dist/spring/index.es.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   spring: () => (/* binding */ spring)
/* harmony export */ });
/* harmony import */ var _motionone_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @motionone/utils */ "./node_modules/@motionone/utils/dist/time.es.js");
/* harmony import */ var _defaults_es_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./defaults.es.js */ "./node_modules/@motionone/generators/dist/spring/defaults.es.js");
/* harmony import */ var _utils_es_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.es.js */ "./node_modules/@motionone/generators/dist/spring/utils.es.js");
/* harmony import */ var _utils_has_reached_target_es_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/has-reached-target.es.js */ "./node_modules/@motionone/generators/dist/utils/has-reached-target.es.js");
/* harmony import */ var _utils_velocity_es_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/velocity.es.js */ "./node_modules/@motionone/generators/dist/utils/velocity.es.js");






const spring = ({ stiffness = _defaults_es_js__WEBPACK_IMPORTED_MODULE_1__.defaults.stiffness, damping = _defaults_es_js__WEBPACK_IMPORTED_MODULE_1__.defaults.damping, mass = _defaults_es_js__WEBPACK_IMPORTED_MODULE_1__.defaults.mass, from = 0, to = 1, velocity = 0.0, restSpeed, restDistance, } = {}) => {
    velocity = velocity ? _motionone_utils__WEBPACK_IMPORTED_MODULE_0__.time.s(velocity) : 0.0;
    const state = {
        done: false,
        hasReachedTarget: false,
        current: from,
        target: to,
    };
    const initialDelta = to - from;
    const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;
    const dampingRatio = (0,_utils_es_js__WEBPACK_IMPORTED_MODULE_2__.calcDampingRatio)(stiffness, damping, mass);
    const isGranularScale = Math.abs(initialDelta) < 5;
    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);
    restDistance || (restDistance = isGranularScale ? 0.005 : 0.5);
    let resolveSpring;
    if (dampingRatio < 1) {
        const angularFreq = undampedAngularFreq * Math.sqrt(1 - dampingRatio * dampingRatio);
        // Underdamped spring (bouncy)
        resolveSpring = (t) => to -
            Math.exp(-dampingRatio * undampedAngularFreq * t) *
                (((-velocity + dampingRatio * undampedAngularFreq * initialDelta) /
                    angularFreq) *
                    Math.sin(angularFreq * t) +
                    initialDelta * Math.cos(angularFreq * t));
    }
    else {
        // Critically damped spring
        resolveSpring = (t) => {
            return (to -
                Math.exp(-undampedAngularFreq * t) *
                    (initialDelta + (-velocity + undampedAngularFreq * initialDelta) * t));
        };
    }
    return (t) => {
        state.current = resolveSpring(t);
        const currentVelocity = t === 0
            ? velocity
            : (0,_utils_velocity_es_js__WEBPACK_IMPORTED_MODULE_4__.calcGeneratorVelocity)(resolveSpring, t, state.current);
        const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;
        const isBelowDisplacementThreshold = Math.abs(to - state.current) <= restDistance;
        state.done = isBelowVelocityThreshold && isBelowDisplacementThreshold;
        state.hasReachedTarget = (0,_utils_has_reached_target_es_js__WEBPACK_IMPORTED_MODULE_3__.hasReachedTarget)(from, to, state.current);
        return state;
    };
};




/***/ }),

/***/ "./node_modules/@motionone/generators/dist/spring/utils.es.js":
/*!********************************************************************!*\
  !*** ./node_modules/@motionone/generators/dist/spring/utils.es.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   calcDampingRatio: () => (/* binding */ calcDampingRatio)
/* harmony export */ });
/* harmony import */ var _defaults_es_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaults.es.js */ "./node_modules/@motionone/generators/dist/spring/defaults.es.js");


const calcDampingRatio = (stiffness = _defaults_es_js__WEBPACK_IMPORTED_MODULE_0__.defaults.stiffness, damping = _defaults_es_js__WEBPACK_IMPORTED_MODULE_0__.defaults.damping, mass = _defaults_es_js__WEBPACK_IMPORTED_MODULE_0__.defaults.mass) => damping / (2 * Math.sqrt(stiffness * mass));




/***/ }),

/***/ "./node_modules/@motionone/generators/dist/utils/has-reached-target.es.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@motionone/generators/dist/utils/has-reached-target.es.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   hasReachedTarget: () => (/* binding */ hasReachedTarget)
/* harmony export */ });
function hasReachedTarget(origin, target, current) {
    return ((origin < target && current >= target) ||
        (origin > target && current <= target));
}




/***/ }),

/***/ "./node_modules/@motionone/generators/dist/utils/pregenerate-keyframes.es.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@motionone/generators/dist/utils/pregenerate-keyframes.es.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   pregenerateKeyframes: () => (/* binding */ pregenerateKeyframes)
/* harmony export */ });
/* harmony import */ var _motionone_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @motionone/utils */ "./node_modules/@motionone/utils/dist/noop.es.js");


const timeStep = 10;
const maxDuration = 10000;
function pregenerateKeyframes(generator, toUnit = _motionone_utils__WEBPACK_IMPORTED_MODULE_0__.noopReturn) {
    let overshootDuration = undefined;
    let timestamp = timeStep;
    let state = generator(0);
    const keyframes = [toUnit(state.current)];
    while (!state.done && timestamp < maxDuration) {
        state = generator(timestamp);
        keyframes.push(toUnit(state.done ? state.target : state.current));
        if (overshootDuration === undefined && state.hasReachedTarget) {
            overshootDuration = timestamp;
        }
        timestamp += timeStep;
    }
    const duration = timestamp - timeStep;
    /**
     * If generating an animation that didn't actually move,
     * generate a second keyframe so we have an origin and target.
     */
    if (keyframes.length === 1)
        keyframes.push(state.current);
    return {
        keyframes,
        duration: duration / 1000,
        overshootDuration: (overshootDuration !== null && overshootDuration !== void 0 ? overshootDuration : duration) / 1000,
    };
}




/***/ }),

/***/ "./node_modules/@motionone/generators/dist/utils/velocity.es.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@motionone/generators/dist/utils/velocity.es.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   calcGeneratorVelocity: () => (/* binding */ calcGeneratorVelocity)
/* harmony export */ });
/* harmony import */ var _motionone_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @motionone/utils */ "./node_modules/@motionone/utils/dist/velocity.es.js");


const sampleT = 5; // ms
function calcGeneratorVelocity(resolveValue, t, current) {
    const prevT = Math.max(t - sampleT, 0);
    return (0,_motionone_utils__WEBPACK_IMPORTED_MODULE_0__.velocityPerSecond)(current - resolveValue(prevT), t - prevT);
}




/***/ }),

/***/ "./node_modules/@motionone/types/dist/MotionValue.es.js":
/*!**************************************************************!*\
  !*** ./node_modules/@motionone/types/dist/MotionValue.es.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MotionValue: () => (/* binding */ MotionValue)
/* harmony export */ });
/**
 * The MotionValue tracks the state of a single animatable
 * value. Currently, updatedAt and current are unused. The
 * long term idea is to use this to minimise the number
 * of DOM reads, and to abstract the DOM interactions here.
 */
class MotionValue {
    setAnimation(animation) {
        this.animation = animation;
        animation === null || animation === void 0 ? void 0 : animation.finished.then(() => this.clearAnimation()).catch(() => { });
    }
    clearAnimation() {
        this.animation = this.generator = undefined;
    }
}




/***/ }),

/***/ "./node_modules/@motionone/utils/dist/array.es.js":
/*!********************************************************!*\
  !*** ./node_modules/@motionone/utils/dist/array.es.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   addUniqueItem: () => (/* binding */ addUniqueItem),
/* harmony export */   removeItem: () => (/* binding */ removeItem)
/* harmony export */ });
function addUniqueItem(array, item) {
    array.indexOf(item) === -1 && array.push(item);
}
function removeItem(arr, item) {
    const index = arr.indexOf(item);
    index > -1 && arr.splice(index, 1);
}




/***/ }),

/***/ "./node_modules/@motionone/utils/dist/clamp.es.js":
/*!********************************************************!*\
  !*** ./node_modules/@motionone/utils/dist/clamp.es.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   clamp: () => (/* binding */ clamp)
/* harmony export */ });
const clamp = (min, max, v) => Math.min(Math.max(v, min), max);




/***/ }),

/***/ "./node_modules/@motionone/utils/dist/defaults.es.js":
/*!***********************************************************!*\
  !*** ./node_modules/@motionone/utils/dist/defaults.es.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   defaults: () => (/* binding */ defaults)
/* harmony export */ });
const defaults = {
    duration: 0.3,
    delay: 0,
    endDelay: 0,
    repeat: 0,
    easing: "ease",
};




/***/ }),

/***/ "./node_modules/@motionone/utils/dist/easing.es.js":
/*!*********************************************************!*\
  !*** ./node_modules/@motionone/utils/dist/easing.es.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getEasingForSegment: () => (/* binding */ getEasingForSegment)
/* harmony export */ });
/* harmony import */ var _is_easing_list_es_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is-easing-list.es.js */ "./node_modules/@motionone/utils/dist/is-easing-list.es.js");
/* harmony import */ var _wrap_es_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./wrap.es.js */ "./node_modules/@motionone/utils/dist/wrap.es.js");



function getEasingForSegment(easing, i) {
    return (0,_is_easing_list_es_js__WEBPACK_IMPORTED_MODULE_0__.isEasingList)(easing) ? easing[(0,_wrap_es_js__WEBPACK_IMPORTED_MODULE_1__.wrap)(0, easing.length, i)] : easing;
}




/***/ }),

/***/ "./node_modules/@motionone/utils/dist/interpolate.es.js":
/*!**************************************************************!*\
  !*** ./node_modules/@motionone/utils/dist/interpolate.es.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   interpolate: () => (/* binding */ interpolate)
/* harmony export */ });
/* harmony import */ var _mix_es_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mix.es.js */ "./node_modules/@motionone/utils/dist/mix.es.js");
/* harmony import */ var _noop_es_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./noop.es.js */ "./node_modules/@motionone/utils/dist/noop.es.js");
/* harmony import */ var _offset_es_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./offset.es.js */ "./node_modules/@motionone/utils/dist/offset.es.js");
/* harmony import */ var _progress_es_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./progress.es.js */ "./node_modules/@motionone/utils/dist/progress.es.js");
/* harmony import */ var _easing_es_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./easing.es.js */ "./node_modules/@motionone/utils/dist/easing.es.js");
/* harmony import */ var _clamp_es_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./clamp.es.js */ "./node_modules/@motionone/utils/dist/clamp.es.js");







function interpolate(output, input = (0,_offset_es_js__WEBPACK_IMPORTED_MODULE_2__.defaultOffset)(output.length), easing = _noop_es_js__WEBPACK_IMPORTED_MODULE_1__.noopReturn) {
    const length = output.length;
    /**
     * If the input length is lower than the output we
     * fill the input to match. This currently assumes the input
     * is an animation progress value so is a good candidate for
     * moving outside the function.
     */
    const remainder = length - input.length;
    remainder > 0 && (0,_offset_es_js__WEBPACK_IMPORTED_MODULE_2__.fillOffset)(input, remainder);
    return (t) => {
        let i = 0;
        for (; i < length - 2; i++) {
            if (t < input[i + 1])
                break;
        }
        let progressInRange = (0,_clamp_es_js__WEBPACK_IMPORTED_MODULE_5__.clamp)(0, 1, (0,_progress_es_js__WEBPACK_IMPORTED_MODULE_3__.progress)(input[i], input[i + 1], t));
        const segmentEasing = (0,_easing_es_js__WEBPACK_IMPORTED_MODULE_4__.getEasingForSegment)(easing, i);
        progressInRange = segmentEasing(progressInRange);
        return (0,_mix_es_js__WEBPACK_IMPORTED_MODULE_0__.mix)(output[i], output[i + 1], progressInRange);
    };
}




/***/ }),

/***/ "./node_modules/@motionone/utils/dist/is-cubic-bezier.es.js":
/*!******************************************************************!*\
  !*** ./node_modules/@motionone/utils/dist/is-cubic-bezier.es.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isCubicBezier: () => (/* binding */ isCubicBezier)
/* harmony export */ });
/* harmony import */ var _is_number_es_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is-number.es.js */ "./node_modules/@motionone/utils/dist/is-number.es.js");


const isCubicBezier = (easing) => Array.isArray(easing) && (0,_is_number_es_js__WEBPACK_IMPORTED_MODULE_0__.isNumber)(easing[0]);




/***/ }),

/***/ "./node_modules/@motionone/utils/dist/is-easing-generator.es.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@motionone/utils/dist/is-easing-generator.es.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isEasingGenerator: () => (/* binding */ isEasingGenerator)
/* harmony export */ });
const isEasingGenerator = (easing) => typeof easing === "object" &&
    Boolean(easing.createAnimation);




/***/ }),

/***/ "./node_modules/@motionone/utils/dist/is-easing-list.es.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@motionone/utils/dist/is-easing-list.es.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isEasingList: () => (/* binding */ isEasingList)
/* harmony export */ });
/* harmony import */ var _is_number_es_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is-number.es.js */ "./node_modules/@motionone/utils/dist/is-number.es.js");


const isEasingList = (easing) => Array.isArray(easing) && !(0,_is_number_es_js__WEBPACK_IMPORTED_MODULE_0__.isNumber)(easing[0]);




/***/ }),

/***/ "./node_modules/@motionone/utils/dist/is-function.es.js":
/*!**************************************************************!*\
  !*** ./node_modules/@motionone/utils/dist/is-function.es.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isFunction: () => (/* binding */ isFunction)
/* harmony export */ });
const isFunction = (value) => typeof value === "function";




/***/ }),

/***/ "./node_modules/@motionone/utils/dist/is-number.es.js":
/*!************************************************************!*\
  !*** ./node_modules/@motionone/utils/dist/is-number.es.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isNumber: () => (/* binding */ isNumber)
/* harmony export */ });
const isNumber = (value) => typeof value === "number";




/***/ }),

/***/ "./node_modules/@motionone/utils/dist/is-string.es.js":
/*!************************************************************!*\
  !*** ./node_modules/@motionone/utils/dist/is-string.es.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isString: () => (/* binding */ isString)
/* harmony export */ });
const isString = (value) => typeof value === "string";




/***/ }),

/***/ "./node_modules/@motionone/utils/dist/mix.es.js":
/*!******************************************************!*\
  !*** ./node_modules/@motionone/utils/dist/mix.es.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   mix: () => (/* binding */ mix)
/* harmony export */ });
const mix = (min, max, progress) => -progress * min + progress * max + min;




/***/ }),

/***/ "./node_modules/@motionone/utils/dist/noop.es.js":
/*!*******************************************************!*\
  !*** ./node_modules/@motionone/utils/dist/noop.es.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   noop: () => (/* binding */ noop),
/* harmony export */   noopReturn: () => (/* binding */ noopReturn)
/* harmony export */ });
const noop = () => { };
const noopReturn = (v) => v;




/***/ }),

/***/ "./node_modules/@motionone/utils/dist/offset.es.js":
/*!*********************************************************!*\
  !*** ./node_modules/@motionone/utils/dist/offset.es.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   defaultOffset: () => (/* binding */ defaultOffset),
/* harmony export */   fillOffset: () => (/* binding */ fillOffset)
/* harmony export */ });
/* harmony import */ var _mix_es_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mix.es.js */ "./node_modules/@motionone/utils/dist/mix.es.js");
/* harmony import */ var _progress_es_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./progress.es.js */ "./node_modules/@motionone/utils/dist/progress.es.js");



function fillOffset(offset, remaining) {
    const min = offset[offset.length - 1];
    for (let i = 1; i <= remaining; i++) {
        const offsetProgress = (0,_progress_es_js__WEBPACK_IMPORTED_MODULE_1__.progress)(0, remaining, i);
        offset.push((0,_mix_es_js__WEBPACK_IMPORTED_MODULE_0__.mix)(min, 1, offsetProgress));
    }
}
function defaultOffset(length) {
    const offset = [0];
    fillOffset(offset, length - 1);
    return offset;
}




/***/ }),

/***/ "./node_modules/@motionone/utils/dist/progress.es.js":
/*!***********************************************************!*\
  !*** ./node_modules/@motionone/utils/dist/progress.es.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   progress: () => (/* binding */ progress)
/* harmony export */ });
const progress = (min, max, value) => max - min === 0 ? 1 : (value - min) / (max - min);




/***/ }),

/***/ "./node_modules/@motionone/utils/dist/time.es.js":
/*!*******************************************************!*\
  !*** ./node_modules/@motionone/utils/dist/time.es.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   time: () => (/* binding */ time)
/* harmony export */ });
const time = {
    ms: (seconds) => seconds * 1000,
    s: (milliseconds) => milliseconds / 1000,
};




/***/ }),

/***/ "./node_modules/@motionone/utils/dist/velocity.es.js":
/*!***********************************************************!*\
  !*** ./node_modules/@motionone/utils/dist/velocity.es.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   velocityPerSecond: () => (/* binding */ velocityPerSecond)
/* harmony export */ });
/*
  Convert velocity into velocity per second

  @param [number]: Unit per frame
  @param [number]: Frame duration in ms
*/
function velocityPerSecond(velocity, frameDuration) {
    return frameDuration ? velocity * (1000 / frameDuration) : 0;
}




/***/ }),

/***/ "./node_modules/@motionone/utils/dist/wrap.es.js":
/*!*******************************************************!*\
  !*** ./node_modules/@motionone/utils/dist/wrap.es.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   wrap: () => (/* binding */ wrap)
/* harmony export */ });
const wrap = (min, max, v) => {
    const rangeSize = max - min;
    return ((((v - min) % rangeSize) + rangeSize) % rangeSize) + min;
};




/***/ }),

/***/ "./node_modules/aria-hidden/dist/es2015/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/aria-hidden/dist/es2015/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   hideOthers: () => (/* binding */ hideOthers),
/* harmony export */   inertOthers: () => (/* binding */ inertOthers),
/* harmony export */   supportsInert: () => (/* binding */ supportsInert),
/* harmony export */   suppressOthers: () => (/* binding */ suppressOthers)
/* harmony export */ });
var getDefaultParent = function (originalTarget) {
    if (typeof document === 'undefined') {
        return null;
    }
    var sampleTarget = Array.isArray(originalTarget) ? originalTarget[0] : originalTarget;
    return sampleTarget.ownerDocument.body;
};
var counterMap = new WeakMap();
var uncontrolledNodes = new WeakMap();
var markerMap = {};
var lockCount = 0;
var unwrapHost = function (node) {
    return node && (node.host || unwrapHost(node.parentNode));
};
var correctTargets = function (parent, targets) {
    return targets
        .map(function (target) {
        if (parent.contains(target)) {
            return target;
        }
        var correctedTarget = unwrapHost(target);
        if (correctedTarget && parent.contains(correctedTarget)) {
            return correctedTarget;
        }
        console.error('aria-hidden', target, 'in not contained inside', parent, '. Doing nothing');
        return null;
    })
        .filter(function (x) { return Boolean(x); });
};
/**
 * Marks everything except given node(or nodes) as aria-hidden
 * @param {Element | Element[]} originalTarget - elements to keep on the page
 * @param [parentNode] - top element, defaults to document.body
 * @param {String} [markerName] - a special attribute to mark every node
 * @param {String} [controlAttribute] - html Attribute to control
 * @return {Undo} undo command
 */
var applyAttributeToOthers = function (originalTarget, parentNode, markerName, controlAttribute) {
    var targets = correctTargets(parentNode, Array.isArray(originalTarget) ? originalTarget : [originalTarget]);
    if (!markerMap[markerName]) {
        markerMap[markerName] = new WeakMap();
    }
    var markerCounter = markerMap[markerName];
    var hiddenNodes = [];
    var elementsToKeep = new Set();
    var elementsToStop = new Set(targets);
    var keep = function (el) {
        if (!el || elementsToKeep.has(el)) {
            return;
        }
        elementsToKeep.add(el);
        keep(el.parentNode);
    };
    targets.forEach(keep);
    var deep = function (parent) {
        if (!parent || elementsToStop.has(parent)) {
            return;
        }
        Array.prototype.forEach.call(parent.children, function (node) {
            if (elementsToKeep.has(node)) {
                deep(node);
            }
            else {
                try {
                    var attr = node.getAttribute(controlAttribute);
                    var alreadyHidden = attr !== null && attr !== 'false';
                    var counterValue = (counterMap.get(node) || 0) + 1;
                    var markerValue = (markerCounter.get(node) || 0) + 1;
                    counterMap.set(node, counterValue);
                    markerCounter.set(node, markerValue);
                    hiddenNodes.push(node);
                    if (counterValue === 1 && alreadyHidden) {
                        uncontrolledNodes.set(node, true);
                    }
                    if (markerValue === 1) {
                        node.setAttribute(markerName, 'true');
                    }
                    if (!alreadyHidden) {
                        node.setAttribute(controlAttribute, 'true');
                    }
                }
                catch (e) {
                    console.error('aria-hidden: cannot operate on ', node, e);
                }
            }
        });
    };
    deep(parentNode);
    elementsToKeep.clear();
    lockCount++;
    return function () {
        hiddenNodes.forEach(function (node) {
            var counterValue = counterMap.get(node) - 1;
            var markerValue = markerCounter.get(node) - 1;
            counterMap.set(node, counterValue);
            markerCounter.set(node, markerValue);
            if (!counterValue) {
                if (!uncontrolledNodes.has(node)) {
                    node.removeAttribute(controlAttribute);
                }
                uncontrolledNodes.delete(node);
            }
            if (!markerValue) {
                node.removeAttribute(markerName);
            }
        });
        lockCount--;
        if (!lockCount) {
            // clear
            counterMap = new WeakMap();
            counterMap = new WeakMap();
            uncontrolledNodes = new WeakMap();
            markerMap = {};
        }
    };
};
/**
 * Marks everything except given node(or nodes) as aria-hidden
 * @param {Element | Element[]} originalTarget - elements to keep on the page
 * @param [parentNode] - top element, defaults to document.body
 * @param {String} [markerName] - a special attribute to mark every node
 * @return {Undo} undo command
 */
var hideOthers = function (originalTarget, parentNode, markerName) {
    if (markerName === void 0) { markerName = 'data-aria-hidden'; }
    var targets = Array.from(Array.isArray(originalTarget) ? originalTarget : [originalTarget]);
    var activeParentNode = parentNode || getDefaultParent(originalTarget);
    if (!activeParentNode) {
        return function () { return null; };
    }
    // we should not hide aria-live elements - https://github.com/theKashey/aria-hidden/issues/10
    // and script elements, as they have no impact on accessibility.
    targets.push.apply(targets, Array.from(activeParentNode.querySelectorAll('[aria-live], script')));
    return applyAttributeToOthers(targets, activeParentNode, markerName, 'aria-hidden');
};
/**
 * Marks everything except given node(or nodes) as inert
 * @param {Element | Element[]} originalTarget - elements to keep on the page
 * @param [parentNode] - top element, defaults to document.body
 * @param {String} [markerName] - a special attribute to mark every node
 * @return {Undo} undo command
 */
var inertOthers = function (originalTarget, parentNode, markerName) {
    if (markerName === void 0) { markerName = 'data-inert-ed'; }
    var activeParentNode = parentNode || getDefaultParent(originalTarget);
    if (!activeParentNode) {
        return function () { return null; };
    }
    return applyAttributeToOthers(originalTarget, activeParentNode, markerName, 'inert');
};
/**
 * @returns if current browser supports inert
 */
var supportsInert = function () {
    return typeof HTMLElement !== 'undefined' && HTMLElement.prototype.hasOwnProperty('inert');
};
/**
 * Automatic function to "suppress" DOM elements - _hide_ or _inert_ in the best possible way
 * @param {Element | Element[]} originalTarget - elements to keep on the page
 * @param [parentNode] - top element, defaults to document.body
 * @param {String} [markerName] - a special attribute to mark every node
 * @return {Undo} undo command
 */
var suppressOthers = function (originalTarget, parentNode, markerName) {
    if (markerName === void 0) { markerName = 'data-suppressed'; }
    return (supportsInert() ? inertOthers : hideOthers)(originalTarget, parentNode, markerName);
};


/***/ }),

/***/ "./node_modules/classnames/index.js":
/*!******************************************!*\
  !*** ./node_modules/classnames/index.js ***!
  \******************************************/
/***/ ((module, exports) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/
/* global define */

(function () {
	'use strict';

	var hasOwn = {}.hasOwnProperty;
	var nativeCodeString = '[native code]';

	function classNames() {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes.push(arg);
			} else if (Array.isArray(arg)) {
				if (arg.length) {
					var inner = classNames.apply(null, arg);
					if (inner) {
						classes.push(inner);
					}
				}
			} else if (argType === 'object') {
				if (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {
					classes.push(arg.toString());
					continue;
				}

				for (var key in arg) {
					if (hasOwn.call(arg, key) && arg[key]) {
						classes.push(key);
					}
				}
			}
		}

		return classes.join(' ');
	}

	if ( true && module.exports) {
		classNames.default = classNames;
		module.exports = classNames;
	} else if (true) {
		// register as 'classnames', consistent with npm package name
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {
			return classNames;
		}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else // removed by dead control flow
{}
}());


/***/ }),

/***/ "./node_modules/countup.js/dist/countUp.umd.js":
/*!*****************************************************!*\
  !*** ./node_modules/countup.js/dist/countUp.umd.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports) {

!function(t,i){ true?i(exports):0}(this,(function(t){"use strict";var i=function(){return i=Object.assign||function(t){for(var i,n=1,s=arguments.length;n<s;n++)for(var e in i=arguments[n])Object.prototype.hasOwnProperty.call(i,e)&&(t[e]=i[e]);return t},i.apply(this,arguments)},n=function(){function t(t,n,s){var e=this;this.endVal=n,this.options=s,this.version="2.9.0",this.defaults={startVal:0,decimalPlaces:0,duration:2,useEasing:!0,useGrouping:!0,useIndianSeparators:!1,smartEasingThreshold:999,smartEasingAmount:333,separator:",",decimal:".",prefix:"",suffix:"",enableScrollSpy:!1,scrollSpyDelay:200,scrollSpyOnce:!1},this.finalEndVal=null,this.useEasing=!0,this.countDown=!1,this.error="",this.startVal=0,this.paused=!0,this.once=!1,this.count=function(t){e.startTime||(e.startTime=t);var i=t-e.startTime;e.remaining=e.duration-i,e.useEasing?e.countDown?e.frameVal=e.startVal-e.easingFn(i,0,e.startVal-e.endVal,e.duration):e.frameVal=e.easingFn(i,e.startVal,e.endVal-e.startVal,e.duration):e.frameVal=e.startVal+(e.endVal-e.startVal)*(i/e.duration);var n=e.countDown?e.frameVal<e.endVal:e.frameVal>e.endVal;e.frameVal=n?e.endVal:e.frameVal,e.frameVal=Number(e.frameVal.toFixed(e.options.decimalPlaces)),e.printValue(e.frameVal),i<e.duration?e.rAF=requestAnimationFrame(e.count):null!==e.finalEndVal?e.update(e.finalEndVal):e.options.onCompleteCallback&&e.options.onCompleteCallback()},this.formatNumber=function(t){var i,n,s,a,o=t<0?"-":"";i=Math.abs(t).toFixed(e.options.decimalPlaces);var r=(i+="").split(".");if(n=r[0],s=r.length>1?e.options.decimal+r[1]:"",e.options.useGrouping){a="";for(var l=3,u=0,h=0,p=n.length;h<p;++h)e.options.useIndianSeparators&&4===h&&(l=2,u=1),0!==h&&u%l==0&&(a=e.options.separator+a),u++,a=n[p-h-1]+a;n=a}return e.options.numerals&&e.options.numerals.length&&(n=n.replace(/[0-9]/g,(function(t){return e.options.numerals[+t]})),s=s.replace(/[0-9]/g,(function(t){return e.options.numerals[+t]}))),o+e.options.prefix+n+s+e.options.suffix},this.easeOutExpo=function(t,i,n,s){return n*(1-Math.pow(2,-10*t/s))*1024/1023+i},this.options=i(i({},this.defaults),s),this.formattingFn=this.options.formattingFn?this.options.formattingFn:this.formatNumber,this.easingFn=this.options.easingFn?this.options.easingFn:this.easeOutExpo,this.el="string"==typeof t?document.getElementById(t):t,n=null==n?this.parse(this.el.innerHTML):n,this.startVal=this.validateValue(this.options.startVal),this.frameVal=this.startVal,this.endVal=this.validateValue(n),this.options.decimalPlaces=Math.max(this.options.decimalPlaces),this.resetDuration(),this.options.separator=String(this.options.separator),this.useEasing=this.options.useEasing,""===this.options.separator&&(this.options.useGrouping=!1),this.el?this.printValue(this.startVal):this.error="[CountUp] target is null or undefined","undefined"!=typeof window&&this.options.enableScrollSpy&&(this.error?console.error(this.error,t):(window.onScrollFns=window.onScrollFns||[],window.onScrollFns.push((function(){return e.handleScroll(e)})),window.onscroll=function(){window.onScrollFns.forEach((function(t){return t()}))},this.handleScroll(this)))}return t.prototype.handleScroll=function(t){if(t&&window&&!t.once){var i=window.innerHeight+window.scrollY,n=t.el.getBoundingClientRect(),s=n.top+window.pageYOffset,e=n.top+n.height+window.pageYOffset;e<i&&e>window.scrollY&&t.paused?(t.paused=!1,setTimeout((function(){return t.start()}),t.options.scrollSpyDelay),t.options.scrollSpyOnce&&(t.once=!0)):(window.scrollY>e||s>i)&&!t.paused&&t.reset()}},t.prototype.determineDirectionAndSmartEasing=function(){var t=this.finalEndVal?this.finalEndVal:this.endVal;this.countDown=this.startVal>t;var i=t-this.startVal;if(Math.abs(i)>this.options.smartEasingThreshold&&this.options.useEasing){this.finalEndVal=t;var n=this.countDown?1:-1;this.endVal=t+n*this.options.smartEasingAmount,this.duration=this.duration/2}else this.endVal=t,this.finalEndVal=null;null!==this.finalEndVal?this.useEasing=!1:this.useEasing=this.options.useEasing},t.prototype.start=function(t){this.error||(this.options.onStartCallback&&this.options.onStartCallback(),t&&(this.options.onCompleteCallback=t),this.duration>0?(this.determineDirectionAndSmartEasing(),this.paused=!1,this.rAF=requestAnimationFrame(this.count)):this.printValue(this.endVal))},t.prototype.pauseResume=function(){this.paused?(this.startTime=null,this.duration=this.remaining,this.startVal=this.frameVal,this.determineDirectionAndSmartEasing(),this.rAF=requestAnimationFrame(this.count)):cancelAnimationFrame(this.rAF),this.paused=!this.paused},t.prototype.reset=function(){cancelAnimationFrame(this.rAF),this.paused=!0,this.resetDuration(),this.startVal=this.validateValue(this.options.startVal),this.frameVal=this.startVal,this.printValue(this.startVal)},t.prototype.update=function(t){cancelAnimationFrame(this.rAF),this.startTime=null,this.endVal=this.validateValue(t),this.endVal!==this.frameVal&&(this.startVal=this.frameVal,null==this.finalEndVal&&this.resetDuration(),this.finalEndVal=null,this.determineDirectionAndSmartEasing(),this.rAF=requestAnimationFrame(this.count))},t.prototype.printValue=function(t){var i;if(this.el){var n=this.formattingFn(t);if(null===(i=this.options.plugin)||void 0===i?void 0:i.render)this.options.plugin.render(this.el,n);else if("INPUT"===this.el.tagName)this.el.value=n;else"text"===this.el.tagName||"tspan"===this.el.tagName?this.el.textContent=n:this.el.innerHTML=n}},t.prototype.ensureNumber=function(t){return"number"==typeof t&&!isNaN(t)},t.prototype.validateValue=function(t){var i=Number(t);return this.ensureNumber(i)?i:(this.error="[CountUp] invalid start or end value: ".concat(t),null)},t.prototype.resetDuration=function(){this.startTime=null,this.duration=1e3*Number(this.options.duration),this.remaining=this.duration},t.prototype.parse=function(t){var i=function(t){return t.replace(/([.,'  ])/g,"\\$1")},n=i(this.options.separator),s=i(this.options.decimal),e=t.replace(new RegExp(n,"g"),"").replace(new RegExp(s,"g"),".");return parseFloat(e)},t}();t.CountUp=n}));


/***/ }),

/***/ "./node_modules/deepmerge/dist/cjs.js":
/*!********************************************!*\
  !*** ./node_modules/deepmerge/dist/cjs.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";


var isMergeableObject = function isMergeableObject(value) {
	return isNonNullObject(value)
		&& !isSpecial(value)
};

function isNonNullObject(value) {
	return !!value && typeof value === 'object'
}

function isSpecial(value) {
	var stringValue = Object.prototype.toString.call(value);

	return stringValue === '[object RegExp]'
		|| stringValue === '[object Date]'
		|| isReactElement(value)
}

// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25
var canUseSymbol = typeof Symbol === 'function' && Symbol.for;
var REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;

function isReactElement(value) {
	return value.$$typeof === REACT_ELEMENT_TYPE
}

function emptyTarget(val) {
	return Array.isArray(val) ? [] : {}
}

function cloneUnlessOtherwiseSpecified(value, options) {
	return (options.clone !== false && options.isMergeableObject(value))
		? deepmerge(emptyTarget(value), value, options)
		: value
}

function defaultArrayMerge(target, source, options) {
	return target.concat(source).map(function(element) {
		return cloneUnlessOtherwiseSpecified(element, options)
	})
}

function getMergeFunction(key, options) {
	if (!options.customMerge) {
		return deepmerge
	}
	var customMerge = options.customMerge(key);
	return typeof customMerge === 'function' ? customMerge : deepmerge
}

function getEnumerableOwnPropertySymbols(target) {
	return Object.getOwnPropertySymbols
		? Object.getOwnPropertySymbols(target).filter(function(symbol) {
			return target.propertyIsEnumerable(symbol)
		})
		: []
}

function getKeys(target) {
	return Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))
}

function propertyIsOnObject(object, property) {
	try {
		return property in object
	} catch(_) {
		return false
	}
}

// Protects from prototype poisoning and unexpected merging up the prototype chain.
function propertyIsUnsafe(target, key) {
	return propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,
		&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,
			&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.
}

function mergeObject(target, source, options) {
	var destination = {};
	if (options.isMergeableObject(target)) {
		getKeys(target).forEach(function(key) {
			destination[key] = cloneUnlessOtherwiseSpecified(target[key], options);
		});
	}
	getKeys(source).forEach(function(key) {
		if (propertyIsUnsafe(target, key)) {
			return
		}

		if (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {
			destination[key] = getMergeFunction(key, options)(target[key], source[key], options);
		} else {
			destination[key] = cloneUnlessOtherwiseSpecified(source[key], options);
		}
	});
	return destination
}

function deepmerge(target, source, options) {
	options = options || {};
	options.arrayMerge = options.arrayMerge || defaultArrayMerge;
	options.isMergeableObject = options.isMergeableObject || isMergeableObject;
	// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()
	// implementations can use it. The caller may not replace it.
	options.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;

	var sourceIsArray = Array.isArray(source);
	var targetIsArray = Array.isArray(target);
	var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;

	if (!sourceAndTargetTypesMatch) {
		return cloneUnlessOtherwiseSpecified(source, options)
	} else if (sourceIsArray) {
		return options.arrayMerge(target, source, options)
	} else {
		return mergeObject(target, source, options)
	}
}

deepmerge.all = function deepmergeAll(array, options) {
	if (!Array.isArray(array)) {
		throw new Error('first argument should be an array')
	}

	return array.reduce(function(prev, next) {
		return deepmerge(prev, next, options)
	}, {})
};

var deepmerge_1 = deepmerge;

module.exports = deepmerge_1;


/***/ }),

/***/ "./node_modules/framer-motion/dist/cjs/index.js":
/*!******************************************************!*\
  !*** ./node_modules/framer-motion/dist/cjs/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({ value: true }));

var tslib = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
var React = __webpack_require__(/*! react */ "react");
var heyListen = __webpack_require__(/*! hey-listen */ "./node_modules/hey-listen/dist/hey-listen.es.js");
var styleValueTypes = __webpack_require__(/*! style-value-types */ "./node_modules/style-value-types/dist/valueTypes.cjs.js");
var popmotion = __webpack_require__(/*! popmotion */ "./node_modules/popmotion/dist/popmotion.cjs.js");
var sync = __webpack_require__(/*! framesync */ "./node_modules/framesync/dist/framesync.cjs.js");
var dom = __webpack_require__(/*! @motionone/dom */ "./node_modules/@motionone/dom/dist/index.es.js");

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

function _interopNamespace(e) {
    if (e && e.__esModule) return e;
    var n = Object.create(null);
    if (e) {
        Object.keys(e).forEach(function (k) {
            if (k !== 'default') {
                var d = Object.getOwnPropertyDescriptor(e, k);
                Object.defineProperty(n, k, d.get ? d : {
                    enumerable: true,
                    get: function () { return e[k]; }
                });
            }
        });
    }
    n["default"] = e;
    return Object.freeze(n);
}

var React__namespace = /*#__PURE__*/_interopNamespace(React);
var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var sync__default = /*#__PURE__*/_interopDefaultLegacy(sync);

/**
 * Browser-safe usage of process
 */
var defaultEnvironment = "production";
var env = typeof process === "undefined" || process.env === undefined
    ? defaultEnvironment
    : "development" || 0;

var createDefinition = function (propNames) { return ({
    isEnabled: function (props) { return propNames.some(function (name) { return !!props[name]; }); },
}); };
var featureDefinitions = {
    measureLayout: createDefinition(["layout", "layoutId", "drag"]),
    animation: createDefinition([
        "animate",
        "exit",
        "variants",
        "whileHover",
        "whileTap",
        "whileFocus",
        "whileDrag",
        "whileInView",
    ]),
    exit: createDefinition(["exit"]),
    drag: createDefinition(["drag", "dragControls"]),
    focus: createDefinition(["whileFocus"]),
    hover: createDefinition(["whileHover", "onHoverStart", "onHoverEnd"]),
    tap: createDefinition(["whileTap", "onTap", "onTapStart", "onTapCancel"]),
    pan: createDefinition([
        "onPan",
        "onPanStart",
        "onPanSessionStart",
        "onPanEnd",
    ]),
    inView: createDefinition([
        "whileInView",
        "onViewportEnter",
        "onViewportLeave",
    ]),
};
function loadFeatures(features) {
    for (var key in features) {
        if (features[key] === null)
            continue;
        if (key === "projectionNodeConstructor") {
            featureDefinitions.projectionNodeConstructor = features[key];
        }
        else {
            featureDefinitions[key].Component = features[key];
        }
    }
}

var LazyContext = React.createContext({ strict: false });

var featureNames = Object.keys(featureDefinitions);
var numFeatures = featureNames.length;
/**
 * Load features via renderless components based on the provided MotionProps.
 */
function useFeatures(props, visualElement, preloadedFeatures) {
    var features = [];
    var lazyContext = React.useContext(LazyContext);
    if (!visualElement)
        return null;
    /**
     * If we're in development mode, check to make sure we're not rendering a motion component
     * as a child of LazyMotion, as this will break the file-size benefits of using it.
     */
    if (env !== "production" && preloadedFeatures && lazyContext.strict) {
        heyListen.invariant(false, "You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.");
    }
    for (var i = 0; i < numFeatures; i++) {
        var name_1 = featureNames[i];
        var _a = featureDefinitions[name_1], isEnabled = _a.isEnabled, Component = _a.Component;
        /**
         * It might be possible in the future to use this moment to
         * dynamically request functionality. In initial tests this
         * was producing a lot of duplication amongst bundles.
         */
        if (isEnabled(props) && Component) {
            features.push(React__namespace.createElement(Component, tslib.__assign({ key: name_1 }, props, { visualElement: visualElement })));
        }
    }
    return features;
}

/**
 * @public
 */
var MotionConfigContext = React.createContext({
    transformPagePoint: function (p) { return p; },
    isStatic: false,
    reducedMotion: "never",
});

var MotionContext = React.createContext({});
function useVisualElementContext() {
    return React.useContext(MotionContext).visualElement;
}

/**
 * @public
 */
var PresenceContext = React.createContext(null);

var isBrowser = typeof document !== "undefined";

var useIsomorphicLayoutEffect = isBrowser ? React.useLayoutEffect : React.useEffect;

// Does this device prefer reduced motion? Returns `null` server-side.
var prefersReducedMotion = { current: null };
var hasDetected = false;
function initPrefersReducedMotion() {
    hasDetected = true;
    if (!isBrowser)
        return;
    if (window.matchMedia) {
        var motionMediaQuery_1 = window.matchMedia("(prefers-reduced-motion)");
        var setReducedMotionPreferences = function () {
            return (prefersReducedMotion.current = motionMediaQuery_1.matches);
        };
        motionMediaQuery_1.addListener(setReducedMotionPreferences);
        setReducedMotionPreferences();
    }
    else {
        prefersReducedMotion.current = false;
    }
}
/**
 * A hook that returns `true` if we should be using reduced motion based on the current device's Reduced Motion setting.
 *
 * This can be used to implement changes to your UI based on Reduced Motion. For instance, replacing motion-sickness inducing
 * `x`/`y` animations with `opacity`, disabling the autoplay of background videos, or turning off parallax motion.
 *
 * It will actively respond to changes and re-render your components with the latest setting.
 *
 * ```jsx
 * export function Sidebar({ isOpen }) {
 *   const shouldReduceMotion = useReducedMotion()
 *   const closedX = shouldReduceMotion ? 0 : "-100%"
 *
 *   return (
 *     <motion.div animate={{
 *       opacity: isOpen ? 1 : 0,
 *       x: isOpen ? 0 : closedX
 *     }} />
 *   )
 * }
 * ```
 *
 * @return boolean
 *
 * @public
 */
function useReducedMotion() {
    /**
     * Lazy initialisation of prefersReducedMotion
     */
    !hasDetected && initPrefersReducedMotion();
    var _a = tslib.__read(React.useState(prefersReducedMotion.current), 1), shouldReduceMotion = _a[0];
    /**
     * TODO See if people miss automatically updating shouldReduceMotion setting
     */
    return shouldReduceMotion;
}
function useReducedMotionConfig() {
    var reducedMotionPreference = useReducedMotion();
    var reducedMotion = React.useContext(MotionConfigContext).reducedMotion;
    if (reducedMotion === "never") {
        return false;
    }
    else if (reducedMotion === "always") {
        return true;
    }
    else {
        return reducedMotionPreference;
    }
}

function useVisualElement(Component, visualState, props, createVisualElement) {
    var lazyContext = React.useContext(LazyContext);
    var parent = useVisualElementContext();
    var presenceContext = React.useContext(PresenceContext);
    var shouldReduceMotion = useReducedMotionConfig();
    var visualElementRef = React.useRef(undefined);
    /**
     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded
     */
    if (!createVisualElement)
        createVisualElement = lazyContext.renderer;
    if (!visualElementRef.current && createVisualElement) {
        visualElementRef.current = createVisualElement(Component, {
            visualState: visualState,
            parent: parent,
            props: props,
            presenceId: presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.id,
            blockInitialAnimation: (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.initial) === false,
            shouldReduceMotion: shouldReduceMotion,
        });
    }
    var visualElement = visualElementRef.current;
    useIsomorphicLayoutEffect(function () {
        visualElement === null || visualElement === void 0 ? void 0 : visualElement.syncRender();
    });
    React.useEffect(function () {
        var _a;
        (_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.animationState) === null || _a === void 0 ? void 0 : _a.animateChanges();
    });
    useIsomorphicLayoutEffect(function () { return function () { return visualElement === null || visualElement === void 0 ? void 0 : visualElement.notifyUnmount(); }; }, []);
    return visualElement;
}

function isRefObject(ref) {
    return (typeof ref === "object" &&
        Object.prototype.hasOwnProperty.call(ref, "current"));
}

/**
 * Creates a ref function that, when called, hydrates the provided
 * external ref and VisualElement.
 */
function useMotionRef(visualState, visualElement, externalRef) {
    return React.useCallback(function (instance) {
        var _a;
        instance && ((_a = visualState.mount) === null || _a === void 0 ? void 0 : _a.call(visualState, instance));
        if (visualElement) {
            instance
                ? visualElement.mount(instance)
                : visualElement.unmount();
        }
        if (externalRef) {
            if (typeof externalRef === "function") {
                externalRef(instance);
            }
            else if (isRefObject(externalRef)) {
                externalRef.current = instance;
            }
        }
    }, 
    /**
     * Only pass a new ref callback to React if we've received a visual element
     * factory. Otherwise we'll be mounting/remounting every time externalRef
     * or other dependencies change.
     */
    [visualElement]);
}

/**
 * Decides if the supplied variable is an array of variant labels
 */
function isVariantLabels(v) {
    return Array.isArray(v);
}
/**
 * Decides if the supplied variable is variant label
 */
function isVariantLabel(v) {
    return typeof v === "string" || isVariantLabels(v);
}
/**
 * Creates an object containing the latest state of every MotionValue on a VisualElement
 */
function getCurrent(visualElement) {
    var current = {};
    visualElement.forEachValue(function (value, key) { return (current[key] = value.get()); });
    return current;
}
/**
 * Creates an object containing the latest velocity of every MotionValue on a VisualElement
 */
function getVelocity$1(visualElement) {
    var velocity = {};
    visualElement.forEachValue(function (value, key) { return (velocity[key] = value.getVelocity()); });
    return velocity;
}
function resolveVariantFromProps(props, definition, custom, currentValues, currentVelocity) {
    var _a;
    if (currentValues === void 0) { currentValues = {}; }
    if (currentVelocity === void 0) { currentVelocity = {}; }
    /**
     * If the variant definition is a function, resolve.
     */
    if (typeof definition === "function") {
        definition = definition(custom !== null && custom !== void 0 ? custom : props.custom, currentValues, currentVelocity);
    }
    /**
     * If the variant definition is a variant label, or
     * the function returned a variant label, resolve.
     */
    if (typeof definition === "string") {
        definition = (_a = props.variants) === null || _a === void 0 ? void 0 : _a[definition];
    }
    /**
     * At this point we've resolved both functions and variant labels,
     * but the resolved variant label might itself have been a function.
     * If so, resolve. This can only have returned a valid target object.
     */
    if (typeof definition === "function") {
        definition = definition(custom !== null && custom !== void 0 ? custom : props.custom, currentValues, currentVelocity);
    }
    return definition;
}
function resolveVariant(visualElement, definition, custom) {
    var props = visualElement.getProps();
    return resolveVariantFromProps(props, definition, custom !== null && custom !== void 0 ? custom : props.custom, getCurrent(visualElement), getVelocity$1(visualElement));
}
function checkIfControllingVariants(props) {
    var _a;
    return (typeof ((_a = props.animate) === null || _a === void 0 ? void 0 : _a.start) === "function" ||
        isVariantLabel(props.initial) ||
        isVariantLabel(props.animate) ||
        isVariantLabel(props.whileHover) ||
        isVariantLabel(props.whileDrag) ||
        isVariantLabel(props.whileTap) ||
        isVariantLabel(props.whileFocus) ||
        isVariantLabel(props.exit));
}
function checkIfVariantNode(props) {
    return Boolean(checkIfControllingVariants(props) || props.variants);
}

function getCurrentTreeVariants(props, context) {
    if (checkIfControllingVariants(props)) {
        var initial = props.initial, animate = props.animate;
        return {
            initial: initial === false || isVariantLabel(initial)
                ? initial
                : undefined,
            animate: isVariantLabel(animate) ? animate : undefined,
        };
    }
    return props.inherit !== false ? context : {};
}

function useCreateMotionContext(props) {
    var _a = getCurrentTreeVariants(props, React.useContext(MotionContext)), initial = _a.initial, animate = _a.animate;
    return React.useMemo(function () { return ({ initial: initial, animate: animate }); }, [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);
}
function variantLabelsAsDependency(prop) {
    return Array.isArray(prop) ? prop.join(" ") : prop;
}

/**
 * Creates a constant value over the lifecycle of a component.
 *
 * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer
 * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`
 * you can ensure that initialisers don't execute twice or more.
 */
function useConstant(init) {
    var ref = React.useRef(null);
    if (ref.current === null) {
        ref.current = init();
    }
    return ref.current;
}

/**
 * This should only ever be modified on the client otherwise it'll
 * persist through server requests. If we need instanced states we
 * could lazy-init via root.
 */
var globalProjectionState = {
    /**
     * Global flag as to whether the tree has animated since the last time
     * we resized the window
     */
    hasAnimatedSinceResize: true,
    /**
     * We set this to true once, on the first update. Any nodes added to the tree beyond that
     * update will be given a `data-projection-id` attribute.
     */
    hasEverUpdated: false,
};

var id$1 = 1;
function useProjectionId() {
    return useConstant(function () {
        if (globalProjectionState.hasEverUpdated) {
            return id$1++;
        }
    });
}

var LayoutGroupContext = React.createContext({});

/**
 * Internal, exported only for usage in Framer
 */
var SwitchLayoutGroupContext = React.createContext({});

function useProjection(projectionId, _a, visualElement, ProjectionNodeConstructor) {
    var _b;
    var layoutId = _a.layoutId, layout = _a.layout, drag = _a.drag, dragConstraints = _a.dragConstraints, layoutScroll = _a.layoutScroll;
    var initialPromotionConfig = React.useContext(SwitchLayoutGroupContext);
    if (!ProjectionNodeConstructor ||
        !visualElement ||
        (visualElement === null || visualElement === void 0 ? void 0 : visualElement.projection)) {
        return;
    }
    visualElement.projection = new ProjectionNodeConstructor(projectionId, visualElement.getLatestValues(), (_b = visualElement.parent) === null || _b === void 0 ? void 0 : _b.projection);
    visualElement.projection.setOptions({
        layoutId: layoutId,
        layout: layout,
        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),
        visualElement: visualElement,
        scheduleRender: function () { return visualElement.scheduleRender(); },
        /**
         * TODO: Update options in an effect. This could be tricky as it'll be too late
         * to update by the time layout animations run.
         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,
         * ensuring it gets called if there's no potential layout animations.
         *
         */
        animationType: typeof layout === "string" ? layout : "both",
        initialPromotionConfig: initialPromotionConfig,
        layoutScroll: layoutScroll,
    });
}

var VisualElementHandler = /** @class */ (function (_super) {
    tslib.__extends(VisualElementHandler, _super);
    function VisualElementHandler() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Update visual element props as soon as we know this update is going to be commited.
     */
    VisualElementHandler.prototype.getSnapshotBeforeUpdate = function () {
        this.updateProps();
        return null;
    };
    VisualElementHandler.prototype.componentDidUpdate = function () { };
    VisualElementHandler.prototype.updateProps = function () {
        var _a = this.props, visualElement = _a.visualElement, props = _a.props;
        if (visualElement)
            visualElement.setProps(props);
    };
    VisualElementHandler.prototype.render = function () {
        return this.props.children;
    };
    return VisualElementHandler;
}(React__default["default"].Component));

/**
 * Create a `motion` component.
 *
 * This function accepts a Component argument, which can be either a string (ie "div"
 * for `motion.div`), or an actual React component.
 *
 * Alongside this is a config option which provides a way of rendering the provided
 * component "offline", or outside the React render cycle.
 */
function createMotionComponent(_a) {
    var preloadedFeatures = _a.preloadedFeatures, createVisualElement = _a.createVisualElement, projectionNodeConstructor = _a.projectionNodeConstructor, useRender = _a.useRender, useVisualState = _a.useVisualState, Component = _a.Component;
    preloadedFeatures && loadFeatures(preloadedFeatures);
    function MotionComponent(props, externalRef) {
        var layoutId = useLayoutId(props);
        props = tslib.__assign(tslib.__assign({}, props), { layoutId: layoutId });
        /**
         * If we're rendering in a static environment, we only visually update the component
         * as a result of a React-rerender rather than interactions or animations. This
         * means we don't need to load additional memory structures like VisualElement,
         * or any gesture/animation features.
         */
        var config = React.useContext(MotionConfigContext);
        var features = null;
        var context = useCreateMotionContext(props);
        /**
         * Create a unique projection ID for this component. If a new component is added
         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing
         * us to measure it as soon as any layout effect flushes pending layout animations.
         *
         * Performance note: It'd be better not to have to search the DOM for these elements.
         * For newly-entering components it could be enough to only correct treeScale, in which
         * case we could mount in a scale-correction mode. This wouldn't be enough for
         * shared element transitions however. Perhaps for those we could revert to a root node
         * that gets forceRendered and layout animations are triggered on its layout effect.
         */
        var projectionId = config.isStatic ? undefined : useProjectionId();
        /**
         *
         */
        var visualState = useVisualState(props, config.isStatic);
        if (!config.isStatic && isBrowser) {
            /**
             * Create a VisualElement for this component. A VisualElement provides a common
             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as
             * providing a way of rendering to these APIs outside of the React render loop
             * for more performant animations and interactions
             */
            context.visualElement = useVisualElement(Component, visualState, tslib.__assign(tslib.__assign({}, config), props), createVisualElement);
            useProjection(projectionId, props, context.visualElement, projectionNodeConstructor ||
                featureDefinitions.projectionNodeConstructor);
            /**
             * Load Motion gesture and animation features. These are rendered as renderless
             * components so each feature can optionally make use of React lifecycle methods.
             */
            features = useFeatures(props, context.visualElement, preloadedFeatures);
        }
        /**
         * The mount order and hierarchy is specific to ensure our element ref
         * is hydrated by the time features fire their effects.
         */
        return (React__namespace.createElement(VisualElementHandler, { visualElement: context.visualElement, props: tslib.__assign(tslib.__assign({}, config), props) },
            features,
            React__namespace.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, config.isStatic, context.visualElement))));
    }
    return React.forwardRef(MotionComponent);
}
function useLayoutId(_a) {
    var _b;
    var layoutId = _a.layoutId;
    var layoutGroupId = (_b = React.useContext(LayoutGroupContext)) === null || _b === void 0 ? void 0 : _b.id;
    return layoutGroupId && layoutId !== undefined
        ? layoutGroupId + "-" + layoutId
        : layoutId;
}

/**
 * Convert any React component into a `motion` component. The provided component
 * **must** use `React.forwardRef` to the underlying DOM component you want to animate.
 *
 * ```jsx
 * const Component = React.forwardRef((props, ref) => {
 *   return <div ref={ref} />
 * })
 *
 * const MotionComponent = motion(Component)
 * ```
 *
 * @public
 */
function createMotionProxy(createConfig) {
    function custom(Component, customMotionComponentConfig) {
        if (customMotionComponentConfig === void 0) { customMotionComponentConfig = {}; }
        return createMotionComponent(createConfig(Component, customMotionComponentConfig));
    }
    if (typeof Proxy === "undefined") {
        return custom;
    }
    /**
     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.
     * Rather than generating them anew every render.
     */
    var componentCache = new Map();
    return new Proxy(custom, {
        /**
         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.
         * The prop name is passed through as `key` and we can use that to generate a `motion`
         * DOM component with that name.
         */
        get: function (_target, key) {
            /**
             * If this element doesn't exist in the component cache, create it and cache.
             */
            if (!componentCache.has(key)) {
                componentCache.set(key, custom(key));
            }
            return componentCache.get(key);
        },
    });
}

/**
 * We keep these listed seperately as we use the lowercase tag names as part
 * of the runtime bundle to detect SVG components
 */
var lowercaseSVGElements = [
    "animate",
    "circle",
    "defs",
    "desc",
    "ellipse",
    "g",
    "image",
    "line",
    "filter",
    "marker",
    "mask",
    "metadata",
    "path",
    "pattern",
    "polygon",
    "polyline",
    "rect",
    "stop",
    "svg",
    "switch",
    "symbol",
    "text",
    "tspan",
    "use",
    "view",
];

function isSVGComponent(Component) {
    if (
    /**
     * If it's not a string, it's a custom React component. Currently we only support
     * HTML custom React components.
     */
    typeof Component !== "string" ||
        /**
         * If it contains a dash, the element is a custom HTML webcomponent.
         */
        Component.includes("-")) {
        return false;
    }
    else if (
    /**
     * If it's in our list of lowercase SVG tags, it's an SVG component
     */
    lowercaseSVGElements.indexOf(Component) > -1 ||
        /**
         * If it contains a capital letter, it's an SVG component
         */
        /[A-Z]/.test(Component)) {
        return true;
    }
    return false;
}

var scaleCorrectors = {};
function addScaleCorrector(correctors) {
    Object.assign(scaleCorrectors, correctors);
}

/**
 * A list of all transformable axes. We'll use this list to generated a version
 * of each axes for each transform.
 */
var transformAxes = ["", "X", "Y", "Z"];
/**
 * An ordered array of each transformable value. By default, transform values
 * will be sorted to this order.
 */
var order = ["translate", "scale", "rotate", "skew"];
/**
 * Generate a list of every possible transform key.
 */
var transformProps = ["transformPerspective", "x", "y", "z"];
order.forEach(function (operationKey) {
    return transformAxes.forEach(function (axesKey) {
        return transformProps.push(operationKey + axesKey);
    });
});
/**
 * A function to use with Array.sort to sort transform keys by their default order.
 */
function sortTransformProps(a, b) {
    return transformProps.indexOf(a) - transformProps.indexOf(b);
}
/**
 * A quick lookup for transform props.
 */
var transformPropSet = new Set(transformProps);
function isTransformProp(key) {
    return transformPropSet.has(key);
}
/**
 * A quick lookup for transform origin props
 */
var transformOriginProps = new Set(["originX", "originY", "originZ"]);
function isTransformOriginProp(key) {
    return transformOriginProps.has(key);
}

function isForcedMotionValue(key, _a) {
    var layout = _a.layout, layoutId = _a.layoutId;
    return (isTransformProp(key) ||
        isTransformOriginProp(key) ||
        ((layout || layoutId !== undefined) &&
            (!!scaleCorrectors[key] || key === "opacity")));
}

var isMotionValue = function (value) {
    return Boolean(value !== null && typeof value === "object" && value.getVelocity);
};

var translateAlias = {
    x: "translateX",
    y: "translateY",
    z: "translateZ",
    transformPerspective: "perspective",
};
/**
 * Build a CSS transform style from individual x/y/scale etc properties.
 *
 * This outputs with a default order of transforms/scales/rotations, this can be customised by
 * providing a transformTemplate function.
 */
function buildTransform(_a, _b, transformIsDefault, transformTemplate) {
    var transform = _a.transform, transformKeys = _a.transformKeys;
    var _c = _b.enableHardwareAcceleration, enableHardwareAcceleration = _c === void 0 ? true : _c, _d = _b.allowTransformNone, allowTransformNone = _d === void 0 ? true : _d;
    // The transform string we're going to build into.
    var transformString = "";
    // Transform keys into their default order - this will determine the output order.
    transformKeys.sort(sortTransformProps);
    // Track whether the defined transform has a defined z so we don't add a
    // second to enable hardware acceleration
    var transformHasZ = false;
    // Loop over each transform and build them into transformString
    var numTransformKeys = transformKeys.length;
    for (var i = 0; i < numTransformKeys; i++) {
        var key = transformKeys[i];
        transformString += "".concat(translateAlias[key] || key, "(").concat(transform[key], ") ");
        if (key === "z")
            transformHasZ = true;
    }
    if (!transformHasZ && enableHardwareAcceleration) {
        transformString += "translateZ(0)";
    }
    else {
        transformString = transformString.trim();
    }
    // If we have a custom `transform` template, pass our transform values and
    // generated transformString to that before returning
    if (transformTemplate) {
        transformString = transformTemplate(transform, transformIsDefault ? "" : transformString);
    }
    else if (allowTransformNone && transformIsDefault) {
        transformString = "none";
    }
    return transformString;
}
/**
 * Build a transformOrigin style. Uses the same defaults as the browser for
 * undefined origins.
 */
function buildTransformOrigin(_a) {
    var _b = _a.originX, originX = _b === void 0 ? "50%" : _b, _c = _a.originY, originY = _c === void 0 ? "50%" : _c, _d = _a.originZ, originZ = _d === void 0 ? 0 : _d;
    return "".concat(originX, " ").concat(originY, " ").concat(originZ);
}

/**
 * Returns true if the provided key is a CSS variable
 */
function isCSSVariable$1(key) {
    return key.startsWith("--");
}

/**
 * Provided a value and a ValueType, returns the value as that value type.
 */
var getValueAsType = function (value, type) {
    return type && typeof value === "number"
        ? type.transform(value)
        : value;
};

var int = tslib.__assign(tslib.__assign({}, styleValueTypes.number), { transform: Math.round });

var numberValueTypes = {
    // Border props
    borderWidth: styleValueTypes.px,
    borderTopWidth: styleValueTypes.px,
    borderRightWidth: styleValueTypes.px,
    borderBottomWidth: styleValueTypes.px,
    borderLeftWidth: styleValueTypes.px,
    borderRadius: styleValueTypes.px,
    radius: styleValueTypes.px,
    borderTopLeftRadius: styleValueTypes.px,
    borderTopRightRadius: styleValueTypes.px,
    borderBottomRightRadius: styleValueTypes.px,
    borderBottomLeftRadius: styleValueTypes.px,
    // Positioning props
    width: styleValueTypes.px,
    maxWidth: styleValueTypes.px,
    height: styleValueTypes.px,
    maxHeight: styleValueTypes.px,
    size: styleValueTypes.px,
    top: styleValueTypes.px,
    right: styleValueTypes.px,
    bottom: styleValueTypes.px,
    left: styleValueTypes.px,
    // Spacing props
    padding: styleValueTypes.px,
    paddingTop: styleValueTypes.px,
    paddingRight: styleValueTypes.px,
    paddingBottom: styleValueTypes.px,
    paddingLeft: styleValueTypes.px,
    margin: styleValueTypes.px,
    marginTop: styleValueTypes.px,
    marginRight: styleValueTypes.px,
    marginBottom: styleValueTypes.px,
    marginLeft: styleValueTypes.px,
    // Transform props
    rotate: styleValueTypes.degrees,
    rotateX: styleValueTypes.degrees,
    rotateY: styleValueTypes.degrees,
    rotateZ: styleValueTypes.degrees,
    scale: styleValueTypes.scale,
    scaleX: styleValueTypes.scale,
    scaleY: styleValueTypes.scale,
    scaleZ: styleValueTypes.scale,
    skew: styleValueTypes.degrees,
    skewX: styleValueTypes.degrees,
    skewY: styleValueTypes.degrees,
    distance: styleValueTypes.px,
    translateX: styleValueTypes.px,
    translateY: styleValueTypes.px,
    translateZ: styleValueTypes.px,
    x: styleValueTypes.px,
    y: styleValueTypes.px,
    z: styleValueTypes.px,
    perspective: styleValueTypes.px,
    transformPerspective: styleValueTypes.px,
    opacity: styleValueTypes.alpha,
    originX: styleValueTypes.progressPercentage,
    originY: styleValueTypes.progressPercentage,
    originZ: styleValueTypes.px,
    // Misc
    zIndex: int,
    // SVG
    fillOpacity: styleValueTypes.alpha,
    strokeOpacity: styleValueTypes.alpha,
    numOctaves: int,
};

function buildHTMLStyles(state, latestValues, options, transformTemplate) {
    var _a;
    var style = state.style, vars = state.vars, transform = state.transform, transformKeys = state.transformKeys, transformOrigin = state.transformOrigin;
    // Empty the transformKeys array. As we're throwing out refs to its items
    // this might not be as cheap as suspected. Maybe using the array as a buffer
    // with a manual incrementation would be better.
    transformKeys.length = 0;
    // Track whether we encounter any transform or transformOrigin values.
    var hasTransform = false;
    var hasTransformOrigin = false;
    // Does the calculated transform essentially equal "none"?
    var transformIsNone = true;
    /**
     * Loop over all our latest animated values and decide whether to handle them
     * as a style or CSS variable.
     *
     * Transforms and transform origins are kept seperately for further processing.
     */
    for (var key in latestValues) {
        var value = latestValues[key];
        /**
         * If this is a CSS variable we don't do any further processing.
         */
        if (isCSSVariable$1(key)) {
            vars[key] = value;
            continue;
        }
        // Convert the value to its default value type, ie 0 -> "0px"
        var valueType = numberValueTypes[key];
        var valueAsType = getValueAsType(value, valueType);
        if (isTransformProp(key)) {
            // If this is a transform, flag to enable further transform processing
            hasTransform = true;
            transform[key] = valueAsType;
            transformKeys.push(key);
            // If we already know we have a non-default transform, early return
            if (!transformIsNone)
                continue;
            // Otherwise check to see if this is a default transform
            if (value !== ((_a = valueType.default) !== null && _a !== void 0 ? _a : 0))
                transformIsNone = false;
        }
        else if (isTransformOriginProp(key)) {
            transformOrigin[key] = valueAsType;
            // If this is a transform origin, flag and enable further transform-origin processing
            hasTransformOrigin = true;
        }
        else {
            style[key] = valueAsType;
        }
    }
    if (hasTransform) {
        style.transform = buildTransform(state, options, transformIsNone, transformTemplate);
    }
    else if (transformTemplate) {
        style.transform = transformTemplate({}, "");
    }
    else if (!latestValues.transform && style.transform) {
        style.transform = "none";
    }
    if (hasTransformOrigin) {
        style.transformOrigin = buildTransformOrigin(transformOrigin);
    }
}

var createHtmlRenderState = function () { return ({
    style: {},
    transform: {},
    transformKeys: [],
    transformOrigin: {},
    vars: {},
}); };

function copyRawValuesOnly(target, source, props) {
    for (var key in source) {
        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {
            target[key] = source[key];
        }
    }
}
function useInitialMotionValues(_a, visualState, isStatic) {
    var transformTemplate = _a.transformTemplate;
    return React.useMemo(function () {
        var state = createHtmlRenderState();
        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);
        var vars = state.vars, style = state.style;
        return tslib.__assign(tslib.__assign({}, vars), style);
    }, [visualState]);
}
function useStyle(props, visualState, isStatic) {
    var styleProp = props.style || {};
    var style = {};
    /**
     * Copy non-Motion Values straight into style
     */
    copyRawValuesOnly(style, styleProp, props);
    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));
    if (props.transformValues) {
        style = props.transformValues(style);
    }
    return style;
}
function useHTMLProps(props, visualState, isStatic) {
    // The `any` isn't ideal but it is the type of createElement props argument
    var htmlProps = {};
    var style = useStyle(props, visualState, isStatic);
    if (Boolean(props.drag) && props.dragListener !== false) {
        // Disable the ghost element when a user drags
        htmlProps.draggable = false;
        // Disable text selection
        style.userSelect =
            style.WebkitUserSelect =
                style.WebkitTouchCallout =
                    "none";
        // Disable scrolling on the draggable direction
        style.touchAction =
            props.drag === true
                ? "none"
                : "pan-".concat(props.drag === "x" ? "y" : "x");
    }
    htmlProps.style = style;
    return htmlProps;
}

/**
 * A list of all valid MotionProps.
 *
 * @privateRemarks
 * This doesn't throw if a `MotionProp` name is missing - it should.
 */
var validMotionProps = new Set([
    "initial",
    "animate",
    "exit",
    "style",
    "variants",
    "transition",
    "transformTemplate",
    "transformValues",
    "custom",
    "inherit",
    "layout",
    "layoutId",
    "layoutDependency",
    "onLayoutAnimationStart",
    "onLayoutAnimationComplete",
    "onLayoutMeasure",
    "onBeforeLayoutMeasure",
    "onAnimationStart",
    "onAnimationComplete",
    "onUpdate",
    "onDragStart",
    "onDrag",
    "onDragEnd",
    "onMeasureDragConstraints",
    "onDirectionLock",
    "onDragTransitionEnd",
    "drag",
    "dragControls",
    "dragListener",
    "dragConstraints",
    "dragDirectionLock",
    "dragSnapToOrigin",
    "_dragX",
    "_dragY",
    "dragElastic",
    "dragMomentum",
    "dragPropagation",
    "dragTransition",
    "whileDrag",
    "onPan",
    "onPanStart",
    "onPanEnd",
    "onPanSessionStart",
    "onTap",
    "onTapStart",
    "onTapCancel",
    "onHoverStart",
    "onHoverEnd",
    "whileFocus",
    "whileTap",
    "whileHover",
    "whileInView",
    "onViewportEnter",
    "onViewportLeave",
    "viewport",
    "layoutScroll",
]);
/**
 * Check whether a prop name is a valid `MotionProp` key.
 *
 * @param key - Name of the property to check
 * @returns `true` is key is a valid `MotionProp`.
 *
 * @public
 */
function isValidMotionProp(key) {
    return validMotionProps.has(key);
}

var shouldForward = function (key) { return !isValidMotionProp(key); };
function loadExternalIsValidProp(isValidProp) {
    if (!isValidProp)
        return;
    // Explicitly filter our events
    shouldForward = function (key) {
        return key.startsWith("on") ? !isValidMotionProp(key) : isValidProp(key);
    };
}
/**
 * Emotion and Styled Components both allow users to pass through arbitrary props to their components
 * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which
 * of these should be passed to the underlying DOM node.
 *
 * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props
 * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props
 * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of
 * `@emotion/is-prop-valid`, however to fix this problem we need to use it.
 *
 * By making it an optionalDependency we can offer this functionality only in the situations where it's
 * actually required.
 */
try {
    /**
     * We attempt to import this package but require won't be defined in esm environments, in that case
     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed
     * in favour of explicit injection.
     */
    loadExternalIsValidProp((__webpack_require__(/*! @emotion/is-prop-valid */ "./node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js")["default"]));
}
catch (_a) {
    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.
}
function filterProps(props, isDom, forwardMotionProps) {
    var filteredProps = {};
    for (var key in props) {
        if (shouldForward(key) ||
            (forwardMotionProps === true && isValidMotionProp(key)) ||
            (!isDom && !isValidMotionProp(key)) ||
            // If trying to use native HTML drag events, forward drag listeners
            (props["draggable"] && key.startsWith("onDrag"))) {
            filteredProps[key] = props[key];
        }
    }
    return filteredProps;
}

function calcOrigin$1(origin, offset, size) {
    return typeof origin === "string"
        ? origin
        : styleValueTypes.px.transform(offset + size * origin);
}
/**
 * The SVG transform origin defaults are different to CSS and is less intuitive,
 * so we use the measured dimensions of the SVG to reconcile these.
 */
function calcSVGTransformOrigin(dimensions, originX, originY) {
    var pxOriginX = calcOrigin$1(originX, dimensions.x, dimensions.width);
    var pxOriginY = calcOrigin$1(originY, dimensions.y, dimensions.height);
    return "".concat(pxOriginX, " ").concat(pxOriginY);
}

var dashKeys = {
    offset: "stroke-dashoffset",
    array: "stroke-dasharray",
};
var camelKeys = {
    offset: "strokeDashoffset",
    array: "strokeDasharray",
};
/**
 * Build SVG path properties. Uses the path's measured length to convert
 * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset
 * and stroke-dasharray attributes.
 *
 * This function is mutative to reduce per-frame GC.
 */
function buildSVGPath(attrs, length, spacing, offset, useDashCase) {
    if (spacing === void 0) { spacing = 1; }
    if (offset === void 0) { offset = 0; }
    if (useDashCase === void 0) { useDashCase = true; }
    // Normalise path length by setting SVG attribute pathLength to 1
    attrs.pathLength = 1;
    // We use dash case when setting attributes directly to the DOM node and camel case
    // when defining props on a React component.
    var keys = useDashCase ? dashKeys : camelKeys;
    // Build the dash offset
    attrs[keys.offset] = styleValueTypes.px.transform(-offset);
    // Build the dash array
    var pathLength = styleValueTypes.px.transform(length);
    var pathSpacing = styleValueTypes.px.transform(spacing);
    attrs[keys.array] = "".concat(pathLength, " ").concat(pathSpacing);
}

/**
 * Build SVG visual attrbutes, like cx and style.transform
 */
function buildSVGAttrs(state, _a, options, transformTemplate) {
    var attrX = _a.attrX, attrY = _a.attrY, originX = _a.originX, originY = _a.originY, pathLength = _a.pathLength, _b = _a.pathSpacing, pathSpacing = _b === void 0 ? 1 : _b, _c = _a.pathOffset, pathOffset = _c === void 0 ? 0 : _c, 
    // This is object creation, which we try to avoid per-frame.
    latest = tslib.__rest(_a, ["attrX", "attrY", "originX", "originY", "pathLength", "pathSpacing", "pathOffset"]);
    buildHTMLStyles(state, latest, options, transformTemplate);
    state.attrs = state.style;
    state.style = {};
    var attrs = state.attrs, style = state.style, dimensions = state.dimensions;
    /**
     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs
     * and copy it into style.
     */
    if (attrs.transform) {
        if (dimensions)
            style.transform = attrs.transform;
        delete attrs.transform;
    }
    // Parse transformOrigin
    if (dimensions &&
        (originX !== undefined || originY !== undefined || style.transform)) {
        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);
    }
    // Treat x/y not as shortcuts but as actual attributes
    if (attrX !== undefined)
        attrs.x = attrX;
    if (attrY !== undefined)
        attrs.y = attrY;
    // Build SVG path if one has been defined
    if (pathLength !== undefined) {
        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);
    }
}

var createSvgRenderState = function () { return (tslib.__assign(tslib.__assign({}, createHtmlRenderState()), { attrs: {} })); };

function useSVGProps(props, visualState) {
    var visualProps = React.useMemo(function () {
        var state = createSvgRenderState();
        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, props.transformTemplate);
        return tslib.__assign(tslib.__assign({}, state.attrs), { style: tslib.__assign({}, state.style) });
    }, [visualState]);
    if (props.style) {
        var rawStyles = {};
        copyRawValuesOnly(rawStyles, props.style, props);
        visualProps.style = tslib.__assign(tslib.__assign({}, rawStyles), visualProps.style);
    }
    return visualProps;
}

function createUseRender(forwardMotionProps) {
    if (forwardMotionProps === void 0) { forwardMotionProps = false; }
    var useRender = function (Component, props, projectionId, ref, _a, isStatic) {
        var latestValues = _a.latestValues;
        var useVisualProps = isSVGComponent(Component)
            ? useSVGProps
            : useHTMLProps;
        var visualProps = useVisualProps(props, latestValues, isStatic);
        var filteredProps = filterProps(props, typeof Component === "string", forwardMotionProps);
        var elementProps = tslib.__assign(tslib.__assign(tslib.__assign({}, filteredProps), visualProps), { ref: ref });
        if (projectionId) {
            elementProps["data-projection-id"] = projectionId;
        }
        return React.createElement(Component, elementProps);
    };
    return useRender;
}

var CAMEL_CASE_PATTERN = /([a-z])([A-Z])/g;
var REPLACE_TEMPLATE = "$1-$2";
/**
 * Convert camelCase to dash-case properties.
 */
var camelToDash = function (str) {
    return str.replace(CAMEL_CASE_PATTERN, REPLACE_TEMPLATE).toLowerCase();
};

function renderHTML(element, _a, styleProp, projection) {
    var style = _a.style, vars = _a.vars;
    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));
    // Loop over any CSS variables and assign those.
    for (var key in vars) {
        element.style.setProperty(key, vars[key]);
    }
}

/**
 * A set of attribute names that are always read/written as camel case.
 */
var camelCaseAttributes = new Set([
    "baseFrequency",
    "diffuseConstant",
    "kernelMatrix",
    "kernelUnitLength",
    "keySplines",
    "keyTimes",
    "limitingConeAngle",
    "markerHeight",
    "markerWidth",
    "numOctaves",
    "targetX",
    "targetY",
    "surfaceScale",
    "specularConstant",
    "specularExponent",
    "stdDeviation",
    "tableValues",
    "viewBox",
    "gradientTransform",
    "pathLength",
]);

function renderSVG(element, renderState, _styleProp, projection) {
    renderHTML(element, renderState, undefined, projection);
    for (var key in renderState.attrs) {
        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);
    }
}

function scrapeMotionValuesFromProps$1(props) {
    var style = props.style;
    var newValues = {};
    for (var key in style) {
        if (isMotionValue(style[key]) || isForcedMotionValue(key, props)) {
            newValues[key] = style[key];
        }
    }
    return newValues;
}

function scrapeMotionValuesFromProps(props) {
    var newValues = scrapeMotionValuesFromProps$1(props);
    for (var key in props) {
        if (isMotionValue(props[key])) {
            var targetKey = key === "x" || key === "y" ? "attr" + key.toUpperCase() : key;
            newValues[targetKey] = props[key];
        }
    }
    return newValues;
}

function isAnimationControls(v) {
    return typeof v === "object" && typeof v.start === "function";
}

var isKeyframesTarget = function (v) {
    return Array.isArray(v);
};

var isCustomValue = function (v) {
    return Boolean(v && typeof v === "object" && v.mix && v.toValue);
};
var resolveFinalValueInKeyframes = function (v) {
    // TODO maybe throw if v.length - 1 is placeholder token?
    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;
};

/**
 * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself
 *
 * TODO: Remove and move to library
 */
function resolveMotionValue(value) {
    var unwrappedValue = isMotionValue(value) ? value.get() : value;
    return isCustomValue(unwrappedValue)
        ? unwrappedValue.toValue()
        : unwrappedValue;
}

function makeState(_a, props, context, presenceContext) {
    var scrapeMotionValuesFromProps = _a.scrapeMotionValuesFromProps, createRenderState = _a.createRenderState, onMount = _a.onMount;
    var state = {
        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),
        renderState: createRenderState(),
    };
    if (onMount) {
        state.mount = function (instance) { return onMount(props, instance, state); };
    }
    return state;
}
var makeUseVisualState = function (config) {
    return function (props, isStatic) {
        var context = React.useContext(MotionContext);
        var presenceContext = React.useContext(PresenceContext);
        return isStatic
            ? makeState(config, props, context, presenceContext)
            : useConstant(function () {
                return makeState(config, props, context, presenceContext);
            });
    };
};
function makeLatestValues(props, context, presenceContext, scrapeMotionValues) {
    var values = {};
    var blockInitialAnimation = (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.initial) === false;
    var motionValues = scrapeMotionValues(props);
    for (var key in motionValues) {
        values[key] = resolveMotionValue(motionValues[key]);
    }
    var initial = props.initial, animate = props.animate;
    var isControllingVariants = checkIfControllingVariants(props);
    var isVariantNode = checkIfVariantNode(props);
    if (context &&
        isVariantNode &&
        !isControllingVariants &&
        props.inherit !== false) {
        initial !== null && initial !== void 0 ? initial : (initial = context.initial);
        animate !== null && animate !== void 0 ? animate : (animate = context.animate);
    }
    var initialAnimationIsBlocked = blockInitialAnimation || initial === false;
    var variantToSet = initialAnimationIsBlocked ? animate : initial;
    if (variantToSet &&
        typeof variantToSet !== "boolean" &&
        !isAnimationControls(variantToSet)) {
        var list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];
        list.forEach(function (definition) {
            var resolved = resolveVariantFromProps(props, definition);
            if (!resolved)
                return;
            var transitionEnd = resolved.transitionEnd; resolved.transition; var target = tslib.__rest(resolved, ["transitionEnd", "transition"]);
            for (var key in target) {
                var valueTarget = target[key];
                if (Array.isArray(valueTarget)) {
                    /**
                     * Take final keyframe if the initial animation is blocked because
                     * we want to initialise at the end of that blocked animation.
                     */
                    var index = initialAnimationIsBlocked
                        ? valueTarget.length - 1
                        : 0;
                    valueTarget = valueTarget[index];
                }
                if (valueTarget !== null) {
                    values[key] = valueTarget;
                }
            }
            for (var key in transitionEnd)
                values[key] = transitionEnd[key];
        });
    }
    return values;
}

var svgMotionConfig = {
    useVisualState: makeUseVisualState({
        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,
        createRenderState: createSvgRenderState,
        onMount: function (props, instance, _a) {
            var renderState = _a.renderState, latestValues = _a.latestValues;
            try {
                renderState.dimensions =
                    typeof instance.getBBox ===
                        "function"
                        ? instance.getBBox()
                        : instance.getBoundingClientRect();
            }
            catch (e) {
                // Most likely trying to measure an unrendered element under Firefox
                renderState.dimensions = {
                    x: 0,
                    y: 0,
                    width: 0,
                    height: 0,
                };
            }
            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, props.transformTemplate);
            renderSVG(instance, renderState);
        },
    }),
};

var htmlMotionConfig = {
    useVisualState: makeUseVisualState({
        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps$1,
        createRenderState: createHtmlRenderState,
    }),
};

function createDomMotionConfig(Component, _a, preloadedFeatures, createVisualElement, projectionNodeConstructor) {
    var _b = _a.forwardMotionProps, forwardMotionProps = _b === void 0 ? false : _b;
    var baseConfig = isSVGComponent(Component)
        ? svgMotionConfig
        : htmlMotionConfig;
    return tslib.__assign(tslib.__assign({}, baseConfig), { preloadedFeatures: preloadedFeatures, useRender: createUseRender(forwardMotionProps), createVisualElement: createVisualElement, projectionNodeConstructor: projectionNodeConstructor, Component: Component });
}

exports.AnimationType = void 0;
(function (AnimationType) {
    AnimationType["Animate"] = "animate";
    AnimationType["Hover"] = "whileHover";
    AnimationType["Tap"] = "whileTap";
    AnimationType["Drag"] = "whileDrag";
    AnimationType["Focus"] = "whileFocus";
    AnimationType["InView"] = "whileInView";
    AnimationType["Exit"] = "exit";
})(exports.AnimationType || (exports.AnimationType = {}));

function addDomEvent(target, eventName, handler, options) {
    if (options === void 0) { options = { passive: true }; }
    target.addEventListener(eventName, handler, options);
    return function () { return target.removeEventListener(eventName, handler); };
}
/**
 * Attaches an event listener directly to the provided DOM element.
 *
 * Bypassing React's event system can be desirable, for instance when attaching non-passive
 * event handlers.
 *
 * ```jsx
 * const ref = useRef(null)
 *
 * useDomEvent(ref, 'wheel', onWheel, { passive: false })
 *
 * return <div ref={ref} />
 * ```
 *
 * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.
 * @param eventName - Name of the event you want listen for.
 * @param handler - Function to fire when receiving the event.
 * @param options - Options to pass to `Event.addEventListener`.
 *
 * @public
 */
function useDomEvent(ref, eventName, handler, options) {
    React.useEffect(function () {
        var element = ref.current;
        if (handler && element) {
            return addDomEvent(element, eventName, handler, options);
        }
    }, [ref, eventName, handler, options]);
}

/**
 *
 * @param props
 * @param ref
 * @internal
 */
function useFocusGesture(_a) {
    var whileFocus = _a.whileFocus, visualElement = _a.visualElement;
    var onFocus = function () {
        var _a;
        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(exports.AnimationType.Focus, true);
    };
    var onBlur = function () {
        var _a;
        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(exports.AnimationType.Focus, false);
    };
    useDomEvent(visualElement, "focus", whileFocus ? onFocus : undefined);
    useDomEvent(visualElement, "blur", whileFocus ? onBlur : undefined);
}

function isMouseEvent(event) {
    // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.
    if (typeof PointerEvent !== "undefined" && event instanceof PointerEvent) {
        return !!(event.pointerType === "mouse");
    }
    return event instanceof MouseEvent;
}
function isTouchEvent(event) {
    var hasTouches = !!event.touches;
    return hasTouches;
}

/**
 * Filters out events not attached to the primary pointer (currently left mouse button)
 * @param eventHandler
 */
function filterPrimaryPointer(eventHandler) {
    return function (event) {
        var isMouseEvent = event instanceof MouseEvent;
        var isPrimaryPointer = !isMouseEvent ||
            (isMouseEvent && event.button === 0);
        if (isPrimaryPointer) {
            eventHandler(event);
        }
    };
}
var defaultPagePoint = { pageX: 0, pageY: 0 };
function pointFromTouch(e, pointType) {
    if (pointType === void 0) { pointType = "page"; }
    var primaryTouch = e.touches[0] || e.changedTouches[0];
    var point = primaryTouch || defaultPagePoint;
    return {
        x: point[pointType + "X"],
        y: point[pointType + "Y"],
    };
}
function pointFromMouse(point, pointType) {
    if (pointType === void 0) { pointType = "page"; }
    return {
        x: point[pointType + "X"],
        y: point[pointType + "Y"],
    };
}
function extractEventInfo(event, pointType) {
    if (pointType === void 0) { pointType = "page"; }
    return {
        point: isTouchEvent(event)
            ? pointFromTouch(event, pointType)
            : pointFromMouse(event, pointType),
    };
}
var wrapHandler = function (handler, shouldFilterPrimaryPointer) {
    if (shouldFilterPrimaryPointer === void 0) { shouldFilterPrimaryPointer = false; }
    var listener = function (event) {
        return handler(event, extractEventInfo(event));
    };
    return shouldFilterPrimaryPointer
        ? filterPrimaryPointer(listener)
        : listener;
};

// We check for event support via functions in case they've been mocked by a testing suite.
var supportsPointerEvents = function () {
    return isBrowser && window.onpointerdown === null;
};
var supportsTouchEvents = function () {
    return isBrowser && window.ontouchstart === null;
};
var supportsMouseEvents = function () {
    return isBrowser && window.onmousedown === null;
};

var mouseEventNames = {
    pointerdown: "mousedown",
    pointermove: "mousemove",
    pointerup: "mouseup",
    pointercancel: "mousecancel",
    pointerover: "mouseover",
    pointerout: "mouseout",
    pointerenter: "mouseenter",
    pointerleave: "mouseleave",
};
var touchEventNames = {
    pointerdown: "touchstart",
    pointermove: "touchmove",
    pointerup: "touchend",
    pointercancel: "touchcancel",
};
function getPointerEventName(name) {
    if (supportsPointerEvents()) {
        return name;
    }
    else if (supportsTouchEvents()) {
        return touchEventNames[name];
    }
    else if (supportsMouseEvents()) {
        return mouseEventNames[name];
    }
    return name;
}
function addPointerEvent(target, eventName, handler, options) {
    return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === "pointerdown"), options);
}
function usePointerEvent(ref, eventName, handler, options) {
    return useDomEvent(ref, getPointerEventName(eventName), handler && wrapHandler(handler, eventName === "pointerdown"), options);
}

function createLock(name) {
    var lock = null;
    return function () {
        var openLock = function () {
            lock = null;
        };
        if (lock === null) {
            lock = name;
            return openLock;
        }
        return false;
    };
}
var globalHorizontalLock = createLock("dragHorizontal");
var globalVerticalLock = createLock("dragVertical");
function getGlobalLock(drag) {
    var lock = false;
    if (drag === "y") {
        lock = globalVerticalLock();
    }
    else if (drag === "x") {
        lock = globalHorizontalLock();
    }
    else {
        var openHorizontal_1 = globalHorizontalLock();
        var openVertical_1 = globalVerticalLock();
        if (openHorizontal_1 && openVertical_1) {
            lock = function () {
                openHorizontal_1();
                openVertical_1();
            };
        }
        else {
            // Release the locks because we don't use them
            if (openHorizontal_1)
                openHorizontal_1();
            if (openVertical_1)
                openVertical_1();
        }
    }
    return lock;
}
function isDragActive() {
    // Check the gesture lock - if we get it, it means no drag gesture is active
    // and we can safely fire the tap gesture.
    var openGestureLock = getGlobalLock(true);
    if (!openGestureLock)
        return true;
    openGestureLock();
    return false;
}

function createHoverEvent(visualElement, isActive, callback) {
    return function (event, info) {
        var _a;
        if (!isMouseEvent(event) || isDragActive())
            return;
        /**
         * Ensure we trigger animations before firing event callback
         */
        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(exports.AnimationType.Hover, isActive);
        callback === null || callback === void 0 ? void 0 : callback(event, info);
    };
}
function useHoverGesture(_a) {
    var onHoverStart = _a.onHoverStart, onHoverEnd = _a.onHoverEnd, whileHover = _a.whileHover, visualElement = _a.visualElement;
    usePointerEvent(visualElement, "pointerenter", onHoverStart || whileHover
        ? createHoverEvent(visualElement, true, onHoverStart)
        : undefined, { passive: !onHoverStart });
    usePointerEvent(visualElement, "pointerleave", onHoverEnd || whileHover
        ? createHoverEvent(visualElement, false, onHoverEnd)
        : undefined, { passive: !onHoverEnd });
}

/**
 * Recursively traverse up the tree to check whether the provided child node
 * is the parent or a descendant of it.
 *
 * @param parent - Element to find
 * @param child - Element to test against parent
 */
var isNodeOrChild = function (parent, child) {
    if (!child) {
        return false;
    }
    else if (parent === child) {
        return true;
    }
    else {
        return isNodeOrChild(parent, child.parentElement);
    }
};

function useUnmountEffect(callback) {
    return React.useEffect(function () { return function () { return callback(); }; }, []);
}

/**
 * @param handlers -
 * @internal
 */
function useTapGesture(_a) {
    var onTap = _a.onTap, onTapStart = _a.onTapStart, onTapCancel = _a.onTapCancel, whileTap = _a.whileTap, visualElement = _a.visualElement;
    var hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;
    var isPressing = React.useRef(false);
    var cancelPointerEndListeners = React.useRef(null);
    /**
     * Only set listener to passive if there are no external listeners.
     */
    var eventOptions = {
        passive: !(onTapStart || onTap || onTapCancel || onPointerDown),
    };
    function removePointerEndListener() {
        var _a;
        (_a = cancelPointerEndListeners.current) === null || _a === void 0 ? void 0 : _a.call(cancelPointerEndListeners);
        cancelPointerEndListeners.current = null;
    }
    function checkPointerEnd() {
        var _a;
        removePointerEndListener();
        isPressing.current = false;
        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(exports.AnimationType.Tap, false);
        return !isDragActive();
    }
    function onPointerUp(event, info) {
        if (!checkPointerEnd())
            return;
        /**
         * We only count this as a tap gesture if the event.target is the same
         * as, or a child of, this component's element
         */
        !isNodeOrChild(visualElement.getInstance(), event.target)
            ? onTapCancel === null || onTapCancel === void 0 ? void 0 : onTapCancel(event, info)
            : onTap === null || onTap === void 0 ? void 0 : onTap(event, info);
    }
    function onPointerCancel(event, info) {
        if (!checkPointerEnd())
            return;
        onTapCancel === null || onTapCancel === void 0 ? void 0 : onTapCancel(event, info);
    }
    function onPointerDown(event, info) {
        var _a;
        removePointerEndListener();
        if (isPressing.current)
            return;
        isPressing.current = true;
        cancelPointerEndListeners.current = popmotion.pipe(addPointerEvent(window, "pointerup", onPointerUp, eventOptions), addPointerEvent(window, "pointercancel", onPointerCancel, eventOptions));
        /**
         * Ensure we trigger animations before firing event callback
         */
        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(exports.AnimationType.Tap, true);
        onTapStart === null || onTapStart === void 0 ? void 0 : onTapStart(event, info);
    }
    usePointerEvent(visualElement, "pointerdown", hasPressListeners ? onPointerDown : undefined, eventOptions);
    useUnmountEffect(removePointerEndListener);
}

var warned = new Set();
function warnOnce(condition, message, element) {
    if (condition || warned.has(message))
        return;
    console.warn(message);
    if (element)
        console.warn(element);
    warned.add(message);
}

/**
 * Map an IntersectionHandler callback to an element. We only ever make one handler for one
 * element, so even though these handlers might all be triggered by different
 * observers, we can keep them in the same map.
 */
var observerCallbacks = new WeakMap();
/**
 * Multiple observers can be created for multiple element/document roots. Each with
 * different settings. So here we store dictionaries of observers to each root,
 * using serialised settings (threshold/margin) as lookup keys.
 */
var observers = new WeakMap();
var fireObserverCallback = function (entry) {
    var _a;
    (_a = observerCallbacks.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);
};
var fireAllObserverCallbacks = function (entries) {
    entries.forEach(fireObserverCallback);
};
function initIntersectionObserver(_a) {
    var root = _a.root, options = tslib.__rest(_a, ["root"]);
    var lookupRoot = root || document;
    /**
     * If we don't have an observer lookup map for this root, create one.
     */
    if (!observers.has(lookupRoot)) {
        observers.set(lookupRoot, {});
    }
    var rootObservers = observers.get(lookupRoot);
    var key = JSON.stringify(options);
    /**
     * If we don't have an observer for this combination of root and settings,
     * create one.
     */
    if (!rootObservers[key]) {
        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, tslib.__assign({ root: root }, options));
    }
    return rootObservers[key];
}
function observeIntersection(element, options, callback) {
    var rootInteresectionObserver = initIntersectionObserver(options);
    observerCallbacks.set(element, callback);
    rootInteresectionObserver.observe(element);
    return function () {
        observerCallbacks.delete(element);
        rootInteresectionObserver.unobserve(element);
    };
}

function useViewport(_a) {
    var visualElement = _a.visualElement, whileInView = _a.whileInView, onViewportEnter = _a.onViewportEnter, onViewportLeave = _a.onViewportLeave, _b = _a.viewport, viewport = _b === void 0 ? {} : _b;
    var state = React.useRef({
        hasEnteredView: false,
        isInView: false,
    });
    var shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);
    if (viewport.once && state.current.hasEnteredView)
        shouldObserve = false;
    var useObserver = typeof IntersectionObserver === "undefined"
        ? useMissingIntersectionObserver
        : useIntersectionObserver;
    useObserver(shouldObserve, state.current, visualElement, viewport);
}
var thresholdNames = {
    some: 0,
    all: 1,
};
function useIntersectionObserver(shouldObserve, state, visualElement, _a) {
    var root = _a.root, rootMargin = _a.margin, _b = _a.amount, amount = _b === void 0 ? "some" : _b, once = _a.once;
    React.useEffect(function () {
        if (!shouldObserve)
            return;
        var options = {
            root: root === null || root === void 0 ? void 0 : root.current,
            rootMargin: rootMargin,
            threshold: typeof amount === "number" ? amount : thresholdNames[amount],
        };
        var intersectionCallback = function (entry) {
            var _a;
            var isIntersecting = entry.isIntersecting;
            /**
             * If there's been no change in the viewport state, early return.
             */
            if (state.isInView === isIntersecting)
                return;
            state.isInView = isIntersecting;
            /**
             * Handle hasEnteredView. If this is only meant to run once, and
             * element isn't visible, early return. Otherwise set hasEnteredView to true.
             */
            if (once && !isIntersecting && state.hasEnteredView) {
                return;
            }
            else if (isIntersecting) {
                state.hasEnteredView = true;
            }
            (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(exports.AnimationType.InView, isIntersecting);
            /**
             * Use the latest committed props rather than the ones in scope
             * when this observer is created
             */
            var props = visualElement.getProps();
            var callback = isIntersecting
                ? props.onViewportEnter
                : props.onViewportLeave;
            callback === null || callback === void 0 ? void 0 : callback(entry);
        };
        return observeIntersection(visualElement.getInstance(), options, intersectionCallback);
    }, [shouldObserve, root, rootMargin, amount]);
}
/**
 * If IntersectionObserver is missing, we activate inView and fire onViewportEnter
 * on mount. This way, the page will be in the state the author expects users
 * to see it in for everyone.
 */
function useMissingIntersectionObserver(shouldObserve, state, visualElement, _a) {
    var _b = _a.fallback, fallback = _b === void 0 ? true : _b;
    React.useEffect(function () {
        if (!shouldObserve || !fallback)
            return;
        if (env !== "production") {
            warnOnce(false, "IntersectionObserver not available on this device. whileInView animations will trigger on mount.");
        }
        /**
         * Fire this in an rAF because, at this point, the animation state
         * won't have flushed for the first time and there's certain logic in
         * there that behaves differently on the initial animation.
         *
         * This hook should be quite rarely called so setting this in an rAF
         * is preferred to changing the behaviour of the animation state.
         */
        requestAnimationFrame(function () {
            var _a;
            state.hasEnteredView = true;
            var onViewportEnter = visualElement.getProps().onViewportEnter;
            onViewportEnter === null || onViewportEnter === void 0 ? void 0 : onViewportEnter(null);
            (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(exports.AnimationType.InView, true);
        });
    }, [shouldObserve]);
}

var makeRenderlessComponent = function (hook) { return function (props) {
    hook(props);
    return null;
}; };

var gestureAnimations = {
    inView: makeRenderlessComponent(useViewport),
    tap: makeRenderlessComponent(useTapGesture),
    focus: makeRenderlessComponent(useFocusGesture),
    hover: makeRenderlessComponent(useHoverGesture),
};

var counter = 0;
var incrementId = function () { return counter++; };
var useId = function () { return useConstant(incrementId); };
/**
 * Ideally we'd use the following code to support React 18 optionally.
 * But this fairly fails in Webpack (otherwise treeshaking wouldn't work at all).
 * Need to come up with a different way of figuring this out.
 */
// export const useId = (React as any).useId
//     ? (React as any).useId
//     : () => useConstant(incrementId)

/**
 * When a component is the child of `AnimatePresence`, it can use `usePresence`
 * to access information about whether it's still present in the React tree.
 *
 * ```jsx
 * import { usePresence } from "framer-motion"
 *
 * export const Component = () => {
 *   const [isPresent, safeToRemove] = usePresence()
 *
 *   useEffect(() => {
 *     !isPresent && setTimeout(safeToRemove, 1000)
 *   }, [isPresent])
 *
 *   return <div />
 * }
 * ```
 *
 * If `isPresent` is `false`, it means that a component has been removed the tree, but
 * `AnimatePresence` won't really remove it until `safeToRemove` has been called.
 *
 * @public
 */
function usePresence() {
    var context = React.useContext(PresenceContext);
    if (context === null)
        return [true, null];
    var isPresent = context.isPresent, onExitComplete = context.onExitComplete, register = context.register;
    // It's safe to call the following hooks conditionally (after an early return) because the context will always
    // either be null or non-null for the lifespan of the component.
    // Replace with useId when released in React
    var id = useId();
    React.useEffect(function () { return register(id); }, []);
    var safeToRemove = function () { return onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete(id); };
    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];
}
/**
 * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.
 * There is no `safeToRemove` function.
 *
 * ```jsx
 * import { useIsPresent } from "framer-motion"
 *
 * export const Component = () => {
 *   const isPresent = useIsPresent()
 *
 *   useEffect(() => {
 *     !isPresent && console.log("I've been removed!")
 *   }, [isPresent])
 *
 *   return <div />
 * }
 * ```
 *
 * @public
 */
function useIsPresent() {
    return isPresent(React.useContext(PresenceContext));
}
function isPresent(context) {
    return context === null ? true : context.isPresent;
}

function shallowCompare(next, prev) {
    if (!Array.isArray(prev))
        return false;
    var prevLength = prev.length;
    if (prevLength !== next.length)
        return false;
    for (var i = 0; i < prevLength; i++) {
        if (prev[i] !== next[i])
            return false;
    }
    return true;
}

/**
 * Converts seconds to milliseconds
 *
 * @param seconds - Time in seconds.
 * @return milliseconds - Converted time in milliseconds.
 */
var secondsToMilliseconds = function (seconds) { return seconds * 1000; };

var easingLookup = {
    linear: popmotion.linear,
    easeIn: popmotion.easeIn,
    easeInOut: popmotion.easeInOut,
    easeOut: popmotion.easeOut,
    circIn: popmotion.circIn,
    circInOut: popmotion.circInOut,
    circOut: popmotion.circOut,
    backIn: popmotion.backIn,
    backInOut: popmotion.backInOut,
    backOut: popmotion.backOut,
    anticipate: popmotion.anticipate,
    bounceIn: popmotion.bounceIn,
    bounceInOut: popmotion.bounceInOut,
    bounceOut: popmotion.bounceOut,
};
var easingDefinitionToFunction = function (definition) {
    if (Array.isArray(definition)) {
        // If cubic bezier definition, create bezier curve
        heyListen.invariant(definition.length === 4, "Cubic bezier arrays must contain four numerical values.");
        var _a = tslib.__read(definition, 4), x1 = _a[0], y1 = _a[1], x2 = _a[2], y2 = _a[3];
        return popmotion.cubicBezier(x1, y1, x2, y2);
    }
    else if (typeof definition === "string") {
        // Else lookup from table
        heyListen.invariant(easingLookup[definition] !== undefined, "Invalid easing type '".concat(definition, "'"));
        return easingLookup[definition];
    }
    return definition;
};
var isEasingArray = function (ease) {
    return Array.isArray(ease) && typeof ease[0] !== "number";
};

/**
 * Check if a value is animatable. Examples:
 *
 * ✅: 100, "100px", "#fff"
 * ❌: "block", "url(2.jpg)"
 * @param value
 *
 * @internal
 */
var isAnimatable = function (key, value) {
    // If the list of keys tat might be non-animatable grows, replace with Set
    if (key === "zIndex")
        return false;
    // If it's a number or a keyframes array, we can animate it. We might at some point
    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,
    // but for now lets leave it like this for performance reasons
    if (typeof value === "number" || Array.isArray(value))
        return true;
    if (typeof value === "string" && // It's animatable if we have a string
        styleValueTypes.complex.test(value) && // And it contains numbers and/or colors
        !value.startsWith("url(") // Unless it starts with "url("
    ) {
        return true;
    }
    return false;
};

var underDampedSpring = function () { return ({
    type: "spring",
    stiffness: 500,
    damping: 25,
    restSpeed: 10,
}); };
var criticallyDampedSpring = function (to) { return ({
    type: "spring",
    stiffness: 550,
    damping: to === 0 ? 2 * Math.sqrt(550) : 30,
    restSpeed: 10,
}); };
var linearTween = function () { return ({
    type: "keyframes",
    ease: "linear",
    duration: 0.3,
}); };
var keyframes = function (values) { return ({
    type: "keyframes",
    duration: 0.8,
    values: values,
}); };
var defaultTransitions = {
    x: underDampedSpring,
    y: underDampedSpring,
    z: underDampedSpring,
    rotate: underDampedSpring,
    rotateX: underDampedSpring,
    rotateY: underDampedSpring,
    rotateZ: underDampedSpring,
    scaleX: criticallyDampedSpring,
    scaleY: criticallyDampedSpring,
    scale: criticallyDampedSpring,
    opacity: linearTween,
    backgroundColor: linearTween,
    color: linearTween,
    default: criticallyDampedSpring,
};
var getDefaultTransition = function (valueKey, to) {
    var transitionFactory;
    if (isKeyframesTarget(to)) {
        transitionFactory = keyframes;
    }
    else {
        transitionFactory =
            defaultTransitions[valueKey] || defaultTransitions.default;
    }
    return tslib.__assign({ to: to }, transitionFactory(to));
};

/**
 * A map of default value types for common values
 */
var defaultValueTypes = tslib.__assign(tslib.__assign({}, numberValueTypes), { 
    // Color props
    color: styleValueTypes.color, backgroundColor: styleValueTypes.color, outlineColor: styleValueTypes.color, fill: styleValueTypes.color, stroke: styleValueTypes.color, 
    // Border props
    borderColor: styleValueTypes.color, borderTopColor: styleValueTypes.color, borderRightColor: styleValueTypes.color, borderBottomColor: styleValueTypes.color, borderLeftColor: styleValueTypes.color, filter: styleValueTypes.filter, WebkitFilter: styleValueTypes.filter });
/**
 * Gets the default ValueType for the provided value key
 */
var getDefaultValueType = function (key) { return defaultValueTypes[key]; };

function getAnimatableNone(key, value) {
    var _a;
    var defaultValueType = getDefaultValueType(key);
    if (defaultValueType !== styleValueTypes.filter)
        defaultValueType = styleValueTypes.complex;
    // If value is not recognised as animatable, ie "none", create an animatable version origin based on the target
    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);
}

var instantAnimationState = {
    current: false,
};

/**
 * Decide whether a transition is defined on a given Transition.
 * This filters out orchestration options and returns true
 * if any options are left.
 */
function isTransitionDefined(_a) {
    _a.when; _a.delay; _a.delayChildren; _a.staggerChildren; _a.staggerDirection; _a.repeat; _a.repeatType; _a.repeatDelay; _a.from; var transition = tslib.__rest(_a, ["when", "delay", "delayChildren", "staggerChildren", "staggerDirection", "repeat", "repeatType", "repeatDelay", "from"]);
    return !!Object.keys(transition).length;
}
var legacyRepeatWarning = false;
/**
 * Convert Framer Motion's Transition type into Popmotion-compatible options.
 */
function convertTransitionToAnimationOptions(_a) {
    var ease = _a.ease, times = _a.times, yoyo = _a.yoyo, flip = _a.flip, loop = _a.loop, transition = tslib.__rest(_a, ["ease", "times", "yoyo", "flip", "loop"]);
    var options = tslib.__assign({}, transition);
    if (times)
        options["offset"] = times;
    /**
     * Convert any existing durations from seconds to milliseconds
     */
    if (transition.duration)
        options["duration"] = secondsToMilliseconds(transition.duration);
    if (transition.repeatDelay)
        options.repeatDelay = secondsToMilliseconds(transition.repeatDelay);
    /**
     * Map easing names to Popmotion's easing functions
     */
    if (ease) {
        options["ease"] = isEasingArray(ease)
            ? ease.map(easingDefinitionToFunction)
            : easingDefinitionToFunction(ease);
    }
    /**
     * Support legacy transition API
     */
    if (transition.type === "tween")
        options.type = "keyframes";
    /**
     * TODO: These options are officially removed from the API.
     */
    if (yoyo || loop || flip) {
        heyListen.warning(!legacyRepeatWarning, "yoyo, loop and flip have been removed from the API. Replace with repeat and repeatType options.");
        legacyRepeatWarning = true;
        if (yoyo) {
            options.repeatType = "reverse";
        }
        else if (loop) {
            options.repeatType = "loop";
        }
        else if (flip) {
            options.repeatType = "mirror";
        }
        options.repeat = loop || yoyo || flip || transition.repeat;
    }
    /**
     * TODO: Popmotion 9 has the ability to automatically detect whether to use
     * a keyframes or spring animation, but does so by detecting velocity and other spring options.
     * It'd be good to introduce a similar thing here.
     */
    if (transition.type !== "spring")
        options.type = "keyframes";
    return options;
}
/**
 * Get the delay for a value by checking Transition with decreasing specificity.
 */
function getDelayFromTransition(transition, key) {
    var _a, _b;
    var valueTransition = getValueTransition(transition, key) || {};
    return (_b = (_a = valueTransition.delay) !== null && _a !== void 0 ? _a : transition.delay) !== null && _b !== void 0 ? _b : 0;
}
function hydrateKeyframes(options) {
    if (Array.isArray(options.to) && options.to[0] === null) {
        options.to = tslib.__spreadArray([], tslib.__read(options.to), false);
        options.to[0] = options.from;
    }
    return options;
}
function getPopmotionAnimationOptions(transition, options, key) {
    var _a;
    if (Array.isArray(options.to)) {
        (_a = transition.duration) !== null && _a !== void 0 ? _a : (transition.duration = 0.8);
    }
    hydrateKeyframes(options);
    /**
     * Get a default transition if none is determined to be defined.
     */
    if (!isTransitionDefined(transition)) {
        transition = tslib.__assign(tslib.__assign({}, transition), getDefaultTransition(key, options.to));
    }
    return tslib.__assign(tslib.__assign({}, options), convertTransitionToAnimationOptions(transition));
}
/**
 *
 */
function getAnimation(key, value, target, transition, onComplete) {
    var _a;
    var valueTransition = getValueTransition(transition, key);
    var origin = (_a = valueTransition.from) !== null && _a !== void 0 ? _a : value.get();
    var isTargetAnimatable = isAnimatable(key, target);
    if (origin === "none" && isTargetAnimatable && typeof target === "string") {
        /**
         * If we're trying to animate from "none", try and get an animatable version
         * of the target. This could be improved to work both ways.
         */
        origin = getAnimatableNone(key, target);
    }
    else if (isZero(origin) && typeof target === "string") {
        origin = getZeroUnit(target);
    }
    else if (!Array.isArray(target) &&
        isZero(target) &&
        typeof origin === "string") {
        target = getZeroUnit(origin);
    }
    var isOriginAnimatable = isAnimatable(key, origin);
    heyListen.warning(isOriginAnimatable === isTargetAnimatable, "You are trying to animate ".concat(key, " from \"").concat(origin, "\" to \"").concat(target, "\". ").concat(origin, " is not an animatable value - to enable this animation set ").concat(origin, " to a value animatable to ").concat(target, " via the `style` property."));
    function start() {
        var options = {
            from: origin,
            to: target,
            velocity: value.getVelocity(),
            onComplete: onComplete,
            onUpdate: function (v) { return value.set(v); },
        };
        return valueTransition.type === "inertia" ||
            valueTransition.type === "decay"
            ? popmotion.inertia(tslib.__assign(tslib.__assign({}, options), valueTransition))
            : popmotion.animate(tslib.__assign(tslib.__assign({}, getPopmotionAnimationOptions(valueTransition, options, key)), { onUpdate: function (v) {
                    var _a;
                    options.onUpdate(v);
                    (_a = valueTransition.onUpdate) === null || _a === void 0 ? void 0 : _a.call(valueTransition, v);
                }, onComplete: function () {
                    var _a;
                    options.onComplete();
                    (_a = valueTransition.onComplete) === null || _a === void 0 ? void 0 : _a.call(valueTransition);
                } }));
    }
    function set() {
        var _a, _b;
        var finalTarget = resolveFinalValueInKeyframes(target);
        value.set(finalTarget);
        onComplete();
        (_a = valueTransition === null || valueTransition === void 0 ? void 0 : valueTransition.onUpdate) === null || _a === void 0 ? void 0 : _a.call(valueTransition, finalTarget);
        (_b = valueTransition === null || valueTransition === void 0 ? void 0 : valueTransition.onComplete) === null || _b === void 0 ? void 0 : _b.call(valueTransition);
        return { stop: function () { } };
    }
    return !isOriginAnimatable ||
        !isTargetAnimatable ||
        valueTransition.type === false
        ? set
        : start;
}
function isZero(value) {
    return (value === 0 ||
        (typeof value === "string" &&
            parseFloat(value) === 0 &&
            value.indexOf(" ") === -1));
}
function getZeroUnit(potentialUnitType) {
    return typeof potentialUnitType === "number"
        ? 0
        : getAnimatableNone("", potentialUnitType);
}
function getValueTransition(transition, key) {
    return transition[key] || transition["default"] || transition;
}
/**
 * Start animation on a MotionValue. This function is an interface between
 * Framer Motion and Popmotion
 */
function startAnimation(key, value, target, transition) {
    if (transition === void 0) { transition = {}; }
    if (instantAnimationState.current) {
        transition = { type: false };
    }
    return value.start(function (onComplete) {
        var delayTimer;
        var controls;
        var animation = getAnimation(key, value, target, transition, onComplete);
        var delay = getDelayFromTransition(transition, key);
        var start = function () { return (controls = animation()); };
        if (delay) {
            delayTimer = window.setTimeout(start, secondsToMilliseconds(delay));
        }
        else {
            start();
        }
        return function () {
            clearTimeout(delayTimer);
            controls === null || controls === void 0 ? void 0 : controls.stop();
        };
    });
}

/**
 * Check if value is a numerical string, ie a string that is purely a number eg "100" or "-100.1"
 */
var isNumericalString = function (v) { return /^\-?\d*\.?\d+$/.test(v); };

/**
 * Check if the value is a zero value string like "0px" or "0%"
 */
var isZeroValueString = function (v) { return /^0[^.\s]+$/.test(v); };

function addUniqueItem(arr, item) {
    arr.indexOf(item) === -1 && arr.push(item);
}
function removeItem(arr, item) {
    var index = arr.indexOf(item);
    index > -1 && arr.splice(index, 1);
}
// Adapted from array-move
function moveItem(_a, fromIndex, toIndex) {
    var _b = tslib.__read(_a), arr = _b.slice(0);
    var startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;
    if (startIndex >= 0 && startIndex < arr.length) {
        var endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;
        var _c = tslib.__read(arr.splice(fromIndex, 1), 1), item = _c[0];
        arr.splice(endIndex, 0, item);
    }
    return arr;
}

var SubscriptionManager = /** @class */ (function () {
    function SubscriptionManager() {
        this.subscriptions = [];
    }
    SubscriptionManager.prototype.add = function (handler) {
        var _this = this;
        addUniqueItem(this.subscriptions, handler);
        return function () { return removeItem(_this.subscriptions, handler); };
    };
    SubscriptionManager.prototype.notify = function (a, b, c) {
        var numSubscriptions = this.subscriptions.length;
        if (!numSubscriptions)
            return;
        if (numSubscriptions === 1) {
            /**
             * If there's only a single handler we can just call it without invoking a loop.
             */
            this.subscriptions[0](a, b, c);
        }
        else {
            for (var i = 0; i < numSubscriptions; i++) {
                /**
                 * Check whether the handler exists before firing as it's possible
                 * the subscriptions were modified during this loop running.
                 */
                var handler = this.subscriptions[i];
                handler && handler(a, b, c);
            }
        }
    };
    SubscriptionManager.prototype.getSize = function () {
        return this.subscriptions.length;
    };
    SubscriptionManager.prototype.clear = function () {
        this.subscriptions.length = 0;
    };
    return SubscriptionManager;
}());

var isFloat = function (value) {
    return !isNaN(parseFloat(value));
};
/**
 * `MotionValue` is used to track the state and velocity of motion values.
 *
 * @public
 */
var MotionValue = /** @class */ (function () {
    /**
     * @param init - The initiating value
     * @param config - Optional configuration options
     *
     * -  `transformer`: A function to transform incoming values with.
     *
     * @internal
     */
    function MotionValue(init) {
        var _this = this;
        /**
         * This will be replaced by the build step with the latest version number.
         * When MotionValues are provided to motion components, warn if versions are mixed.
         */
        this.version = "6.5.1";
        /**
         * Duration, in milliseconds, since last updating frame.
         *
         * @internal
         */
        this.timeDelta = 0;
        /**
         * Timestamp of the last time this `MotionValue` was updated.
         *
         * @internal
         */
        this.lastUpdated = 0;
        /**
         * Functions to notify when the `MotionValue` updates.
         *
         * @internal
         */
        this.updateSubscribers = new SubscriptionManager();
        /**
         * Functions to notify when the velocity updates.
         *
         * @internal
         */
        this.velocityUpdateSubscribers = new SubscriptionManager();
        /**
         * Functions to notify when the `MotionValue` updates and `render` is set to `true`.
         *
         * @internal
         */
        this.renderSubscribers = new SubscriptionManager();
        /**
         * Tracks whether this value can output a velocity. Currently this is only true
         * if the value is numerical, but we might be able to widen the scope here and support
         * other value types.
         *
         * @internal
         */
        this.canTrackVelocity = false;
        this.updateAndNotify = function (v, render) {
            if (render === void 0) { render = true; }
            _this.prev = _this.current;
            _this.current = v;
            // Update timestamp
            var _a = sync.getFrameData(), delta = _a.delta, timestamp = _a.timestamp;
            if (_this.lastUpdated !== timestamp) {
                _this.timeDelta = delta;
                _this.lastUpdated = timestamp;
                sync__default["default"].postRender(_this.scheduleVelocityCheck);
            }
            // Update update subscribers
            if (_this.prev !== _this.current) {
                _this.updateSubscribers.notify(_this.current);
            }
            // Update velocity subscribers
            if (_this.velocityUpdateSubscribers.getSize()) {
                _this.velocityUpdateSubscribers.notify(_this.getVelocity());
            }
            // Update render subscribers
            if (render) {
                _this.renderSubscribers.notify(_this.current);
            }
        };
        /**
         * Schedule a velocity check for the next frame.
         *
         * This is an instanced and bound function to prevent generating a new
         * function once per frame.
         *
         * @internal
         */
        this.scheduleVelocityCheck = function () { return sync__default["default"].postRender(_this.velocityCheck); };
        /**
         * Updates `prev` with `current` if the value hasn't been updated this frame.
         * This ensures velocity calculations return `0`.
         *
         * This is an instanced and bound function to prevent generating a new
         * function once per frame.
         *
         * @internal
         */
        this.velocityCheck = function (_a) {
            var timestamp = _a.timestamp;
            if (timestamp !== _this.lastUpdated) {
                _this.prev = _this.current;
                _this.velocityUpdateSubscribers.notify(_this.getVelocity());
            }
        };
        this.hasAnimated = false;
        this.prev = this.current = init;
        this.canTrackVelocity = isFloat(this.current);
    }
    /**
     * Adds a function that will be notified when the `MotionValue` is updated.
     *
     * It returns a function that, when called, will cancel the subscription.
     *
     * When calling `onChange` inside a React component, it should be wrapped with the
     * `useEffect` hook. As it returns an unsubscribe function, this should be returned
     * from the `useEffect` function to ensure you don't add duplicate subscribers..
     *
     * ```jsx
     * export const MyComponent = () => {
     *   const x = useMotionValue(0)
     *   const y = useMotionValue(0)
     *   const opacity = useMotionValue(1)
     *
     *   useEffect(() => {
     *     function updateOpacity() {
     *       const maxXY = Math.max(x.get(), y.get())
     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])
     *       opacity.set(newOpacity)
     *     }
     *
     *     const unsubscribeX = x.onChange(updateOpacity)
     *     const unsubscribeY = y.onChange(updateOpacity)
     *
     *     return () => {
     *       unsubscribeX()
     *       unsubscribeY()
     *     }
     *   }, [])
     *
     *   return <motion.div style={{ x }} />
     * }
     * ```
     *
     * @privateRemarks
     *
     * We could look into a `useOnChange` hook if the above lifecycle management proves confusing.
     *
     * ```jsx
     * useOnChange(x, () => {})
     * ```
     *
     * @param subscriber - A function that receives the latest value.
     * @returns A function that, when called, will cancel this subscription.
     *
     * @public
     */
    MotionValue.prototype.onChange = function (subscription) {
        return this.updateSubscribers.add(subscription);
    };
    MotionValue.prototype.clearListeners = function () {
        this.updateSubscribers.clear();
    };
    /**
     * Adds a function that will be notified when the `MotionValue` requests a render.
     *
     * @param subscriber - A function that's provided the latest value.
     * @returns A function that, when called, will cancel this subscription.
     *
     * @internal
     */
    MotionValue.prototype.onRenderRequest = function (subscription) {
        // Render immediately
        subscription(this.get());
        return this.renderSubscribers.add(subscription);
    };
    /**
     * Attaches a passive effect to the `MotionValue`.
     *
     * @internal
     */
    MotionValue.prototype.attach = function (passiveEffect) {
        this.passiveEffect = passiveEffect;
    };
    /**
     * Sets the state of the `MotionValue`.
     *
     * @remarks
     *
     * ```jsx
     * const x = useMotionValue(0)
     * x.set(10)
     * ```
     *
     * @param latest - Latest value to set.
     * @param render - Whether to notify render subscribers. Defaults to `true`
     *
     * @public
     */
    MotionValue.prototype.set = function (v, render) {
        if (render === void 0) { render = true; }
        if (!render || !this.passiveEffect) {
            this.updateAndNotify(v, render);
        }
        else {
            this.passiveEffect(v, this.updateAndNotify);
        }
    };
    /**
     * Returns the latest state of `MotionValue`
     *
     * @returns - The latest state of `MotionValue`
     *
     * @public
     */
    MotionValue.prototype.get = function () {
        return this.current;
    };
    /**
     * @public
     */
    MotionValue.prototype.getPrevious = function () {
        return this.prev;
    };
    /**
     * Returns the latest velocity of `MotionValue`
     *
     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.
     *
     * @public
     */
    MotionValue.prototype.getVelocity = function () {
        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful
        return this.canTrackVelocity
            ? // These casts could be avoided if parseFloat would be typed better
                popmotion.velocityPerSecond(parseFloat(this.current) -
                    parseFloat(this.prev), this.timeDelta)
            : 0;
    };
    /**
     * Registers a new animation to control this `MotionValue`. Only one
     * animation can drive a `MotionValue` at one time.
     *
     * ```jsx
     * value.start()
     * ```
     *
     * @param animation - A function that starts the provided animation
     *
     * @internal
     */
    MotionValue.prototype.start = function (animation) {
        var _this = this;
        this.stop();
        return new Promise(function (resolve) {
            _this.hasAnimated = true;
            _this.stopAnimation = animation(resolve);
        }).then(function () { return _this.clearAnimation(); });
    };
    /**
     * Stop the currently active animation.
     *
     * @public
     */
    MotionValue.prototype.stop = function () {
        if (this.stopAnimation)
            this.stopAnimation();
        this.clearAnimation();
    };
    /**
     * Returns `true` if this value is currently animating.
     *
     * @public
     */
    MotionValue.prototype.isAnimating = function () {
        return !!this.stopAnimation;
    };
    MotionValue.prototype.clearAnimation = function () {
        this.stopAnimation = null;
    };
    /**
     * Destroy and clean up subscribers to this `MotionValue`.
     *
     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically
     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually
     * created a `MotionValue` via the `motionValue` function.
     *
     * @public
     */
    MotionValue.prototype.destroy = function () {
        this.updateSubscribers.clear();
        this.renderSubscribers.clear();
        this.stop();
    };
    return MotionValue;
}());
function motionValue(init) {
    return new MotionValue(init);
}

/**
 * Tests a provided value against a ValueType
 */
var testValueType = function (v) { return function (type) { return type.test(v); }; };

/**
 * ValueType for "auto"
 */
var auto = {
    test: function (v) { return v === "auto"; },
    parse: function (v) { return v; },
};

/**
 * A list of value types commonly used for dimensions
 */
var dimensionValueTypes = [styleValueTypes.number, styleValueTypes.px, styleValueTypes.percent, styleValueTypes.degrees, styleValueTypes.vw, styleValueTypes.vh, auto];
/**
 * Tests a dimensional value against the list of dimension ValueTypes
 */
var findDimensionValueType = function (v) {
    return dimensionValueTypes.find(testValueType(v));
};

/**
 * A list of all ValueTypes
 */
var valueTypes = tslib.__spreadArray(tslib.__spreadArray([], tslib.__read(dimensionValueTypes), false), [styleValueTypes.color, styleValueTypes.complex], false);
/**
 * Tests a value against the list of ValueTypes
 */
var findValueType = function (v) { return valueTypes.find(testValueType(v)); };

/**
 * Set VisualElement's MotionValue, creating a new MotionValue for it if
 * it doesn't exist.
 */
function setMotionValue(visualElement, key, value) {
    if (visualElement.hasValue(key)) {
        visualElement.getValue(key).set(value);
    }
    else {
        visualElement.addValue(key, motionValue(value));
    }
}
function setTarget(visualElement, definition) {
    var resolved = resolveVariant(visualElement, definition);
    var _a = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {}, _b = _a.transitionEnd, transitionEnd = _b === void 0 ? {} : _b; _a.transition; var target = tslib.__rest(_a, ["transitionEnd", "transition"]);
    target = tslib.__assign(tslib.__assign({}, target), transitionEnd);
    for (var key in target) {
        var value = resolveFinalValueInKeyframes(target[key]);
        setMotionValue(visualElement, key, value);
    }
}
function setVariants(visualElement, variantLabels) {
    var reversedLabels = tslib.__spreadArray([], tslib.__read(variantLabels), false).reverse();
    reversedLabels.forEach(function (key) {
        var _a;
        var variant = visualElement.getVariant(key);
        variant && setTarget(visualElement, variant);
        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {
            setVariants(child, variantLabels);
        });
    });
}
function setValues(visualElement, definition) {
    if (Array.isArray(definition)) {
        return setVariants(visualElement, definition);
    }
    else if (typeof definition === "string") {
        return setVariants(visualElement, [definition]);
    }
    else {
        setTarget(visualElement, definition);
    }
}
function checkTargetForNewValues(visualElement, target, origin) {
    var _a, _b, _c;
    var _d;
    var newValueKeys = Object.keys(target).filter(function (key) { return !visualElement.hasValue(key); });
    var numNewValues = newValueKeys.length;
    if (!numNewValues)
        return;
    for (var i = 0; i < numNewValues; i++) {
        var key = newValueKeys[i];
        var targetValue = target[key];
        var value = null;
        /**
         * If the target is a series of keyframes, we can use the first value
         * in the array. If this first value is null, we'll still need to read from the DOM.
         */
        if (Array.isArray(targetValue)) {
            value = targetValue[0];
        }
        /**
         * If the target isn't keyframes, or the first keyframe was null, we need to
         * first check if an origin value was explicitly defined in the transition as "from",
         * if not read the value from the DOM. As an absolute fallback, take the defined target value.
         */
        if (value === null) {
            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];
        }
        /**
         * If value is still undefined or null, ignore it. Preferably this would throw,
         * but this was causing issues in Framer.
         */
        if (value === undefined || value === null)
            continue;
        if (typeof value === "string" &&
            (isNumericalString(value) || isZeroValueString(value))) {
            // If this is a number read as a string, ie "0" or "200", convert it to a number
            value = parseFloat(value);
        }
        else if (!findValueType(value) && styleValueTypes.complex.test(targetValue)) {
            value = getAnimatableNone(key, targetValue);
        }
        visualElement.addValue(key, motionValue(value));
        (_c = (_d = origin)[key]) !== null && _c !== void 0 ? _c : (_d[key] = value);
        visualElement.setBaseTarget(key, value);
    }
}
function getOriginFromTransition(key, transition) {
    if (!transition)
        return;
    var valueTransition = transition[key] || transition["default"] || transition;
    return valueTransition.from;
}
function getOrigin(target, transition, visualElement) {
    var _a, _b;
    var origin = {};
    for (var key in target) {
        origin[key] =
            (_a = getOriginFromTransition(key, transition)) !== null && _a !== void 0 ? _a : (_b = visualElement.getValue(key)) === null || _b === void 0 ? void 0 : _b.get();
    }
    return origin;
}

function animateVisualElement(visualElement, definition, options) {
    if (options === void 0) { options = {}; }
    visualElement.notifyAnimationStart(definition);
    var animation;
    if (Array.isArray(definition)) {
        var animations = definition.map(function (variant) {
            return animateVariant(visualElement, variant, options);
        });
        animation = Promise.all(animations);
    }
    else if (typeof definition === "string") {
        animation = animateVariant(visualElement, definition, options);
    }
    else {
        var resolvedDefinition = typeof definition === "function"
            ? resolveVariant(visualElement, definition, options.custom)
            : definition;
        animation = animateTarget(visualElement, resolvedDefinition, options);
    }
    return animation.then(function () {
        return visualElement.notifyAnimationComplete(definition);
    });
}
function animateVariant(visualElement, variant, options) {
    var _a;
    if (options === void 0) { options = {}; }
    var resolved = resolveVariant(visualElement, variant, options.custom);
    var _b = (resolved || {}).transition, transition = _b === void 0 ? visualElement.getDefaultTransition() || {} : _b;
    if (options.transitionOverride) {
        transition = options.transitionOverride;
    }
    /**
     * If we have a variant, create a callback that runs it as an animation.
     * Otherwise, we resolve a Promise immediately for a composable no-op.
     */
    var getAnimation = resolved
        ? function () { return animateTarget(visualElement, resolved, options); }
        : function () { return Promise.resolve(); };
    /**
     * If we have children, create a callback that runs all their animations.
     * Otherwise, we resolve a Promise immediately for a composable no-op.
     */
    var getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)
        ? function (forwardDelay) {
            if (forwardDelay === void 0) { forwardDelay = 0; }
            var _a = transition.delayChildren, delayChildren = _a === void 0 ? 0 : _a, staggerChildren = transition.staggerChildren, staggerDirection = transition.staggerDirection;
            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);
        }
        : function () { return Promise.resolve(); };
    /**
     * If the transition explicitly defines a "when" option, we need to resolve either
     * this animation or all children animations before playing the other.
     */
    var when = transition.when;
    if (when) {
        var _c = tslib.__read(when === "beforeChildren"
            ? [getAnimation, getChildAnimations]
            : [getChildAnimations, getAnimation], 2), first = _c[0], last = _c[1];
        return first().then(last);
    }
    else {
        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);
    }
}
/**
 * @internal
 */
function animateTarget(visualElement, definition, _a) {
    var _b;
    var _c = _a === void 0 ? {} : _a, _d = _c.delay, delay = _d === void 0 ? 0 : _d, transitionOverride = _c.transitionOverride, type = _c.type;
    var _e = visualElement.makeTargetAnimatable(definition), _f = _e.transition, transition = _f === void 0 ? visualElement.getDefaultTransition() : _f, transitionEnd = _e.transitionEnd, target = tslib.__rest(_e, ["transition", "transitionEnd"]);
    if (transitionOverride)
        transition = transitionOverride;
    var animations = [];
    var animationTypeState = type && ((_b = visualElement.animationState) === null || _b === void 0 ? void 0 : _b.getState()[type]);
    for (var key in target) {
        var value = visualElement.getValue(key);
        var valueTarget = target[key];
        if (!value ||
            valueTarget === undefined ||
            (animationTypeState &&
                shouldBlockAnimation(animationTypeState, key))) {
            continue;
        }
        var valueTransition = tslib.__assign({ delay: delay }, transition);
        /**
         * Make animation instant if this is a transform prop and we should reduce motion.
         */
        if (visualElement.shouldReduceMotion && isTransformProp(key)) {
            valueTransition = tslib.__assign(tslib.__assign({}, valueTransition), { type: false, delay: 0 });
        }
        var animation = startAnimation(key, value, valueTarget, valueTransition);
        animations.push(animation);
    }
    return Promise.all(animations).then(function () {
        transitionEnd && setTarget(visualElement, transitionEnd);
    });
}
function animateChildren(visualElement, variant, delayChildren, staggerChildren, staggerDirection, options) {
    if (delayChildren === void 0) { delayChildren = 0; }
    if (staggerChildren === void 0) { staggerChildren = 0; }
    if (staggerDirection === void 0) { staggerDirection = 1; }
    var animations = [];
    var maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;
    var generateStaggerDuration = staggerDirection === 1
        ? function (i) {
            if (i === void 0) { i = 0; }
            return i * staggerChildren;
        }
        : function (i) {
            if (i === void 0) { i = 0; }
            return maxStaggerDuration - i * staggerChildren;
        };
    Array.from(visualElement.variantChildren)
        .sort(sortByTreeOrder)
        .forEach(function (child, i) {
        animations.push(animateVariant(child, variant, tslib.__assign(tslib.__assign({}, options), { delay: delayChildren + generateStaggerDuration(i) })).then(function () { return child.notifyAnimationComplete(variant); }));
    });
    return Promise.all(animations);
}
function stopAnimation(visualElement) {
    visualElement.forEachValue(function (value) { return value.stop(); });
}
function sortByTreeOrder(a, b) {
    return a.sortNodePosition(b);
}
/**
 * Decide whether we should block this animation. Previously, we achieved this
 * just by checking whether the key was listed in protectedKeys, but this
 * posed problems if an animation was triggered by afterChildren and protectedKeys
 * had been set to true in the meantime.
 */
function shouldBlockAnimation(_a, key) {
    var protectedKeys = _a.protectedKeys, needsAnimating = _a.needsAnimating;
    var shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;
    needsAnimating[key] = false;
    return shouldBlock;
}

var variantPriorityOrder = [
    exports.AnimationType.Animate,
    exports.AnimationType.InView,
    exports.AnimationType.Focus,
    exports.AnimationType.Hover,
    exports.AnimationType.Tap,
    exports.AnimationType.Drag,
    exports.AnimationType.Exit,
];
var reversePriorityOrder = tslib.__spreadArray([], tslib.__read(variantPriorityOrder), false).reverse();
var numAnimationTypes = variantPriorityOrder.length;
function animateList(visualElement) {
    return function (animations) {
        return Promise.all(animations.map(function (_a) {
            var animation = _a.animation, options = _a.options;
            return animateVisualElement(visualElement, animation, options);
        }));
    };
}
function createAnimationState(visualElement) {
    var animate = animateList(visualElement);
    var state = createState();
    var allAnimatedKeys = {};
    var isInitialRender = true;
    /**
     * This function will be used to reduce the animation definitions for
     * each active animation type into an object of resolved values for it.
     */
    var buildResolvedTypeValues = function (acc, definition) {
        var resolved = resolveVariant(visualElement, definition);
        if (resolved) {
            resolved.transition; var transitionEnd = resolved.transitionEnd, target = tslib.__rest(resolved, ["transition", "transitionEnd"]);
            acc = tslib.__assign(tslib.__assign(tslib.__assign({}, acc), target), transitionEnd);
        }
        return acc;
    };
    function isAnimated(key) {
        return allAnimatedKeys[key] !== undefined;
    }
    /**
     * This just allows us to inject mocked animation functions
     * @internal
     */
    function setAnimateFunction(makeAnimator) {
        animate = makeAnimator(visualElement);
    }
    /**
     * When we receive new props, we need to:
     * 1. Create a list of protected keys for each type. This is a directory of
     *    value keys that are currently being "handled" by types of a higher priority
     *    so that whenever an animation is played of a given type, these values are
     *    protected from being animated.
     * 2. Determine if an animation type needs animating.
     * 3. Determine if any values have been removed from a type and figure out
     *    what to animate those to.
     */
    function animateChanges(options, changedActiveType) {
        var _a;
        var props = visualElement.getProps();
        var context = visualElement.getVariantContext(true) || {};
        /**
         * A list of animations that we'll build into as we iterate through the animation
         * types. This will get executed at the end of the function.
         */
        var animations = [];
        /**
         * Keep track of which values have been removed. Then, as we hit lower priority
         * animation types, we can check if they contain removed values and animate to that.
         */
        var removedKeys = new Set();
        /**
         * A dictionary of all encountered keys. This is an object to let us build into and
         * copy it without iteration. Each time we hit an animation type we set its protected
         * keys - the keys its not allowed to animate - to the latest version of this object.
         */
        var encounteredKeys = {};
        /**
         * If a variant has been removed at a given index, and this component is controlling
         * variant animations, we want to ensure lower-priority variants are forced to animate.
         */
        var removedVariantIndex = Infinity;
        var _loop_1 = function (i) {
            var type = reversePriorityOrder[i];
            var typeState = state[type];
            var prop = (_a = props[type]) !== null && _a !== void 0 ? _a : context[type];
            var propIsVariant = isVariantLabel(prop);
            /**
             * If this type has *just* changed isActive status, set activeDelta
             * to that status. Otherwise set to null.
             */
            var activeDelta = type === changedActiveType ? typeState.isActive : null;
            if (activeDelta === false)
                removedVariantIndex = i;
            /**
             * If this prop is an inherited variant, rather than been set directly on the
             * component itself, we want to make sure we allow the parent to trigger animations.
             *
             * TODO: Can probably change this to a !isControllingVariants check
             */
            var isInherited = prop === context[type] && prop !== props[type] && propIsVariant;
            /**
             *
             */
            if (isInherited &&
                isInitialRender &&
                visualElement.manuallyAnimateOnMount) {
                isInherited = false;
            }
            /**
             * Set all encountered keys so far as the protected keys for this type. This will
             * be any key that has been animated or otherwise handled by active, higher-priortiy types.
             */
            typeState.protectedKeys = tslib.__assign({}, encounteredKeys);
            // Check if we can skip analysing this prop early
            if (
            // If it isn't active and hasn't *just* been set as inactive
            (!typeState.isActive && activeDelta === null) ||
                // If we didn't and don't have any defined prop for this animation type
                (!prop && !typeState.prevProp) ||
                // Or if the prop doesn't define an animation
                isAnimationControls(prop) ||
                typeof prop === "boolean") {
                return "continue";
            }
            /**
             * As we go look through the values defined on this type, if we detect
             * a changed value or a value that was removed in a higher priority, we set
             * this to true and add this prop to the animation list.
             */
            var variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);
            var shouldAnimateType = variantDidChange ||
                // If we're making this variant active, we want to always make it active
                (type === changedActiveType &&
                    typeState.isActive &&
                    !isInherited &&
                    propIsVariant) ||
                // If we removed a higher-priority variant (i is in reverse order)
                (i > removedVariantIndex && propIsVariant);
            /**
             * As animations can be set as variant lists, variants or target objects, we
             * coerce everything to an array if it isn't one already
             */
            var definitionList = Array.isArray(prop) ? prop : [prop];
            /**
             * Build an object of all the resolved values. We'll use this in the subsequent
             * animateChanges calls to determine whether a value has changed.
             */
            var resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});
            if (activeDelta === false)
                resolvedValues = {};
            /**
             * Now we need to loop through all the keys in the prev prop and this prop,
             * and decide:
             * 1. If the value has changed, and needs animating
             * 2. If it has been removed, and needs adding to the removedKeys set
             * 3. If it has been removed in a higher priority type and needs animating
             * 4. If it hasn't been removed in a higher priority but hasn't changed, and
             *    needs adding to the type's protectedKeys list.
             */
            var _b = typeState.prevResolvedValues, prevResolvedValues = _b === void 0 ? {} : _b;
            var allKeys = tslib.__assign(tslib.__assign({}, prevResolvedValues), resolvedValues);
            var markToAnimate = function (key) {
                shouldAnimateType = true;
                removedKeys.delete(key);
                typeState.needsAnimating[key] = true;
            };
            for (var key in allKeys) {
                var next = resolvedValues[key];
                var prev = prevResolvedValues[key];
                // If we've already handled this we can just skip ahead
                if (encounteredKeys.hasOwnProperty(key))
                    continue;
                /**
                 * If the value has changed, we probably want to animate it.
                 */
                if (next !== prev) {
                    /**
                     * If both values are keyframes, we need to shallow compare them to
                     * detect whether any value has changed. If it has, we animate it.
                     */
                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {
                        if (!shallowCompare(next, prev) || variantDidChange) {
                            markToAnimate(key);
                        }
                        else {
                            /**
                             * If it hasn't changed, we want to ensure it doesn't animate by
                             * adding it to the list of protected keys.
                             */
                            typeState.protectedKeys[key] = true;
                        }
                    }
                    else if (next !== undefined) {
                        // If next is defined and doesn't equal prev, it needs animating
                        markToAnimate(key);
                    }
                    else {
                        // If it's undefined, it's been removed.
                        removedKeys.add(key);
                    }
                }
                else if (next !== undefined && removedKeys.has(key)) {
                    /**
                     * If next hasn't changed and it isn't undefined, we want to check if it's
                     * been removed by a higher priority
                     */
                    markToAnimate(key);
                }
                else {
                    /**
                     * If it hasn't changed, we add it to the list of protected values
                     * to ensure it doesn't get animated.
                     */
                    typeState.protectedKeys[key] = true;
                }
            }
            /**
             * Update the typeState so next time animateChanges is called we can compare the
             * latest prop and resolvedValues to these.
             */
            typeState.prevProp = prop;
            typeState.prevResolvedValues = resolvedValues;
            /**
             *
             */
            if (typeState.isActive) {
                encounteredKeys = tslib.__assign(tslib.__assign({}, encounteredKeys), resolvedValues);
            }
            if (isInitialRender && visualElement.blockInitialAnimation) {
                shouldAnimateType = false;
            }
            /**
             * If this is an inherited prop we want to hard-block animations
             * TODO: Test as this should probably still handle animations triggered
             * by removed values?
             */
            if (shouldAnimateType && !isInherited) {
                animations.push.apply(animations, tslib.__spreadArray([], tslib.__read(definitionList.map(function (animation) { return ({
                    animation: animation,
                    options: tslib.__assign({ type: type }, options),
                }); })), false));
            }
        };
        /**
         * Iterate through all animation types in reverse priority order. For each, we want to
         * detect which values it's handling and whether or not they've changed (and therefore
         * need to be animated). If any values have been removed, we want to detect those in
         * lower priority props and flag for animation.
         */
        for (var i = 0; i < numAnimationTypes; i++) {
            _loop_1(i);
        }
        allAnimatedKeys = tslib.__assign({}, encounteredKeys);
        /**
         * If there are some removed value that haven't been dealt with,
         * we need to create a new animation that falls back either to the value
         * defined in the style prop, or the last read value.
         */
        if (removedKeys.size) {
            var fallbackAnimation_1 = {};
            removedKeys.forEach(function (key) {
                var fallbackTarget = visualElement.getBaseTarget(key);
                if (fallbackTarget !== undefined) {
                    fallbackAnimation_1[key] = fallbackTarget;
                }
            });
            animations.push({ animation: fallbackAnimation_1 });
        }
        var shouldAnimate = Boolean(animations.length);
        if (isInitialRender &&
            props.initial === false &&
            !visualElement.manuallyAnimateOnMount) {
            shouldAnimate = false;
        }
        isInitialRender = false;
        return shouldAnimate ? animate(animations) : Promise.resolve();
    }
    /**
     * Change whether a certain animation type is active.
     */
    function setActive(type, isActive, options) {
        var _a;
        // If the active state hasn't changed, we can safely do nothing here
        if (state[type].isActive === isActive)
            return Promise.resolve();
        // Propagate active change to children
        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach(function (child) { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });
        state[type].isActive = isActive;
        var animations = animateChanges(options, type);
        for (var key in state) {
            state[key].protectedKeys = {};
        }
        return animations;
    }
    return {
        isAnimated: isAnimated,
        animateChanges: animateChanges,
        setActive: setActive,
        setAnimateFunction: setAnimateFunction,
        getState: function () { return state; },
    };
}
function checkVariantsDidChange(prev, next) {
    if (typeof next === "string") {
        return next !== prev;
    }
    else if (isVariantLabels(next)) {
        return !shallowCompare(next, prev);
    }
    return false;
}
function createTypeState(isActive) {
    if (isActive === void 0) { isActive = false; }
    return {
        isActive: isActive,
        protectedKeys: {},
        needsAnimating: {},
        prevResolvedValues: {},
    };
}
function createState() {
    var _a;
    return _a = {},
        _a[exports.AnimationType.Animate] = createTypeState(true),
        _a[exports.AnimationType.InView] = createTypeState(),
        _a[exports.AnimationType.Hover] = createTypeState(),
        _a[exports.AnimationType.Tap] = createTypeState(),
        _a[exports.AnimationType.Drag] = createTypeState(),
        _a[exports.AnimationType.Focus] = createTypeState(),
        _a[exports.AnimationType.Exit] = createTypeState(),
        _a;
}

var animations = {
    animation: makeRenderlessComponent(function (_a) {
        var visualElement = _a.visualElement, animate = _a.animate;
        /**
         * We dynamically generate the AnimationState manager as it contains a reference
         * to the underlying animation library. We only want to load that if we load this,
         * so people can optionally code split it out using the `m` component.
         */
        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));
        /**
         * Subscribe any provided AnimationControls to the component's VisualElement
         */
        if (isAnimationControls(animate)) {
            React.useEffect(function () { return animate.subscribe(visualElement); }, [animate]);
        }
    }),
    exit: makeRenderlessComponent(function (props) {
        var custom = props.custom, visualElement = props.visualElement;
        var _a = tslib.__read(usePresence(), 2), isPresent = _a[0], safeToRemove = _a[1];
        var presenceContext = React.useContext(PresenceContext);
        React.useEffect(function () {
            var _a, _b;
            visualElement.isPresent = isPresent;
            var animation = (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(exports.AnimationType.Exit, !isPresent, { custom: (_b = presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.custom) !== null && _b !== void 0 ? _b : custom });
            !isPresent && (animation === null || animation === void 0 ? void 0 : animation.then(safeToRemove));
        }, [isPresent]);
    }),
};

/**
 * @internal
 */
var PanSession = /** @class */ (function () {
    function PanSession(event, handlers, _a) {
        var _this = this;
        var _b = _a === void 0 ? {} : _a, transformPagePoint = _b.transformPagePoint;
        /**
         * @internal
         */
        this.startEvent = null;
        /**
         * @internal
         */
        this.lastMoveEvent = null;
        /**
         * @internal
         */
        this.lastMoveEventInfo = null;
        /**
         * @internal
         */
        this.handlers = {};
        this.updatePoint = function () {
            if (!(_this.lastMoveEvent && _this.lastMoveEventInfo))
                return;
            var info = getPanInfo(_this.lastMoveEventInfo, _this.history);
            var isPanStarted = _this.startEvent !== null;
            // Only start panning if the offset is larger than 3 pixels. If we make it
            // any larger than this we'll want to reset the pointer history
            // on the first update to avoid visual snapping to the cursoe.
            var isDistancePastThreshold = popmotion.distance(info.offset, { x: 0, y: 0 }) >= 3;
            if (!isPanStarted && !isDistancePastThreshold)
                return;
            var point = info.point;
            var timestamp = sync.getFrameData().timestamp;
            _this.history.push(tslib.__assign(tslib.__assign({}, point), { timestamp: timestamp }));
            var _a = _this.handlers, onStart = _a.onStart, onMove = _a.onMove;
            if (!isPanStarted) {
                onStart && onStart(_this.lastMoveEvent, info);
                _this.startEvent = _this.lastMoveEvent;
            }
            onMove && onMove(_this.lastMoveEvent, info);
        };
        this.handlePointerMove = function (event, info) {
            _this.lastMoveEvent = event;
            _this.lastMoveEventInfo = transformPoint(info, _this.transformPagePoint);
            // Because Safari doesn't trigger mouseup events when it's above a `<select>`
            if (isMouseEvent(event) && event.buttons === 0) {
                _this.handlePointerUp(event, info);
                return;
            }
            // Throttle mouse move event to once per frame
            sync__default["default"].update(_this.updatePoint, true);
        };
        this.handlePointerUp = function (event, info) {
            _this.end();
            var _a = _this.handlers, onEnd = _a.onEnd, onSessionEnd = _a.onSessionEnd;
            var panInfo = getPanInfo(transformPoint(info, _this.transformPagePoint), _this.history);
            if (_this.startEvent && onEnd) {
                onEnd(event, panInfo);
            }
            onSessionEnd && onSessionEnd(event, panInfo);
        };
        // If we have more than one touch, don't start detecting this gesture
        if (isTouchEvent(event) && event.touches.length > 1)
            return;
        this.handlers = handlers;
        this.transformPagePoint = transformPagePoint;
        var info = extractEventInfo(event);
        var initialInfo = transformPoint(info, this.transformPagePoint);
        var point = initialInfo.point;
        var timestamp = sync.getFrameData().timestamp;
        this.history = [tslib.__assign(tslib.__assign({}, point), { timestamp: timestamp })];
        var onSessionStart = handlers.onSessionStart;
        onSessionStart &&
            onSessionStart(event, getPanInfo(initialInfo, this.history));
        this.removeListeners = popmotion.pipe(addPointerEvent(window, "pointermove", this.handlePointerMove), addPointerEvent(window, "pointerup", this.handlePointerUp), addPointerEvent(window, "pointercancel", this.handlePointerUp));
    }
    PanSession.prototype.updateHandlers = function (handlers) {
        this.handlers = handlers;
    };
    PanSession.prototype.end = function () {
        this.removeListeners && this.removeListeners();
        sync.cancelSync.update(this.updatePoint);
    };
    return PanSession;
}());
function transformPoint(info, transformPagePoint) {
    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;
}
function subtractPoint(a, b) {
    return { x: a.x - b.x, y: a.y - b.y };
}
function getPanInfo(_a, history) {
    var point = _a.point;
    return {
        point: point,
        delta: subtractPoint(point, lastDevicePoint(history)),
        offset: subtractPoint(point, startDevicePoint(history)),
        velocity: getVelocity(history, 0.1),
    };
}
function startDevicePoint(history) {
    return history[0];
}
function lastDevicePoint(history) {
    return history[history.length - 1];
}
function getVelocity(history, timeDelta) {
    if (history.length < 2) {
        return { x: 0, y: 0 };
    }
    var i = history.length - 1;
    var timestampedPoint = null;
    var lastPoint = lastDevicePoint(history);
    while (i >= 0) {
        timestampedPoint = history[i];
        if (lastPoint.timestamp - timestampedPoint.timestamp >
            secondsToMilliseconds(timeDelta)) {
            break;
        }
        i--;
    }
    if (!timestampedPoint) {
        return { x: 0, y: 0 };
    }
    var time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;
    if (time === 0) {
        return { x: 0, y: 0 };
    }
    var currentVelocity = {
        x: (lastPoint.x - timestampedPoint.x) / time,
        y: (lastPoint.y - timestampedPoint.y) / time,
    };
    if (currentVelocity.x === Infinity) {
        currentVelocity.x = 0;
    }
    if (currentVelocity.y === Infinity) {
        currentVelocity.y = 0;
    }
    return currentVelocity;
}

function calcLength(axis) {
    return axis.max - axis.min;
}
function isNear(value, target, maxDistance) {
    if (target === void 0) { target = 0; }
    if (maxDistance === void 0) { maxDistance = 0.01; }
    return popmotion.distance(value, target) < maxDistance;
}
function calcAxisDelta(delta, source, target, origin) {
    if (origin === void 0) { origin = 0.5; }
    delta.origin = origin;
    delta.originPoint = popmotion.mix(source.min, source.max, delta.origin);
    delta.scale = calcLength(target) / calcLength(source);
    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))
        delta.scale = 1;
    delta.translate =
        popmotion.mix(target.min, target.max, delta.origin) - delta.originPoint;
    if (isNear(delta.translate) || isNaN(delta.translate))
        delta.translate = 0;
}
function calcBoxDelta(delta, source, target, origin) {
    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);
    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);
}
function calcRelativeAxis(target, relative, parent) {
    target.min = parent.min + relative.min;
    target.max = target.min + calcLength(relative);
}
function calcRelativeBox(target, relative, parent) {
    calcRelativeAxis(target.x, relative.x, parent.x);
    calcRelativeAxis(target.y, relative.y, parent.y);
}
function calcRelativeAxisPosition(target, layout, parent) {
    target.min = layout.min - parent.min;
    target.max = target.min + calcLength(layout);
}
function calcRelativePosition(target, layout, parent) {
    calcRelativeAxisPosition(target.x, layout.x, parent.x);
    calcRelativeAxisPosition(target.y, layout.y, parent.y);
}

/**
 * Apply constraints to a point. These constraints are both physical along an
 * axis, and an elastic factor that determines how much to constrain the point
 * by if it does lie outside the defined parameters.
 */
function applyConstraints(point, _a, elastic) {
    var min = _a.min, max = _a.max;
    if (min !== undefined && point < min) {
        // If we have a min point defined, and this is outside of that, constrain
        point = elastic ? popmotion.mix(min, point, elastic.min) : Math.max(point, min);
    }
    else if (max !== undefined && point > max) {
        // If we have a max point defined, and this is outside of that, constrain
        point = elastic ? popmotion.mix(max, point, elastic.max) : Math.min(point, max);
    }
    return point;
}
/**
 * Calculate constraints in terms of the viewport when defined relatively to the
 * measured axis. This is measured from the nearest edge, so a max constraint of 200
 * on an axis with a max value of 300 would return a constraint of 500 - axis length
 */
function calcRelativeAxisConstraints(axis, min, max) {
    return {
        min: min !== undefined ? axis.min + min : undefined,
        max: max !== undefined
            ? axis.max + max - (axis.max - axis.min)
            : undefined,
    };
}
/**
 * Calculate constraints in terms of the viewport when
 * defined relatively to the measured bounding box.
 */
function calcRelativeConstraints(layoutBox, _a) {
    var top = _a.top, left = _a.left, bottom = _a.bottom, right = _a.right;
    return {
        x: calcRelativeAxisConstraints(layoutBox.x, left, right),
        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),
    };
}
/**
 * Calculate viewport constraints when defined as another viewport-relative axis
 */
function calcViewportAxisConstraints(layoutAxis, constraintsAxis) {
    var _a;
    var min = constraintsAxis.min - layoutAxis.min;
    var max = constraintsAxis.max - layoutAxis.max;
    // If the constraints axis is actually smaller than the layout axis then we can
    // flip the constraints
    if (constraintsAxis.max - constraintsAxis.min <
        layoutAxis.max - layoutAxis.min) {
        _a = tslib.__read([max, min], 2), min = _a[0], max = _a[1];
    }
    return { min: min, max: max };
}
/**
 * Calculate viewport constraints when defined as another viewport-relative box
 */
function calcViewportConstraints(layoutBox, constraintsBox) {
    return {
        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),
        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),
    };
}
/**
 * Calculate a transform origin relative to the source axis, between 0-1, that results
 * in an asthetically pleasing scale/transform needed to project from source to target.
 */
function calcOrigin(source, target) {
    var origin = 0.5;
    var sourceLength = calcLength(source);
    var targetLength = calcLength(target);
    if (targetLength > sourceLength) {
        origin = popmotion.progress(target.min, target.max - sourceLength, source.min);
    }
    else if (sourceLength > targetLength) {
        origin = popmotion.progress(source.min, source.max - targetLength, target.min);
    }
    return popmotion.clamp(0, 1, origin);
}
/**
 * Rebase the calculated viewport constraints relative to the layout.min point.
 */
function rebaseAxisConstraints(layout, constraints) {
    var relativeConstraints = {};
    if (constraints.min !== undefined) {
        relativeConstraints.min = constraints.min - layout.min;
    }
    if (constraints.max !== undefined) {
        relativeConstraints.max = constraints.max - layout.min;
    }
    return relativeConstraints;
}
var defaultElastic = 0.35;
/**
 * Accepts a dragElastic prop and returns resolved elastic values for each axis.
 */
function resolveDragElastic(dragElastic) {
    if (dragElastic === void 0) { dragElastic = defaultElastic; }
    if (dragElastic === false) {
        dragElastic = 0;
    }
    else if (dragElastic === true) {
        dragElastic = defaultElastic;
    }
    return {
        x: resolveAxisElastic(dragElastic, "left", "right"),
        y: resolveAxisElastic(dragElastic, "top", "bottom"),
    };
}
function resolveAxisElastic(dragElastic, minLabel, maxLabel) {
    return {
        min: resolvePointElastic(dragElastic, minLabel),
        max: resolvePointElastic(dragElastic, maxLabel),
    };
}
function resolvePointElastic(dragElastic, label) {
    var _a;
    return typeof dragElastic === "number"
        ? dragElastic
        : (_a = dragElastic[label]) !== null && _a !== void 0 ? _a : 0;
}

var createAxisDelta = function () { return ({
    translate: 0,
    scale: 1,
    origin: 0,
    originPoint: 0,
}); };
var createDelta = function () { return ({
    x: createAxisDelta(),
    y: createAxisDelta(),
}); };
var createAxis = function () { return ({ min: 0, max: 0 }); };
var createBox = function () { return ({
    x: createAxis(),
    y: createAxis(),
}); };

function eachAxis(callback) {
    return [callback("x"), callback("y")];
}

/**
 * Bounding boxes tend to be defined as top, left, right, bottom. For various operations
 * it's easier to consider each axis individually. This function returns a bounding box
 * as a map of single-axis min/max values.
 */
function convertBoundingBoxToBox(_a) {
    var top = _a.top, left = _a.left, right = _a.right, bottom = _a.bottom;
    return {
        x: { min: left, max: right },
        y: { min: top, max: bottom },
    };
}
function convertBoxToBoundingBox(_a) {
    var x = _a.x, y = _a.y;
    return { top: y.min, right: x.max, bottom: y.max, left: x.min };
}
/**
 * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function
 * provided by Framer to allow measured points to be corrected for device scaling. This is used
 * when measuring DOM elements and DOM event points.
 */
function transformBoxPoints(point, transformPoint) {
    if (!transformPoint)
        return point;
    var topLeft = transformPoint({ x: point.left, y: point.top });
    var bottomRight = transformPoint({ x: point.right, y: point.bottom });
    return {
        top: topLeft.y,
        left: topLeft.x,
        bottom: bottomRight.y,
        right: bottomRight.x,
    };
}

function isIdentityScale(scale) {
    return scale === undefined || scale === 1;
}
function hasScale(_a) {
    var scale = _a.scale, scaleX = _a.scaleX, scaleY = _a.scaleY;
    return (!isIdentityScale(scale) ||
        !isIdentityScale(scaleX) ||
        !isIdentityScale(scaleY));
}
function hasTransform(values) {
    return (hasScale(values) ||
        hasTranslate(values.x) ||
        hasTranslate(values.y) ||
        values.z ||
        values.rotate ||
        values.rotateX ||
        values.rotateY);
}
function hasTranslate(value) {
    return value && value !== "0%";
}

/**
 * Scales a point based on a factor and an originPoint
 */
function scalePoint(point, scale, originPoint) {
    var distanceFromOrigin = point - originPoint;
    var scaled = scale * distanceFromOrigin;
    return originPoint + scaled;
}
/**
 * Applies a translate/scale delta to a point
 */
function applyPointDelta(point, translate, scale, originPoint, boxScale) {
    if (boxScale !== undefined) {
        point = scalePoint(point, boxScale, originPoint);
    }
    return scalePoint(point, scale, originPoint) + translate;
}
/**
 * Applies a translate/scale delta to an axis
 */
function applyAxisDelta(axis, translate, scale, originPoint, boxScale) {
    if (translate === void 0) { translate = 0; }
    if (scale === void 0) { scale = 1; }
    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);
    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);
}
/**
 * Applies a translate/scale delta to a box
 */
function applyBoxDelta(box, _a) {
    var x = _a.x, y = _a.y;
    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);
    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);
}
/**
 * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms
 * in a tree upon our box before then calculating how to project it into our desired viewport-relative box
 *
 * This is the final nested loop within updateLayoutDelta for future refactoring
 */
function applyTreeDeltas(box, treeScale, treePath, isSharedTransition) {
    var _a, _b;
    if (isSharedTransition === void 0) { isSharedTransition = false; }
    var treeLength = treePath.length;
    if (!treeLength)
        return;
    // Reset the treeScale
    treeScale.x = treeScale.y = 1;
    var node;
    var delta;
    for (var i = 0; i < treeLength; i++) {
        node = treePath[i];
        delta = node.projectionDelta;
        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === "contents")
            continue;
        if (isSharedTransition &&
            node.options.layoutScroll &&
            node.scroll &&
            node !== node.root) {
            transformBox(box, { x: -node.scroll.x, y: -node.scroll.y });
        }
        if (delta) {
            // Incoporate each ancestor's scale into a culmulative treeScale for this component
            treeScale.x *= delta.x.scale;
            treeScale.y *= delta.y.scale;
            // Apply each ancestor's calculated delta into this component's recorded layout box
            applyBoxDelta(box, delta);
        }
        if (isSharedTransition && hasTransform(node.latestValues)) {
            transformBox(box, node.latestValues);
        }
    }
}
function translateAxis(axis, distance) {
    axis.min = axis.min + distance;
    axis.max = axis.max + distance;
}
/**
 * Apply a transform to an axis from the latest resolved motion values.
 * This function basically acts as a bridge between a flat motion value map
 * and applyAxisDelta
 */
function transformAxis(axis, transforms, _a) {
    var _b = tslib.__read(_a, 3), key = _b[0], scaleKey = _b[1], originKey = _b[2];
    var axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;
    var originPoint = popmotion.mix(axis.min, axis.max, axisOrigin);
    // Apply the axis delta to the final axis
    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);
}
/**
 * The names of the motion values we want to apply as translation, scale and origin.
 */
var xKeys$1 = ["x", "scaleX", "originX"];
var yKeys$1 = ["y", "scaleY", "originY"];
/**
 * Apply a transform to a box from the latest resolved motion values.
 */
function transformBox(box, transform) {
    transformAxis(box.x, transform, xKeys$1);
    transformAxis(box.y, transform, yKeys$1);
}

function measureViewportBox(instance, transformPoint) {
    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));
}
function measurePageBox(element, rootProjectionNode, transformPagePoint) {
    var viewportBox = measureViewportBox(element, transformPagePoint);
    var scroll = rootProjectionNode.scroll;
    if (scroll) {
        translateAxis(viewportBox.x, scroll.x);
        translateAxis(viewportBox.y, scroll.y);
    }
    return viewportBox;
}

var elementDragControls = new WeakMap();
/**
 *
 */
// let latestPointerEvent: AnyPointerEvent
var VisualElementDragControls = /** @class */ (function () {
    function VisualElementDragControls(visualElement) {
        // This is a reference to the global drag gesture lock, ensuring only one component
        // can "capture" the drag of one or both axes.
        // TODO: Look into moving this into pansession?
        this.openGlobalLock = null;
        this.isDragging = false;
        this.currentDirection = null;
        this.originPoint = { x: 0, y: 0 };
        /**
         * The permitted boundaries of travel, in pixels.
         */
        this.constraints = false;
        this.hasMutatedConstraints = false;
        /**
         * The per-axis resolved elastic values.
         */
        this.elastic = createBox();
        this.visualElement = visualElement;
    }
    VisualElementDragControls.prototype.start = function (originEvent, _a) {
        var _this = this;
        var _b = _a === void 0 ? {} : _a, _c = _b.snapToCursor, snapToCursor = _c === void 0 ? false : _c;
        /**
         * Don't start dragging if this component is exiting
         */
        if (this.visualElement.isPresent === false)
            return;
        var onSessionStart = function (event) {
            // Stop any animations on both axis values immediately. This allows the user to throw and catch
            // the component.
            _this.stopAnimation();
            if (snapToCursor) {
                _this.snapToCursor(extractEventInfo(event, "page").point);
            }
        };
        var onStart = function (event, info) {
            var _a;
            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession
            var _b = _this.getProps(), drag = _b.drag, dragPropagation = _b.dragPropagation, onDragStart = _b.onDragStart;
            if (drag && !dragPropagation) {
                if (_this.openGlobalLock)
                    _this.openGlobalLock();
                _this.openGlobalLock = getGlobalLock(drag);
                // If we don 't have the lock, don't start dragging
                if (!_this.openGlobalLock)
                    return;
            }
            _this.isDragging = true;
            _this.currentDirection = null;
            _this.resolveConstraints();
            if (_this.visualElement.projection) {
                _this.visualElement.projection.isAnimationBlocked = true;
                _this.visualElement.projection.target = undefined;
            }
            /**
             * Record gesture origin
             */
            eachAxis(function (axis) {
                var _a, _b;
                var current = _this.getAxisMotionValue(axis).get() || 0;
                /**
                 * If the MotionValue is a percentage value convert to px
                 */
                if (styleValueTypes.percent.test(current)) {
                    var measuredAxis = (_b = (_a = _this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.actual[axis];
                    if (measuredAxis) {
                        var length_1 = calcLength(measuredAxis);
                        current = length_1 * (parseFloat(current) / 100);
                    }
                }
                _this.originPoint[axis] = current;
            });
            // Fire onDragStart event
            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);
            (_a = _this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(exports.AnimationType.Drag, true);
        };
        var onMove = function (event, info) {
            // latestPointerEvent = event
            var _a = _this.getProps(), dragPropagation = _a.dragPropagation, dragDirectionLock = _a.dragDirectionLock, onDirectionLock = _a.onDirectionLock, onDrag = _a.onDrag;
            // If we didn't successfully receive the gesture lock, early return.
            if (!dragPropagation && !_this.openGlobalLock)
                return;
            var offset = info.offset;
            // Attempt to detect drag direction if directionLock is true
            if (dragDirectionLock && _this.currentDirection === null) {
                _this.currentDirection = getCurrentDirection(offset);
                // If we've successfully set a direction, notify listener
                if (_this.currentDirection !== null) {
                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(_this.currentDirection);
                }
                return;
            }
            // Update each point with the latest position
            _this.updateAxis("x", info.point, offset);
            _this.updateAxis("y", info.point, offset);
            /**
             * Ideally we would leave the renderer to fire naturally at the end of
             * this frame but if the element is about to change layout as the result
             * of a re-render we want to ensure the browser can read the latest
             * bounding box to ensure the pointer and element don't fall out of sync.
             */
            _this.visualElement.syncRender();
            /**
             * This must fire after the syncRender call as it might trigger a state
             * change which itself might trigger a layout update.
             */
            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);
        };
        var onSessionEnd = function (event, info) {
            return _this.stop(event, info);
        };
        this.panSession = new PanSession(originEvent, {
            onSessionStart: onSessionStart,
            onStart: onStart,
            onMove: onMove,
            onSessionEnd: onSessionEnd,
        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });
    };
    VisualElementDragControls.prototype.stop = function (event, info) {
        var isDragging = this.isDragging;
        this.cancel();
        if (!isDragging)
            return;
        var velocity = info.velocity;
        this.startAnimation(velocity);
        var onDragEnd = this.getProps().onDragEnd;
        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);
    };
    VisualElementDragControls.prototype.cancel = function () {
        var _a, _b;
        this.isDragging = false;
        if (this.visualElement.projection) {
            this.visualElement.projection.isAnimationBlocked = false;
        }
        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();
        this.panSession = undefined;
        var dragPropagation = this.getProps().dragPropagation;
        if (!dragPropagation && this.openGlobalLock) {
            this.openGlobalLock();
            this.openGlobalLock = null;
        }
        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(exports.AnimationType.Drag, false);
    };
    VisualElementDragControls.prototype.updateAxis = function (axis, _point, offset) {
        var drag = this.getProps().drag;
        // If we're not dragging this axis, do an early return.
        if (!offset || !shouldDrag(axis, drag, this.currentDirection))
            return;
        var axisValue = this.getAxisMotionValue(axis);
        var next = this.originPoint[axis] + offset[axis];
        // Apply constraints
        if (this.constraints && this.constraints[axis]) {
            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);
        }
        axisValue.set(next);
    };
    VisualElementDragControls.prototype.resolveConstraints = function () {
        var _this = this;
        var _a = this.getProps(), dragConstraints = _a.dragConstraints, dragElastic = _a.dragElastic;
        var layout = (this.visualElement.projection || {}).layout;
        var prevConstraints = this.constraints;
        if (dragConstraints && isRefObject(dragConstraints)) {
            if (!this.constraints) {
                this.constraints = this.resolveRefConstraints();
            }
        }
        else {
            if (dragConstraints && layout) {
                this.constraints = calcRelativeConstraints(layout.actual, dragConstraints);
            }
            else {
                this.constraints = false;
            }
        }
        this.elastic = resolveDragElastic(dragElastic);
        /**
         * If we're outputting to external MotionValues, we want to rebase the measured constraints
         * from viewport-relative to component-relative.
         */
        if (prevConstraints !== this.constraints &&
            layout &&
            this.constraints &&
            !this.hasMutatedConstraints) {
            eachAxis(function (axis) {
                if (_this.getAxisMotionValue(axis)) {
                    _this.constraints[axis] = rebaseAxisConstraints(layout.actual[axis], _this.constraints[axis]);
                }
            });
        }
    };
    VisualElementDragControls.prototype.resolveRefConstraints = function () {
        var _a = this.getProps(), constraints = _a.dragConstraints, onMeasureDragConstraints = _a.onMeasureDragConstraints;
        if (!constraints || !isRefObject(constraints))
            return false;
        var constraintsElement = constraints.current;
        heyListen.invariant(constraintsElement !== null, "If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.");
        var projection = this.visualElement.projection;
        // TODO
        if (!projection || !projection.layout)
            return false;
        var constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());
        var measuredConstraints = calcViewportConstraints(projection.layout.actual, constraintsBox);
        /**
         * If there's an onMeasureDragConstraints listener we call it and
         * if different constraints are returned, set constraints to that
         */
        if (onMeasureDragConstraints) {
            var userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));
            this.hasMutatedConstraints = !!userConstraints;
            if (userConstraints) {
                measuredConstraints = convertBoundingBoxToBox(userConstraints);
            }
        }
        return measuredConstraints;
    };
    VisualElementDragControls.prototype.startAnimation = function (velocity) {
        var _this = this;
        var _a = this.getProps(), drag = _a.drag, dragMomentum = _a.dragMomentum, dragElastic = _a.dragElastic, dragTransition = _a.dragTransition, dragSnapToOrigin = _a.dragSnapToOrigin, onDragTransitionEnd = _a.onDragTransitionEnd;
        var constraints = this.constraints || {};
        var momentumAnimations = eachAxis(function (axis) {
            var _a;
            if (!shouldDrag(axis, drag, _this.currentDirection)) {
                return;
            }
            var transition = (_a = constraints === null || constraints === void 0 ? void 0 : constraints[axis]) !== null && _a !== void 0 ? _a : {};
            if (dragSnapToOrigin)
                transition = { min: 0, max: 0 };
            /**
             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame
             * of spring animations so we should look into adding a disable spring option to `inertia`.
             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`
             * using the value of `dragElastic`.
             */
            var bounceStiffness = dragElastic ? 200 : 1000000;
            var bounceDamping = dragElastic ? 40 : 10000000;
            var inertia = tslib.__assign(tslib.__assign({ type: "inertia", velocity: dragMomentum ? velocity[axis] : 0, bounceStiffness: bounceStiffness, bounceDamping: bounceDamping, timeConstant: 750, restDelta: 1, restSpeed: 10 }, dragTransition), transition);
            // If we're not animating on an externally-provided `MotionValue` we can use the
            // component's animation controls which will handle interactions with whileHover (etc),
            // otherwise we just have to animate the `MotionValue` itself.
            return _this.startAxisValueAnimation(axis, inertia);
        });
        // Run all animations and then resolve the new drag constraints.
        return Promise.all(momentumAnimations).then(onDragTransitionEnd);
    };
    VisualElementDragControls.prototype.startAxisValueAnimation = function (axis, transition) {
        var axisValue = this.getAxisMotionValue(axis);
        return startAnimation(axis, axisValue, 0, transition);
    };
    VisualElementDragControls.prototype.stopAnimation = function () {
        var _this = this;
        eachAxis(function (axis) { return _this.getAxisMotionValue(axis).stop(); });
    };
    /**
     * Drag works differently depending on which props are provided.
     *
     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.
     * - Otherwise, we apply the delta to the x/y motion values.
     */
    VisualElementDragControls.prototype.getAxisMotionValue = function (axis) {
        var _a, _b;
        var dragKey = "_drag" + axis.toUpperCase();
        var externalMotionValue = this.visualElement.getProps()[dragKey];
        return externalMotionValue
            ? externalMotionValue
            : this.visualElement.getValue(axis, (_b = (_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) !== null && _b !== void 0 ? _b : 0);
    };
    VisualElementDragControls.prototype.snapToCursor = function (point) {
        var _this = this;
        eachAxis(function (axis) {
            var drag = _this.getProps().drag;
            // If we're not dragging this axis, do an early return.
            if (!shouldDrag(axis, drag, _this.currentDirection))
                return;
            var projection = _this.visualElement.projection;
            var axisValue = _this.getAxisMotionValue(axis);
            if (projection && projection.layout) {
                var _a = projection.layout.actual[axis], min = _a.min, max = _a.max;
                axisValue.set(point[axis] - popmotion.mix(min, max, 0.5));
            }
        });
    };
    /**
     * When the viewport resizes we want to check if the measured constraints
     * have changed and, if so, reposition the element within those new constraints
     * relative to where it was before the resize.
     */
    VisualElementDragControls.prototype.scalePositionWithinConstraints = function () {
        var _this = this;
        var _a;
        var _b = this.getProps(), drag = _b.drag, dragConstraints = _b.dragConstraints;
        var projection = this.visualElement.projection;
        if (!isRefObject(dragConstraints) || !projection || !this.constraints)
            return;
        /**
         * Stop current animations as there can be visual glitching if we try to do
         * this mid-animation
         */
        this.stopAnimation();
        /**
         * Record the relative position of the dragged element relative to the
         * constraints box and save as a progress value.
         */
        var boxProgress = { x: 0, y: 0 };
        eachAxis(function (axis) {
            var axisValue = _this.getAxisMotionValue(axis);
            if (axisValue) {
                var latest = axisValue.get();
                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, _this.constraints[axis]);
            }
        });
        /**
         * Update the layout of this element and resolve the latest drag constraints
         */
        var transformTemplate = this.visualElement.getProps().transformTemplate;
        this.visualElement.getInstance().style.transform = transformTemplate
            ? transformTemplate({}, "")
            : "none";
        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();
        projection.updateLayout();
        this.resolveConstraints();
        /**
         * For each axis, calculate the current progress of the layout axis
         * within the new constraints.
         */
        eachAxis(function (axis) {
            if (!shouldDrag(axis, drag, null))
                return;
            /**
             * Calculate a new transform based on the previous box progress
             */
            var axisValue = _this.getAxisMotionValue(axis);
            var _a = _this.constraints[axis], min = _a.min, max = _a.max;
            axisValue.set(popmotion.mix(min, max, boxProgress[axis]));
        });
    };
    VisualElementDragControls.prototype.addListeners = function () {
        var _this = this;
        var _a;
        elementDragControls.set(this.visualElement, this);
        var element = this.visualElement.getInstance();
        /**
         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.
         */
        var stopPointerListener = addPointerEvent(element, "pointerdown", function (event) {
            var _a = _this.getProps(), drag = _a.drag, _b = _a.dragListener, dragListener = _b === void 0 ? true : _b;
            drag && dragListener && _this.start(event);
        });
        var measureDragConstraints = function () {
            var dragConstraints = _this.getProps().dragConstraints;
            if (isRefObject(dragConstraints)) {
                _this.constraints = _this.resolveRefConstraints();
            }
        };
        var projection = this.visualElement.projection;
        var stopMeasureLayoutListener = projection.addEventListener("measure", measureDragConstraints);
        if (projection && !projection.layout) {
            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();
            projection.updateLayout();
        }
        measureDragConstraints();
        /**
         * Attach a window resize listener to scale the draggable target within its defined
         * constraints as the window resizes.
         */
        var stopResizeListener = addDomEvent(window, "resize", function () {
            return _this.scalePositionWithinConstraints();
        });
        /**
         * If the element's layout changes, calculate the delta and apply that to
         * the drag gesture's origin point.
         */
        projection.addEventListener("didUpdate", (function (_a) {
            var delta = _a.delta, hasLayoutChanged = _a.hasLayoutChanged;
            if (_this.isDragging && hasLayoutChanged) {
                eachAxis(function (axis) {
                    var motionValue = _this.getAxisMotionValue(axis);
                    if (!motionValue)
                        return;
                    _this.originPoint[axis] += delta[axis].translate;
                    motionValue.set(motionValue.get() + delta[axis].translate);
                });
                _this.visualElement.syncRender();
            }
        }));
        return function () {
            stopResizeListener();
            stopPointerListener();
            stopMeasureLayoutListener();
        };
    };
    VisualElementDragControls.prototype.getProps = function () {
        var props = this.visualElement.getProps();
        var _a = props.drag, drag = _a === void 0 ? false : _a, _b = props.dragDirectionLock, dragDirectionLock = _b === void 0 ? false : _b, _c = props.dragPropagation, dragPropagation = _c === void 0 ? false : _c, _d = props.dragConstraints, dragConstraints = _d === void 0 ? false : _d, _e = props.dragElastic, dragElastic = _e === void 0 ? defaultElastic : _e, _f = props.dragMomentum, dragMomentum = _f === void 0 ? true : _f;
        return tslib.__assign(tslib.__assign({}, props), { drag: drag, dragDirectionLock: dragDirectionLock, dragPropagation: dragPropagation, dragConstraints: dragConstraints, dragElastic: dragElastic, dragMomentum: dragMomentum });
    };
    return VisualElementDragControls;
}());
function shouldDrag(direction, drag, currentDirection) {
    return ((drag === true || drag === direction) &&
        (currentDirection === null || currentDirection === direction));
}
/**
 * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower
 * than the provided threshold, return `null`.
 *
 * @param offset - The x/y offset from origin.
 * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.
 */
function getCurrentDirection(offset, lockThreshold) {
    if (lockThreshold === void 0) { lockThreshold = 10; }
    var direction = null;
    if (Math.abs(offset.y) > lockThreshold) {
        direction = "y";
    }
    else if (Math.abs(offset.x) > lockThreshold) {
        direction = "x";
    }
    return direction;
}

/**
 * A hook that allows an element to be dragged.
 *
 * @internal
 */
function useDrag(props) {
    var groupDragControls = props.dragControls, visualElement = props.visualElement;
    var dragControls = useConstant(function () { return new VisualElementDragControls(visualElement); });
    // If we've been provided a DragControls for manual control over the drag gesture,
    // subscribe this component to it on mount.
    React.useEffect(function () { return groupDragControls && groupDragControls.subscribe(dragControls); }, [dragControls, groupDragControls]);
    // Apply the event listeners to the element
    React.useEffect(function () { return dragControls.addListeners(); }, [dragControls]);
}

/**
 *
 * @param handlers -
 * @param ref -
 *
 * @privateRemarks
 * Currently this sets new pan gesture functions every render. The memo route has been explored
 * in the past but ultimately we're still creating new functions every render. An optimisation
 * to explore is creating the pan gestures and loading them into a `ref`.
 *
 * @internal
 */
function usePanGesture(_a) {
    var onPan = _a.onPan, onPanStart = _a.onPanStart, onPanEnd = _a.onPanEnd, onPanSessionStart = _a.onPanSessionStart, visualElement = _a.visualElement;
    var hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;
    var panSession = React.useRef(null);
    var transformPagePoint = React.useContext(MotionConfigContext).transformPagePoint;
    var handlers = {
        onSessionStart: onPanSessionStart,
        onStart: onPanStart,
        onMove: onPan,
        onEnd: function (event, info) {
            panSession.current = null;
            onPanEnd && onPanEnd(event, info);
        },
    };
    React.useEffect(function () {
        if (panSession.current !== null) {
            panSession.current.updateHandlers(handlers);
        }
    });
    function onPointerDown(event) {
        panSession.current = new PanSession(event, handlers, {
            transformPagePoint: transformPagePoint,
        });
    }
    usePointerEvent(visualElement, "pointerdown", hasPanEvents && onPointerDown);
    useUnmountEffect(function () { return panSession.current && panSession.current.end(); });
}

var drag = {
    pan: makeRenderlessComponent(usePanGesture),
    drag: makeRenderlessComponent(useDrag),
};

var names = [
    "LayoutMeasure",
    "BeforeLayoutMeasure",
    "LayoutUpdate",
    "ViewportBoxUpdate",
    "Update",
    "Render",
    "AnimationComplete",
    "LayoutAnimationComplete",
    "AnimationStart",
    "LayoutAnimationStart",
    "SetAxisTarget",
    "Unmount",
];
function createLifecycles() {
    var managers = names.map(function () { return new SubscriptionManager(); });
    var propSubscriptions = {};
    var lifecycles = {
        clearAllListeners: function () { return managers.forEach(function (manager) { return manager.clear(); }); },
        updatePropListeners: function (props) {
            names.forEach(function (name) {
                var _a;
                var on = "on" + name;
                var propListener = props[on];
                // Unsubscribe existing subscription
                (_a = propSubscriptions[name]) === null || _a === void 0 ? void 0 : _a.call(propSubscriptions);
                // Add new subscription
                if (propListener) {
                    propSubscriptions[name] = lifecycles[on](propListener);
                }
            });
        },
    };
    managers.forEach(function (manager, i) {
        lifecycles["on" + names[i]] = function (handler) { return manager.add(handler); };
        lifecycles["notify" + names[i]] = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            return manager.notify.apply(manager, tslib.__spreadArray([], tslib.__read(args), false));
        };
    });
    return lifecycles;
}

function updateMotionValuesFromProps(element, next, prev) {
    var _a;
    for (var key in next) {
        var nextValue = next[key];
        var prevValue = prev[key];
        if (isMotionValue(nextValue)) {
            /**
             * If this is a motion value found in props or style, we want to add it
             * to our visual element's motion value map.
             */
            element.addValue(key, nextValue);
            /**
             * Check the version of the incoming motion value with this version
             * and warn against mismatches.
             */
            if (true) {
                warnOnce(nextValue.version === "6.5.1", "Attempting to mix Framer Motion versions ".concat(nextValue.version, " with 6.5.1 may not work as expected."));
            }
        }
        else if (isMotionValue(prevValue)) {
            /**
             * If we're swapping to a new motion value, create a new motion value
             * from that
             */
            element.addValue(key, motionValue(nextValue));
        }
        else if (prevValue !== nextValue) {
            /**
             * If this is a flat value that has changed, update the motion value
             * or create one if it doesn't exist. We only want to do this if we're
             * not handling the value with our animation state.
             */
            if (element.hasValue(key)) {
                var existingValue = element.getValue(key);
                // TODO: Only update values that aren't being animated or even looked at
                !existingValue.hasAnimated && existingValue.set(nextValue);
            }
            else {
                element.addValue(key, motionValue((_a = element.getStaticValue(key)) !== null && _a !== void 0 ? _a : nextValue));
            }
        }
    }
    // Handle removed values
    for (var key in prev) {
        if (next[key] === undefined)
            element.removeValue(key);
    }
    return next;
}

var visualElement = function (_a) {
    var _b = _a.treeType, treeType = _b === void 0 ? "" : _b, build = _a.build, getBaseTarget = _a.getBaseTarget, makeTargetAnimatable = _a.makeTargetAnimatable, measureViewportBox = _a.measureViewportBox, renderInstance = _a.render, readValueFromInstance = _a.readValueFromInstance, removeValueFromRenderState = _a.removeValueFromRenderState, sortNodePosition = _a.sortNodePosition, scrapeMotionValuesFromProps = _a.scrapeMotionValuesFromProps;
    return function (_a, options) {
        var parent = _a.parent, props = _a.props, presenceId = _a.presenceId, blockInitialAnimation = _a.blockInitialAnimation, visualState = _a.visualState, shouldReduceMotion = _a.shouldReduceMotion;
        if (options === void 0) { options = {}; }
        var isMounted = false;
        var latestValues = visualState.latestValues, renderState = visualState.renderState;
        /**
         * The instance of the render-specific node that will be hydrated by the
         * exposed React ref. So for example, this visual element can host a
         * HTMLElement, plain object, or Three.js object. The functions provided
         * in VisualElementConfig allow us to interface with this instance.
         */
        var instance;
        /**
         * Manages the subscriptions for a visual element's lifecycle, for instance
         * onRender
         */
        var lifecycles = createLifecycles();
        /**
         * A map of all motion values attached to this visual element. Motion
         * values are source of truth for any given animated value. A motion
         * value might be provided externally by the component via props.
         */
        var values = new Map();
        /**
         * A map of every subscription that binds the provided or generated
         * motion values onChange listeners to this visual element.
         */
        var valueSubscriptions = new Map();
        /**
         * A reference to the previously-provided motion values as returned
         * from scrapeMotionValuesFromProps. We use the keys in here to determine
         * if any motion values need to be removed after props are updated.
         */
        var prevMotionValues = {};
        /**
         * When values are removed from all animation props we need to search
         * for a fallback value to animate to. These values are tracked in baseTarget.
         */
        var baseTarget = tslib.__assign({}, latestValues);
        // Internal methods ========================
        /**
         * On mount, this will be hydrated with a callback to disconnect
         * this visual element from its parent on unmount.
         */
        var removeFromVariantTree;
        /**
         * Render the element with the latest styles outside of the React
         * render lifecycle
         */
        function render() {
            if (!instance || !isMounted)
                return;
            triggerBuild();
            renderInstance(instance, renderState, props.style, element.projection);
        }
        function triggerBuild() {
            build(element, renderState, latestValues, options, props);
        }
        function update() {
            lifecycles.notifyUpdate(latestValues);
        }
        /**
         *
         */
        function bindToMotionValue(key, value) {
            var removeOnChange = value.onChange(function (latestValue) {
                latestValues[key] = latestValue;
                props.onUpdate && sync__default["default"].update(update, false, true);
            });
            var removeOnRenderRequest = value.onRenderRequest(element.scheduleRender);
            valueSubscriptions.set(key, function () {
                removeOnChange();
                removeOnRenderRequest();
            });
        }
        /**
         * Any motion values that are provided to the element when created
         * aren't yet bound to the element, as this would technically be impure.
         * However, we iterate through the motion values and set them to the
         * initial values for this component.
         *
         * TODO: This is impure and we should look at changing this to run on mount.
         * Doing so will break some tests but this isn't neccessarily a breaking change,
         * more a reflection of the test.
         */
        var initialMotionValues = scrapeMotionValuesFromProps(props);
        for (var key in initialMotionValues) {
            var value = initialMotionValues[key];
            if (latestValues[key] !== undefined && isMotionValue(value)) {
                value.set(latestValues[key], false);
            }
        }
        /**
         * Determine what role this visual element should take in the variant tree.
         */
        var isControllingVariants = checkIfControllingVariants(props);
        var isVariantNode = checkIfVariantNode(props);
        var element = tslib.__assign(tslib.__assign({ treeType: treeType, 
            /**
             * This is a mirror of the internal instance prop, which keeps
             * VisualElement type-compatible with React's RefObject.
             */
            current: null, 
            /**
             * The depth of this visual element within the visual element tree.
             */
            depth: parent ? parent.depth + 1 : 0, parent: parent, children: new Set(), 
            /**
             *
             */
            presenceId: presenceId, shouldReduceMotion: shouldReduceMotion, 
            /**
             * If this component is part of the variant tree, it should track
             * any children that are also part of the tree. This is essentially
             * a shadow tree to simplify logic around how to stagger over children.
             */
            variantChildren: isVariantNode ? new Set() : undefined, 
            /**
             * Whether this instance is visible. This can be changed imperatively
             * by the projection tree, is analogous to CSS's visibility in that
             * hidden elements should take up layout, and needs enacting by the configured
             * render function.
             */
            isVisible: undefined, 
            /**
             * Normally, if a component is controlled by a parent's variants, it can
             * rely on that ancestor to trigger animations further down the tree.
             * However, if a component is created after its parent is mounted, the parent
             * won't trigger that mount animation so the child needs to.
             *
             * TODO: This might be better replaced with a method isParentMounted
             */
            manuallyAnimateOnMount: Boolean(parent === null || parent === void 0 ? void 0 : parent.isMounted()), 
            /**
             * This can be set by AnimatePresence to force components that mount
             * at the same time as it to mount as if they have initial={false} set.
             */
            blockInitialAnimation: blockInitialAnimation, 
            /**
             * Determine whether this component has mounted yet. This is mostly used
             * by variant children to determine whether they need to trigger their
             * own animations on mount.
             */
            isMounted: function () { return Boolean(instance); }, mount: function (newInstance) {
                isMounted = true;
                instance = element.current = newInstance;
                if (element.projection) {
                    element.projection.mount(newInstance);
                }
                if (isVariantNode && parent && !isControllingVariants) {
                    removeFromVariantTree = parent === null || parent === void 0 ? void 0 : parent.addVariantChild(element);
                }
                values.forEach(function (value, key) { return bindToMotionValue(key, value); });
                parent === null || parent === void 0 ? void 0 : parent.children.add(element);
                element.setProps(props);
            }, 
            /**
             *
             */
            unmount: function () {
                var _a;
                (_a = element.projection) === null || _a === void 0 ? void 0 : _a.unmount();
                sync.cancelSync.update(update);
                sync.cancelSync.render(render);
                valueSubscriptions.forEach(function (remove) { return remove(); });
                removeFromVariantTree === null || removeFromVariantTree === void 0 ? void 0 : removeFromVariantTree();
                parent === null || parent === void 0 ? void 0 : parent.children.delete(element);
                lifecycles.clearAllListeners();
                instance = undefined;
                isMounted = false;
            }, 
            /**
             * Add a child visual element to our set of children.
             */
            addVariantChild: function (child) {
                var _a;
                var closestVariantNode = element.getClosestVariantNode();
                if (closestVariantNode) {
                    (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);
                    return function () {
                        return closestVariantNode.variantChildren.delete(child);
                    };
                }
            }, sortNodePosition: function (other) {
                /**
                 * If these nodes aren't even of the same type we can't compare their depth.
                 */
                if (!sortNodePosition || treeType !== other.treeType)
                    return 0;
                return sortNodePosition(element.getInstance(), other.getInstance());
            }, 
            /**
             * Returns the closest variant node in the tree starting from
             * this visual element.
             */
            getClosestVariantNode: function () {
                return isVariantNode ? element : parent === null || parent === void 0 ? void 0 : parent.getClosestVariantNode();
            }, 
            /**
             * Expose the latest layoutId prop.
             */
            getLayoutId: function () { return props.layoutId; }, 
            /**
             * Returns the current instance.
             */
            getInstance: function () { return instance; }, 
            /**
             * Get/set the latest static values.
             */
            getStaticValue: function (key) { return latestValues[key]; }, setStaticValue: function (key, value) { return (latestValues[key] = value); }, 
            /**
             * Returns the latest motion value state. Currently only used to take
             * a snapshot of the visual element - perhaps this can return the whole
             * visual state
             */
            getLatestValues: function () { return latestValues; }, 
            /**
             * Set the visiblity of the visual element. If it's changed, schedule
             * a render to reflect these changes.
             */
            setVisibility: function (visibility) {
                if (element.isVisible === visibility)
                    return;
                element.isVisible = visibility;
                element.scheduleRender();
            }, 
            /**
             * Make a target animatable by Popmotion. For instance, if we're
             * trying to animate width from 100px to 100vw we need to measure 100vw
             * in pixels to determine what we really need to animate to. This is also
             * pluggable to support Framer's custom value types like Color,
             * and CSS variables.
             */
            makeTargetAnimatable: function (target, canMutate) {
                if (canMutate === void 0) { canMutate = true; }
                return makeTargetAnimatable(element, target, props, canMutate);
            }, 
            /**
             * Measure the current viewport box with or without transforms.
             * Only measures axis-aligned boxes, rotate and skew must be manually
             * removed with a re-render to work.
             */
            measureViewportBox: function () {
                return measureViewportBox(instance, props);
            }, 
            // Motion values ========================
            /**
             * Add a motion value and bind it to this visual element.
             */
            addValue: function (key, value) {
                // Remove existing value if it exists
                if (element.hasValue(key))
                    element.removeValue(key);
                values.set(key, value);
                latestValues[key] = value.get();
                bindToMotionValue(key, value);
            }, 
            /**
             * Remove a motion value and unbind any active subscriptions.
             */
            removeValue: function (key) {
                var _a;
                values.delete(key);
                (_a = valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();
                valueSubscriptions.delete(key);
                delete latestValues[key];
                removeValueFromRenderState(key, renderState);
            }, 
            /**
             * Check whether we have a motion value for this key
             */
            hasValue: function (key) { return values.has(key); }, 
            /**
             * Get a motion value for this key. If called with a default
             * value, we'll create one if none exists.
             */
            getValue: function (key, defaultValue) {
                var value = values.get(key);
                if (value === undefined && defaultValue !== undefined) {
                    value = motionValue(defaultValue);
                    element.addValue(key, value);
                }
                return value;
            }, 
            /**
             * Iterate over our motion values.
             */
            forEachValue: function (callback) { return values.forEach(callback); }, 
            /**
             * If we're trying to animate to a previously unencountered value,
             * we need to check for it in our state and as a last resort read it
             * directly from the instance (which might have performance implications).
             */
            readValue: function (key) {
                var _a;
                return (_a = latestValues[key]) !== null && _a !== void 0 ? _a : readValueFromInstance(instance, key, options);
            }, 
            /**
             * Set the base target to later animate back to. This is currently
             * only hydrated on creation and when we first read a value.
             */
            setBaseTarget: function (key, value) {
                baseTarget[key] = value;
            }, 
            /**
             * Find the base target for a value thats been removed from all animation
             * props.
             */
            getBaseTarget: function (key) {
                if (getBaseTarget) {
                    var target = getBaseTarget(props, key);
                    if (target !== undefined && !isMotionValue(target))
                        return target;
                }
                return baseTarget[key];
            } }, lifecycles), { 
            /**
             * Build the renderer state based on the latest visual state.
             */
            build: function () {
                triggerBuild();
                return renderState;
            }, 
            /**
             * Schedule a render on the next animation frame.
             */
            scheduleRender: function () {
                sync__default["default"].render(render, false, true);
            }, 
            /**
             * Synchronously fire render. It's prefered that we batch renders but
             * in many circumstances, like layout measurement, we need to run this
             * synchronously. However in those instances other measures should be taken
             * to batch reads/writes.
             */
            syncRender: render, 
            /**
             * Update the provided props. Ensure any newly-added motion values are
             * added to our map, old ones removed, and listeners updated.
             */
            setProps: function (newProps) {
                if (newProps.transformTemplate || props.transformTemplate) {
                    element.scheduleRender();
                }
                props = newProps;
                lifecycles.updatePropListeners(newProps);
                prevMotionValues = updateMotionValuesFromProps(element, scrapeMotionValuesFromProps(props), prevMotionValues);
            }, getProps: function () { return props; }, 
            // Variants ==============================
            /**
             * Returns the variant definition with a given name.
             */
            getVariant: function (name) { var _a; return (_a = props.variants) === null || _a === void 0 ? void 0 : _a[name]; }, 
            /**
             * Returns the defined default transition on this component.
             */
            getDefaultTransition: function () { return props.transition; }, getTransformPagePoint: function () {
                return props.transformPagePoint;
            }, 
            /**
             * Used by child variant nodes to get the closest ancestor variant props.
             */
            getVariantContext: function (startAtParent) {
                if (startAtParent === void 0) { startAtParent = false; }
                if (startAtParent)
                    return parent === null || parent === void 0 ? void 0 : parent.getVariantContext();
                if (!isControllingVariants) {
                    var context_1 = (parent === null || parent === void 0 ? void 0 : parent.getVariantContext()) || {};
                    if (props.initial !== undefined) {
                        context_1.initial = props.initial;
                    }
                    return context_1;
                }
                var context = {};
                for (var i = 0; i < numVariantProps; i++) {
                    var name_1 = variantProps[i];
                    var prop = props[name_1];
                    if (isVariantLabel(prop) || prop === false) {
                        context[name_1] = prop;
                    }
                }
                return context;
            } });
        return element;
    };
};
var variantProps = tslib.__spreadArray(["initial"], tslib.__read(variantPriorityOrder), false);
var numVariantProps = variantProps.length;

function isCSSVariable(value) {
    return typeof value === "string" && value.startsWith("var(--");
}
/**
 * Parse Framer's special CSS variable format into a CSS token and a fallback.
 *
 * ```
 * `var(--foo, #fff)` => [`--foo`, '#fff']
 * ```
 *
 * @param current
 */
var cssVariableRegex = /var\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\)/;
function parseCSSVariable(current) {
    var match = cssVariableRegex.exec(current);
    if (!match)
        return [,];
    var _a = tslib.__read(match, 3), token = _a[1], fallback = _a[2];
    return [token, fallback];
}
var maxDepth = 4;
function getVariableValue(current, element, depth) {
    if (depth === void 0) { depth = 1; }
    heyListen.invariant(depth <= maxDepth, "Max CSS variable fallback depth detected in property \"".concat(current, "\". This may indicate a circular fallback dependency."));
    var _a = tslib.__read(parseCSSVariable(current), 2), token = _a[0], fallback = _a[1];
    // No CSS variable detected
    if (!token)
        return;
    // Attempt to read this CSS variable off the element
    var resolved = window.getComputedStyle(element).getPropertyValue(token);
    if (resolved) {
        return resolved.trim();
    }
    else if (isCSSVariable(fallback)) {
        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.
        return getVariableValue(fallback, element, depth + 1);
    }
    else {
        return fallback;
    }
}
/**
 * Resolve CSS variables from
 *
 * @internal
 */
function resolveCSSVariables(visualElement, _a, transitionEnd) {
    var _b;
    var target = tslib.__rest(_a, []);
    var element = visualElement.getInstance();
    if (!(element instanceof Element))
        return { target: target, transitionEnd: transitionEnd };
    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`
    // only if they change but I think this reads clearer and this isn't a performance-critical path.
    if (transitionEnd) {
        transitionEnd = tslib.__assign({}, transitionEnd);
    }
    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved
    visualElement.forEachValue(function (value) {
        var current = value.get();
        if (!isCSSVariable(current))
            return;
        var resolved = getVariableValue(current, element);
        if (resolved)
            value.set(resolved);
    });
    // Cycle through every target property and resolve CSS variables. Currently
    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`
    for (var key in target) {
        var current = target[key];
        if (!isCSSVariable(current))
            continue;
        var resolved = getVariableValue(current, element);
        if (!resolved)
            continue;
        // Clone target if it hasn't already been
        target[key] = resolved;
        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved
        // CSS variable. This will ensure that after the animation the component will reflect
        // changes in the value of the CSS variable.
        if (transitionEnd)
            (_b = transitionEnd[key]) !== null && _b !== void 0 ? _b : (transitionEnd[key] = current);
    }
    return { target: target, transitionEnd: transitionEnd };
}

var positionalKeys = new Set([
    "width",
    "height",
    "top",
    "left",
    "right",
    "bottom",
    "x",
    "y",
]);
var isPositionalKey = function (key) { return positionalKeys.has(key); };
var hasPositionalKey = function (target) {
    return Object.keys(target).some(isPositionalKey);
};
var setAndResetVelocity = function (value, to) {
    // Looks odd but setting it twice doesn't render, it'll just
    // set both prev and current to the latest value
    value.set(to, false);
    value.set(to);
};
var isNumOrPxType = function (v) {
    return v === styleValueTypes.number || v === styleValueTypes.px;
};
var BoundingBoxDimension;
(function (BoundingBoxDimension) {
    BoundingBoxDimension["width"] = "width";
    BoundingBoxDimension["height"] = "height";
    BoundingBoxDimension["left"] = "left";
    BoundingBoxDimension["right"] = "right";
    BoundingBoxDimension["top"] = "top";
    BoundingBoxDimension["bottom"] = "bottom";
})(BoundingBoxDimension || (BoundingBoxDimension = {}));
var getPosFromMatrix = function (matrix, pos) {
    return parseFloat(matrix.split(", ")[pos]);
};
var getTranslateFromMatrix = function (pos2, pos3) {
    return function (_bbox, _a) {
        var transform = _a.transform;
        if (transform === "none" || !transform)
            return 0;
        var matrix3d = transform.match(/^matrix3d\((.+)\)$/);
        if (matrix3d) {
            return getPosFromMatrix(matrix3d[1], pos3);
        }
        else {
            var matrix = transform.match(/^matrix\((.+)\)$/);
            if (matrix) {
                return getPosFromMatrix(matrix[1], pos2);
            }
            else {
                return 0;
            }
        }
    };
};
var transformKeys = new Set(["x", "y", "z"]);
var nonTranslationalTransformKeys = transformProps.filter(function (key) { return !transformKeys.has(key); });
function removeNonTranslationalTransform(visualElement) {
    var removedTransforms = [];
    nonTranslationalTransformKeys.forEach(function (key) {
        var value = visualElement.getValue(key);
        if (value !== undefined) {
            removedTransforms.push([key, value.get()]);
            value.set(key.startsWith("scale") ? 1 : 0);
        }
    });
    // Apply changes to element before measurement
    if (removedTransforms.length)
        visualElement.syncRender();
    return removedTransforms;
}
var positionalValues = {
    // Dimensions
    width: function (_a, _b) {
        var x = _a.x;
        var _c = _b.paddingLeft, paddingLeft = _c === void 0 ? "0" : _c, _d = _b.paddingRight, paddingRight = _d === void 0 ? "0" : _d;
        return x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight);
    },
    height: function (_a, _b) {
        var y = _a.y;
        var _c = _b.paddingTop, paddingTop = _c === void 0 ? "0" : _c, _d = _b.paddingBottom, paddingBottom = _d === void 0 ? "0" : _d;
        return y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom);
    },
    top: function (_bbox, _a) {
        var top = _a.top;
        return parseFloat(top);
    },
    left: function (_bbox, _a) {
        var left = _a.left;
        return parseFloat(left);
    },
    bottom: function (_a, _b) {
        var y = _a.y;
        var top = _b.top;
        return parseFloat(top) + (y.max - y.min);
    },
    right: function (_a, _b) {
        var x = _a.x;
        var left = _b.left;
        return parseFloat(left) + (x.max - x.min);
    },
    // Transform
    x: getTranslateFromMatrix(4, 13),
    y: getTranslateFromMatrix(5, 14),
};
var convertChangedValueTypes = function (target, visualElement, changedKeys) {
    var originBbox = visualElement.measureViewportBox();
    var element = visualElement.getInstance();
    var elementComputedStyle = getComputedStyle(element);
    var display = elementComputedStyle.display;
    var origin = {};
    // If the element is currently set to display: "none", make it visible before
    // measuring the target bounding box
    if (display === "none") {
        visualElement.setStaticValue("display", target.display || "block");
    }
    /**
     * Record origins before we render and update styles
     */
    changedKeys.forEach(function (key) {
        origin[key] = positionalValues[key](originBbox, elementComputedStyle);
    });
    // Apply the latest values (as set in checkAndConvertChangedValueTypes)
    visualElement.syncRender();
    var targetBbox = visualElement.measureViewportBox();
    changedKeys.forEach(function (key) {
        // Restore styles to their **calculated computed style**, not their actual
        // originally set style. This allows us to animate between equivalent pixel units.
        var value = visualElement.getValue(key);
        setAndResetVelocity(value, origin[key]);
        target[key] = positionalValues[key](targetBbox, elementComputedStyle);
    });
    return target;
};
var checkAndConvertChangedValueTypes = function (visualElement, target, origin, transitionEnd) {
    if (origin === void 0) { origin = {}; }
    if (transitionEnd === void 0) { transitionEnd = {}; }
    target = tslib.__assign({}, target);
    transitionEnd = tslib.__assign({}, transitionEnd);
    var targetPositionalKeys = Object.keys(target).filter(isPositionalKey);
    // We want to remove any transform values that could affect the element's bounding box before
    // it's measured. We'll reapply these later.
    var removedTransformValues = [];
    var hasAttemptedToRemoveTransformValues = false;
    var changedValueTypeKeys = [];
    targetPositionalKeys.forEach(function (key) {
        var value = visualElement.getValue(key);
        if (!visualElement.hasValue(key))
            return;
        var from = origin[key];
        var fromType = findDimensionValueType(from);
        var to = target[key];
        var toType;
        // TODO: The current implementation of this basically throws an error
        // if you try and do value conversion via keyframes. There's probably
        // a way of doing this but the performance implications would need greater scrutiny,
        // as it'd be doing multiple resize-remeasure operations.
        if (isKeyframesTarget(to)) {
            var numKeyframes = to.length;
            var fromIndex = to[0] === null ? 1 : 0;
            from = to[fromIndex];
            fromType = findDimensionValueType(from);
            for (var i = fromIndex; i < numKeyframes; i++) {
                if (!toType) {
                    toType = findDimensionValueType(to[i]);
                    heyListen.invariant(toType === fromType ||
                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), "Keyframes must be of the same dimension as the current value");
                }
                else {
                    heyListen.invariant(findDimensionValueType(to[i]) === toType, "All keyframes must be of the same type");
                }
            }
        }
        else {
            toType = findDimensionValueType(to);
        }
        if (fromType !== toType) {
            // If they're both just number or px, convert them both to numbers rather than
            // relying on resize/remeasure to convert (which is wasteful in this situation)
            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {
                var current = value.get();
                if (typeof current === "string") {
                    value.set(parseFloat(current));
                }
                if (typeof to === "string") {
                    target[key] = parseFloat(to);
                }
                else if (Array.isArray(to) && toType === styleValueTypes.px) {
                    target[key] = to.map(parseFloat);
                }
            }
            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&
                (toType === null || toType === void 0 ? void 0 : toType.transform) &&
                (from === 0 || to === 0)) {
                // If one or the other value is 0, it's safe to coerce it to the
                // type of the other without measurement
                if (from === 0) {
                    value.set(toType.transform(from));
                }
                else {
                    target[key] = fromType.transform(to);
                }
            }
            else {
                // If we're going to do value conversion via DOM measurements, we first
                // need to remove non-positional transform values that could affect the bbox measurements.
                if (!hasAttemptedToRemoveTransformValues) {
                    removedTransformValues =
                        removeNonTranslationalTransform(visualElement);
                    hasAttemptedToRemoveTransformValues = true;
                }
                changedValueTypeKeys.push(key);
                transitionEnd[key] =
                    transitionEnd[key] !== undefined
                        ? transitionEnd[key]
                        : target[key];
                setAndResetVelocity(value, to);
            }
        }
    });
    if (changedValueTypeKeys.length) {
        var scrollY_1 = changedValueTypeKeys.indexOf("height") >= 0
            ? window.pageYOffset
            : null;
        var convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);
        // If we removed transform values, reapply them before the next render
        if (removedTransformValues.length) {
            removedTransformValues.forEach(function (_a) {
                var _b = tslib.__read(_a, 2), key = _b[0], value = _b[1];
                visualElement.getValue(key).set(value);
            });
        }
        // Reapply original values
        visualElement.syncRender();
        // Restore scroll position
        if (scrollY_1 !== null)
            window.scrollTo({ top: scrollY_1 });
        return { target: convertedTarget, transitionEnd: transitionEnd };
    }
    else {
        return { target: target, transitionEnd: transitionEnd };
    }
};
/**
 * Convert value types for x/y/width/height/top/left/bottom/right
 *
 * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`
 *
 * @internal
 */
function unitConversion(visualElement, target, origin, transitionEnd) {
    return hasPositionalKey(target)
        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)
        : { target: target, transitionEnd: transitionEnd };
}

/**
 * Parse a DOM variant to make it animatable. This involves resolving CSS variables
 * and ensuring animations like "20%" => "calc(50vw)" are performed in pixels.
 */
var parseDomVariant = function (visualElement, target, origin, transitionEnd) {
    var resolved = resolveCSSVariables(visualElement, target, transitionEnd);
    target = resolved.target;
    transitionEnd = resolved.transitionEnd;
    return unitConversion(visualElement, target, origin, transitionEnd);
};

function getComputedStyle$1(element) {
    return window.getComputedStyle(element);
}
var htmlConfig = {
    treeType: "dom",
    readValueFromInstance: function (domElement, key) {
        if (isTransformProp(key)) {
            var defaultType = getDefaultValueType(key);
            return defaultType ? defaultType.default || 0 : 0;
        }
        else {
            var computedStyle = getComputedStyle$1(domElement);
            return ((isCSSVariable$1(key)
                ? computedStyle.getPropertyValue(key)
                : computedStyle[key]) || 0);
        }
    },
    sortNodePosition: function (a, b) {
        /**
         * compareDocumentPosition returns a bitmask, by using the bitwise &
         * we're returning true if 2 in that bitmask is set to true. 2 is set
         * to true if b preceeds a.
         */
        return a.compareDocumentPosition(b) & 2 ? 1 : -1;
    },
    getBaseTarget: function (props, key) {
        var _a;
        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];
    },
    measureViewportBox: function (element, _a) {
        var transformPagePoint = _a.transformPagePoint;
        return measureViewportBox(element, transformPagePoint);
    },
    /**
     * Reset the transform on the current Element. This is called as part
     * of a batched process across the entire layout tree. To remove this write
     * cycle it'd be interesting to see if it's possible to "undo" all the current
     * layout transforms up the tree in the same way this.getBoundingBoxWithoutTransforms
     * works
     */
    resetTransform: function (element, domElement, props) {
        var transformTemplate = props.transformTemplate;
        domElement.style.transform = transformTemplate
            ? transformTemplate({}, "")
            : "none";
        // Ensure that whatever happens next, we restore our transform on the next frame
        element.scheduleRender();
    },
    restoreTransform: function (instance, mutableState) {
        instance.style.transform = mutableState.style.transform;
    },
    removeValueFromRenderState: function (key, _a) {
        var vars = _a.vars, style = _a.style;
        delete vars[key];
        delete style[key];
    },
    /**
     * Ensure that HTML and Framer-specific value types like `px`->`%` and `Color`
     * can be animated by Motion.
     */
    makeTargetAnimatable: function (element, _a, _b, isMounted) {
        var transformValues = _b.transformValues;
        if (isMounted === void 0) { isMounted = true; }
        var transition = _a.transition, transitionEnd = _a.transitionEnd, target = tslib.__rest(_a, ["transition", "transitionEnd"]);
        var origin = getOrigin(target, transition || {}, element);
        /**
         * If Framer has provided a function to convert `Color` etc value types, convert them
         */
        if (transformValues) {
            if (transitionEnd)
                transitionEnd = transformValues(transitionEnd);
            if (target)
                target = transformValues(target);
            if (origin)
                origin = transformValues(origin);
        }
        if (isMounted) {
            checkTargetForNewValues(element, target, origin);
            var parsed = parseDomVariant(element, target, origin, transitionEnd);
            transitionEnd = parsed.transitionEnd;
            target = parsed.target;
        }
        return tslib.__assign({ transition: transition, transitionEnd: transitionEnd }, target);
    },
    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps$1,
    build: function (element, renderState, latestValues, options, props) {
        if (element.isVisible !== undefined) {
            renderState.style.visibility = element.isVisible
                ? "visible"
                : "hidden";
        }
        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);
    },
    render: renderHTML,
};
var htmlVisualElement = visualElement(htmlConfig);

var svgVisualElement = visualElement(tslib.__assign(tslib.__assign({}, htmlConfig), { getBaseTarget: function (props, key) {
        return props[key];
    }, readValueFromInstance: function (domElement, key) {
        var _a;
        if (isTransformProp(key)) {
            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;
        }
        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;
        return domElement.getAttribute(key);
    }, scrapeMotionValuesFromProps: scrapeMotionValuesFromProps, build: function (_element, renderState, latestValues, options, props) {
        buildSVGAttrs(renderState, latestValues, options, props.transformTemplate);
    }, render: renderSVG }));

var createDomVisualElement = function (Component, options) {
    return isSVGComponent(Component)
        ? svgVisualElement(options, { enableHardwareAcceleration: false })
        : htmlVisualElement(options, { enableHardwareAcceleration: true });
};

function pixelsToPercent(pixels, axis) {
    if (axis.max === axis.min)
        return 0;
    return (pixels / (axis.max - axis.min)) * 100;
}
/**
 * We always correct borderRadius as a percentage rather than pixels to reduce paints.
 * For example, if you are projecting a box that is 100px wide with a 10px borderRadius
 * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%
 * borderRadius in both states. If we animate between the two in pixels that will trigger
 * a paint each time. If we animate between the two in percentage we'll avoid a paint.
 */
var correctBorderRadius = {
    correct: function (latest, node) {
        if (!node.target)
            return latest;
        /**
         * If latest is a string, if it's a percentage we can return immediately as it's
         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.
         */
        if (typeof latest === "string") {
            if (styleValueTypes.px.test(latest)) {
                latest = parseFloat(latest);
            }
            else {
                return latest;
            }
        }
        /**
         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that
         * pixel value as a percentage of each axis
         */
        var x = pixelsToPercent(latest, node.target.x);
        var y = pixelsToPercent(latest, node.target.y);
        return "".concat(x, "% ").concat(y, "%");
    },
};

var varToken = "_$css";
var correctBoxShadow = {
    correct: function (latest, _a) {
        var treeScale = _a.treeScale, projectionDelta = _a.projectionDelta;
        var original = latest;
        /**
         * We need to first strip and store CSS variables from the string.
         */
        var containsCSSVariables = latest.includes("var(");
        var cssVariables = [];
        if (containsCSSVariables) {
            latest = latest.replace(cssVariableRegex, function (match) {
                cssVariables.push(match);
                return varToken;
            });
        }
        var shadow = styleValueTypes.complex.parse(latest);
        // TODO: Doesn't support multiple shadows
        if (shadow.length > 5)
            return original;
        var template = styleValueTypes.complex.createTransformer(latest);
        var offset = typeof shadow[0] !== "number" ? 1 : 0;
        // Calculate the overall context scale
        var xScale = projectionDelta.x.scale * treeScale.x;
        var yScale = projectionDelta.y.scale * treeScale.y;
        shadow[0 + offset] /= xScale;
        shadow[1 + offset] /= yScale;
        /**
         * Ideally we'd correct x and y scales individually, but because blur and
         * spread apply to both we have to take a scale average and apply that instead.
         * We could potentially improve the outcome of this by incorporating the ratio between
         * the two scales.
         */
        var averageScale = popmotion.mix(xScale, yScale, 0.5);
        // Blur
        if (typeof shadow[2 + offset] === "number")
            shadow[2 + offset] /= averageScale;
        // Spread
        if (typeof shadow[3 + offset] === "number")
            shadow[3 + offset] /= averageScale;
        var output = template(shadow);
        if (containsCSSVariables) {
            var i_1 = 0;
            output = output.replace(varToken, function () {
                var cssVariable = cssVariables[i_1];
                i_1++;
                return cssVariable;
            });
        }
        return output;
    },
};

var MeasureLayoutWithContext = /** @class */ (function (_super) {
    tslib.__extends(MeasureLayoutWithContext, _super);
    function MeasureLayoutWithContext() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * This only mounts projection nodes for components that
     * need measuring, we might want to do it for all components
     * in order to incorporate transforms
     */
    MeasureLayoutWithContext.prototype.componentDidMount = function () {
        var _this = this;
        var _a = this.props, visualElement = _a.visualElement, layoutGroup = _a.layoutGroup, switchLayoutGroup = _a.switchLayoutGroup, layoutId = _a.layoutId;
        var projection = visualElement.projection;
        addScaleCorrector(defaultScaleCorrectors);
        if (projection) {
            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)
                layoutGroup.group.add(projection);
            if ((switchLayoutGroup === null || switchLayoutGroup === void 0 ? void 0 : switchLayoutGroup.register) && layoutId) {
                switchLayoutGroup.register(projection);
            }
            projection.root.didUpdate();
            projection.addEventListener("animationComplete", function () {
                _this.safeToRemove();
            });
            projection.setOptions(tslib.__assign(tslib.__assign({}, projection.options), { onExitComplete: function () { return _this.safeToRemove(); } }));
        }
        globalProjectionState.hasEverUpdated = true;
    };
    MeasureLayoutWithContext.prototype.getSnapshotBeforeUpdate = function (prevProps) {
        var _this = this;
        var _a = this.props, layoutDependency = _a.layoutDependency, visualElement = _a.visualElement, drag = _a.drag, isPresent = _a.isPresent;
        var projection = visualElement.projection;
        if (!projection)
            return null;
        /**
         * TODO: We use this data in relegate to determine whether to
         * promote a previous element. There's no guarantee its presence data
         * will have updated by this point - if a bug like this arises it will
         * have to be that we markForRelegation and then find a new lead some other way,
         * perhaps in didUpdate
         */
        projection.isPresent = isPresent;
        if (drag ||
            prevProps.layoutDependency !== layoutDependency ||
            layoutDependency === undefined) {
            projection.willUpdate();
        }
        else {
            this.safeToRemove();
        }
        if (prevProps.isPresent !== isPresent) {
            if (isPresent) {
                projection.promote();
            }
            else if (!projection.relegate()) {
                /**
                 * If there's another stack member taking over from this one,
                 * it's in charge of the exit animation and therefore should
                 * be in charge of the safe to remove. Otherwise we call it here.
                 */
                sync__default["default"].postRender(function () {
                    var _a;
                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {
                        _this.safeToRemove();
                    }
                });
            }
        }
        return null;
    };
    MeasureLayoutWithContext.prototype.componentDidUpdate = function () {
        var projection = this.props.visualElement.projection;
        if (projection) {
            projection.root.didUpdate();
            if (!projection.currentAnimation && projection.isLead()) {
                this.safeToRemove();
            }
        }
    };
    MeasureLayoutWithContext.prototype.componentWillUnmount = function () {
        var _a = this.props, visualElement = _a.visualElement, layoutGroup = _a.layoutGroup, promoteContext = _a.switchLayoutGroup;
        var projection = visualElement.projection;
        if (projection) {
            projection.scheduleCheckAfterUnmount();
            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)
                layoutGroup.group.remove(projection);
            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)
                promoteContext.deregister(projection);
        }
    };
    MeasureLayoutWithContext.prototype.safeToRemove = function () {
        var safeToRemove = this.props.safeToRemove;
        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();
    };
    MeasureLayoutWithContext.prototype.render = function () {
        return null;
    };
    return MeasureLayoutWithContext;
}(React__default["default"].Component));
function MeasureLayout(props) {
    var _a = tslib.__read(usePresence(), 2), isPresent = _a[0], safeToRemove = _a[1];
    var layoutGroup = React.useContext(LayoutGroupContext);
    return (React__default["default"].createElement(MeasureLayoutWithContext, tslib.__assign({}, props, { layoutGroup: layoutGroup, switchLayoutGroup: React.useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove })));
}
var defaultScaleCorrectors = {
    borderRadius: tslib.__assign(tslib.__assign({}, correctBorderRadius), { applyTo: [
            "borderTopLeftRadius",
            "borderTopRightRadius",
            "borderBottomLeftRadius",
            "borderBottomRightRadius",
        ] }),
    borderTopLeftRadius: correctBorderRadius,
    borderTopRightRadius: correctBorderRadius,
    borderBottomLeftRadius: correctBorderRadius,
    borderBottomRightRadius: correctBorderRadius,
    boxShadow: correctBoxShadow,
};

var layoutFeatures = {
    measureLayout: MeasureLayout,
};

/**
 * Animate a single value or a `MotionValue`.
 *
 * The first argument is either a `MotionValue` to animate, or an initial animation value.
 *
 * The second is either a value to animate to, or an array of keyframes to animate through.
 *
 * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.
 *
 * Returns `AnimationPlaybackControls`, currently just a `stop` method.
 *
 * ```javascript
 * const x = useMotionValue(0)
 *
 * useEffect(() => {
 *   const controls = animate(x, 100, {
 *     type: "spring",
 *     stiffness: 2000,
 *     onComplete: v => {}
 *   })
 *
 *   return controls.stop
 * })
 * ```
 *
 * @public
 */
function animate(from, to, transition) {
    if (transition === void 0) { transition = {}; }
    var value = isMotionValue(from) ? from : motionValue(from);
    startAnimation("", value, to, transition);
    return {
        stop: function () { return value.stop(); },
        isAnimating: function () { return value.isAnimating(); },
    };
}

var borders = ["TopLeft", "TopRight", "BottomLeft", "BottomRight"];
var numBorders = borders.length;
var asNumber = function (value) {
    return typeof value === "string" ? parseFloat(value) : value;
};
var isPx = function (value) {
    return typeof value === "number" || styleValueTypes.px.test(value);
};
function mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {
    var _a, _b, _c, _d;
    if (shouldCrossfadeOpacity) {
        target.opacity = popmotion.mix(0, 
        // (follow?.opacity as number) ?? 0,
        // TODO Reinstate this if only child
        (_a = lead.opacity) !== null && _a !== void 0 ? _a : 1, easeCrossfadeIn(progress));
        target.opacityExit = popmotion.mix((_b = follow.opacity) !== null && _b !== void 0 ? _b : 1, 0, easeCrossfadeOut(progress));
    }
    else if (isOnlyMember) {
        target.opacity = popmotion.mix((_c = follow.opacity) !== null && _c !== void 0 ? _c : 1, (_d = lead.opacity) !== null && _d !== void 0 ? _d : 1, progress);
    }
    /**
     * Mix border radius
     */
    for (var i = 0; i < numBorders; i++) {
        var borderLabel = "border".concat(borders[i], "Radius");
        var followRadius = getRadius(follow, borderLabel);
        var leadRadius = getRadius(lead, borderLabel);
        if (followRadius === undefined && leadRadius === undefined)
            continue;
        followRadius || (followRadius = 0);
        leadRadius || (leadRadius = 0);
        var canMix = followRadius === 0 ||
            leadRadius === 0 ||
            isPx(followRadius) === isPx(leadRadius);
        if (canMix) {
            target[borderLabel] = Math.max(popmotion.mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);
            if (styleValueTypes.percent.test(leadRadius) || styleValueTypes.percent.test(followRadius)) {
                target[borderLabel] += "%";
            }
        }
        else {
            target[borderLabel] = leadRadius;
        }
    }
    /**
     * Mix rotation
     */
    if (follow.rotate || lead.rotate) {
        target.rotate = popmotion.mix(follow.rotate || 0, lead.rotate || 0, progress);
    }
}
function getRadius(values, radiusName) {
    var _a;
    return (_a = values[radiusName]) !== null && _a !== void 0 ? _a : values.borderRadius;
}
// /**
//  * We only want to mix the background color if there's a follow element
//  * that we're not crossfading opacity between. For instance with switch
//  * AnimateSharedLayout animations, this helps the illusion of a continuous
//  * element being animated but also cuts down on the number of paints triggered
//  * for elements where opacity is doing that work for us.
//  */
// if (
//     !hasFollowElement &&
//     latestLeadValues.backgroundColor &&
//     latestFollowValues.backgroundColor
// ) {
//     /**
//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.
//      * We could probably create a mixer that runs at the start of the animation but
//      * the idea behind the crossfader is that it runs dynamically between two potentially
//      * changing targets (ie opacity or borderRadius may be animating independently via variants)
//      */
//     leadState.backgroundColor = followState.backgroundColor = mixColor(
//         latestFollowValues.backgroundColor as string,
//         latestLeadValues.backgroundColor as string
//     )(p)
// }
var easeCrossfadeIn = compress(0, 0.5, popmotion.circOut);
var easeCrossfadeOut = compress(0.5, 0.95, popmotion.linear);
function compress(min, max, easing) {
    return function (p) {
        // Could replace ifs with clamp
        if (p < min)
            return 0;
        if (p > max)
            return 1;
        return easing(popmotion.progress(min, max, p));
    };
}

/**
 * Reset an axis to the provided origin box.
 *
 * This is a mutative operation.
 */
function copyAxisInto(axis, originAxis) {
    axis.min = originAxis.min;
    axis.max = originAxis.max;
}
/**
 * Reset a box to the provided origin box.
 *
 * This is a mutative operation.
 */
function copyBoxInto(box, originBox) {
    copyAxisInto(box.x, originBox.x);
    copyAxisInto(box.y, originBox.y);
}

/**
 * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse
 */
function removePointDelta(point, translate, scale, originPoint, boxScale) {
    point -= translate;
    point = scalePoint(point, 1 / scale, originPoint);
    if (boxScale !== undefined) {
        point = scalePoint(point, 1 / boxScale, originPoint);
    }
    return point;
}
/**
 * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse
 */
function removeAxisDelta(axis, translate, scale, origin, boxScale, originAxis, sourceAxis) {
    if (translate === void 0) { translate = 0; }
    if (scale === void 0) { scale = 1; }
    if (origin === void 0) { origin = 0.5; }
    if (originAxis === void 0) { originAxis = axis; }
    if (sourceAxis === void 0) { sourceAxis = axis; }
    if (styleValueTypes.percent.test(translate)) {
        translate = parseFloat(translate);
        var relativeProgress = popmotion.mix(sourceAxis.min, sourceAxis.max, translate / 100);
        translate = relativeProgress - sourceAxis.min;
    }
    if (typeof translate !== "number")
        return;
    var originPoint = popmotion.mix(originAxis.min, originAxis.max, origin);
    if (axis === originAxis)
        originPoint -= translate;
    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);
    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);
}
/**
 * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse
 * and acts as a bridge between motion values and removeAxisDelta
 */
function removeAxisTransforms(axis, transforms, _a, origin, sourceAxis) {
    var _b = tslib.__read(_a, 3), key = _b[0], scaleKey = _b[1], originKey = _b[2];
    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);
}
/**
 * The names of the motion values we want to apply as translation, scale and origin.
 */
var xKeys = ["x", "scaleX", "originX"];
var yKeys = ["y", "scaleY", "originY"];
/**
 * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse
 * and acts as a bridge between motion values and removeAxisDelta
 */
function removeBoxTransforms(box, transforms, originBox, sourceBox) {
    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);
    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);
}

function isAxisDeltaZero(delta) {
    return delta.translate === 0 && delta.scale === 1;
}
function isDeltaZero(delta) {
    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);
}
function boxEquals(a, b) {
    return (a.x.min === b.x.min &&
        a.x.max === b.x.max &&
        a.y.min === b.y.min &&
        a.y.max === b.y.max);
}

var NodeStack = /** @class */ (function () {
    function NodeStack() {
        this.members = [];
    }
    NodeStack.prototype.add = function (node) {
        addUniqueItem(this.members, node);
        node.scheduleRender();
    };
    NodeStack.prototype.remove = function (node) {
        removeItem(this.members, node);
        if (node === this.prevLead) {
            this.prevLead = undefined;
        }
        if (node === this.lead) {
            var prevLead = this.members[this.members.length - 1];
            if (prevLead) {
                this.promote(prevLead);
            }
        }
    };
    NodeStack.prototype.relegate = function (node) {
        var indexOfNode = this.members.findIndex(function (member) { return node === member; });
        if (indexOfNode === 0)
            return false;
        /**
         * Find the next projection node that is present
         */
        var prevLead;
        for (var i = indexOfNode; i >= 0; i--) {
            var member = this.members[i];
            if (member.isPresent !== false) {
                prevLead = member;
                break;
            }
        }
        if (prevLead) {
            this.promote(prevLead);
            return true;
        }
        else {
            return false;
        }
    };
    NodeStack.prototype.promote = function (node, preserveFollowOpacity) {
        var _a;
        var prevLead = this.lead;
        if (node === prevLead)
            return;
        this.prevLead = prevLead;
        this.lead = node;
        node.show();
        if (prevLead) {
            prevLead.instance && prevLead.scheduleRender();
            node.scheduleRender();
            node.resumeFrom = prevLead;
            if (preserveFollowOpacity) {
                node.resumeFrom.preserveOpacity = true;
            }
            if (prevLead.snapshot) {
                node.snapshot = prevLead.snapshot;
                node.snapshot.latestValues =
                    prevLead.animationValues || prevLead.latestValues;
                node.snapshot.isShared = true;
            }
            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {
                node.isLayoutDirty = true;
            }
            var crossfade = node.options.crossfade;
            if (crossfade === false) {
                prevLead.hide();
            }
            /**
             * TODO:
             *   - Test border radius when previous node was deleted
             *   - boxShadow mixing
             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)
             *   - Shared between element A in transformed container and element B (transform stays the same or changes)
             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)
             * ---
             *   - Crossfade opacity of root nodes
             *   - layoutId changes after animation
             *   - layoutId changes mid animation
             */
        }
    };
    NodeStack.prototype.exitAnimationComplete = function () {
        this.members.forEach(function (node) {
            var _a, _b, _c, _d, _e;
            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);
            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);
        });
    };
    NodeStack.prototype.scheduleRender = function () {
        this.members.forEach(function (node) {
            node.instance && node.scheduleRender(false);
        });
    };
    /**
     * Clear any leads that have been removed this render to prevent them from being
     * used in future animations and to prevent memory leaks
     */
    NodeStack.prototype.removeLeadSnapshot = function () {
        if (this.lead && this.lead.snapshot) {
            this.lead.snapshot = undefined;
        }
    };
    return NodeStack;
}());

var identityProjection = "translate3d(0px, 0px, 0) scale(1, 1) scale(1, 1)";
function buildProjectionTransform(delta, treeScale, latestTransform) {
    /**
     * The translations we use to calculate are always relative to the viewport coordinate space.
     * But when we apply scales, we also scale the coordinate space of an element and its children.
     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need
     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.
     */
    var xTranslate = delta.x.translate / treeScale.x;
    var yTranslate = delta.y.translate / treeScale.y;
    var transform = "translate3d(".concat(xTranslate, "px, ").concat(yTranslate, "px, 0) ");
    /**
     * Apply scale correction for the tree transform.
     * This will apply scale to the screen-orientated axes.
     */
    transform += "scale(".concat(1 / treeScale.x, ", ").concat(1 / treeScale.y, ") ");
    if (latestTransform) {
        var rotate = latestTransform.rotate, rotateX = latestTransform.rotateX, rotateY = latestTransform.rotateY;
        if (rotate)
            transform += "rotate(".concat(rotate, "deg) ");
        if (rotateX)
            transform += "rotateX(".concat(rotateX, "deg) ");
        if (rotateY)
            transform += "rotateY(".concat(rotateY, "deg) ");
    }
    /**
     * Apply scale to match the size of the element to the size we want it.
     * This will apply scale to the element-orientated axes.
     */
    var elementScaleX = delta.x.scale * treeScale.x;
    var elementScaleY = delta.y.scale * treeScale.y;
    transform += "scale(".concat(elementScaleX, ", ").concat(elementScaleY, ")");
    return transform === identityProjection ? "none" : transform;
}

var compareByDepth = function (a, b) {
    return a.depth - b.depth;
};

var FlatTree = /** @class */ (function () {
    function FlatTree() {
        this.children = [];
        this.isDirty = false;
    }
    FlatTree.prototype.add = function (child) {
        addUniqueItem(this.children, child);
        this.isDirty = true;
    };
    FlatTree.prototype.remove = function (child) {
        removeItem(this.children, child);
        this.isDirty = true;
    };
    FlatTree.prototype.forEach = function (callback) {
        this.isDirty && this.children.sort(compareByDepth);
        this.isDirty = false;
        this.children.forEach(callback);
    };
    return FlatTree;
}());

/**
 * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1
 * which has a noticeable difference in spring animations
 */
var animationTarget = 1000;
function createProjectionNode(_a) {
    var attachResizeListener = _a.attachResizeListener, defaultParent = _a.defaultParent, measureScroll = _a.measureScroll, checkIsScrollRoot = _a.checkIsScrollRoot, resetTransform = _a.resetTransform;
    return /** @class */ (function () {
        function ProjectionNode(id, latestValues, parent) {
            var _this = this;
            if (latestValues === void 0) { latestValues = {}; }
            if (parent === void 0) { parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent(); }
            /**
             * A Set containing all this component's children. This is used to iterate
             * through the children.
             *
             * TODO: This could be faster to iterate as a flat array stored on the root node.
             */
            this.children = new Set();
            /**
             * Options for the node. We use this to configure what kind of layout animations
             * we should perform (if any).
             */
            this.options = {};
            /**
             * We use this to detect when its safe to shut down part of a projection tree.
             * We have to keep projecting children for scale correction and relative projection
             * until all their parents stop performing layout animations.
             */
            this.isTreeAnimating = false;
            this.isAnimationBlocked = false;
            /**
             * Flag to true if we think this layout has been changed. We can't always know this,
             * currently we set it to true every time a component renders, or if it has a layoutDependency
             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup
             * and if one node is dirtied, they all are.
             */
            this.isLayoutDirty = false;
            /**
             * Block layout updates for instant layout transitions throughout the tree.
             */
            this.updateManuallyBlocked = false;
            this.updateBlockedByResize = false;
            /**
             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`
             * call.
             */
            this.isUpdating = false;
            /**
             * If this is an SVG element we currently disable projection transforms
             */
            this.isSVG = false;
            /**
             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset
             * its projection styles.
             */
            this.needsReset = false;
            /**
             * Flags whether this node should have its transform reset prior to measuring.
             */
            this.shouldResetTransform = false;
            /**
             * An object representing the calculated contextual/accumulated/tree scale.
             * This will be used to scale calculcated projection transforms, as these are
             * calculated in screen-space but need to be scaled for elements to actually
             * make it to their calculated destinations.
             *
             * TODO: Lazy-init
             */
            this.treeScale = { x: 1, y: 1 };
            /**
             *
             */
            this.eventHandlers = new Map();
            // Note: Currently only running on root node
            this.potentialNodes = new Map();
            this.checkUpdateFailed = function () {
                if (_this.isUpdating) {
                    _this.isUpdating = false;
                    _this.clearAllSnapshots();
                }
            };
            this.updateProjection = function () {
                _this.nodes.forEach(resolveTargetDelta);
                _this.nodes.forEach(calcProjection);
            };
            this.hasProjected = false;
            this.isVisible = true;
            this.animationProgress = 0;
            /**
             * Shared layout
             */
            // TODO Only running on root node
            this.sharedNodes = new Map();
            this.id = id;
            this.latestValues = latestValues;
            this.root = parent ? parent.root || parent : this;
            this.path = parent ? tslib.__spreadArray(tslib.__spreadArray([], tslib.__read(parent.path), false), [parent], false) : [];
            this.parent = parent;
            this.depth = parent ? parent.depth + 1 : 0;
            id && this.root.registerPotentialNode(id, this);
            for (var i = 0; i < this.path.length; i++) {
                this.path[i].shouldResetTransform = true;
            }
            if (this.root === this)
                this.nodes = new FlatTree();
        }
        ProjectionNode.prototype.addEventListener = function (name, handler) {
            if (!this.eventHandlers.has(name)) {
                this.eventHandlers.set(name, new SubscriptionManager());
            }
            return this.eventHandlers.get(name).add(handler);
        };
        ProjectionNode.prototype.notifyListeners = function (name) {
            var args = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                args[_i - 1] = arguments[_i];
            }
            var subscriptionManager = this.eventHandlers.get(name);
            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify.apply(subscriptionManager, tslib.__spreadArray([], tslib.__read(args), false));
        };
        ProjectionNode.prototype.hasListeners = function (name) {
            return this.eventHandlers.has(name);
        };
        ProjectionNode.prototype.registerPotentialNode = function (id, node) {
            this.potentialNodes.set(id, node);
        };
        /**
         * Lifecycles
         */
        ProjectionNode.prototype.mount = function (instance, isLayoutDirty) {
            var _this = this;
            var _a;
            if (isLayoutDirty === void 0) { isLayoutDirty = false; }
            if (this.instance)
                return;
            this.isSVG =
                instance instanceof SVGElement && instance.tagName !== "svg";
            this.instance = instance;
            var _b = this.options, layoutId = _b.layoutId, layout = _b.layout, visualElement = _b.visualElement;
            if (visualElement && !visualElement.getInstance()) {
                visualElement.mount(instance);
            }
            this.root.nodes.add(this);
            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);
            this.id && this.root.potentialNodes.delete(this.id);
            if (isLayoutDirty && (layout || layoutId)) {
                this.isLayoutDirty = true;
            }
            if (attachResizeListener) {
                var unblockTimeout_1;
                var resizeUnblockUpdate_1 = function () {
                    return (_this.root.updateBlockedByResize = false);
                };
                attachResizeListener(instance, function () {
                    _this.root.updateBlockedByResize = true;
                    clearTimeout(unblockTimeout_1);
                    unblockTimeout_1 = window.setTimeout(resizeUnblockUpdate_1, 250);
                    if (globalProjectionState.hasAnimatedSinceResize) {
                        globalProjectionState.hasAnimatedSinceResize = false;
                        _this.nodes.forEach(finishAnimation);
                    }
                });
            }
            if (layoutId) {
                this.root.registerSharedNode(layoutId, this);
            }
            // Only register the handler if it requires layout animation
            if (this.options.animate !== false &&
                visualElement &&
                (layoutId || layout)) {
                this.addEventListener("didUpdate", function (_a) {
                    var _b, _c, _d, _e, _f;
                    var delta = _a.delta, hasLayoutChanged = _a.hasLayoutChanged, hasRelativeTargetChanged = _a.hasRelativeTargetChanged, newLayout = _a.layout;
                    if (_this.isTreeAnimationBlocked()) {
                        _this.target = undefined;
                        _this.relativeTarget = undefined;
                        return;
                    }
                    // TODO: Check here if an animation exists
                    var layoutTransition = (_c = (_b = _this.options.transition) !== null && _b !== void 0 ? _b : visualElement.getDefaultTransition()) !== null && _c !== void 0 ? _c : defaultLayoutTransition;
                    var _g = visualElement.getProps(), onLayoutAnimationStart = _g.onLayoutAnimationStart, onLayoutAnimationComplete = _g.onLayoutAnimationComplete;
                    /**
                     * The target layout of the element might stay the same,
                     * but its position relative to its parent has changed.
                     */
                    var targetChanged = !_this.targetLayout ||
                        !boxEquals(_this.targetLayout, newLayout) ||
                        hasRelativeTargetChanged;
                    /**
                     * If the layout hasn't seemed to have changed, it might be that the
                     * element is visually in the same place in the document but its position
                     * relative to its parent has indeed changed. So here we check for that.
                     */
                    var hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;
                    if (((_d = _this.resumeFrom) === null || _d === void 0 ? void 0 : _d.instance) ||
                        hasOnlyRelativeTargetChanged ||
                        (hasLayoutChanged &&
                            (targetChanged || !_this.currentAnimation))) {
                        if (_this.resumeFrom) {
                            _this.resumingFrom = _this.resumeFrom;
                            _this.resumingFrom.resumingFrom = undefined;
                        }
                        _this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);
                        var animationOptions = tslib.__assign(tslib.__assign({}, getValueTransition(layoutTransition, "layout")), { onPlay: onLayoutAnimationStart, onComplete: onLayoutAnimationComplete });
                        if (visualElement.shouldReduceMotion) {
                            animationOptions.delay = 0;
                            animationOptions.type = false;
                        }
                        _this.startAnimation(animationOptions);
                    }
                    else {
                        /**
                         * If the layout hasn't changed and we have an animation that hasn't started yet,
                         * finish it immediately. Otherwise it will be animating from a location
                         * that was probably never commited to screen and look like a jumpy box.
                         */
                        if (!hasLayoutChanged &&
                            _this.animationProgress === 0) {
                            _this.finishAnimation();
                        }
                        _this.isLead() && ((_f = (_e = _this.options).onExitComplete) === null || _f === void 0 ? void 0 : _f.call(_e));
                    }
                    _this.targetLayout = newLayout;
                });
            }
        };
        ProjectionNode.prototype.unmount = function () {
            var _a, _b;
            this.options.layoutId && this.willUpdate();
            this.root.nodes.remove(this);
            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);
            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);
            this.instance = undefined;
            sync.cancelSync.preRender(this.updateProjection);
        };
        // only on the root
        ProjectionNode.prototype.blockUpdate = function () {
            this.updateManuallyBlocked = true;
        };
        ProjectionNode.prototype.unblockUpdate = function () {
            this.updateManuallyBlocked = false;
        };
        ProjectionNode.prototype.isUpdateBlocked = function () {
            return this.updateManuallyBlocked || this.updateBlockedByResize;
        };
        ProjectionNode.prototype.isTreeAnimationBlocked = function () {
            var _a;
            return (this.isAnimationBlocked ||
                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||
                false);
        };
        // Note: currently only running on root node
        ProjectionNode.prototype.startUpdate = function () {
            var _a;
            if (this.isUpdateBlocked())
                return;
            this.isUpdating = true;
            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);
        };
        ProjectionNode.prototype.willUpdate = function (shouldNotifyListeners) {
            var _a, _b, _c;
            if (shouldNotifyListeners === void 0) { shouldNotifyListeners = true; }
            if (this.root.isUpdateBlocked()) {
                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);
                return;
            }
            !this.root.isUpdating && this.root.startUpdate();
            if (this.isLayoutDirty)
                return;
            this.isLayoutDirty = true;
            for (var i = 0; i < this.path.length; i++) {
                var node = this.path[i];
                node.shouldResetTransform = true;
                /**
                 * TODO: Check we haven't updated the scroll
                 * since the last didUpdate
                 */
                node.updateScroll();
            }
            var _d = this.options, layoutId = _d.layoutId, layout = _d.layout;
            if (layoutId === undefined && !layout)
                return;
            var transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;
            this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, "");
            this.updateSnapshot();
            shouldNotifyListeners && this.notifyListeners("willUpdate");
        };
        // Note: Currently only running on root node
        ProjectionNode.prototype.didUpdate = function () {
            var updateWasBlocked = this.isUpdateBlocked();
            // When doing an instant transition, we skip the layout update,
            // but should still clean up the measurements so that the next
            // snapshot could be taken correctly.
            if (updateWasBlocked) {
                this.unblockUpdate();
                this.clearAllSnapshots();
                this.nodes.forEach(clearMeasurements);
                return;
            }
            if (!this.isUpdating)
                return;
            this.isUpdating = false;
            /**
             * Search for and mount newly-added projection elements.
             *
             * TODO: Every time a new component is rendered we could search up the tree for
             * the closest mounted node and query from there rather than document.
             */
            if (this.potentialNodes.size) {
                this.potentialNodes.forEach(mountNodeEarly);
                this.potentialNodes.clear();
            }
            /**
             * Write
             */
            this.nodes.forEach(resetTransformStyle);
            /**
             * Read ==================
             */
            // Update layout measurements of updated children
            this.nodes.forEach(updateLayout);
            /**
             * Write
             */
            // Notify listeners that the layout is updated
            this.nodes.forEach(notifyLayoutUpdate);
            this.clearAllSnapshots();
            // Flush any scheduled updates
            sync.flushSync.update();
            sync.flushSync.preRender();
            sync.flushSync.render();
        };
        ProjectionNode.prototype.clearAllSnapshots = function () {
            this.nodes.forEach(clearSnapshot);
            this.sharedNodes.forEach(removeLeadSnapshots);
        };
        ProjectionNode.prototype.scheduleUpdateProjection = function () {
            sync__default["default"].preRender(this.updateProjection, false, true);
        };
        ProjectionNode.prototype.scheduleCheckAfterUnmount = function () {
            var _this = this;
            /**
             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,
             * we manually call didUpdate to give a chance to the siblings to animate.
             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.
             */
            sync__default["default"].postRender(function () {
                if (_this.isLayoutDirty) {
                    _this.root.didUpdate();
                }
                else {
                    _this.root.checkUpdateFailed();
                }
            });
        };
        /**
         * Update measurements
         */
        ProjectionNode.prototype.updateSnapshot = function () {
            if (this.snapshot || !this.instance)
                return;
            var measured = this.measure();
            var layout = this.removeTransform(this.removeElementScroll(measured));
            roundBox(layout);
            this.snapshot = {
                measured: measured,
                layout: layout,
                latestValues: {},
            };
        };
        ProjectionNode.prototype.updateLayout = function () {
            var _a;
            if (!this.instance)
                return;
            // TODO: Incorporate into a forwarded scroll offset
            this.updateScroll();
            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&
                !this.isLayoutDirty) {
                return;
            }
            /**
             * When a node is mounted, it simply resumes from the prevLead's
             * snapshot instead of taking a new one, but the ancestors scroll
             * might have updated while the prevLead is unmounted. We need to
             * update the scroll again to make sure the layout we measure is
             * up to date.
             */
            if (this.resumeFrom && !this.resumeFrom.instance) {
                for (var i = 0; i < this.path.length; i++) {
                    var node = this.path[i];
                    node.updateScroll();
                }
            }
            var measured = this.measure();
            roundBox(measured);
            var prevLayout = this.layout;
            this.layout = {
                measured: measured,
                actual: this.removeElementScroll(measured),
            };
            this.layoutCorrected = createBox();
            this.isLayoutDirty = false;
            this.projectionDelta = undefined;
            this.notifyListeners("measure", this.layout.actual);
            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notifyLayoutMeasure(this.layout.actual, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.actual);
        };
        ProjectionNode.prototype.updateScroll = function () {
            if (this.options.layoutScroll && this.instance) {
                this.isScrollRoot = checkIsScrollRoot(this.instance);
                this.scroll = measureScroll(this.instance);
            }
        };
        ProjectionNode.prototype.resetTransform = function () {
            var _a;
            if (!resetTransform)
                return;
            var isResetRequested = this.isLayoutDirty || this.shouldResetTransform;
            var hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);
            var transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;
            var transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, "");
            var transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;
            if (isResetRequested &&
                (hasProjection ||
                    hasTransform(this.latestValues) ||
                    transformTemplateHasChanged)) {
                resetTransform(this.instance, transformTemplateValue);
                this.shouldResetTransform = false;
                this.scheduleRender();
            }
        };
        ProjectionNode.prototype.measure = function () {
            var visualElement = this.options.visualElement;
            if (!visualElement)
                return createBox();
            var box = visualElement.measureViewportBox();
            // Remove viewport scroll to give page-relative coordinates
            var scroll = this.root.scroll;
            if (scroll) {
                translateAxis(box.x, scroll.x);
                translateAxis(box.y, scroll.y);
            }
            return box;
        };
        ProjectionNode.prototype.removeElementScroll = function (box) {
            var boxWithoutScroll = createBox();
            copyBoxInto(boxWithoutScroll, box);
            /**
             * Performance TODO: Keep a cumulative scroll offset down the tree
             * rather than loop back up the path.
             */
            for (var i = 0; i < this.path.length; i++) {
                var node = this.path[i];
                var scroll_1 = node.scroll, options = node.options, isScrollRoot = node.isScrollRoot;
                if (node !== this.root && scroll_1 && options.layoutScroll) {
                    /**
                     * If this is a new scroll root, we want to remove all previous scrolls
                     * from the viewport box.
                     */
                    if (isScrollRoot) {
                        copyBoxInto(boxWithoutScroll, box);
                        var rootScroll = this.root.scroll;
                        /**
                         * Undo the application of page scroll that was originally added
                         * to the measured bounding box.
                         */
                        if (rootScroll) {
                            translateAxis(boxWithoutScroll.x, -rootScroll.x);
                            translateAxis(boxWithoutScroll.y, -rootScroll.y);
                        }
                    }
                    translateAxis(boxWithoutScroll.x, scroll_1.x);
                    translateAxis(boxWithoutScroll.y, scroll_1.y);
                }
            }
            return boxWithoutScroll;
        };
        ProjectionNode.prototype.applyTransform = function (box, transformOnly) {
            if (transformOnly === void 0) { transformOnly = false; }
            var withTransforms = createBox();
            copyBoxInto(withTransforms, box);
            for (var i = 0; i < this.path.length; i++) {
                var node = this.path[i];
                if (!transformOnly &&
                    node.options.layoutScroll &&
                    node.scroll &&
                    node !== node.root) {
                    transformBox(withTransforms, {
                        x: -node.scroll.x,
                        y: -node.scroll.y,
                    });
                }
                if (!hasTransform(node.latestValues))
                    continue;
                transformBox(withTransforms, node.latestValues);
            }
            if (hasTransform(this.latestValues)) {
                transformBox(withTransforms, this.latestValues);
            }
            return withTransforms;
        };
        ProjectionNode.prototype.removeTransform = function (box) {
            var _a;
            var boxWithoutTransform = createBox();
            copyBoxInto(boxWithoutTransform, box);
            for (var i = 0; i < this.path.length; i++) {
                var node = this.path[i];
                if (!node.instance)
                    continue;
                if (!hasTransform(node.latestValues))
                    continue;
                hasScale(node.latestValues) && node.updateSnapshot();
                var sourceBox = createBox();
                var nodeBox = node.measure();
                copyBoxInto(sourceBox, nodeBox);
                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layout, sourceBox);
            }
            if (hasTransform(this.latestValues)) {
                removeBoxTransforms(boxWithoutTransform, this.latestValues);
            }
            return boxWithoutTransform;
        };
        /**
         *
         */
        ProjectionNode.prototype.setTargetDelta = function (delta) {
            this.targetDelta = delta;
            this.root.scheduleUpdateProjection();
        };
        ProjectionNode.prototype.setOptions = function (options) {
            var _a;
            this.options = tslib.__assign(tslib.__assign(tslib.__assign({}, this.options), options), { crossfade: (_a = options.crossfade) !== null && _a !== void 0 ? _a : true });
        };
        ProjectionNode.prototype.clearMeasurements = function () {
            this.scroll = undefined;
            this.layout = undefined;
            this.snapshot = undefined;
            this.prevTransformTemplateValue = undefined;
            this.targetDelta = undefined;
            this.target = undefined;
            this.isLayoutDirty = false;
        };
        /**
         * Frame calculations
         */
        ProjectionNode.prototype.resolveTargetDelta = function () {
            var _a;
            var _b = this.options, layout = _b.layout, layoutId = _b.layoutId;
            /**
             * If we have no layout, we can't perform projection, so early return
             */
            if (!this.layout || !(layout || layoutId))
                return;
            /**
             * If we don't have a targetDelta but do have a layout, we can attempt to resolve
             * a relativeParent. This will allow a component to perform scale correction
             * even if no animation has started.
             */
            // TODO If this is unsuccessful this currently happens every frame
            if (!this.targetDelta && !this.relativeTarget) {
                // TODO: This is a semi-repetition of further down this function, make DRY
                this.relativeParent = this.getClosestProjectingParent();
                if (this.relativeParent && this.relativeParent.layout) {
                    this.relativeTarget = createBox();
                    this.relativeTargetOrigin = createBox();
                    calcRelativePosition(this.relativeTargetOrigin, this.layout.actual, this.relativeParent.layout.actual);
                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);
                }
            }
            /**
             * If we have no relative target or no target delta our target isn't valid
             * for this frame.
             */
            if (!this.relativeTarget && !this.targetDelta)
                return;
            /**
             * Lazy-init target data structure
             */
            if (!this.target) {
                this.target = createBox();
                this.targetWithTransforms = createBox();
            }
            /**
             * If we've got a relative box for this component, resolve it into a target relative to the parent.
             */
            if (this.relativeTarget &&
                this.relativeTargetOrigin &&
                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {
                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);
                /**
                 * If we've only got a targetDelta, resolve it into a target
                 */
            }
            else if (this.targetDelta) {
                if (Boolean(this.resumingFrom)) {
                    // TODO: This is creating a new object every frame
                    this.target = this.applyTransform(this.layout.actual);
                }
                else {
                    copyBoxInto(this.target, this.layout.actual);
                }
                applyBoxDelta(this.target, this.targetDelta);
            }
            else {
                /**
                 * If no target, use own layout as target
                 */
                copyBoxInto(this.target, this.layout.actual);
            }
            /**
             * If we've been told to attempt to resolve a relative target, do so.
             */
            if (this.attemptToResolveRelativeTarget) {
                this.attemptToResolveRelativeTarget = false;
                this.relativeParent = this.getClosestProjectingParent();
                if (this.relativeParent &&
                    Boolean(this.relativeParent.resumingFrom) ===
                        Boolean(this.resumingFrom) &&
                    !this.relativeParent.options.layoutScroll &&
                    this.relativeParent.target) {
                    this.relativeTarget = createBox();
                    this.relativeTargetOrigin = createBox();
                    calcRelativePosition(this.relativeTargetOrigin, this.target, this.relativeParent.target);
                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);
                }
            }
        };
        ProjectionNode.prototype.getClosestProjectingParent = function () {
            if (!this.parent || hasTransform(this.parent.latestValues))
                return undefined;
            if ((this.parent.relativeTarget || this.parent.targetDelta) &&
                this.parent.layout) {
                return this.parent;
            }
            else {
                return this.parent.getClosestProjectingParent();
            }
        };
        ProjectionNode.prototype.calcProjection = function () {
            var _a;
            var _b = this.options, layout = _b.layout, layoutId = _b.layoutId;
            /**
             * If this section of the tree isn't animating we can
             * delete our target sources for the following frame.
             */
            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||
                this.currentAnimation ||
                this.pendingAnimation);
            if (!this.isTreeAnimating) {
                this.targetDelta = this.relativeTarget = undefined;
            }
            if (!this.layout || !(layout || layoutId))
                return;
            var lead = this.getLead();
            /**
             * Reset the corrected box with the latest values from box, as we're then going
             * to perform mutative operations on it.
             */
            copyBoxInto(this.layoutCorrected, this.layout.actual);
            /**
             * Apply all the parent deltas to this box to produce the corrected box. This
             * is the layout box, as it will appear on screen as a result of the transforms of its parents.
             */
            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, Boolean(this.resumingFrom) || this !== lead);
            var target = lead.target;
            if (!target)
                return;
            if (!this.projectionDelta) {
                this.projectionDelta = createDelta();
                this.projectionDeltaWithTransform = createDelta();
            }
            var prevTreeScaleX = this.treeScale.x;
            var prevTreeScaleY = this.treeScale.y;
            var prevProjectionTransform = this.projectionTransform;
            /**
             * Update the delta between the corrected box and the target box before user-set transforms were applied.
             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate
             * for our layout reprojection, but still allow them to be scaled correctly by the user.
             * It might be that to simplify this we may want to accept that user-set scale is also corrected
             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting
             * to allow people to choose whether these styles are corrected based on just the
             * layout reprojection or the final bounding box.
             */
            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);
            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);
            if (this.projectionTransform !== prevProjectionTransform ||
                this.treeScale.x !== prevTreeScaleX ||
                this.treeScale.y !== prevTreeScaleY) {
                this.hasProjected = true;
                this.scheduleRender();
                this.notifyListeners("projectionUpdate", target);
            }
        };
        ProjectionNode.prototype.hide = function () {
            this.isVisible = false;
            // TODO: Schedule render
        };
        ProjectionNode.prototype.show = function () {
            this.isVisible = true;
            // TODO: Schedule render
        };
        ProjectionNode.prototype.scheduleRender = function (notifyAll) {
            var _a, _b, _c;
            if (notifyAll === void 0) { notifyAll = true; }
            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);
            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());
            if (this.resumingFrom && !this.resumingFrom.instance) {
                this.resumingFrom = undefined;
            }
        };
        ProjectionNode.prototype.setAnimationOrigin = function (delta, hasOnlyRelativeTargetChanged) {
            var _this = this;
            var _a;
            if (hasOnlyRelativeTargetChanged === void 0) { hasOnlyRelativeTargetChanged = false; }
            var snapshot = this.snapshot;
            var snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};
            var mixedValues = tslib.__assign({}, this.latestValues);
            var targetDelta = createDelta();
            this.relativeTarget = this.relativeTargetOrigin = undefined;
            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;
            var relativeLayout = createBox();
            var isSharedLayoutAnimation = snapshot === null || snapshot === void 0 ? void 0 : snapshot.isShared;
            var isOnlyMember = (((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.members.length) || 0) <= 1;
            var shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&
                !isOnlyMember &&
                this.options.crossfade === true &&
                !this.path.some(hasOpacityCrossfade));
            this.animationProgress = 0;
            this.mixTargetDelta = function (latest) {
                var _a;
                var progress = latest / 1000;
                mixAxisDelta(targetDelta.x, delta.x, progress);
                mixAxisDelta(targetDelta.y, delta.y, progress);
                _this.setTargetDelta(targetDelta);
                if (_this.relativeTarget &&
                    _this.relativeTargetOrigin &&
                    _this.layout &&
                    ((_a = _this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {
                    calcRelativePosition(relativeLayout, _this.layout.actual, _this.relativeParent.layout.actual);
                    mixBox(_this.relativeTarget, _this.relativeTargetOrigin, relativeLayout, progress);
                }
                if (isSharedLayoutAnimation) {
                    _this.animationValues = mixedValues;
                    mixValues(mixedValues, snapshotLatestValues, _this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);
                }
                _this.root.scheduleUpdateProjection();
                _this.scheduleRender();
                _this.animationProgress = progress;
            };
            this.mixTargetDelta(0);
        };
        ProjectionNode.prototype.startAnimation = function (options) {
            var _this = this;
            var _a, _b;
            this.notifyListeners("animationStart");
            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();
            if (this.resumingFrom) {
                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();
            }
            if (this.pendingAnimation) {
                sync.cancelSync.update(this.pendingAnimation);
                this.pendingAnimation = undefined;
            }
            /**
             * Start the animation in the next frame to have a frame with progress 0,
             * where the target is the same as when the animation started, so we can
             * calculate the relative positions correctly for instant transitions.
             */
            this.pendingAnimation = sync__default["default"].update(function () {
                globalProjectionState.hasAnimatedSinceResize = true;
                _this.currentAnimation = animate(0, animationTarget, tslib.__assign(tslib.__assign({}, options), { onUpdate: function (latest) {
                        var _a;
                        _this.mixTargetDelta(latest);
                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);
                    }, onComplete: function () {
                        var _a;
                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);
                        _this.completeAnimation();
                    } }));
                if (_this.resumingFrom) {
                    _this.resumingFrom.currentAnimation = _this.currentAnimation;
                }
                _this.pendingAnimation = undefined;
            });
        };
        ProjectionNode.prototype.completeAnimation = function () {
            var _a;
            if (this.resumingFrom) {
                this.resumingFrom.currentAnimation = undefined;
                this.resumingFrom.preserveOpacity = undefined;
            }
            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();
            this.resumingFrom =
                this.currentAnimation =
                    this.animationValues =
                        undefined;
            this.notifyListeners("animationComplete");
        };
        ProjectionNode.prototype.finishAnimation = function () {
            var _a;
            if (this.currentAnimation) {
                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);
                this.currentAnimation.stop();
            }
            this.completeAnimation();
        };
        ProjectionNode.prototype.applyTransformsToTarget = function () {
            var _a = this.getLead(), targetWithTransforms = _a.targetWithTransforms, target = _a.target, layout = _a.layout, latestValues = _a.latestValues;
            if (!targetWithTransforms || !target || !layout)
                return;
            copyBoxInto(targetWithTransforms, target);
            /**
             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.
             * This is the final box that we will then project into by calculating a transform delta and
             * applying it to the corrected box.
             */
            transformBox(targetWithTransforms, latestValues);
            /**
             * Update the delta between the corrected box and the final target box, after
             * user-set transforms are applied to it. This will be used by the renderer to
             * create a transform style that will reproject the element from its actual layout
             * into the desired bounding box.
             */
            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);
        };
        ProjectionNode.prototype.registerSharedNode = function (layoutId, node) {
            var _a, _b, _c;
            if (!this.sharedNodes.has(layoutId)) {
                this.sharedNodes.set(layoutId, new NodeStack());
            }
            var stack = this.sharedNodes.get(layoutId);
            stack.add(node);
            node.promote({
                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,
                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),
            });
        };
        ProjectionNode.prototype.isLead = function () {
            var stack = this.getStack();
            return stack ? stack.lead === this : true;
        };
        ProjectionNode.prototype.getLead = function () {
            var _a;
            var layoutId = this.options.layoutId;
            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;
        };
        ProjectionNode.prototype.getPrevLead = function () {
            var _a;
            var layoutId = this.options.layoutId;
            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;
        };
        ProjectionNode.prototype.getStack = function () {
            var layoutId = this.options.layoutId;
            if (layoutId)
                return this.root.sharedNodes.get(layoutId);
        };
        ProjectionNode.prototype.promote = function (_a) {
            var _b = _a === void 0 ? {} : _a, needsReset = _b.needsReset, transition = _b.transition, preserveFollowOpacity = _b.preserveFollowOpacity;
            var stack = this.getStack();
            if (stack)
                stack.promote(this, preserveFollowOpacity);
            if (needsReset) {
                this.projectionDelta = undefined;
                this.needsReset = true;
            }
            if (transition)
                this.setOptions({ transition: transition });
        };
        ProjectionNode.prototype.relegate = function () {
            var stack = this.getStack();
            if (stack) {
                return stack.relegate(this);
            }
            else {
                return false;
            }
        };
        ProjectionNode.prototype.resetRotation = function () {
            var visualElement = this.options.visualElement;
            if (!visualElement)
                return;
            // If there's no detected rotation values, we can early return without a forced render.
            var hasRotate = false;
            // Keep a record of all the values we've reset
            var resetValues = {};
            // Check the rotate value of all axes and reset to 0
            for (var i = 0; i < transformAxes.length; i++) {
                var axis = transformAxes[i];
                var key = "rotate" + axis;
                // If this rotation doesn't exist as a motion value, then we don't
                // need to reset it
                if (!visualElement.getStaticValue(key)) {
                    continue;
                }
                hasRotate = true;
                // Record the rotation and then temporarily set it to 0
                resetValues[key] = visualElement.getStaticValue(key);
                visualElement.setStaticValue(key, 0);
            }
            // If there's no rotation values, we don't need to do any more.
            if (!hasRotate)
                return;
            // Force a render of this element to apply the transform with all rotations
            // set to 0.
            visualElement === null || visualElement === void 0 ? void 0 : visualElement.syncRender();
            // Put back all the values we reset
            for (var key in resetValues) {
                visualElement.setStaticValue(key, resetValues[key]);
            }
            // Schedule a render for the next frame. This ensures we won't visually
            // see the element with the reset rotate value applied.
            visualElement.scheduleRender();
        };
        ProjectionNode.prototype.getProjectionStyles = function (styleProp) {
            var _a, _b, _c, _d, _e, _f;
            if (styleProp === void 0) { styleProp = {}; }
            // TODO: Return lifecycle-persistent object
            var styles = {};
            if (!this.instance || this.isSVG)
                return styles;
            if (!this.isVisible) {
                return { visibility: "hidden" };
            }
            else {
                styles.visibility = "";
            }
            var transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;
            if (this.needsReset) {
                this.needsReset = false;
                styles.opacity = "";
                styles.pointerEvents =
                    resolveMotionValue(styleProp.pointerEvents) || "";
                styles.transform = transformTemplate
                    ? transformTemplate(this.latestValues, "")
                    : "none";
                return styles;
            }
            var lead = this.getLead();
            if (!this.projectionDelta || !this.layout || !lead.target) {
                var emptyStyles = {};
                if (this.options.layoutId) {
                    emptyStyles.opacity = (_b = this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1;
                    emptyStyles.pointerEvents =
                        resolveMotionValue(styleProp.pointerEvents) || "";
                }
                if (this.hasProjected && !hasTransform(this.latestValues)) {
                    emptyStyles.transform = transformTemplate
                        ? transformTemplate({}, "")
                        : "none";
                    this.hasProjected = false;
                }
                return emptyStyles;
            }
            var valuesToRender = lead.animationValues || lead.latestValues;
            this.applyTransformsToTarget();
            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);
            if (transformTemplate) {
                styles.transform = transformTemplate(valuesToRender, styles.transform);
            }
            var _g = this.projectionDelta, x = _g.x, y = _g.y;
            styles.transformOrigin = "".concat(x.origin * 100, "% ").concat(y.origin * 100, "% 0");
            if (lead.animationValues) {
                /**
                 * If the lead component is animating, assign this either the entering/leaving
                 * opacity
                 */
                styles.opacity =
                    lead === this
                        ? (_d = (_c = valuesToRender.opacity) !== null && _c !== void 0 ? _c : this.latestValues.opacity) !== null && _d !== void 0 ? _d : 1
                        : this.preserveOpacity
                            ? this.latestValues.opacity
                            : valuesToRender.opacityExit;
            }
            else {
                /**
                 * Or we're not animating at all, set the lead component to its actual
                 * opacity and other components to hidden.
                 */
                styles.opacity =
                    lead === this
                        ? (_e = valuesToRender.opacity) !== null && _e !== void 0 ? _e : ""
                        : (_f = valuesToRender.opacityExit) !== null && _f !== void 0 ? _f : 0;
            }
            /**
             * Apply scale correction
             */
            for (var key in scaleCorrectors) {
                if (valuesToRender[key] === undefined)
                    continue;
                var _h = scaleCorrectors[key], correct = _h.correct, applyTo = _h.applyTo;
                var corrected = correct(valuesToRender[key], lead);
                if (applyTo) {
                    var num = applyTo.length;
                    for (var i = 0; i < num; i++) {
                        styles[applyTo[i]] = corrected;
                    }
                }
                else {
                    styles[key] = corrected;
                }
            }
            /**
             * Disable pointer events on follow components. This is to ensure
             * that if a follow component covers a lead component it doesn't block
             * pointer events on the lead.
             */
            if (this.options.layoutId) {
                styles.pointerEvents =
                    lead === this
                        ? resolveMotionValue(styleProp.pointerEvents) || ""
                        : "none";
            }
            return styles;
        };
        ProjectionNode.prototype.clearSnapshot = function () {
            this.resumeFrom = this.snapshot = undefined;
        };
        // Only run on root
        ProjectionNode.prototype.resetTree = function () {
            this.root.nodes.forEach(function (node) { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });
            this.root.nodes.forEach(clearMeasurements);
            this.root.sharedNodes.clear();
        };
        return ProjectionNode;
    }());
}
function updateLayout(node) {
    node.updateLayout();
}
function notifyLayoutUpdate(node) {
    var _a, _b, _c, _d;
    var snapshot = (_b = (_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) !== null && _b !== void 0 ? _b : node.snapshot;
    if (node.isLead() &&
        node.layout &&
        snapshot &&
        node.hasListeners("didUpdate")) {
        var _e = node.layout, layout_1 = _e.actual, measuredLayout = _e.measured;
        // TODO Maybe we want to also resize the layout snapshot so we don't trigger
        // animations for instance if layout="size" and an element has only changed position
        if (node.options.animationType === "size") {
            eachAxis(function (axis) {
                var axisSnapshot = snapshot.isShared
                    ? snapshot.measured[axis]
                    : snapshot.layout[axis];
                var length = calcLength(axisSnapshot);
                axisSnapshot.min = layout_1[axis].min;
                axisSnapshot.max = axisSnapshot.min + length;
            });
        }
        else if (node.options.animationType === "position") {
            eachAxis(function (axis) {
                var axisSnapshot = snapshot.isShared
                    ? snapshot.measured[axis]
                    : snapshot.layout[axis];
                var length = calcLength(layout_1[axis]);
                axisSnapshot.max = axisSnapshot.min + length;
            });
        }
        var layoutDelta = createDelta();
        calcBoxDelta(layoutDelta, layout_1, snapshot.layout);
        var visualDelta = createDelta();
        if (snapshot.isShared) {
            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measured);
        }
        else {
            calcBoxDelta(visualDelta, layout_1, snapshot.layout);
        }
        var hasLayoutChanged = !isDeltaZero(layoutDelta);
        var hasRelativeTargetChanged = false;
        if (!node.resumeFrom) {
            node.relativeParent = node.getClosestProjectingParent();
            /**
             * If the relativeParent is itself resuming from a different element then
             * the relative snapshot is not relavent
             */
            if (node.relativeParent && !node.relativeParent.resumeFrom) {
                var _f = node.relativeParent, parentSnapshot = _f.snapshot, parentLayout = _f.layout;
                if (parentSnapshot && parentLayout) {
                    var relativeSnapshot = createBox();
                    calcRelativePosition(relativeSnapshot, snapshot.layout, parentSnapshot.layout);
                    var relativeLayout = createBox();
                    calcRelativePosition(relativeLayout, layout_1, parentLayout.actual);
                    if (!boxEquals(relativeSnapshot, relativeLayout)) {
                        hasRelativeTargetChanged = true;
                    }
                }
            }
        }
        node.notifyListeners("didUpdate", {
            layout: layout_1,
            snapshot: snapshot,
            delta: visualDelta,
            layoutDelta: layoutDelta,
            hasLayoutChanged: hasLayoutChanged,
            hasRelativeTargetChanged: hasRelativeTargetChanged,
        });
    }
    else if (node.isLead()) {
        (_d = (_c = node.options).onExitComplete) === null || _d === void 0 ? void 0 : _d.call(_c);
    }
    /**
     * Clearing transition
     * TODO: Investigate why this transition is being passed in as {type: false } from Framer
     * and why we need it at all
     */
    node.options.transition = undefined;
}
function clearSnapshot(node) {
    node.clearSnapshot();
}
function clearMeasurements(node) {
    node.clearMeasurements();
}
function resetTransformStyle(node) {
    var visualElement = node.options.visualElement;
    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {
        visualElement.notifyBeforeLayoutMeasure();
    }
    node.resetTransform();
}
function finishAnimation(node) {
    node.finishAnimation();
    node.targetDelta = node.relativeTarget = node.target = undefined;
}
function resolveTargetDelta(node) {
    node.resolveTargetDelta();
}
function calcProjection(node) {
    node.calcProjection();
}
function resetRotation(node) {
    node.resetRotation();
}
function removeLeadSnapshots(stack) {
    stack.removeLeadSnapshot();
}
function mixAxisDelta(output, delta, p) {
    output.translate = popmotion.mix(delta.translate, 0, p);
    output.scale = popmotion.mix(delta.scale, 1, p);
    output.origin = delta.origin;
    output.originPoint = delta.originPoint;
}
function mixAxis(output, from, to, p) {
    output.min = popmotion.mix(from.min, to.min, p);
    output.max = popmotion.mix(from.max, to.max, p);
}
function mixBox(output, from, to, p) {
    mixAxis(output.x, from.x, to.x, p);
    mixAxis(output.y, from.y, to.y, p);
}
function hasOpacityCrossfade(node) {
    return (node.animationValues && node.animationValues.opacityExit !== undefined);
}
var defaultLayoutTransition = {
    duration: 0.45,
    ease: [0.4, 0, 0.1, 1],
};
function mountNodeEarly(node, id) {
    /**
     * Rather than searching the DOM from document we can search the
     * path for the deepest mounted ancestor and search from there
     */
    var searchNode = node.root;
    for (var i = node.path.length - 1; i >= 0; i--) {
        if (Boolean(node.path[i].instance)) {
            searchNode = node.path[i];
            break;
        }
    }
    var searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;
    var element = searchElement.querySelector("[data-projection-id=\"".concat(id, "\"]"));
    if (element)
        node.mount(element, true);
}
function roundAxis(axis) {
    axis.min = Math.round(axis.min);
    axis.max = Math.round(axis.max);
}
function roundBox(box) {
    roundAxis(box.x);
    roundAxis(box.y);
}

var DocumentProjectionNode = createProjectionNode({
    attachResizeListener: function (ref, notify) { return addDomEvent(ref, "resize", notify); },
    measureScroll: function () { return ({
        x: document.documentElement.scrollLeft || document.body.scrollLeft,
        y: document.documentElement.scrollTop || document.body.scrollTop,
    }); },
    checkIsScrollRoot: function () { return true; },
});

var rootProjectionNode = {
    current: undefined,
};
var HTMLProjectionNode = createProjectionNode({
    measureScroll: function (instance) { return ({
        x: instance.scrollLeft,
        y: instance.scrollTop,
    }); },
    defaultParent: function () {
        if (!rootProjectionNode.current) {
            var documentNode = new DocumentProjectionNode(0, {});
            documentNode.mount(window);
            documentNode.setOptions({ layoutScroll: true });
            rootProjectionNode.current = documentNode;
        }
        return rootProjectionNode.current;
    },
    resetTransform: function (instance, value) {
        instance.style.transform = value !== null && value !== void 0 ? value : "none";
    },
    checkIsScrollRoot: function (instance) {
        return Boolean(window.getComputedStyle(instance).position === "fixed");
    },
});

var featureBundle = tslib.__assign(tslib.__assign(tslib.__assign(tslib.__assign({}, animations), gestureAnimations), drag), layoutFeatures);
/**
 * HTML & SVG components, optimised for use with gestures and animation. These can be used as
 * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.
 *
 * @public
 */
var motion = /*@__PURE__*/ createMotionProxy(function (Component, config) {
    return createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode);
});
/**
 * Create a DOM `motion` component with the provided string. This is primarily intended
 * as a full alternative to `motion` for consumers who have to support environments that don't
 * support `Proxy`.
 *
 * ```javascript
 * import { createDomMotionComponent } from "framer-motion"
 *
 * const motion = {
 *   div: createDomMotionComponent('div')
 * }
 * ```
 *
 * @public
 */
function createDomMotionComponent(key) {
    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement, HTMLProjectionNode));
}

/**
 * @public
 */
var m = createMotionProxy(createDomMotionConfig);

function useIsMounted() {
    var isMounted = React.useRef(false);
    useIsomorphicLayoutEffect(function () {
        isMounted.current = true;
        return function () {
            isMounted.current = false;
        };
    }, []);
    return isMounted;
}

function useForceUpdate() {
    var isMounted = useIsMounted();
    var _a = tslib.__read(React.useState(0), 2), forcedRenderCount = _a[0], setForcedRenderCount = _a[1];
    var forceRender = React.useCallback(function () {
        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);
    }, [forcedRenderCount]);
    /**
     * Defer this to the end of the next animation frame in case there are multiple
     * synchronous calls.
     */
    var deferredForceRender = React.useCallback(function () { return sync__default["default"].postRender(forceRender); }, [forceRender]);
    return [deferredForceRender, forcedRenderCount];
}

var PresenceChild = function (_a) {
    var children = _a.children, initial = _a.initial, isPresent = _a.isPresent, onExitComplete = _a.onExitComplete, custom = _a.custom, presenceAffectsLayout = _a.presenceAffectsLayout;
    var presenceChildren = useConstant(newChildrenMap);
    var id = useId();
    var context = React.useMemo(function () { return ({
        id: id,
        initial: initial,
        isPresent: isPresent,
        custom: custom,
        onExitComplete: function (childId) {
            var e_1, _a;
            presenceChildren.set(childId, true);
            try {
                for (var _b = tslib.__values(presenceChildren.values()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var isComplete = _c.value;
                    if (!isComplete)
                        return; // can stop searching when any is incomplete
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_1) throw e_1.error; }
            }
            onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete();
        },
        register: function (childId) {
            presenceChildren.set(childId, false);
            return function () { return presenceChildren.delete(childId); };
        },
    }); }, 
    /**
     * If the presence of a child affects the layout of the components around it,
     * we want to make a new context value to ensure they get re-rendered
     * so they can detect that layout change.
     */
    presenceAffectsLayout ? undefined : [isPresent]);
    React.useMemo(function () {
        presenceChildren.forEach(function (_, key) { return presenceChildren.set(key, false); });
    }, [isPresent]);
    /**
     * If there's no `motion` components to fire exit animations, we want to remove this
     * component immediately.
     */
    React__namespace.useEffect(function () {
        !isPresent && !presenceChildren.size && (onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete());
    }, [isPresent]);
    return (React__namespace.createElement(PresenceContext.Provider, { value: context }, children));
};
function newChildrenMap() {
    return new Map();
}

var getChildKey = function (child) { return child.key || ""; };
function updateChildLookup(children, allChildren) {
    children.forEach(function (child) {
        var key = getChildKey(child);
        allChildren.set(key, child);
    });
}
function onlyElements(children) {
    var filtered = [];
    // We use forEach here instead of map as map mutates the component key by preprending `.$`
    React.Children.forEach(children, function (child) {
        if (React.isValidElement(child))
            filtered.push(child);
    });
    return filtered;
}
/**
 * `AnimatePresence` enables the animation of components that have been removed from the tree.
 *
 * When adding/removing more than a single child, every child **must** be given a unique `key` prop.
 *
 * Any `motion` components that have an `exit` property defined will animate out when removed from
 * the tree.
 *
 * ```jsx
 * import { motion, AnimatePresence } from 'framer-motion'
 *
 * export const Items = ({ items }) => (
 *   <AnimatePresence>
 *     {items.map(item => (
 *       <motion.div
 *         key={item.id}
 *         initial={{ opacity: 0 }}
 *         animate={{ opacity: 1 }}
 *         exit={{ opacity: 0 }}
 *       />
 *     ))}
 *   </AnimatePresence>
 * )
 * ```
 *
 * You can sequence exit animations throughout a tree using variants.
 *
 * If a child contains multiple `motion` components with `exit` props, it will only unmount the child
 * once all `motion` components have finished animating out. Likewise, any components using
 * `usePresence` all need to call `safeToRemove`.
 *
 * @public
 */
var AnimatePresence = function (_a) {
    var children = _a.children, custom = _a.custom, _b = _a.initial, initial = _b === void 0 ? true : _b, onExitComplete = _a.onExitComplete, exitBeforeEnter = _a.exitBeforeEnter, _c = _a.presenceAffectsLayout, presenceAffectsLayout = _c === void 0 ? true : _c;
    // We want to force a re-render once all exiting animations have finished. We
    // either use a local forceRender function, or one from a parent context if it exists.
    var _d = tslib.__read(useForceUpdate(), 1), forceRender = _d[0];
    var forceRenderLayoutGroup = React.useContext(LayoutGroupContext).forceRender;
    if (forceRenderLayoutGroup)
        forceRender = forceRenderLayoutGroup;
    var isMounted = useIsMounted();
    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key
    var filteredChildren = onlyElements(children);
    var childrenToRender = filteredChildren;
    var exiting = new Set();
    // Keep a living record of the children we're actually rendering so we
    // can diff to figure out which are entering and exiting
    var presentChildren = React.useRef(childrenToRender);
    // A lookup table to quickly reference components by key
    var allChildren = React.useRef(new Map()).current;
    // If this is the initial component render, just deal with logic surrounding whether
    // we play onMount animations or not.
    var isInitialRender = React.useRef(true);
    useIsomorphicLayoutEffect(function () {
        isInitialRender.current = false;
        updateChildLookup(filteredChildren, allChildren);
        presentChildren.current = childrenToRender;
    });
    useUnmountEffect(function () {
        isInitialRender.current = true;
        allChildren.clear();
        exiting.clear();
    });
    if (isInitialRender.current) {
        return (React__namespace.createElement(React__namespace.Fragment, null, childrenToRender.map(function (child) { return (React__namespace.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout }, child)); })));
    }
    // If this is a subsequent render, deal with entering and exiting children
    childrenToRender = tslib.__spreadArray([], tslib.__read(childrenToRender), false);
    // Diff the keys of the currently-present and target children to update our
    // exiting list.
    var presentKeys = presentChildren.current.map(getChildKey);
    var targetKeys = filteredChildren.map(getChildKey);
    // Diff the present children with our target children and mark those that are exiting
    var numPresent = presentKeys.length;
    for (var i = 0; i < numPresent; i++) {
        var key = presentKeys[i];
        if (targetKeys.indexOf(key) === -1) {
            exiting.add(key);
        }
    }
    // If we currently have exiting children, and we're deferring rendering incoming children
    // until after all current children have exiting, empty the childrenToRender array
    if (exitBeforeEnter && exiting.size) {
        childrenToRender = [];
    }
    // Loop through all currently exiting components and clone them to overwrite `animate`
    // with any `exit` prop they might have defined.
    exiting.forEach(function (key) {
        // If this component is actually entering again, early return
        if (targetKeys.indexOf(key) !== -1)
            return;
        var child = allChildren.get(key);
        if (!child)
            return;
        var insertionIndex = presentKeys.indexOf(key);
        var onExit = function () {
            allChildren.delete(key);
            exiting.delete(key);
            // Remove this child from the present children
            var removeIndex = presentChildren.current.findIndex(function (presentChild) { return presentChild.key === key; });
            presentChildren.current.splice(removeIndex, 1);
            // Defer re-rendering until all exiting children have indeed left
            if (!exiting.size) {
                presentChildren.current = filteredChildren;
                if (isMounted.current === false)
                    return;
                forceRender();
                onExitComplete && onExitComplete();
            }
        };
        childrenToRender.splice(insertionIndex, 0, React__namespace.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout }, child));
    });
    // Add `MotionContext` even to children that don't need it to ensure we're rendering
    // the same tree between renders
    childrenToRender = childrenToRender.map(function (child) {
        var key = child.key;
        return exiting.has(key) ? (child) : (React__namespace.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout }, child));
    });
    if (env !== "production" &&
        exitBeforeEnter &&
        childrenToRender.length > 1) {
        console.warn("You're attempting to animate multiple children within AnimatePresence, but its exitBeforeEnter prop is set to true. This will lead to odd visual behaviour.");
    }
    return (React__namespace.createElement(React__namespace.Fragment, null, exiting.size
        ? childrenToRender
        : childrenToRender.map(function (child) { return React.cloneElement(child); })));
};

/**
 * @deprecated
 */
var DeprecatedLayoutGroupContext = React.createContext(null);

var notify = function (node) {
    return !node.isLayoutDirty && node.willUpdate(false);
};
function nodeGroup() {
    var nodes = new Set();
    var subscriptions = new WeakMap();
    var dirtyAll = function () { return nodes.forEach(notify); };
    return {
        add: function (node) {
            nodes.add(node);
            subscriptions.set(node, node.addEventListener("willUpdate", dirtyAll));
        },
        remove: function (node) {
            var _a;
            nodes.delete(node);
            (_a = subscriptions.get(node)) === null || _a === void 0 ? void 0 : _a();
            subscriptions.delete(node);
            dirtyAll();
        },
        dirty: dirtyAll,
    };
}

var shouldInheritGroup = function (inherit) { return inherit === true; };
var shouldInheritId = function (inherit) {
    return shouldInheritGroup(inherit === true) || inherit === "id";
};
var LayoutGroup = function (_a) {
    var _b, _c;
    var children = _a.children, id = _a.id, inheritId = _a.inheritId, _d = _a.inherit, inherit = _d === void 0 ? true : _d;
    // Maintain backwards-compatibility with inheritId until 7.0
    if (inheritId !== undefined)
        inherit = inheritId;
    var layoutGroupContext = React.useContext(LayoutGroupContext);
    var deprecatedLayoutGroupContext = React.useContext(DeprecatedLayoutGroupContext);
    var _e = tslib.__read(useForceUpdate(), 2), forceRender = _e[0], key = _e[1];
    var context = React.useRef(null);
    var upstreamId = (_b = layoutGroupContext.id) !== null && _b !== void 0 ? _b : deprecatedLayoutGroupContext;
    if (context.current === null) {
        if (shouldInheritId(inherit) && upstreamId) {
            id = id ? upstreamId + "-" + id : upstreamId;
        }
        context.current = {
            id: id,
            group: shouldInheritGroup(inherit)
                ? (_c = layoutGroupContext === null || layoutGroupContext === void 0 ? void 0 : layoutGroupContext.group) !== null && _c !== void 0 ? _c : nodeGroup()
                : nodeGroup(),
        };
    }
    var memoizedContext = React.useMemo(function () { return (tslib.__assign(tslib.__assign({}, context.current), { forceRender: forceRender })); }, [key]);
    return (React__namespace.createElement(LayoutGroupContext.Provider, { value: memoizedContext }, children));
};

var id = 0;
var AnimateSharedLayout = function (_a) {
    var children = _a.children;
    React__namespace.useEffect(function () {
        heyListen.warning(false, "AnimateSharedLayout is deprecated: https://www.framer.com/docs/guide-upgrade/##shared-layout-animations");
    }, []);
    return (React__namespace.createElement(LayoutGroup, { id: useConstant(function () { return "asl-".concat(id++); }) }, children));
};

/**
 * `MotionConfig` is used to set configuration options for all children `motion` components.
 *
 * ```jsx
 * import { motion, MotionConfig } from "framer-motion"
 *
 * export function App() {
 *   return (
 *     <MotionConfig transition={{ type: "spring" }}>
 *       <motion.div animate={{ x: 100 }} />
 *     </MotionConfig>
 *   )
 * }
 * ```
 *
 * @public
 */
function MotionConfig(_a) {
    var children = _a.children, isValidProp = _a.isValidProp, config = tslib.__rest(_a, ["children", "isValidProp"]);
    isValidProp && loadExternalIsValidProp(isValidProp);
    /**
     * Inherit props from any parent MotionConfig components
     */
    config = tslib.__assign(tslib.__assign({}, React.useContext(MotionConfigContext)), config);
    /**
     * Don't allow isStatic to change between renders as it affects how many hooks
     * motion components fire.
     */
    config.isStatic = useConstant(function () { return config.isStatic; });
    /**
     * Creating a new config context object will re-render every `motion` component
     * every time it renders. So we only want to create a new one sparingly.
     */
    var context = React.useMemo(function () { return config; }, [JSON.stringify(config.transition), config.transformPagePoint, config.reducedMotion]);
    return (React__namespace.createElement(MotionConfigContext.Provider, { value: context }, children));
}

/**
 * Used in conjunction with the `m` component to reduce bundle size.
 *
 * `m` is a version of the `motion` component that only loads functionality
 * critical for the initial render.
 *
 * `LazyMotion` can then be used to either synchronously or asynchronously
 * load animation and gesture support.
 *
 * ```jsx
 * // Synchronous loading
 * import { LazyMotion, m, domAnimations } from "framer-motion"
 *
 * function App() {
 *   return (
 *     <LazyMotion features={domAnimations}>
 *       <m.div animate={{ scale: 2 }} />
 *     </LazyMotion>
 *   )
 * }
 *
 * // Asynchronous loading
 * import { LazyMotion, m } from "framer-motion"
 *
 * function App() {
 *   return (
 *     <LazyMotion features={() => import('./path/to/domAnimations')}>
 *       <m.div animate={{ scale: 2 }} />
 *     </LazyMotion>
 *   )
 * }
 * ```
 *
 * @public
 */
function LazyMotion(_a) {
    var children = _a.children, features = _a.features, _b = _a.strict, strict = _b === void 0 ? false : _b;
    var _c = tslib.__read(React.useState(!isLazyBundle(features)), 2), setIsLoaded = _c[1];
    var loadedRenderer = React.useRef(undefined);
    /**
     * If this is a synchronous load, load features immediately
     */
    if (!isLazyBundle(features)) {
        var renderer = features.renderer, loadedFeatures = tslib.__rest(features, ["renderer"]);
        loadedRenderer.current = renderer;
        loadFeatures(loadedFeatures);
    }
    React.useEffect(function () {
        if (isLazyBundle(features)) {
            features().then(function (_a) {
                var renderer = _a.renderer, loadedFeatures = tslib.__rest(_a, ["renderer"]);
                loadFeatures(loadedFeatures);
                loadedRenderer.current = renderer;
                setIsLoaded(true);
            });
        }
    }, []);
    return (React__namespace.createElement(LazyContext.Provider, { value: { renderer: loadedRenderer.current, strict: strict } }, children));
}
function isLazyBundle(features) {
    return typeof features === "function";
}

var ReorderContext = React.createContext(null);

function checkReorder(order, value, offset, velocity) {
    if (!velocity)
        return order;
    var index = order.findIndex(function (item) { return item.value === value; });
    if (index === -1)
        return order;
    var nextOffset = velocity > 0 ? 1 : -1;
    var nextItem = order[index + nextOffset];
    if (!nextItem)
        return order;
    var item = order[index];
    var nextLayout = nextItem.layout;
    var nextItemCenter = popmotion.mix(nextLayout.min, nextLayout.max, 0.5);
    if ((nextOffset === 1 && item.layout.max + offset > nextItemCenter) ||
        (nextOffset === -1 && item.layout.min + offset < nextItemCenter)) {
        return moveItem(order, index, index + nextOffset);
    }
    return order;
}

function ReorderGroup(_a, externalRef) {
    var children = _a.children, _b = _a.as, as = _b === void 0 ? "ul" : _b, _c = _a.axis, axis = _c === void 0 ? "y" : _c, onReorder = _a.onReorder, values = _a.values, props = tslib.__rest(_a, ["children", "as", "axis", "onReorder", "values"]);
    var Component = useConstant(function () { return motion(as); });
    var order = [];
    var isReordering = React.useRef(false);
    heyListen.invariant(Boolean(values), "Reorder.Group must be provided a values prop");
    var context = {
        axis: axis,
        registerItem: function (value, layout) {
            /**
             * Ensure entries can't add themselves more than once
             */
            if (layout &&
                order.findIndex(function (entry) { return value === entry.value; }) === -1) {
                order.push({ value: value, layout: layout[axis] });
                order.sort(compareMin);
            }
        },
        updateOrder: function (id, offset, velocity) {
            if (isReordering.current)
                return;
            var newOrder = checkReorder(order, id, offset, velocity);
            if (order !== newOrder) {
                isReordering.current = true;
                onReorder(newOrder
                    .map(getValue)
                    .filter(function (value) { return values.indexOf(value) !== -1; }));
            }
        },
    };
    React.useEffect(function () {
        isReordering.current = false;
    });
    return (React__namespace.createElement(Component, tslib.__assign({}, props, { ref: externalRef }),
        React__namespace.createElement(ReorderContext.Provider, { value: context }, children)));
}
var Group = React.forwardRef(ReorderGroup);
function getValue(item) {
    return item.value;
}
function compareMin(a, b) {
    return a.layout.min - b.layout.min;
}

/**
 * Creates a `MotionValue` to track the state and velocity of a value.
 *
 * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.
 *
 * ```jsx
 * export const MyComponent = () => {
 *   const scale = useMotionValue(1)
 *
 *   return <motion.div style={{ scale }} />
 * }
 * ```
 *
 * @param initial - The initial state.
 *
 * @public
 */
function useMotionValue(initial) {
    var value = useConstant(function () { return motionValue(initial); });
    /**
     * If this motion value is being used in static mode, like on
     * the Framer canvas, force components to rerender when the motion
     * value is updated.
     */
    var isStatic = React.useContext(MotionConfigContext).isStatic;
    if (isStatic) {
        var _a = tslib.__read(React.useState(initial), 2), setLatest_1 = _a[1];
        React.useEffect(function () { return value.onChange(setLatest_1); }, []);
    }
    return value;
}

var isCustomValueType = function (v) {
    return typeof v === "object" && v.mix;
};
var getMixer = function (v) { return (isCustomValueType(v) ? v.mix : undefined); };
function transform() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    var useImmediate = !Array.isArray(args[0]);
    var argOffset = useImmediate ? 0 : -1;
    var inputValue = args[0 + argOffset];
    var inputRange = args[1 + argOffset];
    var outputRange = args[2 + argOffset];
    var options = args[3 + argOffset];
    var interpolator = popmotion.interpolate(inputRange, outputRange, tslib.__assign({ mixer: getMixer(outputRange[0]) }, options));
    return useImmediate ? interpolator(inputValue) : interpolator;
}

function useOnChange(value, callback) {
    useIsomorphicLayoutEffect(function () {
        if (isMotionValue(value))
            return value.onChange(callback);
    }, [callback]);
}
function useMultiOnChange(values, handler) {
    useIsomorphicLayoutEffect(function () {
        var subscriptions = values.map(function (value) { return value.onChange(handler); });
        return function () { return subscriptions.forEach(function (unsubscribe) { return unsubscribe(); }); };
    });
}

function useCombineMotionValues(values, combineValues) {
    /**
     * Initialise the returned motion value. This remains the same between renders.
     */
    var value = useMotionValue(combineValues());
    /**
     * Create a function that will update the template motion value with the latest values.
     * This is pre-bound so whenever a motion value updates it can schedule its
     * execution in Framesync. If it's already been scheduled it won't be fired twice
     * in a single frame.
     */
    var updateValue = function () { return value.set(combineValues()); };
    /**
     * Synchronously update the motion value with the latest values during the render.
     * This ensures that within a React render, the styles applied to the DOM are up-to-date.
     */
    updateValue();
    /**
     * Subscribe to all motion values found within the template. Whenever any of them change,
     * schedule an update.
     */
    useMultiOnChange(values, function () { return sync__default["default"].update(updateValue, false, true); });
    return value;
}

function useTransform(input, inputRangeOrTransformer, outputRange, options) {
    var transformer = typeof inputRangeOrTransformer === "function"
        ? inputRangeOrTransformer
        : transform(inputRangeOrTransformer, outputRange, options);
    return Array.isArray(input)
        ? useListTransform(input, transformer)
        : useListTransform([input], function (_a) {
            var _b = tslib.__read(_a, 1), latest = _b[0];
            return transformer(latest);
        });
}
function useListTransform(values, transformer) {
    var latest = useConstant(function () { return []; });
    return useCombineMotionValues(values, function () {
        latest.length = 0;
        var numValues = values.length;
        for (var i = 0; i < numValues; i++) {
            latest[i] = values[i].get();
        }
        return transformer(latest);
    });
}

function useDefaultMotionValue(value, defaultValue) {
    if (defaultValue === void 0) { defaultValue = 0; }
    return isMotionValue(value) ? value : useMotionValue(defaultValue);
}
function ReorderItem(_a, externalRef) {
    var children = _a.children, style = _a.style, value = _a.value, _b = _a.as, as = _b === void 0 ? "li" : _b, onDrag = _a.onDrag, _c = _a.layout, layout = _c === void 0 ? true : _c, props = tslib.__rest(_a, ["children", "style", "value", "as", "onDrag", "layout"]);
    var Component = useConstant(function () { return motion(as); });
    var context = React.useContext(ReorderContext);
    var point = {
        x: useDefaultMotionValue(style === null || style === void 0 ? void 0 : style.x),
        y: useDefaultMotionValue(style === null || style === void 0 ? void 0 : style.y),
    };
    var zIndex = useTransform([point.x, point.y], function (_a) {
        var _b = tslib.__read(_a, 2), latestX = _b[0], latestY = _b[1];
        return latestX || latestY ? 1 : "unset";
    });
    var measuredLayout = React.useRef(null);
    heyListen.invariant(Boolean(context), "Reorder.Item must be a child of Reorder.Group");
    var _d = context, axis = _d.axis, registerItem = _d.registerItem, updateOrder = _d.updateOrder;
    React.useEffect(function () {
        registerItem(value, measuredLayout.current);
    }, [context]);
    return (React__namespace.createElement(Component, tslib.__assign({ drag: axis }, props, { dragSnapToOrigin: true, style: tslib.__assign(tslib.__assign({}, style), { x: point.x, y: point.y, zIndex: zIndex }), layout: layout, onDrag: function (event, gesturePoint) {
            var velocity = gesturePoint.velocity;
            velocity[axis] &&
                updateOrder(value, point[axis].get(), velocity[axis]);
            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, gesturePoint);
        }, onLayoutMeasure: function (measured) {
            measuredLayout.current = measured;
        }, ref: externalRef }), children));
}
var Item = React.forwardRef(ReorderItem);

var Reorder = {
    Group: Group,
    Item: Item,
};

/**
 * @public
 */
var domAnimation = tslib.__assign(tslib.__assign({ renderer: createDomVisualElement }, animations), gestureAnimations);

/**
 * @public
 */
var domMax = tslib.__assign(tslib.__assign(tslib.__assign(tslib.__assign({}, domAnimation), drag), layoutFeatures), { projectionNodeConstructor: HTMLProjectionNode });

/**
 * Combine multiple motion values into a new one using a string template literal.
 *
 * ```jsx
 * import {
 *   motion,
 *   useSpring,
 *   useMotionValue,
 *   useMotionTemplate
 * } from "framer-motion"
 *
 * function Component() {
 *   const shadowX = useSpring(0)
 *   const shadowY = useMotionValue(0)
 *   const shadow = useMotionTemplate`drop-shadow(${shadowX}px ${shadowY}px 20px rgba(0,0,0,0.3))`
 *
 *   return <motion.div style={{ filter: shadow }} />
 * }
 * ```
 *
 * @public
 */
function useMotionTemplate(fragments) {
    var values = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        values[_i - 1] = arguments[_i];
    }
    /**
     * Create a function that will build a string from the latest motion values.
     */
    var numFragments = fragments.length;
    function buildValue() {
        var output = "";
        for (var i = 0; i < numFragments; i++) {
            output += fragments[i];
            var value = values[i];
            if (value)
                output += values[i].get();
        }
        return output;
    }
    return useCombineMotionValues(values, buildValue);
}

/**
 * Creates a `MotionValue` that, when `set`, will use a spring animation to animate to its new state.
 *
 * It can either work as a stand-alone `MotionValue` by initialising it with a value, or as a subscriber
 * to another `MotionValue`.
 *
 * @remarks
 *
 * ```jsx
 * const x = useSpring(0, { stiffness: 300 })
 * const y = useSpring(x, { damping: 10 })
 * ```
 *
 * @param inputValue - `MotionValue` or number. If provided a `MotionValue`, when the input `MotionValue` changes, the created `MotionValue` will spring towards that value.
 * @param springConfig - Configuration options for the spring.
 * @returns `MotionValue`
 *
 * @public
 */
function useSpring(source, config) {
    if (config === void 0) { config = {}; }
    var isStatic = React.useContext(MotionConfigContext).isStatic;
    var activeSpringAnimation = React.useRef(null);
    var value = useMotionValue(isMotionValue(source) ? source.get() : source);
    React.useMemo(function () {
        return value.attach(function (v, set) {
            /**
             * A more hollistic approach to this might be to use isStatic to fix VisualElement animations
             * at that level, but this will work for now
             */
            if (isStatic)
                return set(v);
            if (activeSpringAnimation.current) {
                activeSpringAnimation.current.stop();
            }
            activeSpringAnimation.current = popmotion.animate(tslib.__assign(tslib.__assign({ from: value.get(), to: v, velocity: value.getVelocity() }, config), { onUpdate: set }));
            return value.get();
        });
    }, [JSON.stringify(config)]);
    useOnChange(source, function (v) { return value.set(parseFloat(v)); });
    return value;
}

/**
 * Creates a `MotionValue` that updates when the velocity of the provided `MotionValue` changes.
 *
 * ```javascript
 * const x = useMotionValue(0)
 * const xVelocity = useVelocity(x)
 * const xAcceleration = useVelocity(xVelocity)
 * ```
 *
 * @public
 */
function useVelocity(value) {
    var velocity = useMotionValue(value.getVelocity());
    React.useEffect(function () {
        return value.velocityUpdateSubscribers.add(function (newVelocity) {
            velocity.set(newVelocity);
        });
    }, [value]);
    return velocity;
}

var createScrollMotionValues = function () { return ({
    scrollX: motionValue(0),
    scrollY: motionValue(0),
    scrollXProgress: motionValue(0),
    scrollYProgress: motionValue(0),
}); };
function useScroll(_a) {
    if (_a === void 0) { _a = {}; }
    var container = _a.container, target = _a.target, options = tslib.__rest(_a, ["container", "target"]);
    var values = useConstant(createScrollMotionValues);
    useIsomorphicLayoutEffect(function () {
        return dom.scroll(function (_a) {
            var x = _a.x, y = _a.y;
            values.scrollX.set(x.current);
            values.scrollXProgress.set(x.progress);
            values.scrollY.set(y.current);
            values.scrollYProgress.set(y.progress);
        }, tslib.__assign(tslib.__assign({}, options), { container: (container === null || container === void 0 ? void 0 : container.current) || undefined, target: (target === null || target === void 0 ? void 0 : target.current) || undefined }));
    }, []);
    return values;
}

function useElementScroll(ref) {
    warnOnce(false, "useElementScroll is deprecated. Convert to useScroll({ container: ref }).");
    return useScroll({ container: ref });
}

function useViewportScroll() {
    warnOnce(false, "useViewportScroll is deprecated. Convert to useScroll().");
    return useScroll();
}

var getCurrentTime = typeof performance !== "undefined"
    ? function () { return performance.now(); }
    : function () { return Date.now(); };
function useAnimationFrame(callback) {
    var initialTimestamp = useConstant(getCurrentTime);
    var isStatic = React.useContext(MotionConfigContext).isStatic;
    React.useEffect(function () {
        if (isStatic)
            return;
        var provideTimeSinceStart = function (_a) {
            var timestamp = _a.timestamp;
            callback(timestamp - initialTimestamp);
        };
        sync__default["default"].update(provideTimeSinceStart, true);
        return function () { return sync.cancelSync.update(provideTimeSinceStart); };
    }, [callback]);
}

function useTime() {
    var time = useMotionValue(0);
    useAnimationFrame(function (t) { return time.set(t); });
    return time;
}

/**
 * @public
 */
function animationControls() {
    /**
     * Track whether the host component has mounted.
     */
    var hasMounted = false;
    /**
     * Pending animations that are started before a component is mounted.
     * TODO: Remove this as animations should only run in effects
     */
    var pendingAnimations = [];
    /**
     * A collection of linked component animation controls.
     */
    var subscribers = new Set();
    var controls = {
        subscribe: function (visualElement) {
            subscribers.add(visualElement);
            return function () { return void subscribers.delete(visualElement); };
        },
        start: function (definition, transitionOverride) {
            /**
             * TODO: We only perform this hasMounted check because in Framer we used to
             * encourage the ability to start an animation within the render phase. This
             * isn't behaviour concurrent-safe so when we make Framer concurrent-safe
             * we can ditch this.
             */
            if (hasMounted) {
                var animations_1 = [];
                subscribers.forEach(function (visualElement) {
                    animations_1.push(animateVisualElement(visualElement, definition, {
                        transitionOverride: transitionOverride,
                    }));
                });
                return Promise.all(animations_1);
            }
            else {
                return new Promise(function (resolve) {
                    pendingAnimations.push({
                        animation: [definition, transitionOverride],
                        resolve: resolve,
                    });
                });
            }
        },
        set: function (definition) {
            heyListen.invariant(hasMounted, "controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.");
            return subscribers.forEach(function (visualElement) {
                setValues(visualElement, definition);
            });
        },
        stop: function () {
            subscribers.forEach(function (visualElement) {
                stopAnimation(visualElement);
            });
        },
        mount: function () {
            hasMounted = true;
            pendingAnimations.forEach(function (_a) {
                var animation = _a.animation, resolve = _a.resolve;
                controls.start.apply(controls, tslib.__spreadArray([], tslib.__read(animation), false)).then(resolve);
            });
            return function () {
                hasMounted = false;
                controls.stop();
            };
        },
    };
    return controls;
}

/**
 * Creates `AnimationControls`, which can be used to manually start, stop
 * and sequence animations on one or more components.
 *
 * The returned `AnimationControls` should be passed to the `animate` property
 * of the components you want to animate.
 *
 * These components can then be animated with the `start` method.
 *
 * ```jsx
 * import * as React from 'react'
 * import { motion, useAnimation } from 'framer-motion'
 *
 * export function MyComponent(props) {
 *    const controls = useAnimation()
 *
 *    controls.start({
 *        x: 100,
 *        transition: { duration: 0.5 },
 *    })
 *
 *    return <motion.div animate={controls} />
 * }
 * ```
 *
 * @returns Animation controller with `start` and `stop` methods
 *
 * @public
 */
function useAnimationControls() {
    var controls = useConstant(animationControls);
    React.useEffect(controls.mount, []);
    return controls;
}
var useAnimation = useAnimationControls;

/**
 * Cycles through a series of visual properties. Can be used to toggle between or cycle through animations. It works similar to `useState` in React. It is provided an initial array of possible states, and returns an array of two arguments.
 *
 * An index value can be passed to the returned `cycle` function to cycle to a specific index.
 *
 * ```jsx
 * import * as React from "react"
 * import { motion, useCycle } from "framer-motion"
 *
 * export const MyComponent = () => {
 *   const [x, cycleX] = useCycle(0, 50, 100)
 *
 *   return (
 *     <motion.div
 *       animate={{ x: x }}
 *       onTap={() => cycleX()}
 *      />
 *    )
 * }
 * ```
 *
 * @param items - items to cycle through
 * @returns [currentState, cycleState]
 *
 * @public
 */
function useCycle() {
    var items = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        items[_i] = arguments[_i];
    }
    var index = React.useRef(0);
    var _a = tslib.__read(React.useState(items[index.current]), 2), item = _a[0], setItem = _a[1];
    var runCycle = React.useCallback(function (next) {
        index.current =
            typeof next !== "number"
                ? popmotion.wrap(0, items.length, index.current + 1)
                : next;
        setItem(items[index.current]);
    }, tslib.__spreadArray([items.length], tslib.__read(items), false));
    return [item, runCycle];
}

function useInView(ref, _a) {
    var _b = _a === void 0 ? {} : _a, root = _b.root, margin = _b.margin, amount = _b.amount, _c = _b.once, once = _c === void 0 ? false : _c;
    var _d = tslib.__read(React.useState(false), 2), isInView = _d[0], setInView = _d[1];
    React.useEffect(function () {
        var _a;
        if (!ref.current || (once && isInView))
            return;
        var onEnter = function () {
            setInView(true);
            return once ? undefined : function () { return setInView(false); };
        };
        var options = {
            root: (_a = root === null || root === void 0 ? void 0 : root.current) !== null && _a !== void 0 ? _a : undefined,
            margin: margin,
            amount: amount === "some" ? "any" : amount,
        };
        return dom.inView(ref.current, onEnter, options);
    }, [root, ref, margin, once]);
    return isInView;
}

/**
 * Can manually trigger a drag gesture on one or more `drag`-enabled `motion` components.
 *
 * ```jsx
 * const dragControls = useDragControls()
 *
 * function startDrag(event) {
 *   dragControls.start(event, { snapToCursor: true })
 * }
 *
 * return (
 *   <>
 *     <div onPointerDown={startDrag} />
 *     <motion.div drag="x" dragControls={dragControls} />
 *   </>
 * )
 * ```
 *
 * @public
 */
var DragControls = /** @class */ (function () {
    function DragControls() {
        this.componentControls = new Set();
    }
    /**
     * Subscribe a component's internal `VisualElementDragControls` to the user-facing API.
     *
     * @internal
     */
    DragControls.prototype.subscribe = function (controls) {
        var _this = this;
        this.componentControls.add(controls);
        return function () { return _this.componentControls.delete(controls); };
    };
    /**
     * Start a drag gesture on every `motion` component that has this set of drag controls
     * passed into it via the `dragControls` prop.
     *
     * ```jsx
     * dragControls.start(e, {
     *   snapToCursor: true
     * })
     * ```
     *
     * @param event - PointerEvent
     * @param options - Options
     *
     * @public
     */
    DragControls.prototype.start = function (event, options) {
        this.componentControls.forEach(function (controls) {
            controls.start(event.nativeEvent || event, options);
        });
    };
    return DragControls;
}());
var createDragControls = function () { return new DragControls(); };
/**
 * Usually, dragging is initiated by pressing down on a `motion` component with a `drag` prop
 * and moving it. For some use-cases, for instance clicking at an arbitrary point on a video scrubber, we
 * might want to initiate that dragging from a different component than the draggable one.
 *
 * By creating a `dragControls` using the `useDragControls` hook, we can pass this into
 * the draggable component's `dragControls` prop. It exposes a `start` method
 * that can start dragging from pointer events on other components.
 *
 * ```jsx
 * const dragControls = useDragControls()
 *
 * function startDrag(event) {
 *   dragControls.start(event, { snapToCursor: true })
 * }
 *
 * return (
 *   <>
 *     <div onPointerDown={startDrag} />
 *     <motion.div drag="x" dragControls={dragControls} />
 *   </>
 * )
 * ```
 *
 * @public
 */
function useDragControls() {
    return useConstant(createDragControls);
}

function useInstantLayoutTransition() {
    return startTransition;
}
function startTransition(cb) {
    if (!rootProjectionNode.current)
        return;
    rootProjectionNode.current.isUpdating = false;
    rootProjectionNode.current.blockUpdate();
    cb === null || cb === void 0 ? void 0 : cb();
}

function useInstantTransition() {
    var _a = tslib.__read(useForceUpdate(), 2), forceUpdate = _a[0], forcedRenderCount = _a[1];
    var startInstantLayoutTransition = useInstantLayoutTransition();
    React.useEffect(function () {
        /**
         * Unblock after two animation frames, otherwise this will unblock too soon.
         */
        sync__default["default"].postRender(function () {
            return sync__default["default"].postRender(function () { return (instantAnimationState.current = false); });
        });
    }, [forcedRenderCount]);
    return function (callback) {
        startInstantLayoutTransition(function () {
            instantAnimationState.current = true;
            forceUpdate();
            callback();
        });
    };
}

function useResetProjection() {
    var reset = React__namespace.useCallback(function () {
        var root = rootProjectionNode.current;
        if (!root)
            return;
        root.resetTree();
    }, []);
    return reset;
}

var createObject = function () { return ({}); };
var stateVisualElement = visualElement({
    build: function () { },
    measureViewportBox: createBox,
    resetTransform: function () { },
    restoreTransform: function () { },
    removeValueFromRenderState: function () { },
    render: function () { },
    scrapeMotionValuesFromProps: createObject,
    readValueFromInstance: function (_state, key, options) {
        return options.initialState[key] || 0;
    },
    makeTargetAnimatable: function (element, _a) {
        var transition = _a.transition, transitionEnd = _a.transitionEnd, target = tslib.__rest(_a, ["transition", "transitionEnd"]);
        var origin = getOrigin(target, transition || {}, element);
        checkTargetForNewValues(element, target, origin);
        return tslib.__assign({ transition: transition, transitionEnd: transitionEnd }, target);
    },
});
var useVisualState = makeUseVisualState({
    scrapeMotionValuesFromProps: createObject,
    createRenderState: createObject,
});
/**
 * This is not an officially supported API and may be removed
 * on any version.
 */
function useAnimatedState(initialState) {
    var _a = tslib.__read(React.useState(initialState), 2), animationState = _a[0], setAnimationState = _a[1];
    var visualState = useVisualState({}, false);
    var element = useConstant(function () {
        return stateVisualElement({ props: {}, visualState: visualState }, { initialState: initialState });
    });
    React.useEffect(function () {
        element.mount({});
        return element.unmount;
    }, [element]);
    React.useEffect(function () {
        element.setProps({
            onUpdate: function (v) {
                setAnimationState(tslib.__assign({}, v));
            },
        });
    }, [setAnimationState, element]);
    var startAnimation = useConstant(function () { return function (animationDefinition) {
        return animateVisualElement(element, animationDefinition);
    }; });
    return [animationState, startAnimation];
}

// Keep things reasonable and avoid scale: Infinity. In practise we might need
// to add another value, opacity, that could interpolate scaleX/Y [0,0.01] => [0,1]
// to simply hide content at unreasonable scales.
var maxScale = 100000;
var invertScale = function (scale) {
    return scale > 0.001 ? 1 / scale : maxScale;
};
var hasWarned = false;
/**
 * Returns a `MotionValue` each for `scaleX` and `scaleY` that update with the inverse
 * of their respective parent scales.
 *
 * This is useful for undoing the distortion of content when scaling a parent component.
 *
 * By default, `useInvertedScale` will automatically fetch `scaleX` and `scaleY` from the nearest parent.
 * By passing other `MotionValue`s in as `useInvertedScale({ scaleX, scaleY })`, it will invert the output
 * of those instead.
 *
 * ```jsx
 * const MyComponent = () => {
 *   const { scaleX, scaleY } = useInvertedScale()
 *   return <motion.div style={{ scaleX, scaleY }} />
 * }
 * ```
 *
 * @deprecated
 */
function useInvertedScale(scale) {
    var parentScaleX = useMotionValue(1);
    var parentScaleY = useMotionValue(1);
    var visualElement = useVisualElementContext();
    heyListen.invariant(!!(scale || visualElement), "If no scale values are provided, useInvertedScale must be used within a child of another motion component.");
    heyListen.warning(hasWarned, "useInvertedScale is deprecated and will be removed in 3.0. Use the layout prop instead.");
    hasWarned = true;
    if (scale) {
        parentScaleX = scale.scaleX || parentScaleX;
        parentScaleY = scale.scaleY || parentScaleY;
    }
    else if (visualElement) {
        parentScaleX = visualElement.getValue("scaleX", 1);
        parentScaleY = visualElement.getValue("scaleY", 1);
    }
    var scaleX = useTransform(parentScaleX, invertScale);
    var scaleY = useTransform(parentScaleY, invertScale);
    return { scaleX: scaleX, scaleY: scaleY };
}

exports.AnimatePresence = AnimatePresence;
exports.AnimateSharedLayout = AnimateSharedLayout;
exports.DeprecatedLayoutGroupContext = DeprecatedLayoutGroupContext;
exports.DragControls = DragControls;
exports.FlatTree = FlatTree;
exports.LayoutGroup = LayoutGroup;
exports.LayoutGroupContext = LayoutGroupContext;
exports.LazyMotion = LazyMotion;
exports.MotionConfig = MotionConfig;
exports.MotionConfigContext = MotionConfigContext;
exports.MotionContext = MotionContext;
exports.MotionValue = MotionValue;
exports.PresenceContext = PresenceContext;
exports.Reorder = Reorder;
exports.SwitchLayoutGroupContext = SwitchLayoutGroupContext;
exports.addPointerEvent = addPointerEvent;
exports.addScaleCorrector = addScaleCorrector;
exports.animate = animate;
exports.animateVisualElement = animateVisualElement;
exports.animationControls = animationControls;
exports.animations = animations;
exports.calcLength = calcLength;
exports.checkTargetForNewValues = checkTargetForNewValues;
exports.createBox = createBox;
exports.createDomMotionComponent = createDomMotionComponent;
exports.createMotionComponent = createMotionComponent;
exports.domAnimation = domAnimation;
exports.domMax = domMax;
exports.filterProps = filterProps;
exports.isBrowser = isBrowser;
exports.isDragActive = isDragActive;
exports.isMotionValue = isMotionValue;
exports.isValidMotionProp = isValidMotionProp;
exports.m = m;
exports.makeUseVisualState = makeUseVisualState;
exports.motion = motion;
exports.motionValue = motionValue;
exports.resolveMotionValue = resolveMotionValue;
exports.transform = transform;
exports.useAnimation = useAnimation;
exports.useAnimationControls = useAnimationControls;
exports.useAnimationFrame = useAnimationFrame;
exports.useCycle = useCycle;
exports.useDeprecatedAnimatedState = useAnimatedState;
exports.useDeprecatedInvertedScale = useInvertedScale;
exports.useDomEvent = useDomEvent;
exports.useDragControls = useDragControls;
exports.useElementScroll = useElementScroll;
exports.useForceUpdate = useForceUpdate;
exports.useInView = useInView;
exports.useInstantLayoutTransition = useInstantLayoutTransition;
exports.useInstantTransition = useInstantTransition;
exports.useIsPresent = useIsPresent;
exports.useIsomorphicLayoutEffect = useIsomorphicLayoutEffect;
exports.useMotionTemplate = useMotionTemplate;
exports.useMotionValue = useMotionValue;
exports.usePresence = usePresence;
exports.useReducedMotion = useReducedMotion;
exports.useReducedMotionConfig = useReducedMotionConfig;
exports.useResetProjection = useResetProjection;
exports.useScroll = useScroll;
exports.useSpring = useSpring;
exports.useTime = useTime;
exports.useTransform = useTransform;
exports.useUnmountEffect = useUnmountEffect;
exports.useVelocity = useVelocity;
exports.useViewportScroll = useViewportScroll;
exports.useVisualElementContext = useVisualElementContext;
exports.visualElement = visualElement;
exports.wrapHandler = wrapHandler;


/***/ }),

/***/ "./node_modules/framesync/dist/framesync.cjs.js":
/*!******************************************************!*\
  !*** ./node_modules/framesync/dist/framesync.cjs.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({ value: true }));

const defaultTimestep = (1 / 60) * 1000;
const getCurrentTime = typeof performance !== "undefined"
    ? () => performance.now()
    : () => Date.now();
const onNextFrame = typeof window !== "undefined"
    ? (callback) => window.requestAnimationFrame(callback)
    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);

function createRenderStep(runNextFrame) {
    let toRun = [];
    let toRunNextFrame = [];
    let numToRun = 0;
    let isProcessing = false;
    let flushNextFrame = false;
    const toKeepAlive = new WeakSet();
    const step = {
        schedule: (callback, keepAlive = false, immediate = false) => {
            const addToCurrentFrame = immediate && isProcessing;
            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;
            if (keepAlive)
                toKeepAlive.add(callback);
            if (buffer.indexOf(callback) === -1) {
                buffer.push(callback);
                if (addToCurrentFrame && isProcessing)
                    numToRun = toRun.length;
            }
            return callback;
        },
        cancel: (callback) => {
            const index = toRunNextFrame.indexOf(callback);
            if (index !== -1)
                toRunNextFrame.splice(index, 1);
            toKeepAlive.delete(callback);
        },
        process: (frameData) => {
            if (isProcessing) {
                flushNextFrame = true;
                return;
            }
            isProcessing = true;
            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];
            toRunNextFrame.length = 0;
            numToRun = toRun.length;
            if (numToRun) {
                for (let i = 0; i < numToRun; i++) {
                    const callback = toRun[i];
                    callback(frameData);
                    if (toKeepAlive.has(callback)) {
                        step.schedule(callback);
                        runNextFrame();
                    }
                }
            }
            isProcessing = false;
            if (flushNextFrame) {
                flushNextFrame = false;
                step.process(frameData);
            }
        },
    };
    return step;
}

const maxElapsed = 40;
let useDefaultElapsed = true;
let runNextFrame = false;
let isProcessing = false;
const frame = {
    delta: 0,
    timestamp: 0,
};
const stepsOrder = [
    "read",
    "update",
    "preRender",
    "render",
    "postRender",
];
const steps = stepsOrder.reduce((acc, key) => {
    acc[key] = createRenderStep(() => (runNextFrame = true));
    return acc;
}, {});
const sync = stepsOrder.reduce((acc, key) => {
    const step = steps[key];
    acc[key] = (process, keepAlive = false, immediate = false) => {
        if (!runNextFrame)
            startLoop();
        return step.schedule(process, keepAlive, immediate);
    };
    return acc;
}, {});
const cancelSync = stepsOrder.reduce((acc, key) => {
    acc[key] = steps[key].cancel;
    return acc;
}, {});
const flushSync = stepsOrder.reduce((acc, key) => {
    acc[key] = () => steps[key].process(frame);
    return acc;
}, {});
const processStep = (stepId) => steps[stepId].process(frame);
const processFrame = (timestamp) => {
    runNextFrame = false;
    frame.delta = useDefaultElapsed
        ? defaultTimestep
        : Math.max(Math.min(timestamp - frame.timestamp, maxElapsed), 1);
    frame.timestamp = timestamp;
    isProcessing = true;
    stepsOrder.forEach(processStep);
    isProcessing = false;
    if (runNextFrame) {
        useDefaultElapsed = false;
        onNextFrame(processFrame);
    }
};
const startLoop = () => {
    runNextFrame = true;
    useDefaultElapsed = true;
    if (!isProcessing)
        onNextFrame(processFrame);
};
const getFrameData = () => frame;

exports.cancelSync = cancelSync;
exports["default"] = sync;
exports.flushSync = flushSync;
exports.getFrameData = getFrameData;


/***/ }),

/***/ "./node_modules/material-ripple-effects/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/material-ripple-effects/index.js ***!
  \*******************************************************/
/***/ ((module) => {

module.exports = class Ripple {
  constructor() {
    this.x = 0;
    this.y = 0;
    this.z = 0;
  }

  findFurthestPoint(
    clickPointX,
    elementWidth,
    offsetX,
    clickPointY,
    elementHeight,
    offsetY,
  ) {
    this.x = clickPointX - offsetX > elementWidth / 2 ? 0 : elementWidth;
    this.y = clickPointY - offsetY > elementHeight / 2 ? 0 : elementHeight;
    this.z = Math.hypot(
      this.x - (clickPointX - offsetX),
      this.y - (clickPointY - offsetY),
    );

    return this.z;
  }

  appyStyles(element, color, rect, radius, event) {
    element.classList.add('ripple');
    element.style.backgroundColor =
      color === 'dark' ? 'rgba(0,0,0, 0.2)' : 'rgba(255,255,255, 0.3)';
    element.style.borderRadius = '50%';
    element.style.pointerEvents = 'none';
    element.style.position = 'absolute';
    element.style.left = event.clientX - rect.left - radius + 'px';
    element.style.top = event.clientY - rect.top - radius + 'px';
    element.style.width = element.style.height = radius * 2 + 'px';
  }

  applyAnimation(element) {
    element.animate(
      [
        {
          transform: 'scale(0)',
          opacity: 1,
        },
        {
          transform: 'scale(1.5)',
          opacity: 0,
        },
      ],
      {
        duration: 500,
        easing: 'linear',
      },
    );
  }

  create(event, color) {
    const element = event.currentTarget;

    element.style.position = 'relative';
    element.style.overflow = 'hidden';

    const rect = element.getBoundingClientRect();

    const radius = this.findFurthestPoint(
      event.clientX,
      element.offsetWidth,
      rect.left,
      event.clientY,
      element.offsetHeight,
      rect.top,
    );

    const circle = document.createElement('span');

    this.appyStyles(circle, color, rect, radius, event);
    this.applyAnimation(circle);

    element.appendChild(circle);

    setTimeout(() => circle.remove(), 500);
  }
};


/***/ }),

/***/ "./node_modules/motion-dom/dist/es/resize/handle-element.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/motion-dom/dist/es/resize/handle-element.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   resizeElement: () => (/* binding */ resizeElement)
/* harmony export */ });
/* harmony import */ var _utils_is_svg_element_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/is-svg-element.mjs */ "./node_modules/motion-dom/dist/es/utils/is-svg-element.mjs");
/* harmony import */ var _utils_resolve_elements_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/resolve-elements.mjs */ "./node_modules/motion-dom/dist/es/utils/resolve-elements.mjs");



const resizeHandlers = new WeakMap();
let observer;
const getSize = (borderBoxAxis, svgAxis, htmlAxis) => (target, borderBoxSize) => {
    if (borderBoxSize && borderBoxSize[0]) {
        return borderBoxSize[0][(borderBoxAxis + "Size")];
    }
    else if ((0,_utils_is_svg_element_mjs__WEBPACK_IMPORTED_MODULE_0__.isSVGElement)(target) && "getBBox" in target) {
        return target.getBBox()[svgAxis];
    }
    else {
        return target[htmlAxis];
    }
};
const getWidth = /*@__PURE__*/ getSize("inline", "width", "offsetWidth");
const getHeight = /*@__PURE__*/ getSize("block", "height", "offsetHeight");
function notifyTarget({ target, borderBoxSize }) {
    resizeHandlers.get(target)?.forEach((handler) => {
        handler(target, {
            get width() {
                return getWidth(target, borderBoxSize);
            },
            get height() {
                return getHeight(target, borderBoxSize);
            },
        });
    });
}
function notifyAll(entries) {
    entries.forEach(notifyTarget);
}
function createResizeObserver() {
    if (typeof ResizeObserver === "undefined")
        return;
    observer = new ResizeObserver(notifyAll);
}
function resizeElement(target, handler) {
    if (!observer)
        createResizeObserver();
    const elements = (0,_utils_resolve_elements_mjs__WEBPACK_IMPORTED_MODULE_1__.resolveElements)(target);
    elements.forEach((element) => {
        let elementHandlers = resizeHandlers.get(element);
        if (!elementHandlers) {
            elementHandlers = new Set();
            resizeHandlers.set(element, elementHandlers);
        }
        elementHandlers.add(handler);
        observer?.observe(element);
    });
    return () => {
        elements.forEach((element) => {
            const elementHandlers = resizeHandlers.get(element);
            elementHandlers?.delete(handler);
            if (!elementHandlers?.size) {
                observer?.unobserve(element);
            }
        });
    };
}




/***/ }),

/***/ "./node_modules/motion-dom/dist/es/resize/handle-window.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/motion-dom/dist/es/resize/handle-window.mjs ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   resizeWindow: () => (/* binding */ resizeWindow)
/* harmony export */ });
const windowCallbacks = new Set();
let windowResizeHandler;
function createWindowResizeHandler() {
    windowResizeHandler = () => {
        const info = {
            get width() {
                return window.innerWidth;
            },
            get height() {
                return window.innerHeight;
            },
        };
        windowCallbacks.forEach((callback) => callback(info));
    };
    window.addEventListener("resize", windowResizeHandler);
}
function resizeWindow(callback) {
    windowCallbacks.add(callback);
    if (!windowResizeHandler)
        createWindowResizeHandler();
    return () => {
        windowCallbacks.delete(callback);
        if (!windowCallbacks.size &&
            typeof windowResizeHandler === "function") {
            window.removeEventListener("resize", windowResizeHandler);
            windowResizeHandler = undefined;
        }
    };
}




/***/ }),

/***/ "./node_modules/motion-dom/dist/es/resize/index.mjs":
/*!**********************************************************!*\
  !*** ./node_modules/motion-dom/dist/es/resize/index.mjs ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   resize: () => (/* binding */ resize)
/* harmony export */ });
/* harmony import */ var _handle_element_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./handle-element.mjs */ "./node_modules/motion-dom/dist/es/resize/handle-element.mjs");
/* harmony import */ var _handle_window_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./handle-window.mjs */ "./node_modules/motion-dom/dist/es/resize/handle-window.mjs");



function resize(a, b) {
    return typeof a === "function" ? (0,_handle_window_mjs__WEBPACK_IMPORTED_MODULE_1__.resizeWindow)(a) : (0,_handle_element_mjs__WEBPACK_IMPORTED_MODULE_0__.resizeElement)(a, b);
}




/***/ }),

/***/ "./node_modules/motion-dom/dist/es/scroll/observe.mjs":
/*!************************************************************!*\
  !*** ./node_modules/motion-dom/dist/es/scroll/observe.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   observeTimeline: () => (/* binding */ observeTimeline)
/* harmony export */ });
/* harmony import */ var _frameloop_frame_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../frameloop/frame.mjs */ "./node_modules/motion-dom/dist/es/frameloop/frame.mjs");


function observeTimeline(update, timeline) {
    let prevProgress;
    const onFrame = () => {
        const { currentTime } = timeline;
        const percentage = currentTime === null ? 0 : currentTime.value;
        const progress = percentage / 100;
        if (prevProgress !== progress) {
            update(progress);
        }
        prevProgress = progress;
    };
    _frameloop_frame_mjs__WEBPACK_IMPORTED_MODULE_0__.frame.preUpdate(onFrame, true);
    return () => (0,_frameloop_frame_mjs__WEBPACK_IMPORTED_MODULE_0__.cancelFrame)(onFrame);
}




/***/ }),

/***/ "./node_modules/motion-dom/dist/es/utils/transform.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/motion-dom/dist/es/utils/transform.mjs ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   transform: () => (/* binding */ transform)
/* harmony export */ });
/* harmony import */ var _interpolate_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interpolate.mjs */ "./node_modules/motion-dom/dist/es/utils/interpolate.mjs");


function transform(...args) {
    const useImmediate = !Array.isArray(args[0]);
    const argOffset = useImmediate ? 0 : -1;
    const inputValue = args[0 + argOffset];
    const inputRange = args[1 + argOffset];
    const outputRange = args[2 + argOffset];
    const options = args[3 + argOffset];
    const interpolator = (0,_interpolate_mjs__WEBPACK_IMPORTED_MODULE_0__.interpolate)(inputRange, outputRange, options);
    return useImmediate ? interpolator(inputValue) : interpolator;
}




/***/ }),

/***/ "./node_modules/motion/node_modules/framer-motion/dist/es/render/components/create-proxy.mjs":
/*!***************************************************************************************************!*\
  !*** ./node_modules/motion/node_modules/framer-motion/dist/es/render/components/create-proxy.mjs ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createMotionProxy: () => (/* binding */ createMotionProxy)
/* harmony export */ });
/* harmony import */ var motion_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! motion-utils */ "./node_modules/motion-utils/dist/es/warn-once.mjs");
/* harmony import */ var _motion_index_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../motion/index.mjs */ "./node_modules/motion/node_modules/framer-motion/dist/es/motion/index.mjs");



function createMotionProxy(preloadedFeatures, createVisualElement) {
    if (typeof Proxy === "undefined") {
        return _motion_index_mjs__WEBPACK_IMPORTED_MODULE_1__.createMotionComponent;
    }
    /**
     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.
     * Rather than generating them anew every render.
     */
    const componentCache = new Map();
    const factory = (Component, options) => {
        return (0,_motion_index_mjs__WEBPACK_IMPORTED_MODULE_1__.createMotionComponent)(Component, options, preloadedFeatures, createVisualElement);
    };
    /**
     * Support for deprecated`motion(Component)` pattern
     */
    const deprecatedFactoryFunction = (Component, options) => {
        if (true) {
            (0,motion_utils__WEBPACK_IMPORTED_MODULE_0__.warnOnce)(false, "motion() is deprecated. Use motion.create() instead.");
        }
        return factory(Component, options);
    };
    return new Proxy(deprecatedFactoryFunction, {
        /**
         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.
         * The prop name is passed through as `key` and we can use that to generate a `motion`
         * DOM component with that name.
         */
        get: (_target, key) => {
            if (key === "create")
                return factory;
            /**
             * If this element doesn't exist in the component cache, create it and cache.
             */
            if (!componentCache.has(key)) {
                componentCache.set(key, (0,_motion_index_mjs__WEBPACK_IMPORTED_MODULE_1__.createMotionComponent)(key, undefined, preloadedFeatures, createVisualElement));
            }
            return componentCache.get(key);
        },
    });
}




/***/ }),

/***/ "./node_modules/motion/node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs":
/*!***************************************************************************************************!*\
  !*** ./node_modules/motion/node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   motion: () => (/* binding */ motion)
/* harmony export */ });
/* harmony import */ var _dom_create_visual_element_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../dom/create-visual-element.mjs */ "./node_modules/motion/node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs");
/* harmony import */ var _create_proxy_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../create-proxy.mjs */ "./node_modules/motion/node_modules/framer-motion/dist/es/render/components/create-proxy.mjs");
/* harmony import */ var _feature_bundle_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./feature-bundle.mjs */ "./node_modules/motion/node_modules/framer-motion/dist/es/render/components/motion/feature-bundle.mjs");




const motion = /*@__PURE__*/ (0,_create_proxy_mjs__WEBPACK_IMPORTED_MODULE_1__.createMotionProxy)(_feature_bundle_mjs__WEBPACK_IMPORTED_MODULE_2__.featureBundle, _dom_create_visual_element_mjs__WEBPACK_IMPORTED_MODULE_0__.createDomVisualElement);




/***/ }),

/***/ "./node_modules/motion/node_modules/framer-motion/dist/es/render/dom/scroll/attach-animation.mjs":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/motion/node_modules/framer-motion/dist/es/render/dom/scroll/attach-animation.mjs ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   attachToAnimation: () => (/* binding */ attachToAnimation)
/* harmony export */ });
/* harmony import */ var motion_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! motion-dom */ "./node_modules/motion-dom/dist/es/scroll/observe.mjs");
/* harmony import */ var _utils_get_timeline_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/get-timeline.mjs */ "./node_modules/motion/node_modules/framer-motion/dist/es/render/dom/scroll/utils/get-timeline.mjs");



function attachToAnimation(animation, options) {
    const timeline = (0,_utils_get_timeline_mjs__WEBPACK_IMPORTED_MODULE_1__.getTimeline)(options);
    return animation.attachTimeline({
        timeline: options.target ? undefined : timeline,
        observe: (valueAnimation) => {
            valueAnimation.pause();
            return (0,motion_dom__WEBPACK_IMPORTED_MODULE_0__.observeTimeline)((progress) => {
                valueAnimation.time =
                    valueAnimation.iterationDuration * progress;
            }, timeline);
        },
    });
}




/***/ }),

/***/ "./node_modules/motion/node_modules/framer-motion/dist/es/render/dom/scroll/attach-function.mjs":
/*!******************************************************************************************************!*\
  !*** ./node_modules/motion/node_modules/framer-motion/dist/es/render/dom/scroll/attach-function.mjs ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   attachToFunction: () => (/* binding */ attachToFunction)
/* harmony export */ });
/* harmony import */ var motion_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! motion-dom */ "./node_modules/motion-dom/dist/es/scroll/observe.mjs");
/* harmony import */ var _track_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./track.mjs */ "./node_modules/motion/node_modules/framer-motion/dist/es/render/dom/scroll/track.mjs");
/* harmony import */ var _utils_get_timeline_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/get-timeline.mjs */ "./node_modules/motion/node_modules/framer-motion/dist/es/render/dom/scroll/utils/get-timeline.mjs");




/**
 * If the onScroll function has two arguments, it's expecting
 * more specific information about the scroll from scrollInfo.
 */
function isOnScrollWithInfo(onScroll) {
    return onScroll.length === 2;
}
function attachToFunction(onScroll, options) {
    if (isOnScrollWithInfo(onScroll)) {
        return (0,_track_mjs__WEBPACK_IMPORTED_MODULE_1__.scrollInfo)((info) => {
            onScroll(info[options.axis].progress, info);
        }, options);
    }
    else {
        return (0,motion_dom__WEBPACK_IMPORTED_MODULE_0__.observeTimeline)(onScroll, (0,_utils_get_timeline_mjs__WEBPACK_IMPORTED_MODULE_2__.getTimeline)(options));
    }
}




/***/ }),

/***/ "./node_modules/motion/node_modules/framer-motion/dist/es/render/dom/scroll/index.mjs":
/*!********************************************************************************************!*\
  !*** ./node_modules/motion/node_modules/framer-motion/dist/es/render/dom/scroll/index.mjs ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   scroll: () => (/* binding */ scroll)
/* harmony export */ });
/* harmony import */ var motion_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! motion-utils */ "./node_modules/motion-utils/dist/es/noop.mjs");
/* harmony import */ var _attach_animation_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./attach-animation.mjs */ "./node_modules/motion/node_modules/framer-motion/dist/es/render/dom/scroll/attach-animation.mjs");
/* harmony import */ var _attach_function_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./attach-function.mjs */ "./node_modules/motion/node_modules/framer-motion/dist/es/render/dom/scroll/attach-function.mjs");




function scroll(onScroll, { axis = "y", container = document.scrollingElement, ...options } = {}) {
    if (!container)
        return motion_utils__WEBPACK_IMPORTED_MODULE_0__.noop;
    const optionsWithDefaults = { axis, container, ...options };
    return typeof onScroll === "function"
        ? (0,_attach_function_mjs__WEBPACK_IMPORTED_MODULE_2__.attachToFunction)(onScroll, optionsWithDefaults)
        : (0,_attach_animation_mjs__WEBPACK_IMPORTED_MODULE_1__.attachToAnimation)(onScroll, optionsWithDefaults);
}




/***/ }),

/***/ "./node_modules/motion/node_modules/framer-motion/dist/es/render/dom/scroll/info.mjs":
/*!*******************************************************************************************!*\
  !*** ./node_modules/motion/node_modules/framer-motion/dist/es/render/dom/scroll/info.mjs ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createScrollInfo: () => (/* binding */ createScrollInfo),
/* harmony export */   updateScrollInfo: () => (/* binding */ updateScrollInfo)
/* harmony export */ });
/* harmony import */ var motion_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! motion-utils */ "./node_modules/motion-utils/dist/es/progress.mjs");
/* harmony import */ var motion_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! motion-utils */ "./node_modules/motion-utils/dist/es/velocity-per-second.mjs");


/**
 * A time in milliseconds, beyond which we consider the scroll velocity to be 0.
 */
const maxElapsed = 50;
const createAxisInfo = () => ({
    current: 0,
    offset: [],
    progress: 0,
    scrollLength: 0,
    targetOffset: 0,
    targetLength: 0,
    containerLength: 0,
    velocity: 0,
});
const createScrollInfo = () => ({
    time: 0,
    x: createAxisInfo(),
    y: createAxisInfo(),
});
const keys = {
    x: {
        length: "Width",
        position: "Left",
    },
    y: {
        length: "Height",
        position: "Top",
    },
};
function updateAxisInfo(element, axisName, info, time) {
    const axis = info[axisName];
    const { length, position } = keys[axisName];
    const prev = axis.current;
    const prevTime = info.time;
    axis.current = element[`scroll${position}`];
    axis.scrollLength = element[`scroll${length}`] - element[`client${length}`];
    axis.offset.length = 0;
    axis.offset[0] = 0;
    axis.offset[1] = axis.scrollLength;
    axis.progress = (0,motion_utils__WEBPACK_IMPORTED_MODULE_0__.progress)(0, axis.scrollLength, axis.current);
    const elapsed = time - prevTime;
    axis.velocity =
        elapsed > maxElapsed
            ? 0
            : (0,motion_utils__WEBPACK_IMPORTED_MODULE_1__.velocityPerSecond)(axis.current - prev, elapsed);
}
function updateScrollInfo(element, info, time) {
    updateAxisInfo(element, "x", info, time);
    updateAxisInfo(element, "y", info, time);
    info.time = time;
}




/***/ }),

/***/ "./node_modules/motion/node_modules/framer-motion/dist/es/render/dom/scroll/offsets/edge.mjs":
/*!***************************************************************************************************!*\
  !*** ./node_modules/motion/node_modules/framer-motion/dist/es/render/dom/scroll/offsets/edge.mjs ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   namedEdges: () => (/* binding */ namedEdges),
/* harmony export */   resolveEdge: () => (/* binding */ resolveEdge)
/* harmony export */ });
const namedEdges = {
    start: 0,
    center: 0.5,
    end: 1,
};
function resolveEdge(edge, length, inset = 0) {
    let delta = 0;
    /**
     * If we have this edge defined as a preset, replace the definition
     * with the numerical value.
     */
    if (edge in namedEdges) {
        edge = namedEdges[edge];
    }
    /**
     * Handle unit values
     */
    if (typeof edge === "string") {
        const asNumber = parseFloat(edge);
        if (edge.endsWith("px")) {
            delta = asNumber;
        }
        else if (edge.endsWith("%")) {
            edge = asNumber / 100;
        }
        else if (edge.endsWith("vw")) {
            delta = (asNumber / 100) * document.documentElement.clientWidth;
        }
        else if (edge.endsWith("vh")) {
            delta = (asNumber / 100) * document.documentElement.clientHeight;
        }
        else {
            edge = asNumber;
        }
    }
    /**
     * If the edge is defined as a number, handle as a progress value.
     */
    if (typeof edge === "number") {
        delta = length * edge;
    }
    return inset + delta;
}




/***/ }),

/***/ "./node_modules/motion/node_modules/framer-motion/dist/es/render/dom/scroll/offsets/index.mjs":
/*!****************************************************************************************************!*\
  !*** ./node_modules/motion/node_modules/framer-motion/dist/es/render/dom/scroll/offsets/index.mjs ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   resolveOffsets: () => (/* binding */ resolveOffsets)
/* harmony export */ });
/* harmony import */ var motion_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! motion-dom */ "./node_modules/motion-dom/dist/es/animation/keyframes/offsets/default.mjs");
/* harmony import */ var motion_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! motion-dom */ "./node_modules/motion-dom/dist/es/utils/interpolate.mjs");
/* harmony import */ var motion_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! motion-utils */ "./node_modules/motion-utils/dist/es/clamp.mjs");
/* harmony import */ var _inset_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./inset.mjs */ "./node_modules/motion/node_modules/framer-motion/dist/es/render/dom/scroll/offsets/inset.mjs");
/* harmony import */ var _offset_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./offset.mjs */ "./node_modules/motion/node_modules/framer-motion/dist/es/render/dom/scroll/offsets/offset.mjs");
/* harmony import */ var _presets_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./presets.mjs */ "./node_modules/motion/node_modules/framer-motion/dist/es/render/dom/scroll/offsets/presets.mjs");






const point = { x: 0, y: 0 };
function getTargetSize(target) {
    return "getBBox" in target && target.tagName !== "svg"
        ? target.getBBox()
        : { width: target.clientWidth, height: target.clientHeight };
}
function resolveOffsets(container, info, options) {
    const { offset: offsetDefinition = _presets_mjs__WEBPACK_IMPORTED_MODULE_5__.ScrollOffset.All } = options;
    const { target = container, axis = "y" } = options;
    const lengthLabel = axis === "y" ? "height" : "width";
    const inset = target !== container ? (0,_inset_mjs__WEBPACK_IMPORTED_MODULE_3__.calcInset)(target, container) : point;
    /**
     * Measure the target and container. If they're the same thing then we
     * use the container's scrollWidth/Height as the target, from there
     * all other calculations can remain the same.
     */
    const targetSize = target === container
        ? { width: container.scrollWidth, height: container.scrollHeight }
        : getTargetSize(target);
    const containerSize = {
        width: container.clientWidth,
        height: container.clientHeight,
    };
    /**
     * Reset the length of the resolved offset array rather than creating a new one.
     * TODO: More reusable data structures for targetSize/containerSize would also be good.
     */
    info[axis].offset.length = 0;
    /**
     * Populate the offset array by resolving the user's offset definition into
     * a list of pixel scroll offets.
     */
    let hasChanged = !info[axis].interpolate;
    const numOffsets = offsetDefinition.length;
    for (let i = 0; i < numOffsets; i++) {
        const offset = (0,_offset_mjs__WEBPACK_IMPORTED_MODULE_4__.resolveOffset)(offsetDefinition[i], containerSize[lengthLabel], targetSize[lengthLabel], inset[axis]);
        if (!hasChanged && offset !== info[axis].interpolatorOffsets[i]) {
            hasChanged = true;
        }
        info[axis].offset[i] = offset;
    }
    /**
     * If the pixel scroll offsets have changed, create a new interpolator function
     * to map scroll value into a progress.
     */
    if (hasChanged) {
        info[axis].interpolate = (0,motion_dom__WEBPACK_IMPORTED_MODULE_1__.interpolate)(info[axis].offset, (0,motion_dom__WEBPACK_IMPORTED_MODULE_0__.defaultOffset)(offsetDefinition), { clamp: false });
        info[axis].interpolatorOffsets = [...info[axis].offset];
    }
    info[axis].progress = (0,motion_utils__WEBPACK_IMPORTED_MODULE_2__.clamp)(0, 1, info[axis].interpolate(info[axis].current));
}




/***/ }),

/***/ "./node_modules/motion/node_modules/framer-motion/dist/es/render/dom/scroll/offsets/inset.mjs":
/*!****************************************************************************************************!*\
  !*** ./node_modules/motion/node_modules/framer-motion/dist/es/render/dom/scroll/offsets/inset.mjs ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   calcInset: () => (/* binding */ calcInset)
/* harmony export */ });
/* harmony import */ var motion_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! motion-dom */ "./node_modules/motion-dom/dist/es/utils/is-html-element.mjs");


function calcInset(element, container) {
    const inset = { x: 0, y: 0 };
    let current = element;
    while (current && current !== container) {
        if ((0,motion_dom__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(current)) {
            inset.x += current.offsetLeft;
            inset.y += current.offsetTop;
            current = current.offsetParent;
        }
        else if (current.tagName === "svg") {
            /**
             * This isn't an ideal approach to measuring the offset of <svg /> tags.
             * It would be preferable, given they behave like HTMLElements in most ways
             * to use offsetLeft/Top. But these don't exist on <svg />. Likewise we
             * can't use .getBBox() like most SVG elements as these provide the offset
             * relative to the SVG itself, which for <svg /> is usually 0x0.
             */
            const svgBoundingBox = current.getBoundingClientRect();
            current = current.parentElement;
            const parentBoundingBox = current.getBoundingClientRect();
            inset.x += svgBoundingBox.left - parentBoundingBox.left;
            inset.y += svgBoundingBox.top - parentBoundingBox.top;
        }
        else if (current instanceof SVGGraphicsElement) {
            const { x, y } = current.getBBox();
            inset.x += x;
            inset.y += y;
            let svg = null;
            let parent = current.parentNode;
            while (!svg) {
                if (parent.tagName === "svg") {
                    svg = parent;
                }
                parent = current.parentNode;
            }
            current = svg;
        }
        else {
            break;
        }
    }
    return inset;
}




/***/ }),

/***/ "./node_modules/motion/node_modules/framer-motion/dist/es/render/dom/scroll/offsets/offset.mjs":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/motion/node_modules/framer-motion/dist/es/render/dom/scroll/offsets/offset.mjs ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   resolveOffset: () => (/* binding */ resolveOffset)
/* harmony export */ });
/* harmony import */ var _edge_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./edge.mjs */ "./node_modules/motion/node_modules/framer-motion/dist/es/render/dom/scroll/offsets/edge.mjs");


const defaultOffset = [0, 0];
function resolveOffset(offset, containerLength, targetLength, targetInset) {
    let offsetDefinition = Array.isArray(offset) ? offset : defaultOffset;
    let targetPoint = 0;
    let containerPoint = 0;
    if (typeof offset === "number") {
        /**
         * If we're provided offset: [0, 0.5, 1] then each number x should become
         * [x, x], so we default to the behaviour of mapping 0 => 0 of both target
         * and container etc.
         */
        offsetDefinition = [offset, offset];
    }
    else if (typeof offset === "string") {
        offset = offset.trim();
        if (offset.includes(" ")) {
            offsetDefinition = offset.split(" ");
        }
        else {
            /**
             * If we're provided a definition like "100px" then we want to apply
             * that only to the top of the target point, leaving the container at 0.
             * Whereas a named offset like "end" should be applied to both.
             */
            offsetDefinition = [offset, _edge_mjs__WEBPACK_IMPORTED_MODULE_0__.namedEdges[offset] ? offset : `0`];
        }
    }
    targetPoint = (0,_edge_mjs__WEBPACK_IMPORTED_MODULE_0__.resolveEdge)(offsetDefinition[0], targetLength, targetInset);
    containerPoint = (0,_edge_mjs__WEBPACK_IMPORTED_MODULE_0__.resolveEdge)(offsetDefinition[1], containerLength);
    return targetPoint - containerPoint;
}




/***/ }),

/***/ "./node_modules/motion/node_modules/framer-motion/dist/es/render/dom/scroll/offsets/presets.mjs":
/*!******************************************************************************************************!*\
  !*** ./node_modules/motion/node_modules/framer-motion/dist/es/render/dom/scroll/offsets/presets.mjs ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ScrollOffset: () => (/* binding */ ScrollOffset)
/* harmony export */ });
const ScrollOffset = {
    Enter: [
        [0, 1],
        [1, 1],
    ],
    Exit: [
        [0, 0],
        [1, 0],
    ],
    Any: [
        [1, 0],
        [0, 1],
    ],
    All: [
        [0, 0],
        [1, 1],
    ],
};




/***/ }),

/***/ "./node_modules/motion/node_modules/framer-motion/dist/es/render/dom/scroll/on-scroll-handler.mjs":
/*!********************************************************************************************************!*\
  !*** ./node_modules/motion/node_modules/framer-motion/dist/es/render/dom/scroll/on-scroll-handler.mjs ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createOnScrollHandler: () => (/* binding */ createOnScrollHandler)
/* harmony export */ });
/* harmony import */ var motion_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! motion-utils */ "./node_modules/motion-utils/dist/es/warn-once.mjs");
/* harmony import */ var _info_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./info.mjs */ "./node_modules/motion/node_modules/framer-motion/dist/es/render/dom/scroll/info.mjs");
/* harmony import */ var _offsets_index_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./offsets/index.mjs */ "./node_modules/motion/node_modules/framer-motion/dist/es/render/dom/scroll/offsets/index.mjs");




function measure(container, target = container, info) {
    /**
     * Find inset of target within scrollable container
     */
    info.x.targetOffset = 0;
    info.y.targetOffset = 0;
    if (target !== container) {
        let node = target;
        while (node && node !== container) {
            info.x.targetOffset += node.offsetLeft;
            info.y.targetOffset += node.offsetTop;
            node = node.offsetParent;
        }
    }
    info.x.targetLength =
        target === container ? target.scrollWidth : target.clientWidth;
    info.y.targetLength =
        target === container ? target.scrollHeight : target.clientHeight;
    info.x.containerLength = container.clientWidth;
    info.y.containerLength = container.clientHeight;
    /**
     * In development mode ensure scroll containers aren't position: static as this makes
     * it difficult to measure their relative positions.
     */
    if (true) {
        if (container && target && target !== container) {
            (0,motion_utils__WEBPACK_IMPORTED_MODULE_0__.warnOnce)(getComputedStyle(container).position !== "static", "Please ensure that the container has a non-static position, like 'relative', 'fixed', or 'absolute' to ensure scroll offset is calculated correctly.");
        }
    }
}
function createOnScrollHandler(element, onScroll, info, options = {}) {
    return {
        measure: (time) => {
            measure(element, options.target, info);
            (0,_info_mjs__WEBPACK_IMPORTED_MODULE_1__.updateScrollInfo)(element, info, time);
            if (options.offset || options.target) {
                (0,_offsets_index_mjs__WEBPACK_IMPORTED_MODULE_2__.resolveOffsets)(element, info, options);
            }
        },
        notify: () => onScroll(info),
    };
}




/***/ }),

/***/ "./node_modules/motion/node_modules/framer-motion/dist/es/render/dom/scroll/track.mjs":
/*!********************************************************************************************!*\
  !*** ./node_modules/motion/node_modules/framer-motion/dist/es/render/dom/scroll/track.mjs ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   scrollInfo: () => (/* binding */ scrollInfo)
/* harmony export */ });
/* harmony import */ var motion_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! motion-dom */ "./node_modules/motion-dom/dist/es/resize/index.mjs");
/* harmony import */ var motion_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! motion-dom */ "./node_modules/motion-dom/dist/es/frameloop/frame.mjs");
/* harmony import */ var motion_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! motion-utils */ "./node_modules/motion-utils/dist/es/noop.mjs");
/* harmony import */ var _info_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./info.mjs */ "./node_modules/motion/node_modules/framer-motion/dist/es/render/dom/scroll/info.mjs");
/* harmony import */ var _on_scroll_handler_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./on-scroll-handler.mjs */ "./node_modules/motion/node_modules/framer-motion/dist/es/render/dom/scroll/on-scroll-handler.mjs");





const scrollListeners = new WeakMap();
const resizeListeners = new WeakMap();
const onScrollHandlers = new WeakMap();
const getEventTarget = (element) => element === document.scrollingElement ? window : element;
function scrollInfo(onScroll, { container = document.scrollingElement, ...options } = {}) {
    if (!container)
        return motion_utils__WEBPACK_IMPORTED_MODULE_2__.noop;
    let containerHandlers = onScrollHandlers.get(container);
    /**
     * Get the onScroll handlers for this container.
     * If one isn't found, create a new one.
     */
    if (!containerHandlers) {
        containerHandlers = new Set();
        onScrollHandlers.set(container, containerHandlers);
    }
    /**
     * Create a new onScroll handler for the provided callback.
     */
    const info = (0,_info_mjs__WEBPACK_IMPORTED_MODULE_3__.createScrollInfo)();
    const containerHandler = (0,_on_scroll_handler_mjs__WEBPACK_IMPORTED_MODULE_4__.createOnScrollHandler)(container, onScroll, info, options);
    containerHandlers.add(containerHandler);
    /**
     * Check if there's a scroll event listener for this container.
     * If not, create one.
     */
    if (!scrollListeners.has(container)) {
        const measureAll = () => {
            for (const handler of containerHandlers) {
                handler.measure(motion_dom__WEBPACK_IMPORTED_MODULE_1__.frameData.timestamp);
            }
            motion_dom__WEBPACK_IMPORTED_MODULE_1__.frame.preUpdate(notifyAll);
        };
        const notifyAll = () => {
            for (const handler of containerHandlers) {
                handler.notify();
            }
        };
        const listener = () => motion_dom__WEBPACK_IMPORTED_MODULE_1__.frame.read(measureAll);
        scrollListeners.set(container, listener);
        const target = getEventTarget(container);
        window.addEventListener("resize", listener, { passive: true });
        if (container !== document.documentElement) {
            resizeListeners.set(container, (0,motion_dom__WEBPACK_IMPORTED_MODULE_0__.resize)(container, listener));
        }
        target.addEventListener("scroll", listener, { passive: true });
        listener();
    }
    const listener = scrollListeners.get(container);
    motion_dom__WEBPACK_IMPORTED_MODULE_1__.frame.read(listener, false, true);
    return () => {
        (0,motion_dom__WEBPACK_IMPORTED_MODULE_1__.cancelFrame)(listener);
        /**
         * Check if we even have any handlers for this container.
         */
        const currentHandlers = onScrollHandlers.get(container);
        if (!currentHandlers)
            return;
        currentHandlers.delete(containerHandler);
        if (currentHandlers.size)
            return;
        /**
         * If no more handlers, remove the scroll listener too.
         */
        const scrollListener = scrollListeners.get(container);
        scrollListeners.delete(container);
        if (scrollListener) {
            getEventTarget(container).removeEventListener("scroll", scrollListener);
            resizeListeners.get(container)?.();
            window.removeEventListener("resize", scrollListener);
        }
    };
}




/***/ }),

/***/ "./node_modules/motion/node_modules/framer-motion/dist/es/render/dom/scroll/utils/get-timeline.mjs":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/motion/node_modules/framer-motion/dist/es/render/dom/scroll/utils/get-timeline.mjs ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getTimeline: () => (/* binding */ getTimeline)
/* harmony export */ });
/* harmony import */ var motion_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! motion-dom */ "./node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs");
/* harmony import */ var _track_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../track.mjs */ "./node_modules/motion/node_modules/framer-motion/dist/es/render/dom/scroll/track.mjs");



const timelineCache = new Map();
function scrollTimelineFallback(options) {
    const currentTime = { value: 0 };
    const cancel = (0,_track_mjs__WEBPACK_IMPORTED_MODULE_1__.scrollInfo)((info) => {
        currentTime.value = info[options.axis].progress * 100;
    }, options);
    return { currentTime, cancel };
}
function getTimeline({ source, container, ...options }) {
    const { axis } = options;
    if (source)
        container = source;
    const containerCache = timelineCache.get(container) ?? new Map();
    timelineCache.set(container, containerCache);
    const targetKey = options.target ?? "self";
    const targetCache = containerCache.get(targetKey) ?? {};
    const axisKey = axis + (options.offset ?? []).join(",");
    if (!targetCache[axisKey]) {
        targetCache[axisKey] =
            !options.target && (0,motion_dom__WEBPACK_IMPORTED_MODULE_0__.supportsScrollTimeline)()
                ? new ScrollTimeline({ source: container, axis })
                : scrollTimelineFallback({ container, ...options });
    }
    return targetCache[axisKey];
}




/***/ }),

/***/ "./node_modules/motion/node_modules/framer-motion/dist/es/value/use-combine-values.mjs":
/*!*********************************************************************************************!*\
  !*** ./node_modules/motion/node_modules/framer-motion/dist/es/value/use-combine-values.mjs ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useCombineMotionValues: () => (/* binding */ useCombineMotionValues)
/* harmony export */ });
/* harmony import */ var motion_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! motion-dom */ "./node_modules/motion-dom/dist/es/frameloop/frame.mjs");
/* harmony import */ var _utils_use_isomorphic_effect_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/use-isomorphic-effect.mjs */ "./node_modules/motion/node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs");
/* harmony import */ var _use_motion_value_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./use-motion-value.mjs */ "./node_modules/motion/node_modules/framer-motion/dist/es/value/use-motion-value.mjs");
"use client";




function useCombineMotionValues(values, combineValues) {
    /**
     * Initialise the returned motion value. This remains the same between renders.
     */
    const value = (0,_use_motion_value_mjs__WEBPACK_IMPORTED_MODULE_2__.useMotionValue)(combineValues());
    /**
     * Create a function that will update the template motion value with the latest values.
     * This is pre-bound so whenever a motion value updates it can schedule its
     * execution in Framesync. If it's already been scheduled it won't be fired twice
     * in a single frame.
     */
    const updateValue = () => value.set(combineValues());
    /**
     * Synchronously update the motion value with the latest values during the render.
     * This ensures that within a React render, the styles applied to the DOM are up-to-date.
     */
    updateValue();
    /**
     * Subscribe to all motion values found within the template. Whenever any of them change,
     * schedule an update.
     */
    (0,_utils_use_isomorphic_effect_mjs__WEBPACK_IMPORTED_MODULE_1__.useIsomorphicLayoutEffect)(() => {
        const scheduleUpdate = () => motion_dom__WEBPACK_IMPORTED_MODULE_0__.frame.preRender(updateValue, false, true);
        const subscriptions = values.map((v) => v.on("change", scheduleUpdate));
        return () => {
            subscriptions.forEach((unsubscribe) => unsubscribe());
            (0,motion_dom__WEBPACK_IMPORTED_MODULE_0__.cancelFrame)(updateValue);
        };
    });
    return value;
}




/***/ }),

/***/ "./node_modules/motion/node_modules/framer-motion/dist/es/value/use-computed.mjs":
/*!***************************************************************************************!*\
  !*** ./node_modules/motion/node_modules/framer-motion/dist/es/value/use-computed.mjs ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useComputed: () => (/* binding */ useComputed)
/* harmony export */ });
/* harmony import */ var motion_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! motion-dom */ "./node_modules/motion-dom/dist/es/value/index.mjs");
/* harmony import */ var _use_combine_values_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./use-combine-values.mjs */ "./node_modules/motion/node_modules/framer-motion/dist/es/value/use-combine-values.mjs");
"use client";



function useComputed(compute) {
    /**
     * Open session of collectMotionValues. Any MotionValue that calls get()
     * will be saved into this array.
     */
    motion_dom__WEBPACK_IMPORTED_MODULE_0__.collectMotionValues.current = [];
    compute();
    const value = (0,_use_combine_values_mjs__WEBPACK_IMPORTED_MODULE_1__.useCombineMotionValues)(motion_dom__WEBPACK_IMPORTED_MODULE_0__.collectMotionValues.current, compute);
    /**
     * Synchronously close session of collectMotionValues.
     */
    motion_dom__WEBPACK_IMPORTED_MODULE_0__.collectMotionValues.current = undefined;
    return value;
}




/***/ }),

/***/ "./node_modules/motion/node_modules/framer-motion/dist/es/value/use-motion-value.mjs":
/*!*******************************************************************************************!*\
  !*** ./node_modules/motion/node_modules/framer-motion/dist/es/value/use-motion-value.mjs ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useMotionValue: () => (/* binding */ useMotionValue)
/* harmony export */ });
/* harmony import */ var motion_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! motion-dom */ "./node_modules/motion-dom/dist/es/value/index.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var _context_MotionConfigContext_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../context/MotionConfigContext.mjs */ "./node_modules/motion/node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs");
/* harmony import */ var _utils_use_constant_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/use-constant.mjs */ "./node_modules/motion/node_modules/framer-motion/dist/es/utils/use-constant.mjs");
"use client";





/**
 * Creates a `MotionValue` to track the state and velocity of a value.
 *
 * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.
 *
 * ```jsx
 * export const MyComponent = () => {
 *   const scale = useMotionValue(1)
 *
 *   return <motion.div style={{ scale }} />
 * }
 * ```
 *
 * @param initial - The initial state.
 *
 * @public
 */
function useMotionValue(initial) {
    const value = (0,_utils_use_constant_mjs__WEBPACK_IMPORTED_MODULE_3__.useConstant)(() => (0,motion_dom__WEBPACK_IMPORTED_MODULE_0__.motionValue)(initial));
    /**
     * If this motion value is being used in static mode, like on
     * the Framer canvas, force components to rerender when the motion
     * value is updated.
     */
    const { isStatic } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(_context_MotionConfigContext_mjs__WEBPACK_IMPORTED_MODULE_2__.MotionConfigContext);
    if (isStatic) {
        const [, setLatest] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(initial);
        (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => value.on("change", setLatest), []);
    }
    return value;
}




/***/ }),

/***/ "./node_modules/motion/node_modules/framer-motion/dist/es/value/use-scroll.mjs":
/*!*************************************************************************************!*\
  !*** ./node_modules/motion/node_modules/framer-motion/dist/es/value/use-scroll.mjs ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useScroll: () => (/* binding */ useScroll)
/* harmony export */ });
/* harmony import */ var motion_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! motion-dom */ "./node_modules/motion-dom/dist/es/value/index.mjs");
/* harmony import */ var motion_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! motion-utils */ "./node_modules/motion-utils/dist/es/errors.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var _render_dom_scroll_index_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../render/dom/scroll/index.mjs */ "./node_modules/motion/node_modules/framer-motion/dist/es/render/dom/scroll/index.mjs");
/* harmony import */ var _utils_use_constant_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/use-constant.mjs */ "./node_modules/motion/node_modules/framer-motion/dist/es/utils/use-constant.mjs");
/* harmony import */ var _utils_use_isomorphic_effect_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/use-isomorphic-effect.mjs */ "./node_modules/motion/node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs");
"use client";







const createScrollMotionValues = () => ({
    scrollX: (0,motion_dom__WEBPACK_IMPORTED_MODULE_0__.motionValue)(0),
    scrollY: (0,motion_dom__WEBPACK_IMPORTED_MODULE_0__.motionValue)(0),
    scrollXProgress: (0,motion_dom__WEBPACK_IMPORTED_MODULE_0__.motionValue)(0),
    scrollYProgress: (0,motion_dom__WEBPACK_IMPORTED_MODULE_0__.motionValue)(0),
});
const isRefPending = (ref) => {
    if (!ref)
        return false;
    return !ref.current;
};
function useScroll({ container, target, ...options } = {}) {
    const values = (0,_utils_use_constant_mjs__WEBPACK_IMPORTED_MODULE_4__.useConstant)(createScrollMotionValues);
    const scrollAnimation = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);
    const needsStart = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(false);
    const start = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(() => {
        scrollAnimation.current = (0,_render_dom_scroll_index_mjs__WEBPACK_IMPORTED_MODULE_3__.scroll)((_progress, { x, y, }) => {
            values.scrollX.set(x.current);
            values.scrollXProgress.set(x.progress);
            values.scrollY.set(y.current);
            values.scrollYProgress.set(y.progress);
        }, {
            ...options,
            container: container?.current || undefined,
            target: target?.current || undefined,
        });
        return () => {
            scrollAnimation.current?.();
        };
    }, [container, target, JSON.stringify(options.offset)]);
    (0,_utils_use_isomorphic_effect_mjs__WEBPACK_IMPORTED_MODULE_5__.useIsomorphicLayoutEffect)(() => {
        needsStart.current = false;
        if (isRefPending(container) || isRefPending(target)) {
            needsStart.current = true;
            return;
        }
        else {
            return start();
        }
    }, [start]);
    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(() => {
        if (needsStart.current) {
            (0,motion_utils__WEBPACK_IMPORTED_MODULE_1__.invariant)(!isRefPending(container), "Container ref is defined but not hydrated", "use-scroll-ref");
            (0,motion_utils__WEBPACK_IMPORTED_MODULE_1__.invariant)(!isRefPending(target), "Target ref is defined but not hydrated", "use-scroll-ref");
            return start();
        }
        else {
            return;
        }
    }, [start]);
    return values;
}




/***/ }),

/***/ "./node_modules/motion/node_modules/framer-motion/dist/es/value/use-transform.mjs":
/*!****************************************************************************************!*\
  !*** ./node_modules/motion/node_modules/framer-motion/dist/es/value/use-transform.mjs ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useTransform: () => (/* binding */ useTransform)
/* harmony export */ });
/* harmony import */ var motion_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! motion-dom */ "./node_modules/motion-dom/dist/es/utils/transform.mjs");
/* harmony import */ var _utils_use_constant_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/use-constant.mjs */ "./node_modules/motion/node_modules/framer-motion/dist/es/utils/use-constant.mjs");
/* harmony import */ var _use_combine_values_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./use-combine-values.mjs */ "./node_modules/motion/node_modules/framer-motion/dist/es/value/use-combine-values.mjs");
/* harmony import */ var _use_computed_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./use-computed.mjs */ "./node_modules/motion/node_modules/framer-motion/dist/es/value/use-computed.mjs");
"use client";





function useTransform(input, inputRangeOrTransformer, outputRange, options) {
    if (typeof input === "function") {
        return (0,_use_computed_mjs__WEBPACK_IMPORTED_MODULE_3__.useComputed)(input);
    }
    const transformer = typeof inputRangeOrTransformer === "function"
        ? inputRangeOrTransformer
        : (0,motion_dom__WEBPACK_IMPORTED_MODULE_0__.transform)(inputRangeOrTransformer, outputRange, options);
    return Array.isArray(input)
        ? useListTransform(input, transformer)
        : useListTransform([input], ([latest]) => transformer(latest));
}
function useListTransform(values, transformer) {
    const latest = (0,_utils_use_constant_mjs__WEBPACK_IMPORTED_MODULE_1__.useConstant)(() => []);
    return (0,_use_combine_values_mjs__WEBPACK_IMPORTED_MODULE_2__.useCombineMotionValues)(values, () => {
        latest.length = 0;
        const numValues = values.length;
        for (let i = 0; i < numValues; i++) {
            latest[i] = values[i].get();
        }
        return transformer(latest);
    });
}




/***/ }),

/***/ "./node_modules/object-assign/index.js":
/*!*********************************************!*\
  !*** ./node_modules/object-assign/index.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/


/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};


/***/ }),

/***/ "./node_modules/popmotion/dist/popmotion.cjs.js":
/*!******************************************************!*\
  !*** ./node_modules/popmotion/dist/popmotion.cjs.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({ value: true }));

var tslib = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
var heyListen = __webpack_require__(/*! hey-listen */ "./node_modules/hey-listen/dist/hey-listen.es.js");
var styleValueTypes = __webpack_require__(/*! style-value-types */ "./node_modules/style-value-types/dist/valueTypes.cjs.js");
var sync = __webpack_require__(/*! framesync */ "./node_modules/framesync/dist/framesync.cjs.js");

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var sync__default = /*#__PURE__*/_interopDefaultLegacy(sync);

const clamp = (min, max, v) => Math.min(Math.max(v, min), max);

const safeMin = 0.001;
const minDuration = 0.01;
const maxDuration = 10.0;
const minDamping = 0.05;
const maxDamping = 1;
function findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {
    let envelope;
    let derivative;
    heyListen.warning(duration <= maxDuration * 1000, "Spring duration must be 10 seconds or less");
    let dampingRatio = 1 - bounce;
    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);
    duration = clamp(minDuration, maxDuration, duration / 1000);
    if (dampingRatio < 1) {
        envelope = (undampedFreq) => {
            const exponentialDecay = undampedFreq * dampingRatio;
            const delta = exponentialDecay * duration;
            const a = exponentialDecay - velocity;
            const b = calcAngularFreq(undampedFreq, dampingRatio);
            const c = Math.exp(-delta);
            return safeMin - (a / b) * c;
        };
        derivative = (undampedFreq) => {
            const exponentialDecay = undampedFreq * dampingRatio;
            const delta = exponentialDecay * duration;
            const d = delta * velocity + velocity;
            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;
            const f = Math.exp(-delta);
            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);
            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;
            return (factor * ((d - e) * f)) / g;
        };
    }
    else {
        envelope = (undampedFreq) => {
            const a = Math.exp(-undampedFreq * duration);
            const b = (undampedFreq - velocity) * duration + 1;
            return -safeMin + a * b;
        };
        derivative = (undampedFreq) => {
            const a = Math.exp(-undampedFreq * duration);
            const b = (velocity - undampedFreq) * (duration * duration);
            return a * b;
        };
    }
    const initialGuess = 5 / duration;
    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);
    duration = duration * 1000;
    if (isNaN(undampedFreq)) {
        return {
            stiffness: 100,
            damping: 10,
            duration,
        };
    }
    else {
        const stiffness = Math.pow(undampedFreq, 2) * mass;
        return {
            stiffness,
            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),
            duration,
        };
    }
}
const rootIterations = 12;
function approximateRoot(envelope, derivative, initialGuess) {
    let result = initialGuess;
    for (let i = 1; i < rootIterations; i++) {
        result = result - envelope(result) / derivative(result);
    }
    return result;
}
function calcAngularFreq(undampedFreq, dampingRatio) {
    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);
}

const durationKeys = ["duration", "bounce"];
const physicsKeys = ["stiffness", "damping", "mass"];
function isSpringType(options, keys) {
    return keys.some((key) => options[key] !== undefined);
}
function getSpringOptions(options) {
    let springOptions = Object.assign({ velocity: 0.0, stiffness: 100, damping: 10, mass: 1.0, isResolvedFromDuration: false }, options);
    if (!isSpringType(options, physicsKeys) &&
        isSpringType(options, durationKeys)) {
        const derived = findSpring(options);
        springOptions = Object.assign(Object.assign(Object.assign({}, springOptions), derived), { velocity: 0.0, mass: 1.0 });
        springOptions.isResolvedFromDuration = true;
    }
    return springOptions;
}
function spring(_a) {
    var { from = 0.0, to = 1.0, restSpeed = 2, restDelta } = _a, options = tslib.__rest(_a, ["from", "to", "restSpeed", "restDelta"]);
    const state = { done: false, value: from };
    let { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);
    let resolveSpring = zero;
    let resolveVelocity = zero;
    function createSpring() {
        const initialVelocity = velocity ? -(velocity / 1000) : 0.0;
        const initialDelta = to - from;
        const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));
        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;
        if (restDelta === undefined) {
            restDelta = Math.min(Math.abs(to - from) / 100, 0.4);
        }
        if (dampingRatio < 1) {
            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);
            resolveSpring = (t) => {
                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);
                return (to -
                    envelope *
                        (((initialVelocity +
                            dampingRatio * undampedAngularFreq * initialDelta) /
                            angularFreq) *
                            Math.sin(angularFreq * t) +
                            initialDelta * Math.cos(angularFreq * t)));
            };
            resolveVelocity = (t) => {
                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);
                return (dampingRatio *
                    undampedAngularFreq *
                    envelope *
                    ((Math.sin(angularFreq * t) *
                        (initialVelocity +
                            dampingRatio *
                                undampedAngularFreq *
                                initialDelta)) /
                        angularFreq +
                        initialDelta * Math.cos(angularFreq * t)) -
                    envelope *
                        (Math.cos(angularFreq * t) *
                            (initialVelocity +
                                dampingRatio *
                                    undampedAngularFreq *
                                    initialDelta) -
                            angularFreq *
                                initialDelta *
                                Math.sin(angularFreq * t)));
            };
        }
        else if (dampingRatio === 1) {
            resolveSpring = (t) => to -
                Math.exp(-undampedAngularFreq * t) *
                    (initialDelta +
                        (initialVelocity + undampedAngularFreq * initialDelta) *
                            t);
        }
        else {
            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);
            resolveSpring = (t) => {
                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);
                const freqForT = Math.min(dampedAngularFreq * t, 300);
                return (to -
                    (envelope *
                        ((initialVelocity +
                            dampingRatio * undampedAngularFreq * initialDelta) *
                            Math.sinh(freqForT) +
                            dampedAngularFreq *
                                initialDelta *
                                Math.cosh(freqForT))) /
                        dampedAngularFreq);
            };
        }
    }
    createSpring();
    return {
        next: (t) => {
            const current = resolveSpring(t);
            if (!isResolvedFromDuration) {
                const currentVelocity = resolveVelocity(t) * 1000;
                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;
                const isBelowDisplacementThreshold = Math.abs(to - current) <= restDelta;
                state.done =
                    isBelowVelocityThreshold && isBelowDisplacementThreshold;
            }
            else {
                state.done = t >= duration;
            }
            state.value = state.done ? to : current;
            return state;
        },
        flipTarget: () => {
            velocity = -velocity;
            [from, to] = [to, from];
            createSpring();
        },
    };
}
spring.needsInterpolation = (a, b) => typeof a === "string" || typeof b === "string";
const zero = (_t) => 0;

const progress = (from, to, value) => {
    const toFromDifference = to - from;
    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;
};

const mix = (from, to, progress) => -progress * from + progress * to + from;

function hueToRgb(p, q, t) {
    if (t < 0)
        t += 1;
    if (t > 1)
        t -= 1;
    if (t < 1 / 6)
        return p + (q - p) * 6 * t;
    if (t < 1 / 2)
        return q;
    if (t < 2 / 3)
        return p + (q - p) * (2 / 3 - t) * 6;
    return p;
}
function hslaToRgba({ hue, saturation, lightness, alpha }) {
    hue /= 360;
    saturation /= 100;
    lightness /= 100;
    let red = 0;
    let green = 0;
    let blue = 0;
    if (!saturation) {
        red = green = blue = lightness;
    }
    else {
        const q = lightness < 0.5
            ? lightness * (1 + saturation)
            : lightness + saturation - lightness * saturation;
        const p = 2 * lightness - q;
        red = hueToRgb(p, q, hue + 1 / 3);
        green = hueToRgb(p, q, hue);
        blue = hueToRgb(p, q, hue - 1 / 3);
    }
    return {
        red: Math.round(red * 255),
        green: Math.round(green * 255),
        blue: Math.round(blue * 255),
        alpha,
    };
}

const mixLinearColor = (from, to, v) => {
    const fromExpo = from * from;
    const toExpo = to * to;
    return Math.sqrt(Math.max(0, v * (toExpo - fromExpo) + fromExpo));
};
const colorTypes = [styleValueTypes.hex, styleValueTypes.rgba, styleValueTypes.hsla];
const getColorType = (v) => colorTypes.find((type) => type.test(v));
const notAnimatable = (color) => `'${color}' is not an animatable color. Use the equivalent color code instead.`;
const mixColor = (from, to) => {
    let fromColorType = getColorType(from);
    let toColorType = getColorType(to);
    heyListen.invariant(!!fromColorType, notAnimatable(from));
    heyListen.invariant(!!toColorType, notAnimatable(to));
    let fromColor = fromColorType.parse(from);
    let toColor = toColorType.parse(to);
    if (fromColorType === styleValueTypes.hsla) {
        fromColor = hslaToRgba(fromColor);
        fromColorType = styleValueTypes.rgba;
    }
    if (toColorType === styleValueTypes.hsla) {
        toColor = hslaToRgba(toColor);
        toColorType = styleValueTypes.rgba;
    }
    const blended = Object.assign({}, fromColor);
    return (v) => {
        for (const key in blended) {
            if (key !== "alpha") {
                blended[key] = mixLinearColor(fromColor[key], toColor[key], v);
            }
        }
        blended.alpha = mix(fromColor.alpha, toColor.alpha, v);
        return fromColorType.transform(blended);
    };
};

const zeroPoint = {
    x: 0,
    y: 0,
    z: 0
};
const isNum = (v) => typeof v === 'number';

const combineFunctions = (a, b) => (v) => b(a(v));
const pipe = (...transformers) => transformers.reduce(combineFunctions);

function getMixer(origin, target) {
    if (isNum(origin)) {
        return (v) => mix(origin, target, v);
    }
    else if (styleValueTypes.color.test(origin)) {
        return mixColor(origin, target);
    }
    else {
        return mixComplex(origin, target);
    }
}
const mixArray = (from, to) => {
    const output = [...from];
    const numValues = output.length;
    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));
    return (v) => {
        for (let i = 0; i < numValues; i++) {
            output[i] = blendValue[i](v);
        }
        return output;
    };
};
const mixObject = (origin, target) => {
    const output = Object.assign(Object.assign({}, origin), target);
    const blendValue = {};
    for (const key in output) {
        if (origin[key] !== undefined && target[key] !== undefined) {
            blendValue[key] = getMixer(origin[key], target[key]);
        }
    }
    return (v) => {
        for (const key in blendValue) {
            output[key] = blendValue[key](v);
        }
        return output;
    };
};
function analyse(value) {
    const parsed = styleValueTypes.complex.parse(value);
    const numValues = parsed.length;
    let numNumbers = 0;
    let numRGB = 0;
    let numHSL = 0;
    for (let i = 0; i < numValues; i++) {
        if (numNumbers || typeof parsed[i] === "number") {
            numNumbers++;
        }
        else {
            if (parsed[i].hue !== undefined) {
                numHSL++;
            }
            else {
                numRGB++;
            }
        }
    }
    return { parsed, numNumbers, numRGB, numHSL };
}
const mixComplex = (origin, target) => {
    const template = styleValueTypes.complex.createTransformer(target);
    const originStats = analyse(origin);
    const targetStats = analyse(target);
    const canInterpolate = originStats.numHSL === targetStats.numHSL &&
        originStats.numRGB === targetStats.numRGB &&
        originStats.numNumbers >= targetStats.numNumbers;
    if (canInterpolate) {
        return pipe(mixArray(originStats.parsed, targetStats.parsed), template);
    }
    else {
        heyListen.warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);
        return (p) => `${p > 0 ? target : origin}`;
    }
};

const mixNumber = (from, to) => (p) => mix(from, to, p);
function detectMixerFactory(v) {
    if (typeof v === 'number') {
        return mixNumber;
    }
    else if (typeof v === 'string') {
        if (styleValueTypes.color.test(v)) {
            return mixColor;
        }
        else {
            return mixComplex;
        }
    }
    else if (Array.isArray(v)) {
        return mixArray;
    }
    else if (typeof v === 'object') {
        return mixObject;
    }
}
function createMixers(output, ease, customMixer) {
    const mixers = [];
    const mixerFactory = customMixer || detectMixerFactory(output[0]);
    const numMixers = output.length - 1;
    for (let i = 0; i < numMixers; i++) {
        let mixer = mixerFactory(output[i], output[i + 1]);
        if (ease) {
            const easingFunction = Array.isArray(ease) ? ease[i] : ease;
            mixer = pipe(easingFunction, mixer);
        }
        mixers.push(mixer);
    }
    return mixers;
}
function fastInterpolate([from, to], [mixer]) {
    return (v) => mixer(progress(from, to, v));
}
function slowInterpolate(input, mixers) {
    const inputLength = input.length;
    const lastInputIndex = inputLength - 1;
    return (v) => {
        let mixerIndex = 0;
        let foundMixerIndex = false;
        if (v <= input[0]) {
            foundMixerIndex = true;
        }
        else if (v >= input[lastInputIndex]) {
            mixerIndex = lastInputIndex - 1;
            foundMixerIndex = true;
        }
        if (!foundMixerIndex) {
            let i = 1;
            for (; i < inputLength; i++) {
                if (input[i] > v || i === lastInputIndex) {
                    break;
                }
            }
            mixerIndex = i - 1;
        }
        const progressInRange = progress(input[mixerIndex], input[mixerIndex + 1], v);
        return mixers[mixerIndex](progressInRange);
    };
}
function interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {
    const inputLength = input.length;
    heyListen.invariant(inputLength === output.length, 'Both input and output ranges must be the same length');
    heyListen.invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, 'Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.');
    if (input[0] > input[inputLength - 1]) {
        input = [].concat(input);
        output = [].concat(output);
        input.reverse();
        output.reverse();
    }
    const mixers = createMixers(output, ease, mixer);
    const interpolator = inputLength === 2
        ? fastInterpolate(input, mixers)
        : slowInterpolate(input, mixers);
    return isClamp
        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))
        : interpolator;
}

const reverseEasing = easing => p => 1 - easing(1 - p);
const mirrorEasing = easing => p => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;
const createExpoIn = (power) => p => Math.pow(p, power);
const createBackIn = (power) => p => p * p * ((power + 1) * p - power);
const createAnticipate = (power) => {
    const backEasing = createBackIn(power);
    return p => (p *= 2) < 1
        ? 0.5 * backEasing(p)
        : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));
};

const DEFAULT_OVERSHOOT_STRENGTH = 1.525;
const BOUNCE_FIRST_THRESHOLD = 4.0 / 11.0;
const BOUNCE_SECOND_THRESHOLD = 8.0 / 11.0;
const BOUNCE_THIRD_THRESHOLD = 9.0 / 10.0;
const linear = p => p;
const easeIn = createExpoIn(2);
const easeOut = reverseEasing(easeIn);
const easeInOut = mirrorEasing(easeIn);
const circIn = p => 1 - Math.sin(Math.acos(p));
const circOut = reverseEasing(circIn);
const circInOut = mirrorEasing(circOut);
const backIn = createBackIn(DEFAULT_OVERSHOOT_STRENGTH);
const backOut = reverseEasing(backIn);
const backInOut = mirrorEasing(backIn);
const anticipate = createAnticipate(DEFAULT_OVERSHOOT_STRENGTH);
const ca = 4356.0 / 361.0;
const cb = 35442.0 / 1805.0;
const cc = 16061.0 / 1805.0;
const bounceOut = (p) => {
    if (p === 1 || p === 0)
        return p;
    const p2 = p * p;
    return p < BOUNCE_FIRST_THRESHOLD
        ? 7.5625 * p2
        : p < BOUNCE_SECOND_THRESHOLD
            ? 9.075 * p2 - 9.9 * p + 3.4
            : p < BOUNCE_THIRD_THRESHOLD
                ? ca * p2 - cb * p + cc
                : 10.8 * p * p - 20.52 * p + 10.72;
};
const bounceIn = reverseEasing(bounceOut);
const bounceInOut = (p) => p < 0.5
    ? 0.5 * (1.0 - bounceOut(1.0 - p * 2.0))
    : 0.5 * bounceOut(p * 2.0 - 1.0) + 0.5;

function defaultEasing(values, easing) {
    return values.map(() => easing || easeInOut).splice(0, values.length - 1);
}
function defaultOffset(values) {
    const numValues = values.length;
    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);
}
function convertOffsetToTimes(offset, duration) {
    return offset.map((o) => o * duration);
}
function keyframes({ from = 0, to = 1, ease, offset, duration = 300, }) {
    const state = { done: false, value: from };
    const values = Array.isArray(to) ? to : [from, to];
    const times = convertOffsetToTimes(offset && offset.length === values.length
        ? offset
        : defaultOffset(values), duration);
    function createInterpolator() {
        return interpolate(times, values, {
            ease: Array.isArray(ease) ? ease : defaultEasing(values, ease),
        });
    }
    let interpolator = createInterpolator();
    return {
        next: (t) => {
            state.value = interpolator(t);
            state.done = t >= duration;
            return state;
        },
        flipTarget: () => {
            values.reverse();
            interpolator = createInterpolator();
        },
    };
}

function decay({ velocity = 0, from = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {
    const state = { done: false, value: from };
    let amplitude = power * velocity;
    const ideal = from + amplitude;
    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);
    if (target !== ideal)
        amplitude = target - from;
    return {
        next: (t) => {
            const delta = -amplitude * Math.exp(-t / timeConstant);
            state.done = !(delta > restDelta || delta < -restDelta);
            state.value = state.done ? target : target + delta;
            return state;
        },
        flipTarget: () => { },
    };
}

const types = { keyframes, spring, decay };
function detectAnimationFromOptions(config) {
    if (Array.isArray(config.to)) {
        return keyframes;
    }
    else if (types[config.type]) {
        return types[config.type];
    }
    const keys = new Set(Object.keys(config));
    if (keys.has("ease") ||
        (keys.has("duration") && !keys.has("dampingRatio"))) {
        return keyframes;
    }
    else if (keys.has("dampingRatio") ||
        keys.has("stiffness") ||
        keys.has("mass") ||
        keys.has("damping") ||
        keys.has("restSpeed") ||
        keys.has("restDelta")) {
        return spring;
    }
    return keyframes;
}

function loopElapsed(elapsed, duration, delay = 0) {
    return elapsed - duration - delay;
}
function reverseElapsed(elapsed, duration, delay = 0, isForwardPlayback = true) {
    return isForwardPlayback
        ? loopElapsed(duration + -elapsed, duration, delay)
        : duration - (elapsed - duration) + delay;
}
function hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {
    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;
}

const framesync = (update) => {
    const passTimestamp = ({ delta }) => update(delta);
    return {
        start: () => sync__default["default"].update(passTimestamp, true),
        stop: () => sync.cancelSync.update(passTimestamp),
    };
};
function animate(_a) {
    var _b, _c;
    var { from, autoplay = true, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = "loop", repeatDelay = 0, onPlay, onStop, onComplete, onRepeat, onUpdate } = _a, options = tslib.__rest(_a, ["from", "autoplay", "driver", "elapsed", "repeat", "repeatType", "repeatDelay", "onPlay", "onStop", "onComplete", "onRepeat", "onUpdate"]);
    let { to } = options;
    let driverControls;
    let repeatCount = 0;
    let computedDuration = options.duration;
    let latest;
    let isComplete = false;
    let isForwardPlayback = true;
    let interpolateFromNumber;
    const animator = detectAnimationFromOptions(options);
    if ((_c = (_b = animator).needsInterpolation) === null || _c === void 0 ? void 0 : _c.call(_b, from, to)) {
        interpolateFromNumber = interpolate([0, 100], [from, to], {
            clamp: false,
        });
        from = 0;
        to = 100;
    }
    const animation = animator(Object.assign(Object.assign({}, options), { from, to }));
    function repeat() {
        repeatCount++;
        if (repeatType === "reverse") {
            isForwardPlayback = repeatCount % 2 === 0;
            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);
        }
        else {
            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);
            if (repeatType === "mirror")
                animation.flipTarget();
        }
        isComplete = false;
        onRepeat && onRepeat();
    }
    function complete() {
        driverControls.stop();
        onComplete && onComplete();
    }
    function update(delta) {
        if (!isForwardPlayback)
            delta = -delta;
        elapsed += delta;
        if (!isComplete) {
            const state = animation.next(Math.max(0, elapsed));
            latest = state.value;
            if (interpolateFromNumber)
                latest = interpolateFromNumber(latest);
            isComplete = isForwardPlayback ? state.done : elapsed <= 0;
        }
        onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(latest);
        if (isComplete) {
            if (repeatCount === 0)
                computedDuration !== null && computedDuration !== void 0 ? computedDuration : (computedDuration = elapsed);
            if (repeatCount < repeatMax) {
                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();
            }
            else {
                complete();
            }
        }
    }
    function play() {
        onPlay === null || onPlay === void 0 ? void 0 : onPlay();
        driverControls = driver(update);
        driverControls.start();
    }
    autoplay && play();
    return {
        stop: () => {
            onStop === null || onStop === void 0 ? void 0 : onStop();
            driverControls.stop();
        },
    };
}

function velocityPerSecond(velocity, frameDuration) {
    return frameDuration ? velocity * (1000 / frameDuration) : 0;
}

function inertia({ from = 0, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {
    let currentAnimation;
    function isOutOfBounds(v) {
        return (min !== undefined && v < min) || (max !== undefined && v > max);
    }
    function boundaryNearest(v) {
        if (min === undefined)
            return max;
        if (max === undefined)
            return min;
        return Math.abs(min - v) < Math.abs(max - v) ? min : max;
    }
    function startAnimation(options) {
        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();
        currentAnimation = animate(Object.assign(Object.assign({}, options), { driver, onUpdate: (v) => {
                var _a;
                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);
                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);
            }, onComplete,
            onStop }));
    }
    function startSpring(options) {
        startAnimation(Object.assign({ type: "spring", stiffness: bounceStiffness, damping: bounceDamping, restDelta }, options));
    }
    if (isOutOfBounds(from)) {
        startSpring({ from, velocity, to: boundaryNearest(from) });
    }
    else {
        let target = power * velocity + from;
        if (typeof modifyTarget !== "undefined")
            target = modifyTarget(target);
        const boundary = boundaryNearest(target);
        const heading = boundary === min ? -1 : 1;
        let prev;
        let current;
        const checkBoundary = (v) => {
            prev = current;
            current = v;
            velocity = velocityPerSecond(v - prev, sync.getFrameData().delta);
            if ((heading === 1 && v > boundary) ||
                (heading === -1 && v < boundary)) {
                startSpring({ from: v, to: boundary, velocity });
            }
        };
        startAnimation({
            type: "decay",
            from,
            velocity,
            timeConstant,
            power,
            restDelta,
            modifyTarget,
            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,
        });
    }
    return {
        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),
    };
}

const radiansToDegrees = (radians) => (radians * 180) / Math.PI;

const angle = (a, b = zeroPoint) => radiansToDegrees(Math.atan2(b.y - a.y, b.x - a.x));

const applyOffset = (from, to) => {
    let hasReceivedFrom = true;
    if (to === undefined) {
        to = from;
        hasReceivedFrom = false;
    }
    return (v) => {
        if (hasReceivedFrom) {
            return v - from + to;
        }
        else {
            from = v;
            hasReceivedFrom = true;
            return to;
        }
    };
};

const identity = (v) => v;
const createAttractor = (alterDisplacement = identity) => (constant, origin, v) => {
    const displacement = origin - v;
    const springModifiedDisplacement = -(0 - constant + 1) * (0 - alterDisplacement(Math.abs(displacement)));
    return displacement <= 0
        ? origin + springModifiedDisplacement
        : origin - springModifiedDisplacement;
};
const attract = createAttractor();
const attractExpo = createAttractor(Math.sqrt);

const degreesToRadians = (degrees) => (degrees * Math.PI) / 180;

const isPoint = (point) => point.hasOwnProperty('x') && point.hasOwnProperty('y');

const isPoint3D = (point) => isPoint(point) && point.hasOwnProperty('z');

const distance1D = (a, b) => Math.abs(a - b);
function distance(a, b) {
    if (isNum(a) && isNum(b)) {
        return distance1D(a, b);
    }
    else if (isPoint(a) && isPoint(b)) {
        const xDelta = distance1D(a.x, b.x);
        const yDelta = distance1D(a.y, b.y);
        const zDelta = isPoint3D(a) && isPoint3D(b) ? distance1D(a.z, b.z) : 0;
        return Math.sqrt(Math.pow(xDelta, 2) + Math.pow(yDelta, 2) + Math.pow(zDelta, 2));
    }
}

const pointFromVector = (origin, angle, distance) => {
    angle = degreesToRadians(angle);
    return {
        x: distance * Math.cos(angle) + origin.x,
        y: distance * Math.sin(angle) + origin.y
    };
};

const toDecimal = (num, precision = 2) => {
    precision = Math.pow(10, precision);
    return Math.round(num * precision) / precision;
};

const smoothFrame = (prevValue, nextValue, duration, smoothing = 0) => toDecimal(prevValue +
    (duration * (nextValue - prevValue)) / Math.max(smoothing, duration));

const smooth = (strength = 50) => {
    let previousValue = 0;
    let lastUpdated = 0;
    return (v) => {
        const currentFramestamp = sync.getFrameData().timestamp;
        const timeDelta = currentFramestamp !== lastUpdated ? currentFramestamp - lastUpdated : 0;
        const newValue = timeDelta
            ? smoothFrame(previousValue, v, timeDelta, strength)
            : previousValue;
        lastUpdated = currentFramestamp;
        previousValue = newValue;
        return newValue;
    };
};

const snap = (points) => {
    if (typeof points === 'number') {
        return (v) => Math.round(v / points) * points;
    }
    else {
        let i = 0;
        const numPoints = points.length;
        return (v) => {
            let lastDistance = Math.abs(points[0] - v);
            for (i = 1; i < numPoints; i++) {
                const point = points[i];
                const distance = Math.abs(point - v);
                if (distance === 0)
                    return point;
                if (distance > lastDistance)
                    return points[i - 1];
                if (i === numPoints - 1)
                    return point;
                lastDistance = distance;
            }
        };
    }
};

function velocityPerFrame(xps, frameDuration) {
    return xps / (1000 / frameDuration);
}

const wrap = (min, max, v) => {
    const rangeSize = max - min;
    return ((((v - min) % rangeSize) + rangeSize) % rangeSize) + min;
};

const a = (a1, a2) => 1.0 - 3.0 * a2 + 3.0 * a1;
const b = (a1, a2) => 3.0 * a2 - 6.0 * a1;
const c = (a1) => 3.0 * a1;
const calcBezier = (t, a1, a2) => ((a(a1, a2) * t + b(a1, a2)) * t + c(a1)) * t;
const getSlope = (t, a1, a2) => 3.0 * a(a1, a2) * t * t + 2.0 * b(a1, a2) * t + c(a1);
const subdivisionPrecision = 0.0000001;
const subdivisionMaxIterations = 10;
function binarySubdivide(aX, aA, aB, mX1, mX2) {
    let currentX;
    let currentT;
    let i = 0;
    do {
        currentT = aA + (aB - aA) / 2.0;
        currentX = calcBezier(currentT, mX1, mX2) - aX;
        if (currentX > 0.0) {
            aB = currentT;
        }
        else {
            aA = currentT;
        }
    } while (Math.abs(currentX) > subdivisionPrecision &&
        ++i < subdivisionMaxIterations);
    return currentT;
}
const newtonIterations = 8;
const newtonMinSlope = 0.001;
function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {
    for (let i = 0; i < newtonIterations; ++i) {
        const currentSlope = getSlope(aGuessT, mX1, mX2);
        if (currentSlope === 0.0) {
            return aGuessT;
        }
        const currentX = calcBezier(aGuessT, mX1, mX2) - aX;
        aGuessT -= currentX / currentSlope;
    }
    return aGuessT;
}
const kSplineTableSize = 11;
const kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);
function cubicBezier(mX1, mY1, mX2, mY2) {
    if (mX1 === mY1 && mX2 === mY2)
        return linear;
    const sampleValues = new Float32Array(kSplineTableSize);
    for (let i = 0; i < kSplineTableSize; ++i) {
        sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);
    }
    function getTForX(aX) {
        let intervalStart = 0.0;
        let currentSample = 1;
        const lastSample = kSplineTableSize - 1;
        for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {
            intervalStart += kSampleStepSize;
        }
        --currentSample;
        const dist = (aX - sampleValues[currentSample]) /
            (sampleValues[currentSample + 1] - sampleValues[currentSample]);
        const guessForT = intervalStart + dist * kSampleStepSize;
        const initialSlope = getSlope(guessForT, mX1, mX2);
        if (initialSlope >= newtonMinSlope) {
            return newtonRaphsonIterate(aX, guessForT, mX1, mX2);
        }
        else if (initialSlope === 0.0) {
            return guessForT;
        }
        else {
            return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);
        }
    }
    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);
}

const steps = (steps, direction = 'end') => (progress) => {
    progress =
        direction === 'end' ? Math.min(progress, 0.999) : Math.max(progress, 0.001);
    const expanded = progress * steps;
    const rounded = direction === 'end' ? Math.floor(expanded) : Math.ceil(expanded);
    return clamp(0, 1, rounded / steps);
};

exports.angle = angle;
exports.animate = animate;
exports.anticipate = anticipate;
exports.applyOffset = applyOffset;
exports.attract = attract;
exports.attractExpo = attractExpo;
exports.backIn = backIn;
exports.backInOut = backInOut;
exports.backOut = backOut;
exports.bounceIn = bounceIn;
exports.bounceInOut = bounceInOut;
exports.bounceOut = bounceOut;
exports.circIn = circIn;
exports.circInOut = circInOut;
exports.circOut = circOut;
exports.clamp = clamp;
exports.createAnticipate = createAnticipate;
exports.createAttractor = createAttractor;
exports.createBackIn = createBackIn;
exports.createExpoIn = createExpoIn;
exports.cubicBezier = cubicBezier;
exports.decay = decay;
exports.degreesToRadians = degreesToRadians;
exports.distance = distance;
exports.easeIn = easeIn;
exports.easeInOut = easeInOut;
exports.easeOut = easeOut;
exports.inertia = inertia;
exports.interpolate = interpolate;
exports.isPoint = isPoint;
exports.isPoint3D = isPoint3D;
exports.keyframes = keyframes;
exports.linear = linear;
exports.mirrorEasing = mirrorEasing;
exports.mix = mix;
exports.mixColor = mixColor;
exports.mixComplex = mixComplex;
exports.pipe = pipe;
exports.pointFromVector = pointFromVector;
exports.progress = progress;
exports.radiansToDegrees = radiansToDegrees;
exports.reverseEasing = reverseEasing;
exports.smooth = smooth;
exports.smoothFrame = smoothFrame;
exports.snap = snap;
exports.spring = spring;
exports.steps = steps;
exports.toDecimal = toDecimal;
exports.velocityPerFrame = velocityPerFrame;
exports.velocityPerSecond = velocityPerSecond;
exports.wrap = wrap;


/***/ }),

/***/ "./node_modules/prop-types/checkPropTypes.js":
/*!***************************************************!*\
  !*** ./node_modules/prop-types/checkPropTypes.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var printWarning = function() {};

if (true) {
  var ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ "./node_modules/prop-types/lib/ReactPropTypesSecret.js");
  var loggedTypeFailures = {};
  var has = __webpack_require__(/*! ./lib/has */ "./node_modules/prop-types/lib/has.js");

  printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) { /**/ }
  };
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (true) {
    for (var typeSpecName in typeSpecs) {
      if (has(typeSpecs, typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error(
              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +
              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' +
              'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.'
            );
            err.name = 'Invariant Violation';
            throw err;
          }
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        if (error && !(error instanceof Error)) {
          printWarning(
            (componentName || 'React class') + ': type specification of ' +
            location + ' `' + typeSpecName + '` is invalid; the type checker ' +
            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +
            'You may have forgotten to pass an argument to the type checker ' +
            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
            'shape all require an argument).'
          );
        }
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          printWarning(
            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')
          );
        }
      }
    }
  }
}

/**
 * Resets warning cache when testing.
 *
 * @private
 */
checkPropTypes.resetWarningCache = function() {
  if (true) {
    loggedTypeFailures = {};
  }
}

module.exports = checkPropTypes;


/***/ }),

/***/ "./node_modules/prop-types/factoryWithTypeCheckers.js":
/*!************************************************************!*\
  !*** ./node_modules/prop-types/factoryWithTypeCheckers.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactIs = __webpack_require__(/*! react-is */ "./node_modules/react-is/index.js");
var assign = __webpack_require__(/*! object-assign */ "./node_modules/object-assign/index.js");

var ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ "./node_modules/prop-types/lib/ReactPropTypesSecret.js");
var has = __webpack_require__(/*! ./lib/has */ "./node_modules/prop-types/lib/has.js");
var checkPropTypes = __webpack_require__(/*! ./checkPropTypes */ "./node_modules/prop-types/checkPropTypes.js");

var printWarning = function() {};

if (true) {
  printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

function emptyFunctionThatReturnsNull() {
  return null;
}

module.exports = function(isValidElement, throwOnDirectAccess) {
  /* global Symbol */
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */

  var ANONYMOUS = '<<anonymous>>';

  // Important!
  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bigint: createPrimitiveTypeChecker('bigint'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    elementType: createElementTypeTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker,
  };

  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
  /*eslint-disable no-self-compare*/
  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      return x !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }
  /*eslint-enable no-self-compare*/

  /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */
  function PropTypeError(message, data) {
    this.message = message;
    this.data = data && typeof data === 'object' ? data: {};
    this.stack = '';
  }
  // Make `instanceof Error` still work for returned errors.
  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (true) {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret) {
        if (throwOnDirectAccess) {
          // New behavior only for users of `prop-types` package
          var err = new Error(
            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
            'Use `PropTypes.checkPropTypes()` to call them. ' +
            'Read more at http://fb.me/use-check-prop-types'
          );
          err.name = 'Invariant Violation';
          throw err;
        } else if ( true && typeof console !== 'undefined') {
          // Old behavior for people using React.PropTypes
          var cacheKey = componentName + ':' + propName;
          if (
            !manualPropTypeCallCache[cacheKey] &&
            // Avoid spamming the console because they are often not actionable except for lib authors
            manualPropTypeWarningCount < 3
          ) {
            printWarning(
              'You are manually calling a React.PropTypes validation ' +
              'function for the `' + propFullName + '` prop on `' + componentName + '`. This is deprecated ' +
              'and will throw in the standalone `prop-types` package. ' +
              'You may be seeing this warning due to a third-party PropTypes ' +
              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'
            );
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        // `propValue` being instance of, say, date/regexp, pass the 'object'
        // check, but we can offer a more precise error message here rather than
        // 'of type `object`'.
        var preciseType = getPreciseType(propValue);

        return new PropTypeError(
          'Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'),
          {expectedType: expectedType}
        );
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunctionThatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!ReactIs.isValidElementType(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      if (true) {
        if (arguments.length > 1) {
          printWarning(
            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +
            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'
          );
        } else {
          printWarning('Invalid argument supplied to oneOf, expected an array.');
        }
      }
      return emptyFunctionThatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
        var type = getPreciseType(value);
        if (type === 'symbol') {
          return String(value);
        }
        return value;
      });
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (has(propValue, key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
       true ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : 0;
      return emptyFunctionThatReturnsNull;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        printWarning(
          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +
          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'
        );
        return emptyFunctionThatReturnsNull;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      var expectedTypes = [];
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        var checkerResult = checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
        if (checkerResult == null) {
          return null;
        }
        if (checkerResult.data && has(checkerResult.data, 'expectedType')) {
          expectedTypes.push(checkerResult.data.expectedType);
        }
      }
      var expectedTypesMessage = (expectedTypes.length > 0) ? ', expected one of type [' + expectedTypes.join(', ') + ']': '';
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`' + expectedTypesMessage + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function invalidValidatorError(componentName, location, propFullName, key, type) {
    return new PropTypeError(
      (componentName || 'React class') + ': ' + location + ' type `' + propFullName + '.' + key + '` is invalid; ' +
      'it must be a function, usually from the `prop-types` package, but received `' + type + '`.'
    );
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (typeof checker !== 'function') {
          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      // We need to check all keys in case some are required but missing from props.
      var allKeys = assign({}, props[propName], shapeTypes);
      for (var key in allKeys) {
        var checker = shapeTypes[key];
        if (has(shapeTypes, key) && typeof checker !== 'function') {
          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
        }
        if (!checker) {
          return new PropTypeError(
            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +
            '\nBad object: ' + JSON.stringify(props[propName], null, '  ') +
            '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  ')
          );
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            // Iterator will provide entry [k,v] tuples rather than values.
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    // Native Symbol.
    if (propType === 'symbol') {
      return true;
    }

    // falsy value can't be a Symbol
    if (!propValue) {
      return false;
    }

    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    // Fallback for non-spec compliant Symbols which are polyfilled.
    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  // Equivalent of `typeof` but with special handling for array and regexp.
  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      // Old webkits (at least until Android 4.0) return 'function' rather than
      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
      // passes PropTypes.object.
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  // This handles more types than `getPropType`. Only used for error messages.
  // See `createPrimitiveTypeChecker`.
  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  // Returns a string that is postfixed to a warning about an invalid type.
  // For example, "undefined" or "of type array"
  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  // Returns class name of the object, if any.
  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes;
  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};


/***/ }),

/***/ "./node_modules/prop-types/index.js":
/*!******************************************!*\
  !*** ./node_modules/prop-types/index.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (true) {
  var ReactIs = __webpack_require__(/*! react-is */ "./node_modules/react-is/index.js");

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess = true;
  module.exports = __webpack_require__(/*! ./factoryWithTypeCheckers */ "./node_modules/prop-types/factoryWithTypeCheckers.js")(ReactIs.isElement, throwOnDirectAccess);
} else // removed by dead control flow
{}


/***/ }),

/***/ "./node_modules/prop-types/lib/ReactPropTypesSecret.js":
/*!*************************************************************!*\
  !*** ./node_modules/prop-types/lib/ReactPropTypesSecret.js ***!
  \*************************************************************/
/***/ ((module) => {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;


/***/ }),

/***/ "./node_modules/prop-types/lib/has.js":
/*!********************************************!*\
  !*** ./node_modules/prop-types/lib/has.js ***!
  \********************************************/
/***/ ((module) => {

module.exports = Function.call.bind(Object.prototype.hasOwnProperty);


/***/ }),

/***/ "./node_modules/react-countup/build/index.js":
/*!***************************************************!*\
  !*** ./node_modules/react-countup/build/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({ value: true }));

var React = __webpack_require__(/*! react */ "react");
var countup_js = __webpack_require__(/*! countup.js */ "./node_modules/countup.js/dist/countUp.umd.js");

function _iterableToArrayLimit(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e,
      n,
      i,
      u,
      a = [],
      f = !0,
      o = !1;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = !1;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);
    } catch (r) {
      o = !0, n = r;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function ownKeys(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function (r) {
      return Object.getOwnPropertyDescriptor(e, r).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread2(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {
      _defineProperty(e, r, t[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {
      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
    });
  }
  return e;
}
function _toPrimitive(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _toPropertyKey(t) {
  var i = _toPrimitive(t, "string");
  return "symbol" == typeof i ? i : String(i);
}
function _defineProperty(obj, key, value) {
  key = _toPropertyKey(key);
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }
  return target;
}
function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}
function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

/**
 * Silence SSR Warnings.
 * Borrowed from Formik v2.1.1, Licensed MIT.
 *
 * https://github.com/formium/formik/blob/9316a864478f8fcd4fa99a0735b1d37afdf507dc/LICENSE
 */
var useIsomorphicLayoutEffect = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined' ? React.useLayoutEffect : React.useEffect;

/* eslint-disable @typescript-eslint/no-explicit-any */

/**
 * Create a stable reference to a callback which is updated after each render is committed.
 * Typed version borrowed from Formik v2.2.1. Licensed MIT.
 *
 * https://github.com/formium/formik/blob/9316a864478f8fcd4fa99a0735b1d37afdf507dc/LICENSE
 */
function useEventCallback(fn) {
  var ref = React.useRef(fn);

  // we copy a ref to the callback scoped to the current state/props on each render
  useIsomorphicLayoutEffect(function () {
    ref.current = fn;
  });
  return React.useCallback(function () {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    return ref.current.apply(void 0, args);
  }, []);
}

var createCountUpInstance = function createCountUpInstance(el, props) {
  var decimal = props.decimal,
    decimals = props.decimals,
    duration = props.duration,
    easingFn = props.easingFn,
    end = props.end,
    formattingFn = props.formattingFn,
    numerals = props.numerals,
    prefix = props.prefix,
    separator = props.separator,
    start = props.start,
    suffix = props.suffix,
    useEasing = props.useEasing,
    useGrouping = props.useGrouping,
    useIndianSeparators = props.useIndianSeparators,
    enableScrollSpy = props.enableScrollSpy,
    scrollSpyDelay = props.scrollSpyDelay,
    scrollSpyOnce = props.scrollSpyOnce,
    plugin = props.plugin;
  return new countup_js.CountUp(el, end, {
    startVal: start,
    duration: duration,
    decimal: decimal,
    decimalPlaces: decimals,
    easingFn: easingFn,
    formattingFn: formattingFn,
    numerals: numerals,
    separator: separator,
    prefix: prefix,
    suffix: suffix,
    plugin: plugin,
    useEasing: useEasing,
    useIndianSeparators: useIndianSeparators,
    useGrouping: useGrouping,
    enableScrollSpy: enableScrollSpy,
    scrollSpyDelay: scrollSpyDelay,
    scrollSpyOnce: scrollSpyOnce
  });
};

var _excluded$1 = ["ref", "startOnMount", "enableReinitialize", "delay", "onEnd", "onStart", "onPauseResume", "onReset", "onUpdate"];
var DEFAULTS = {
  decimal: '.',
  separator: ',',
  delay: null,
  prefix: '',
  suffix: '',
  duration: 2,
  start: 0,
  decimals: 0,
  startOnMount: true,
  enableReinitialize: true,
  useEasing: true,
  useGrouping: true,
  useIndianSeparators: false
};
var useCountUp = function useCountUp(props) {
  var filteredProps = Object.fromEntries(Object.entries(props).filter(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 2),
      value = _ref2[1];
    return value !== undefined;
  }));
  var _useMemo = React.useMemo(function () {
      return _objectSpread2(_objectSpread2({}, DEFAULTS), filteredProps);
    }, [props]),
    ref = _useMemo.ref,
    startOnMount = _useMemo.startOnMount,
    enableReinitialize = _useMemo.enableReinitialize,
    delay = _useMemo.delay,
    onEnd = _useMemo.onEnd,
    onStart = _useMemo.onStart,
    onPauseResume = _useMemo.onPauseResume,
    onReset = _useMemo.onReset,
    onUpdate = _useMemo.onUpdate,
    instanceProps = _objectWithoutProperties(_useMemo, _excluded$1);
  var countUpRef = React.useRef();
  var timerRef = React.useRef();
  var isInitializedRef = React.useRef(false);
  var createInstance = useEventCallback(function () {
    return createCountUpInstance(typeof ref === 'string' ? ref : ref.current, instanceProps);
  });
  var getCountUp = useEventCallback(function (recreate) {
    var countUp = countUpRef.current;
    if (countUp && !recreate) {
      return countUp;
    }
    var newCountUp = createInstance();
    countUpRef.current = newCountUp;
    return newCountUp;
  });
  var start = useEventCallback(function () {
    var run = function run() {
      return getCountUp(true).start(function () {
        onEnd === null || onEnd === void 0 || onEnd({
          pauseResume: pauseResume,
          reset: reset,
          start: restart,
          update: update
        });
      });
    };
    if (delay && delay > 0) {
      timerRef.current = setTimeout(run, delay * 1000);
    } else {
      run();
    }
    onStart === null || onStart === void 0 || onStart({
      pauseResume: pauseResume,
      reset: reset,
      update: update
    });
  });
  var pauseResume = useEventCallback(function () {
    getCountUp().pauseResume();
    onPauseResume === null || onPauseResume === void 0 || onPauseResume({
      reset: reset,
      start: restart,
      update: update
    });
  });
  var reset = useEventCallback(function () {
    // Quick fix for https://github.com/glennreyes/react-countup/issues/736 - should be investigated
    // eslint-disable-next-line @typescript-eslint/ban-ts-comment
    // @ts-ignore
    if (getCountUp().el) {
      timerRef.current && clearTimeout(timerRef.current);
      getCountUp().reset();
      onReset === null || onReset === void 0 || onReset({
        pauseResume: pauseResume,
        start: restart,
        update: update
      });
    }
  });
  var update = useEventCallback(function (newEnd) {
    getCountUp().update(newEnd);
    onUpdate === null || onUpdate === void 0 || onUpdate({
      pauseResume: pauseResume,
      reset: reset,
      start: restart
    });
  });
  var restart = useEventCallback(function () {
    reset();
    start();
  });
  var maybeInitialize = useEventCallback(function (shouldReset) {
    if (startOnMount) {
      if (shouldReset) {
        reset();
      }
      start();
    }
  });
  React.useEffect(function () {
    if (!isInitializedRef.current) {
      isInitializedRef.current = true;
      maybeInitialize();
    } else if (enableReinitialize) {
      maybeInitialize(true);
    }
  }, [enableReinitialize, isInitializedRef, maybeInitialize, delay, props.start, props.suffix, props.prefix, props.duration, props.separator, props.decimals, props.decimal, props.formattingFn]);
  React.useEffect(function () {
    return function () {
      reset();
    };
  }, [reset]);
  return {
    start: restart,
    pauseResume: pauseResume,
    reset: reset,
    update: update,
    getCountUp: getCountUp
  };
};

var _excluded = ["className", "redraw", "containerProps", "children", "style"];
var CountUp = function CountUp(props) {
  var className = props.className,
    redraw = props.redraw,
    containerProps = props.containerProps,
    children = props.children,
    style = props.style,
    useCountUpProps = _objectWithoutProperties(props, _excluded);
  var containerRef = React.useRef(null);
  var isInitializedRef = React.useRef(false);
  var _useCountUp = useCountUp(_objectSpread2(_objectSpread2({}, useCountUpProps), {}, {
      ref: containerRef,
      startOnMount: typeof children !== 'function' || props.delay === 0,
      // component manually restarts
      enableReinitialize: false
    })),
    start = _useCountUp.start,
    reset = _useCountUp.reset,
    updateCountUp = _useCountUp.update,
    pauseResume = _useCountUp.pauseResume,
    getCountUp = _useCountUp.getCountUp;
  var restart = useEventCallback(function () {
    start();
  });
  var update = useEventCallback(function (end) {
    if (!props.preserveValue) {
      reset();
    }
    updateCountUp(end);
  });
  var initializeOnMount = useEventCallback(function () {
    if (typeof props.children === 'function') {
      // Warn when user didn't use containerRef at all
      if (!(containerRef.current instanceof Element)) {
        console.error("Couldn't find attached element to hook the CountUp instance into! Try to attach \"containerRef\" from the render prop to a an Element, eg. <span ref={containerRef} />.");
        return;
      }
    }

    // unlike the hook, the CountUp component initializes on mount
    getCountUp();
  });
  React.useEffect(function () {
    initializeOnMount();
  }, [initializeOnMount]);
  React.useEffect(function () {
    if (isInitializedRef.current) {
      update(props.end);
    }
  }, [props.end, update]);
  var redrawDependencies = redraw && props;

  // if props.redraw, call this effect on every props change
  React.useEffect(function () {
    if (redraw && isInitializedRef.current) {
      restart();
    }
  }, [restart, redraw, redrawDependencies]);

  // if not props.redraw, call this effect only when certain props are changed
  React.useEffect(function () {
    if (!redraw && isInitializedRef.current) {
      restart();
    }
  }, [restart, redraw, props.start, props.suffix, props.prefix, props.duration, props.separator, props.decimals, props.decimal, props.className, props.formattingFn]);
  React.useEffect(function () {
    isInitializedRef.current = true;
  }, []);
  if (typeof children === 'function') {
    // TypeScript forces functional components to return JSX.Element | null.
    return children({
      countUpRef: containerRef,
      start: start,
      reset: reset,
      update: updateCountUp,
      pauseResume: pauseResume,
      getCountUp: getCountUp
    });
  }
  return /*#__PURE__*/React.createElement("span", _extends({
    className: className,
    ref: containerRef,
    style: style
  }, containerProps), typeof props.start !== 'undefined' ? getCountUp().formattingFn(props.start) : '');
};

exports["default"] = CountUp;
exports.useCountUp = useCountUp;


/***/ }),

/***/ "./node_modules/react-hook-form/dist/index.esm.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/react-hook-form/dist/index.esm.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Controller: () => (/* binding */ Controller),
/* harmony export */   Form: () => (/* binding */ Form),
/* harmony export */   FormProvider: () => (/* binding */ FormProvider),
/* harmony export */   appendErrors: () => (/* binding */ appendErrors),
/* harmony export */   createFormControl: () => (/* binding */ createFormControl),
/* harmony export */   get: () => (/* binding */ get),
/* harmony export */   set: () => (/* binding */ set),
/* harmony export */   useController: () => (/* binding */ useController),
/* harmony export */   useFieldArray: () => (/* binding */ useFieldArray),
/* harmony export */   useForm: () => (/* binding */ useForm),
/* harmony export */   useFormContext: () => (/* binding */ useFormContext),
/* harmony export */   useFormState: () => (/* binding */ useFormState),
/* harmony export */   useWatch: () => (/* binding */ useWatch)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");


var isCheckBoxInput = (element) => element.type === 'checkbox';

var isDateObject = (value) => value instanceof Date;

var isNullOrUndefined = (value) => value == null;

const isObjectType = (value) => typeof value === 'object';
var isObject = (value) => !isNullOrUndefined(value) &&
    !Array.isArray(value) &&
    isObjectType(value) &&
    !isDateObject(value);

var getEventValue = (event) => isObject(event) && event.target
    ? isCheckBoxInput(event.target)
        ? event.target.checked
        : event.target.value
    : event;

var getNodeParentName = (name) => name.substring(0, name.search(/\.\d+(\.|$)/)) || name;

var isNameInFieldArray = (names, name) => names.has(getNodeParentName(name));

var isPlainObject = (tempObject) => {
    const prototypeCopy = tempObject.constructor && tempObject.constructor.prototype;
    return (isObject(prototypeCopy) && prototypeCopy.hasOwnProperty('isPrototypeOf'));
};

var isWeb = typeof window !== 'undefined' &&
    typeof window.HTMLElement !== 'undefined' &&
    typeof document !== 'undefined';

function cloneObject(data) {
    let copy;
    const isArray = Array.isArray(data);
    const isFileListInstance = typeof FileList !== 'undefined' ? data instanceof FileList : false;
    if (data instanceof Date) {
        copy = new Date(data);
    }
    else if (!(isWeb && (data instanceof Blob || isFileListInstance)) &&
        (isArray || isObject(data))) {
        copy = isArray ? [] : Object.create(Object.getPrototypeOf(data));
        if (!isArray && !isPlainObject(data)) {
            copy = data;
        }
        else {
            for (const key in data) {
                if (data.hasOwnProperty(key)) {
                    copy[key] = cloneObject(data[key]);
                }
            }
        }
    }
    else {
        return data;
    }
    return copy;
}

var isKey = (value) => /^\w*$/.test(value);

var isUndefined = (val) => val === undefined;

var compact = (value) => Array.isArray(value) ? value.filter(Boolean) : [];

var stringToPath = (input) => compact(input.replace(/["|']|\]/g, '').split(/\.|\[/));

var get = (object, path, defaultValue) => {
    if (!path || !isObject(object)) {
        return defaultValue;
    }
    const result = (isKey(path) ? [path] : stringToPath(path)).reduce((result, key) => isNullOrUndefined(result) ? result : result[key], object);
    return isUndefined(result) || result === object
        ? isUndefined(object[path])
            ? defaultValue
            : object[path]
        : result;
};

var isBoolean = (value) => typeof value === 'boolean';

var set = (object, path, value) => {
    let index = -1;
    const tempPath = isKey(path) ? [path] : stringToPath(path);
    const length = tempPath.length;
    const lastIndex = length - 1;
    while (++index < length) {
        const key = tempPath[index];
        let newValue = value;
        if (index !== lastIndex) {
            const objValue = object[key];
            newValue =
                isObject(objValue) || Array.isArray(objValue)
                    ? objValue
                    : !isNaN(+tempPath[index + 1])
                        ? []
                        : {};
        }
        if (key === '__proto__' || key === 'constructor' || key === 'prototype') {
            return;
        }
        object[key] = newValue;
        object = object[key];
    }
};

const EVENTS = {
    BLUR: 'blur',
    FOCUS_OUT: 'focusout',
    CHANGE: 'change',
};
const VALIDATION_MODE = {
    onBlur: 'onBlur',
    onChange: 'onChange',
    onSubmit: 'onSubmit',
    onTouched: 'onTouched',
    all: 'all',
};
const INPUT_VALIDATION_RULES = {
    max: 'max',
    min: 'min',
    maxLength: 'maxLength',
    minLength: 'minLength',
    pattern: 'pattern',
    required: 'required',
    validate: 'validate',
};

const HookFormContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);
HookFormContext.displayName = 'HookFormContext';
/**
 * This custom hook allows you to access the form context. useFormContext is intended to be used in deeply nested structures, where it would become inconvenient to pass the context as a prop. To be used with {@link FormProvider}.
 *
 * @remarks
 * [API](https://react-hook-form.com/docs/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)
 *
 * @returns return all useForm methods
 *
 * @example
 * ```tsx
 * function App() {
 *   const methods = useForm();
 *   const onSubmit = data => console.log(data);
 *
 *   return (
 *     <FormProvider {...methods} >
 *       <form onSubmit={methods.handleSubmit(onSubmit)}>
 *         <NestedInput />
 *         <input type="submit" />
 *       </form>
 *     </FormProvider>
 *   );
 * }
 *
 *  function NestedInput() {
 *   const { register } = useFormContext(); // retrieve all hook methods
 *   return <input {...register("test")} />;
 * }
 * ```
 */
const useFormContext = () => react__WEBPACK_IMPORTED_MODULE_0__.useContext(HookFormContext);
/**
 * A provider component that propagates the `useForm` methods to all children components via [React Context](https://reactjs.org/docs/context.html) API. To be used with {@link useFormContext}.
 *
 * @remarks
 * [API](https://react-hook-form.com/docs/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)
 *
 * @param props - all useForm methods
 *
 * @example
 * ```tsx
 * function App() {
 *   const methods = useForm();
 *   const onSubmit = data => console.log(data);
 *
 *   return (
 *     <FormProvider {...methods} >
 *       <form onSubmit={methods.handleSubmit(onSubmit)}>
 *         <NestedInput />
 *         <input type="submit" />
 *       </form>
 *     </FormProvider>
 *   );
 * }
 *
 *  function NestedInput() {
 *   const { register } = useFormContext(); // retrieve all hook methods
 *   return <input {...register("test")} />;
 * }
 * ```
 */
const FormProvider = (props) => {
    const { children, ...data } = props;
    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(HookFormContext.Provider, { value: data }, children));
};

var getProxyFormState = (formState, control, localProxyFormState, isRoot = true) => {
    const result = {
        defaultValues: control._defaultValues,
    };
    for (const key in formState) {
        Object.defineProperty(result, key, {
            get: () => {
                const _key = key;
                if (control._proxyFormState[_key] !== VALIDATION_MODE.all) {
                    control._proxyFormState[_key] = !isRoot || VALIDATION_MODE.all;
                }
                localProxyFormState && (localProxyFormState[_key] = true);
                return formState[_key];
            },
        });
    }
    return result;
};

const useIsomorphicLayoutEffect = typeof window !== 'undefined' ? react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect : react__WEBPACK_IMPORTED_MODULE_0__.useEffect;

/**
 * This custom hook allows you to subscribe to each form state, and isolate the re-render at the custom hook level. It has its scope in terms of form state subscription, so it would not affect other useFormState and useForm. Using this hook can reduce the re-render impact on large and complex form application.
 *
 * @remarks
 * [API](https://react-hook-form.com/docs/useformstate) • [Demo](https://codesandbox.io/s/useformstate-75xly)
 *
 * @param props - include options on specify fields to subscribe. {@link UseFormStateReturn}
 *
 * @example
 * ```tsx
 * function App() {
 *   const { register, handleSubmit, control } = useForm({
 *     defaultValues: {
 *     firstName: "firstName"
 *   }});
 *   const { dirtyFields } = useFormState({
 *     control
 *   });
 *   const onSubmit = (data) => console.log(data);
 *
 *   return (
 *     <form onSubmit={handleSubmit(onSubmit)}>
 *       <input {...register("firstName")} placeholder="First Name" />
 *       {dirtyFields.firstName && <p>Field is dirty.</p>}
 *       <input type="submit" />
 *     </form>
 *   );
 * }
 * ```
 */
function useFormState(props) {
    const methods = useFormContext();
    const { control = methods.control, disabled, name, exact } = props || {};
    const [formState, updateFormState] = react__WEBPACK_IMPORTED_MODULE_0__.useState(control._formState);
    const _localProxyFormState = react__WEBPACK_IMPORTED_MODULE_0__.useRef({
        isDirty: false,
        isLoading: false,
        dirtyFields: false,
        touchedFields: false,
        validatingFields: false,
        isValidating: false,
        isValid: false,
        errors: false,
    });
    useIsomorphicLayoutEffect(() => control._subscribe({
        name,
        formState: _localProxyFormState.current,
        exact,
        callback: (formState) => {
            !disabled &&
                updateFormState({
                    ...control._formState,
                    ...formState,
                });
        },
    }), [name, disabled, exact]);
    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
        _localProxyFormState.current.isValid && control._setValid(true);
    }, [control]);
    return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => getProxyFormState(formState, control, _localProxyFormState.current, false), [formState, control]);
}

var isString = (value) => typeof value === 'string';

var generateWatchOutput = (names, _names, formValues, isGlobal, defaultValue) => {
    if (isString(names)) {
        isGlobal && _names.watch.add(names);
        return get(formValues, names, defaultValue);
    }
    if (Array.isArray(names)) {
        return names.map((fieldName) => (isGlobal && _names.watch.add(fieldName),
            get(formValues, fieldName)));
    }
    isGlobal && (_names.watchAll = true);
    return formValues;
};

var isPrimitive = (value) => isNullOrUndefined(value) || !isObjectType(value);

function deepEqual(object1, object2, _internal_visited = new WeakSet()) {
    if (isPrimitive(object1) || isPrimitive(object2)) {
        return object1 === object2;
    }
    if (isDateObject(object1) && isDateObject(object2)) {
        return object1.getTime() === object2.getTime();
    }
    const keys1 = Object.keys(object1);
    const keys2 = Object.keys(object2);
    if (keys1.length !== keys2.length) {
        return false;
    }
    if (_internal_visited.has(object1) || _internal_visited.has(object2)) {
        return true;
    }
    _internal_visited.add(object1);
    _internal_visited.add(object2);
    for (const key of keys1) {
        const val1 = object1[key];
        if (!keys2.includes(key)) {
            return false;
        }
        if (key !== 'ref') {
            const val2 = object2[key];
            if ((isDateObject(val1) && isDateObject(val2)) ||
                (isObject(val1) && isObject(val2)) ||
                (Array.isArray(val1) && Array.isArray(val2))
                ? !deepEqual(val1, val2, _internal_visited)
                : val1 !== val2) {
                return false;
            }
        }
    }
    return true;
}

/**
 * Custom hook to subscribe to field change and isolate re-rendering at the component level.
 *
 * @remarks
 *
 * [API](https://react-hook-form.com/docs/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)
 *
 * @example
 * ```tsx
 * const { control } = useForm();
 * const values = useWatch({
 *   name: "fieldName"
 *   control,
 * })
 * ```
 */
function useWatch(props) {
    const methods = useFormContext();
    const { control = methods.control, name, defaultValue, disabled, exact, compute, } = props || {};
    const _defaultValue = react__WEBPACK_IMPORTED_MODULE_0__.useRef(defaultValue);
    const _compute = react__WEBPACK_IMPORTED_MODULE_0__.useRef(compute);
    const _computeFormValues = react__WEBPACK_IMPORTED_MODULE_0__.useRef(undefined);
    _compute.current = compute;
    const defaultValueMemo = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => control._getWatch(name, _defaultValue.current), [control, name]);
    const [value, updateValue] = react__WEBPACK_IMPORTED_MODULE_0__.useState(_compute.current ? _compute.current(defaultValueMemo) : defaultValueMemo);
    useIsomorphicLayoutEffect(() => control._subscribe({
        name,
        formState: {
            values: true,
        },
        exact,
        callback: (formState) => {
            if (!disabled) {
                const formValues = generateWatchOutput(name, control._names, formState.values || control._formValues, false, _defaultValue.current);
                if (_compute.current) {
                    const computedFormValues = _compute.current(formValues);
                    if (!deepEqual(computedFormValues, _computeFormValues.current)) {
                        updateValue(computedFormValues);
                        _computeFormValues.current = computedFormValues;
                    }
                }
                else {
                    updateValue(formValues);
                }
            }
        },
    }), [control, disabled, name, exact]);
    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => control._removeUnmounted());
    return value;
}

/**
 * Custom hook to work with controlled component, this function provide you with both form and field level state. Re-render is isolated at the hook level.
 *
 * @remarks
 * [API](https://react-hook-form.com/docs/usecontroller) • [Demo](https://codesandbox.io/s/usecontroller-0o8px)
 *
 * @param props - the path name to the form field value, and validation rules.
 *
 * @returns field properties, field and form state. {@link UseControllerReturn}
 *
 * @example
 * ```tsx
 * function Input(props) {
 *   const { field, fieldState, formState } = useController(props);
 *   return (
 *     <div>
 *       <input {...field} placeholder={props.name} />
 *       <p>{fieldState.isTouched && "Touched"}</p>
 *       <p>{formState.isSubmitted ? "submitted" : ""}</p>
 *     </div>
 *   );
 * }
 * ```
 */
function useController(props) {
    const methods = useFormContext();
    const { name, disabled, control = methods.control, shouldUnregister, defaultValue, } = props;
    const isArrayField = isNameInFieldArray(control._names.array, name);
    const defaultValueMemo = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => get(control._formValues, name, get(control._defaultValues, name, defaultValue)), [control, name, defaultValue]);
    const value = useWatch({
        control,
        name,
        defaultValue: defaultValueMemo,
        exact: true,
    });
    const formState = useFormState({
        control,
        name,
        exact: true,
    });
    const _props = react__WEBPACK_IMPORTED_MODULE_0__.useRef(props);
    const _previousNameRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(undefined);
    const _registerProps = react__WEBPACK_IMPORTED_MODULE_0__.useRef(control.register(name, {
        ...props.rules,
        value,
        ...(isBoolean(props.disabled) ? { disabled: props.disabled } : {}),
    }));
    _props.current = props;
    const fieldState = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => Object.defineProperties({}, {
        invalid: {
            enumerable: true,
            get: () => !!get(formState.errors, name),
        },
        isDirty: {
            enumerable: true,
            get: () => !!get(formState.dirtyFields, name),
        },
        isTouched: {
            enumerable: true,
            get: () => !!get(formState.touchedFields, name),
        },
        isValidating: {
            enumerable: true,
            get: () => !!get(formState.validatingFields, name),
        },
        error: {
            enumerable: true,
            get: () => get(formState.errors, name),
        },
    }), [formState, name]);
    const onChange = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((event) => _registerProps.current.onChange({
        target: {
            value: getEventValue(event),
            name: name,
        },
        type: EVENTS.CHANGE,
    }), [name]);
    const onBlur = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => _registerProps.current.onBlur({
        target: {
            value: get(control._formValues, name),
            name: name,
        },
        type: EVENTS.BLUR,
    }), [name, control._formValues]);
    const ref = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((elm) => {
        const field = get(control._fields, name);
        if (field && elm) {
            field._f.ref = {
                focus: () => elm.focus && elm.focus(),
                select: () => elm.select && elm.select(),
                setCustomValidity: (message) => elm.setCustomValidity(message),
                reportValidity: () => elm.reportValidity(),
            };
        }
    }, [control._fields, name]);
    const field = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({
        name,
        value,
        ...(isBoolean(disabled) || formState.disabled
            ? { disabled: formState.disabled || disabled }
            : {}),
        onChange,
        onBlur,
        ref,
    }), [name, disabled, formState.disabled, onChange, onBlur, ref, value]);
    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
        const _shouldUnregisterField = control._options.shouldUnregister || shouldUnregister;
        const previousName = _previousNameRef.current;
        if (previousName && previousName !== name && !isArrayField) {
            control.unregister(previousName);
        }
        control.register(name, {
            ..._props.current.rules,
            ...(isBoolean(_props.current.disabled)
                ? { disabled: _props.current.disabled }
                : {}),
        });
        const updateMounted = (name, value) => {
            const field = get(control._fields, name);
            if (field && field._f) {
                field._f.mount = value;
            }
        };
        updateMounted(name, true);
        if (_shouldUnregisterField) {
            const value = cloneObject(get(control._options.defaultValues, name, _props.current.defaultValue));
            set(control._defaultValues, name, value);
            if (isUndefined(get(control._formValues, name))) {
                set(control._formValues, name, value);
            }
        }
        !isArrayField && control.register(name);
        _previousNameRef.current = name;
        return () => {
            (isArrayField
                ? _shouldUnregisterField && !control._state.action
                : _shouldUnregisterField)
                ? control.unregister(name)
                : updateMounted(name, false);
        };
    }, [name, control, isArrayField, shouldUnregister]);
    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
        control._setDisabledField({
            disabled,
            name,
        });
    }, [disabled, name, control]);
    return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({
        field,
        formState,
        fieldState,
    }), [field, formState, fieldState]);
}

/**
 * Component based on `useController` hook to work with controlled component.
 *
 * @remarks
 * [API](https://react-hook-form.com/docs/usecontroller/controller) • [Demo](https://codesandbox.io/s/react-hook-form-v6-controller-ts-jwyzw) • [Video](https://www.youtube.com/watch?v=N2UNk_UCVyA)
 *
 * @param props - the path name to the form field value, and validation rules.
 *
 * @returns provide field handler functions, field and form state.
 *
 * @example
 * ```tsx
 * function App() {
 *   const { control } = useForm<FormValues>({
 *     defaultValues: {
 *       test: ""
 *     }
 *   });
 *
 *   return (
 *     <form>
 *       <Controller
 *         control={control}
 *         name="test"
 *         render={({ field: { onChange, onBlur, value, ref }, formState, fieldState }) => (
 *           <>
 *             <input
 *               onChange={onChange} // send value to hook form
 *               onBlur={onBlur} // notify when input is touched
 *               value={value} // return updated value
 *               ref={ref} // set ref for focus management
 *             />
 *             <p>{formState.isSubmitted ? "submitted" : ""}</p>
 *             <p>{fieldState.isTouched ? "touched" : ""}</p>
 *           </>
 *         )}
 *       />
 *     </form>
 *   );
 * }
 * ```
 */
const Controller = (props) => props.render(useController(props));

const flatten = (obj) => {
    const output = {};
    for (const key of Object.keys(obj)) {
        if (isObjectType(obj[key]) && obj[key] !== null) {
            const nested = flatten(obj[key]);
            for (const nestedKey of Object.keys(nested)) {
                output[`${key}.${nestedKey}`] = nested[nestedKey];
            }
        }
        else {
            output[key] = obj[key];
        }
    }
    return output;
};

const POST_REQUEST = 'post';
/**
 * Form component to manage submission.
 *
 * @param props - to setup submission detail. {@link FormProps}
 *
 * @returns form component or headless render prop.
 *
 * @example
 * ```tsx
 * function App() {
 *   const { control, formState: { errors } } = useForm();
 *
 *   return (
 *     <Form action="/api" control={control}>
 *       <input {...register("name")} />
 *       <p>{errors?.root?.server && 'Server error'}</p>
 *       <button>Submit</button>
 *     </Form>
 *   );
 * }
 * ```
 */
function Form(props) {
    const methods = useFormContext();
    const [mounted, setMounted] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);
    const { control = methods.control, onSubmit, children, action, method = POST_REQUEST, headers, encType, onError, render, onSuccess, validateStatus, ...rest } = props;
    const submit = async (event) => {
        let hasError = false;
        let type = '';
        await control.handleSubmit(async (data) => {
            const formData = new FormData();
            let formDataJson = '';
            try {
                formDataJson = JSON.stringify(data);
            }
            catch (_a) { }
            const flattenFormValues = flatten(control._formValues);
            for (const key in flattenFormValues) {
                formData.append(key, flattenFormValues[key]);
            }
            if (onSubmit) {
                await onSubmit({
                    data,
                    event,
                    method,
                    formData,
                    formDataJson,
                });
            }
            if (action) {
                try {
                    const shouldStringifySubmissionData = [
                        headers && headers['Content-Type'],
                        encType,
                    ].some((value) => value && value.includes('json'));
                    const response = await fetch(String(action), {
                        method,
                        headers: {
                            ...headers,
                            ...(encType && encType !== 'multipart/form-data'
                                ? { 'Content-Type': encType }
                                : {}),
                        },
                        body: shouldStringifySubmissionData ? formDataJson : formData,
                    });
                    if (response &&
                        (validateStatus
                            ? !validateStatus(response.status)
                            : response.status < 200 || response.status >= 300)) {
                        hasError = true;
                        onError && onError({ response });
                        type = String(response.status);
                    }
                    else {
                        onSuccess && onSuccess({ response });
                    }
                }
                catch (error) {
                    hasError = true;
                    onError && onError({ error });
                }
            }
        })(event);
        if (hasError && props.control) {
            props.control._subjects.state.next({
                isSubmitSuccessful: false,
            });
            props.control.setError('root.server', {
                type,
            });
        }
    };
    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
        setMounted(true);
    }, []);
    return render ? (react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, render({
        submit,
    }))) : (react__WEBPACK_IMPORTED_MODULE_0__.createElement("form", { noValidate: mounted, action: action, method: method, encType: encType, onSubmit: submit, ...rest }, children));
}

var appendErrors = (name, validateAllFieldCriteria, errors, type, message) => validateAllFieldCriteria
    ? {
        ...errors[name],
        types: {
            ...(errors[name] && errors[name].types ? errors[name].types : {}),
            [type]: message || true,
        },
    }
    : {};

var convertToArrayPayload = (value) => (Array.isArray(value) ? value : [value]);

var createSubject = () => {
    let _observers = [];
    const next = (value) => {
        for (const observer of _observers) {
            observer.next && observer.next(value);
        }
    };
    const subscribe = (observer) => {
        _observers.push(observer);
        return {
            unsubscribe: () => {
                _observers = _observers.filter((o) => o !== observer);
            },
        };
    };
    const unsubscribe = () => {
        _observers = [];
    };
    return {
        get observers() {
            return _observers;
        },
        next,
        subscribe,
        unsubscribe,
    };
};

function extractFormValues(fieldsState, formValues) {
    const values = {};
    for (const key in fieldsState) {
        if (fieldsState.hasOwnProperty(key)) {
            const fieldState = fieldsState[key];
            const fieldValue = formValues[key];
            if (fieldState && isObject(fieldState) && fieldValue) {
                const nestedFieldsState = extractFormValues(fieldState, fieldValue);
                if (isObject(nestedFieldsState)) {
                    values[key] = nestedFieldsState;
                }
            }
            else if (fieldsState[key]) {
                values[key] = fieldValue;
            }
        }
    }
    return values;
}

var isEmptyObject = (value) => isObject(value) && !Object.keys(value).length;

var isFileInput = (element) => element.type === 'file';

var isFunction = (value) => typeof value === 'function';

var isHTMLElement = (value) => {
    if (!isWeb) {
        return false;
    }
    const owner = value ? value.ownerDocument : 0;
    return (value instanceof
        (owner && owner.defaultView ? owner.defaultView.HTMLElement : HTMLElement));
};

var isMultipleSelect = (element) => element.type === `select-multiple`;

var isRadioInput = (element) => element.type === 'radio';

var isRadioOrCheckbox = (ref) => isRadioInput(ref) || isCheckBoxInput(ref);

var live = (ref) => isHTMLElement(ref) && ref.isConnected;

function baseGet(object, updatePath) {
    const length = updatePath.slice(0, -1).length;
    let index = 0;
    while (index < length) {
        object = isUndefined(object) ? index++ : object[updatePath[index++]];
    }
    return object;
}
function isEmptyArray(obj) {
    for (const key in obj) {
        if (obj.hasOwnProperty(key) && !isUndefined(obj[key])) {
            return false;
        }
    }
    return true;
}
function unset(object, path) {
    const paths = Array.isArray(path)
        ? path
        : isKey(path)
            ? [path]
            : stringToPath(path);
    const childObject = paths.length === 1 ? object : baseGet(object, paths);
    const index = paths.length - 1;
    const key = paths[index];
    if (childObject) {
        delete childObject[key];
    }
    if (index !== 0 &&
        ((isObject(childObject) && isEmptyObject(childObject)) ||
            (Array.isArray(childObject) && isEmptyArray(childObject)))) {
        unset(object, paths.slice(0, -1));
    }
    return object;
}

var objectHasFunction = (data) => {
    for (const key in data) {
        if (isFunction(data[key])) {
            return true;
        }
    }
    return false;
};

function isTraversable(value) {
    return Array.isArray(value) || (isObject(value) && !objectHasFunction(value));
}
function markFieldsDirty(data, fields = {}) {
    for (const key in data) {
        if (isTraversable(data[key])) {
            fields[key] = Array.isArray(data[key]) ? [] : {};
            markFieldsDirty(data[key], fields[key]);
        }
        else if (!isNullOrUndefined(data[key])) {
            fields[key] = true;
        }
    }
    return fields;
}
function getDirtyFields(data, formValues, dirtyFieldsFromValues) {
    if (!dirtyFieldsFromValues) {
        dirtyFieldsFromValues = markFieldsDirty(formValues);
    }
    for (const key in data) {
        if (isTraversable(data[key])) {
            if (isUndefined(formValues) || isPrimitive(dirtyFieldsFromValues[key])) {
                dirtyFieldsFromValues[key] = markFieldsDirty(data[key], Array.isArray(data[key]) ? [] : {});
            }
            else {
                getDirtyFields(data[key], isNullOrUndefined(formValues) ? {} : formValues[key], dirtyFieldsFromValues[key]);
            }
        }
        else {
            dirtyFieldsFromValues[key] = !deepEqual(data[key], formValues[key]);
        }
    }
    return dirtyFieldsFromValues;
}

const defaultResult = {
    value: false,
    isValid: false,
};
const validResult = { value: true, isValid: true };
var getCheckboxValue = (options) => {
    if (Array.isArray(options)) {
        if (options.length > 1) {
            const values = options
                .filter((option) => option && option.checked && !option.disabled)
                .map((option) => option.value);
            return { value: values, isValid: !!values.length };
        }
        return options[0].checked && !options[0].disabled
            ? // @ts-expect-error expected to work in the browser
                options[0].attributes && !isUndefined(options[0].attributes.value)
                    ? isUndefined(options[0].value) || options[0].value === ''
                        ? validResult
                        : { value: options[0].value, isValid: true }
                    : validResult
            : defaultResult;
    }
    return defaultResult;
};

var getFieldValueAs = (value, { valueAsNumber, valueAsDate, setValueAs }) => isUndefined(value)
    ? value
    : valueAsNumber
        ? value === ''
            ? NaN
            : value
                ? +value
                : value
        : valueAsDate && isString(value)
            ? new Date(value)
            : setValueAs
                ? setValueAs(value)
                : value;

const defaultReturn = {
    isValid: false,
    value: null,
};
var getRadioValue = (options) => Array.isArray(options)
    ? options.reduce((previous, option) => option && option.checked && !option.disabled
        ? {
            isValid: true,
            value: option.value,
        }
        : previous, defaultReturn)
    : defaultReturn;

function getFieldValue(_f) {
    const ref = _f.ref;
    if (isFileInput(ref)) {
        return ref.files;
    }
    if (isRadioInput(ref)) {
        return getRadioValue(_f.refs).value;
    }
    if (isMultipleSelect(ref)) {
        return [...ref.selectedOptions].map(({ value }) => value);
    }
    if (isCheckBoxInput(ref)) {
        return getCheckboxValue(_f.refs).value;
    }
    return getFieldValueAs(isUndefined(ref.value) ? _f.ref.value : ref.value, _f);
}

var getResolverOptions = (fieldsNames, _fields, criteriaMode, shouldUseNativeValidation) => {
    const fields = {};
    for (const name of fieldsNames) {
        const field = get(_fields, name);
        field && set(fields, name, field._f);
    }
    return {
        criteriaMode,
        names: [...fieldsNames],
        fields,
        shouldUseNativeValidation,
    };
};

var isRegex = (value) => value instanceof RegExp;

var getRuleValue = (rule) => isUndefined(rule)
    ? rule
    : isRegex(rule)
        ? rule.source
        : isObject(rule)
            ? isRegex(rule.value)
                ? rule.value.source
                : rule.value
            : rule;

var getValidationModes = (mode) => ({
    isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,
    isOnBlur: mode === VALIDATION_MODE.onBlur,
    isOnChange: mode === VALIDATION_MODE.onChange,
    isOnAll: mode === VALIDATION_MODE.all,
    isOnTouch: mode === VALIDATION_MODE.onTouched,
});

const ASYNC_FUNCTION = 'AsyncFunction';
var hasPromiseValidation = (fieldReference) => !!fieldReference &&
    !!fieldReference.validate &&
    !!((isFunction(fieldReference.validate) &&
        fieldReference.validate.constructor.name === ASYNC_FUNCTION) ||
        (isObject(fieldReference.validate) &&
            Object.values(fieldReference.validate).find((validateFunction) => validateFunction.constructor.name === ASYNC_FUNCTION)));

var hasValidation = (options) => options.mount &&
    (options.required ||
        options.min ||
        options.max ||
        options.maxLength ||
        options.minLength ||
        options.pattern ||
        options.validate);

var isWatched = (name, _names, isBlurEvent) => !isBlurEvent &&
    (_names.watchAll ||
        _names.watch.has(name) ||
        [..._names.watch].some((watchName) => name.startsWith(watchName) &&
            /^\.\w+/.test(name.slice(watchName.length))));

const iterateFieldsByAction = (fields, action, fieldsNames, abortEarly) => {
    for (const key of fieldsNames || Object.keys(fields)) {
        const field = get(fields, key);
        if (field) {
            const { _f, ...currentField } = field;
            if (_f) {
                if (_f.refs && _f.refs[0] && action(_f.refs[0], key) && !abortEarly) {
                    return true;
                }
                else if (_f.ref && action(_f.ref, _f.name) && !abortEarly) {
                    return true;
                }
                else {
                    if (iterateFieldsByAction(currentField, action)) {
                        break;
                    }
                }
            }
            else if (isObject(currentField)) {
                if (iterateFieldsByAction(currentField, action)) {
                    break;
                }
            }
        }
    }
    return;
};

function schemaErrorLookup(errors, _fields, name) {
    const error = get(errors, name);
    if (error || isKey(name)) {
        return {
            error,
            name,
        };
    }
    const names = name.split('.');
    while (names.length) {
        const fieldName = names.join('.');
        const field = get(_fields, fieldName);
        const foundError = get(errors, fieldName);
        if (field && !Array.isArray(field) && name !== fieldName) {
            return { name };
        }
        if (foundError && foundError.type) {
            return {
                name: fieldName,
                error: foundError,
            };
        }
        if (foundError && foundError.root && foundError.root.type) {
            return {
                name: `${fieldName}.root`,
                error: foundError.root,
            };
        }
        names.pop();
    }
    return {
        name,
    };
}

var shouldRenderFormState = (formStateData, _proxyFormState, updateFormState, isRoot) => {
    updateFormState(formStateData);
    const { name, ...formState } = formStateData;
    return (isEmptyObject(formState) ||
        Object.keys(formState).length >= Object.keys(_proxyFormState).length ||
        Object.keys(formState).find((key) => _proxyFormState[key] ===
            (!isRoot || VALIDATION_MODE.all)));
};

var shouldSubscribeByName = (name, signalName, exact) => !name ||
    !signalName ||
    name === signalName ||
    convertToArrayPayload(name).some((currentName) => currentName &&
        (exact
            ? currentName === signalName
            : currentName.startsWith(signalName) ||
                signalName.startsWith(currentName)));

var skipValidation = (isBlurEvent, isTouched, isSubmitted, reValidateMode, mode) => {
    if (mode.isOnAll) {
        return false;
    }
    else if (!isSubmitted && mode.isOnTouch) {
        return !(isTouched || isBlurEvent);
    }
    else if (isSubmitted ? reValidateMode.isOnBlur : mode.isOnBlur) {
        return !isBlurEvent;
    }
    else if (isSubmitted ? reValidateMode.isOnChange : mode.isOnChange) {
        return isBlurEvent;
    }
    return true;
};

var unsetEmptyArray = (ref, name) => !compact(get(ref, name)).length && unset(ref, name);

var updateFieldArrayRootError = (errors, error, name) => {
    const fieldArrayErrors = convertToArrayPayload(get(errors, name));
    set(fieldArrayErrors, 'root', error[name]);
    set(errors, name, fieldArrayErrors);
    return errors;
};

function getValidateError(result, ref, type = 'validate') {
    if (isString(result) ||
        (Array.isArray(result) && result.every(isString)) ||
        (isBoolean(result) && !result)) {
        return {
            type,
            message: isString(result) ? result : '',
            ref,
        };
    }
}

var getValueAndMessage = (validationData) => isObject(validationData) && !isRegex(validationData)
    ? validationData
    : {
        value: validationData,
        message: '',
    };

var validateField = async (field, disabledFieldNames, formValues, validateAllFieldCriteria, shouldUseNativeValidation, isFieldArray) => {
    const { ref, refs, required, maxLength, minLength, min, max, pattern, validate, name, valueAsNumber, mount, } = field._f;
    const inputValue = get(formValues, name);
    if (!mount || disabledFieldNames.has(name)) {
        return {};
    }
    const inputRef = refs ? refs[0] : ref;
    const setCustomValidity = (message) => {
        if (shouldUseNativeValidation && inputRef.reportValidity) {
            inputRef.setCustomValidity(isBoolean(message) ? '' : message || '');
            inputRef.reportValidity();
        }
    };
    const error = {};
    const isRadio = isRadioInput(ref);
    const isCheckBox = isCheckBoxInput(ref);
    const isRadioOrCheckbox = isRadio || isCheckBox;
    const isEmpty = ((valueAsNumber || isFileInput(ref)) &&
        isUndefined(ref.value) &&
        isUndefined(inputValue)) ||
        (isHTMLElement(ref) && ref.value === '') ||
        inputValue === '' ||
        (Array.isArray(inputValue) && !inputValue.length);
    const appendErrorsCurry = appendErrors.bind(null, name, validateAllFieldCriteria, error);
    const getMinMaxMessage = (exceedMax, maxLengthMessage, minLengthMessage, maxType = INPUT_VALIDATION_RULES.maxLength, minType = INPUT_VALIDATION_RULES.minLength) => {
        const message = exceedMax ? maxLengthMessage : minLengthMessage;
        error[name] = {
            type: exceedMax ? maxType : minType,
            message,
            ref,
            ...appendErrorsCurry(exceedMax ? maxType : minType, message),
        };
    };
    if (isFieldArray
        ? !Array.isArray(inputValue) || !inputValue.length
        : required &&
            ((!isRadioOrCheckbox && (isEmpty || isNullOrUndefined(inputValue))) ||
                (isBoolean(inputValue) && !inputValue) ||
                (isCheckBox && !getCheckboxValue(refs).isValid) ||
                (isRadio && !getRadioValue(refs).isValid))) {
        const { value, message } = isString(required)
            ? { value: !!required, message: required }
            : getValueAndMessage(required);
        if (value) {
            error[name] = {
                type: INPUT_VALIDATION_RULES.required,
                message,
                ref: inputRef,
                ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, message),
            };
            if (!validateAllFieldCriteria) {
                setCustomValidity(message);
                return error;
            }
        }
    }
    if (!isEmpty && (!isNullOrUndefined(min) || !isNullOrUndefined(max))) {
        let exceedMax;
        let exceedMin;
        const maxOutput = getValueAndMessage(max);
        const minOutput = getValueAndMessage(min);
        if (!isNullOrUndefined(inputValue) && !isNaN(inputValue)) {
            const valueNumber = ref.valueAsNumber ||
                (inputValue ? +inputValue : inputValue);
            if (!isNullOrUndefined(maxOutput.value)) {
                exceedMax = valueNumber > maxOutput.value;
            }
            if (!isNullOrUndefined(minOutput.value)) {
                exceedMin = valueNumber < minOutput.value;
            }
        }
        else {
            const valueDate = ref.valueAsDate || new Date(inputValue);
            const convertTimeToDate = (time) => new Date(new Date().toDateString() + ' ' + time);
            const isTime = ref.type == 'time';
            const isWeek = ref.type == 'week';
            if (isString(maxOutput.value) && inputValue) {
                exceedMax = isTime
                    ? convertTimeToDate(inputValue) > convertTimeToDate(maxOutput.value)
                    : isWeek
                        ? inputValue > maxOutput.value
                        : valueDate > new Date(maxOutput.value);
            }
            if (isString(minOutput.value) && inputValue) {
                exceedMin = isTime
                    ? convertTimeToDate(inputValue) < convertTimeToDate(minOutput.value)
                    : isWeek
                        ? inputValue < minOutput.value
                        : valueDate < new Date(minOutput.value);
            }
        }
        if (exceedMax || exceedMin) {
            getMinMaxMessage(!!exceedMax, maxOutput.message, minOutput.message, INPUT_VALIDATION_RULES.max, INPUT_VALIDATION_RULES.min);
            if (!validateAllFieldCriteria) {
                setCustomValidity(error[name].message);
                return error;
            }
        }
    }
    if ((maxLength || minLength) &&
        !isEmpty &&
        (isString(inputValue) || (isFieldArray && Array.isArray(inputValue)))) {
        const maxLengthOutput = getValueAndMessage(maxLength);
        const minLengthOutput = getValueAndMessage(minLength);
        const exceedMax = !isNullOrUndefined(maxLengthOutput.value) &&
            inputValue.length > +maxLengthOutput.value;
        const exceedMin = !isNullOrUndefined(minLengthOutput.value) &&
            inputValue.length < +minLengthOutput.value;
        if (exceedMax || exceedMin) {
            getMinMaxMessage(exceedMax, maxLengthOutput.message, minLengthOutput.message);
            if (!validateAllFieldCriteria) {
                setCustomValidity(error[name].message);
                return error;
            }
        }
    }
    if (pattern && !isEmpty && isString(inputValue)) {
        const { value: patternValue, message } = getValueAndMessage(pattern);
        if (isRegex(patternValue) && !inputValue.match(patternValue)) {
            error[name] = {
                type: INPUT_VALIDATION_RULES.pattern,
                message,
                ref,
                ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message),
            };
            if (!validateAllFieldCriteria) {
                setCustomValidity(message);
                return error;
            }
        }
    }
    if (validate) {
        if (isFunction(validate)) {
            const result = await validate(inputValue, formValues);
            const validateError = getValidateError(result, inputRef);
            if (validateError) {
                error[name] = {
                    ...validateError,
                    ...appendErrorsCurry(INPUT_VALIDATION_RULES.validate, validateError.message),
                };
                if (!validateAllFieldCriteria) {
                    setCustomValidity(validateError.message);
                    return error;
                }
            }
        }
        else if (isObject(validate)) {
            let validationResult = {};
            for (const key in validate) {
                if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {
                    break;
                }
                const validateError = getValidateError(await validate[key](inputValue, formValues), inputRef, key);
                if (validateError) {
                    validationResult = {
                        ...validateError,
                        ...appendErrorsCurry(key, validateError.message),
                    };
                    setCustomValidity(validateError.message);
                    if (validateAllFieldCriteria) {
                        error[name] = validationResult;
                    }
                }
            }
            if (!isEmptyObject(validationResult)) {
                error[name] = {
                    ref: inputRef,
                    ...validationResult,
                };
                if (!validateAllFieldCriteria) {
                    return error;
                }
            }
        }
    }
    setCustomValidity(true);
    return error;
};

const defaultOptions = {
    mode: VALIDATION_MODE.onSubmit,
    reValidateMode: VALIDATION_MODE.onChange,
    shouldFocusError: true,
};
function createFormControl(props = {}) {
    let _options = {
        ...defaultOptions,
        ...props,
    };
    let _formState = {
        submitCount: 0,
        isDirty: false,
        isReady: false,
        isLoading: isFunction(_options.defaultValues),
        isValidating: false,
        isSubmitted: false,
        isSubmitting: false,
        isSubmitSuccessful: false,
        isValid: false,
        touchedFields: {},
        dirtyFields: {},
        validatingFields: {},
        errors: _options.errors || {},
        disabled: _options.disabled || false,
    };
    let _fields = {};
    let _defaultValues = isObject(_options.defaultValues) || isObject(_options.values)
        ? cloneObject(_options.defaultValues || _options.values) || {}
        : {};
    let _formValues = _options.shouldUnregister
        ? {}
        : cloneObject(_defaultValues);
    let _state = {
        action: false,
        mount: false,
        watch: false,
    };
    let _names = {
        mount: new Set(),
        disabled: new Set(),
        unMount: new Set(),
        array: new Set(),
        watch: new Set(),
    };
    let delayErrorCallback;
    let timer = 0;
    const _proxyFormState = {
        isDirty: false,
        dirtyFields: false,
        validatingFields: false,
        touchedFields: false,
        isValidating: false,
        isValid: false,
        errors: false,
    };
    let _proxySubscribeFormState = {
        ..._proxyFormState,
    };
    const _subjects = {
        array: createSubject(),
        state: createSubject(),
    };
    const shouldDisplayAllAssociatedErrors = _options.criteriaMode === VALIDATION_MODE.all;
    const debounce = (callback) => (wait) => {
        clearTimeout(timer);
        timer = setTimeout(callback, wait);
    };
    const _setValid = async (shouldUpdateValid) => {
        if (!_options.disabled &&
            (_proxyFormState.isValid ||
                _proxySubscribeFormState.isValid ||
                shouldUpdateValid)) {
            const isValid = _options.resolver
                ? isEmptyObject((await _runSchema()).errors)
                : await executeBuiltInValidation(_fields, true);
            if (isValid !== _formState.isValid) {
                _subjects.state.next({
                    isValid,
                });
            }
        }
    };
    const _updateIsValidating = (names, isValidating) => {
        if (!_options.disabled &&
            (_proxyFormState.isValidating ||
                _proxyFormState.validatingFields ||
                _proxySubscribeFormState.isValidating ||
                _proxySubscribeFormState.validatingFields)) {
            (names || Array.from(_names.mount)).forEach((name) => {
                if (name) {
                    isValidating
                        ? set(_formState.validatingFields, name, isValidating)
                        : unset(_formState.validatingFields, name);
                }
            });
            _subjects.state.next({
                validatingFields: _formState.validatingFields,
                isValidating: !isEmptyObject(_formState.validatingFields),
            });
        }
    };
    const _setFieldArray = (name, values = [], method, args, shouldSetValues = true, shouldUpdateFieldsAndState = true) => {
        if (args && method && !_options.disabled) {
            _state.action = true;
            if (shouldUpdateFieldsAndState && Array.isArray(get(_fields, name))) {
                const fieldValues = method(get(_fields, name), args.argA, args.argB);
                shouldSetValues && set(_fields, name, fieldValues);
            }
            if (shouldUpdateFieldsAndState &&
                Array.isArray(get(_formState.errors, name))) {
                const errors = method(get(_formState.errors, name), args.argA, args.argB);
                shouldSetValues && set(_formState.errors, name, errors);
                unsetEmptyArray(_formState.errors, name);
            }
            if ((_proxyFormState.touchedFields ||
                _proxySubscribeFormState.touchedFields) &&
                shouldUpdateFieldsAndState &&
                Array.isArray(get(_formState.touchedFields, name))) {
                const touchedFields = method(get(_formState.touchedFields, name), args.argA, args.argB);
                shouldSetValues && set(_formState.touchedFields, name, touchedFields);
            }
            if (_proxyFormState.dirtyFields || _proxySubscribeFormState.dirtyFields) {
                _formState.dirtyFields = getDirtyFields(_defaultValues, _formValues);
            }
            _subjects.state.next({
                name,
                isDirty: _getDirty(name, values),
                dirtyFields: _formState.dirtyFields,
                errors: _formState.errors,
                isValid: _formState.isValid,
            });
        }
        else {
            set(_formValues, name, values);
        }
    };
    const updateErrors = (name, error) => {
        set(_formState.errors, name, error);
        _subjects.state.next({
            errors: _formState.errors,
        });
    };
    const _setErrors = (errors) => {
        _formState.errors = errors;
        _subjects.state.next({
            errors: _formState.errors,
            isValid: false,
        });
    };
    const updateValidAndValue = (name, shouldSkipSetValueAs, value, ref) => {
        const field = get(_fields, name);
        if (field) {
            const defaultValue = get(_formValues, name, isUndefined(value) ? get(_defaultValues, name) : value);
            isUndefined(defaultValue) ||
                (ref && ref.defaultChecked) ||
                shouldSkipSetValueAs
                ? set(_formValues, name, shouldSkipSetValueAs ? defaultValue : getFieldValue(field._f))
                : setFieldValue(name, defaultValue);
            _state.mount && _setValid();
        }
    };
    const updateTouchAndDirty = (name, fieldValue, isBlurEvent, shouldDirty, shouldRender) => {
        let shouldUpdateField = false;
        let isPreviousDirty = false;
        const output = {
            name,
        };
        if (!_options.disabled) {
            if (!isBlurEvent || shouldDirty) {
                if (_proxyFormState.isDirty || _proxySubscribeFormState.isDirty) {
                    isPreviousDirty = _formState.isDirty;
                    _formState.isDirty = output.isDirty = _getDirty();
                    shouldUpdateField = isPreviousDirty !== output.isDirty;
                }
                const isCurrentFieldPristine = deepEqual(get(_defaultValues, name), fieldValue);
                isPreviousDirty = !!get(_formState.dirtyFields, name);
                isCurrentFieldPristine
                    ? unset(_formState.dirtyFields, name)
                    : set(_formState.dirtyFields, name, true);
                output.dirtyFields = _formState.dirtyFields;
                shouldUpdateField =
                    shouldUpdateField ||
                        ((_proxyFormState.dirtyFields ||
                            _proxySubscribeFormState.dirtyFields) &&
                            isPreviousDirty !== !isCurrentFieldPristine);
            }
            if (isBlurEvent) {
                const isPreviousFieldTouched = get(_formState.touchedFields, name);
                if (!isPreviousFieldTouched) {
                    set(_formState.touchedFields, name, isBlurEvent);
                    output.touchedFields = _formState.touchedFields;
                    shouldUpdateField =
                        shouldUpdateField ||
                            ((_proxyFormState.touchedFields ||
                                _proxySubscribeFormState.touchedFields) &&
                                isPreviousFieldTouched !== isBlurEvent);
                }
            }
            shouldUpdateField && shouldRender && _subjects.state.next(output);
        }
        return shouldUpdateField ? output : {};
    };
    const shouldRenderByError = (name, isValid, error, fieldState) => {
        const previousFieldError = get(_formState.errors, name);
        const shouldUpdateValid = (_proxyFormState.isValid || _proxySubscribeFormState.isValid) &&
            isBoolean(isValid) &&
            _formState.isValid !== isValid;
        if (_options.delayError && error) {
            delayErrorCallback = debounce(() => updateErrors(name, error));
            delayErrorCallback(_options.delayError);
        }
        else {
            clearTimeout(timer);
            delayErrorCallback = null;
            error
                ? set(_formState.errors, name, error)
                : unset(_formState.errors, name);
        }
        if ((error ? !deepEqual(previousFieldError, error) : previousFieldError) ||
            !isEmptyObject(fieldState) ||
            shouldUpdateValid) {
            const updatedFormState = {
                ...fieldState,
                ...(shouldUpdateValid && isBoolean(isValid) ? { isValid } : {}),
                errors: _formState.errors,
                name,
            };
            _formState = {
                ..._formState,
                ...updatedFormState,
            };
            _subjects.state.next(updatedFormState);
        }
    };
    const _runSchema = async (name) => {
        _updateIsValidating(name, true);
        const result = await _options.resolver(_formValues, _options.context, getResolverOptions(name || _names.mount, _fields, _options.criteriaMode, _options.shouldUseNativeValidation));
        _updateIsValidating(name);
        return result;
    };
    const executeSchemaAndUpdateState = async (names) => {
        const { errors } = await _runSchema(names);
        if (names) {
            for (const name of names) {
                const error = get(errors, name);
                error
                    ? set(_formState.errors, name, error)
                    : unset(_formState.errors, name);
            }
        }
        else {
            _formState.errors = errors;
        }
        return errors;
    };
    const executeBuiltInValidation = async (fields, shouldOnlyCheckValid, context = {
        valid: true,
    }) => {
        for (const name in fields) {
            const field = fields[name];
            if (field) {
                const { _f, ...fieldValue } = field;
                if (_f) {
                    const isFieldArrayRoot = _names.array.has(_f.name);
                    const isPromiseFunction = field._f && hasPromiseValidation(field._f);
                    if (isPromiseFunction && _proxyFormState.validatingFields) {
                        _updateIsValidating([_f.name], true);
                    }
                    const fieldError = await validateField(field, _names.disabled, _formValues, shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation && !shouldOnlyCheckValid, isFieldArrayRoot);
                    if (isPromiseFunction && _proxyFormState.validatingFields) {
                        _updateIsValidating([_f.name]);
                    }
                    if (fieldError[_f.name]) {
                        context.valid = false;
                        if (shouldOnlyCheckValid) {
                            break;
                        }
                    }
                    !shouldOnlyCheckValid &&
                        (get(fieldError, _f.name)
                            ? isFieldArrayRoot
                                ? updateFieldArrayRootError(_formState.errors, fieldError, _f.name)
                                : set(_formState.errors, _f.name, fieldError[_f.name])
                            : unset(_formState.errors, _f.name));
                }
                !isEmptyObject(fieldValue) &&
                    (await executeBuiltInValidation(fieldValue, shouldOnlyCheckValid, context));
            }
        }
        return context.valid;
    };
    const _removeUnmounted = () => {
        for (const name of _names.unMount) {
            const field = get(_fields, name);
            field &&
                (field._f.refs
                    ? field._f.refs.every((ref) => !live(ref))
                    : !live(field._f.ref)) &&
                unregister(name);
        }
        _names.unMount = new Set();
    };
    const _getDirty = (name, data) => !_options.disabled &&
        (name && data && set(_formValues, name, data),
            !deepEqual(getValues(), _defaultValues));
    const _getWatch = (names, defaultValue, isGlobal) => generateWatchOutput(names, _names, {
        ...(_state.mount
            ? _formValues
            : isUndefined(defaultValue)
                ? _defaultValues
                : isString(names)
                    ? { [names]: defaultValue }
                    : defaultValue),
    }, isGlobal, defaultValue);
    const _getFieldArray = (name) => compact(get(_state.mount ? _formValues : _defaultValues, name, _options.shouldUnregister ? get(_defaultValues, name, []) : []));
    const setFieldValue = (name, value, options = {}) => {
        const field = get(_fields, name);
        let fieldValue = value;
        if (field) {
            const fieldReference = field._f;
            if (fieldReference) {
                !fieldReference.disabled &&
                    set(_formValues, name, getFieldValueAs(value, fieldReference));
                fieldValue =
                    isHTMLElement(fieldReference.ref) && isNullOrUndefined(value)
                        ? ''
                        : value;
                if (isMultipleSelect(fieldReference.ref)) {
                    [...fieldReference.ref.options].forEach((optionRef) => (optionRef.selected = fieldValue.includes(optionRef.value)));
                }
                else if (fieldReference.refs) {
                    if (isCheckBoxInput(fieldReference.ref)) {
                        fieldReference.refs.forEach((checkboxRef) => {
                            if (!checkboxRef.defaultChecked || !checkboxRef.disabled) {
                                if (Array.isArray(fieldValue)) {
                                    checkboxRef.checked = !!fieldValue.find((data) => data === checkboxRef.value);
                                }
                                else {
                                    checkboxRef.checked =
                                        fieldValue === checkboxRef.value || !!fieldValue;
                                }
                            }
                        });
                    }
                    else {
                        fieldReference.refs.forEach((radioRef) => (radioRef.checked = radioRef.value === fieldValue));
                    }
                }
                else if (isFileInput(fieldReference.ref)) {
                    fieldReference.ref.value = '';
                }
                else {
                    fieldReference.ref.value = fieldValue;
                    if (!fieldReference.ref.type) {
                        _subjects.state.next({
                            name,
                            values: cloneObject(_formValues),
                        });
                    }
                }
            }
        }
        (options.shouldDirty || options.shouldTouch) &&
            updateTouchAndDirty(name, fieldValue, options.shouldTouch, options.shouldDirty, true);
        options.shouldValidate && trigger(name);
    };
    const setValues = (name, value, options) => {
        for (const fieldKey in value) {
            if (!value.hasOwnProperty(fieldKey)) {
                return;
            }
            const fieldValue = value[fieldKey];
            const fieldName = name + '.' + fieldKey;
            const field = get(_fields, fieldName);
            (_names.array.has(name) ||
                isObject(fieldValue) ||
                (field && !field._f)) &&
                !isDateObject(fieldValue)
                ? setValues(fieldName, fieldValue, options)
                : setFieldValue(fieldName, fieldValue, options);
        }
    };
    const setValue = (name, value, options = {}) => {
        const field = get(_fields, name);
        const isFieldArray = _names.array.has(name);
        const cloneValue = cloneObject(value);
        set(_formValues, name, cloneValue);
        if (isFieldArray) {
            _subjects.array.next({
                name,
                values: cloneObject(_formValues),
            });
            if ((_proxyFormState.isDirty ||
                _proxyFormState.dirtyFields ||
                _proxySubscribeFormState.isDirty ||
                _proxySubscribeFormState.dirtyFields) &&
                options.shouldDirty) {
                _subjects.state.next({
                    name,
                    dirtyFields: getDirtyFields(_defaultValues, _formValues),
                    isDirty: _getDirty(name, cloneValue),
                });
            }
        }
        else {
            field && !field._f && !isNullOrUndefined(cloneValue)
                ? setValues(name, cloneValue, options)
                : setFieldValue(name, cloneValue, options);
        }
        isWatched(name, _names) && _subjects.state.next({ ..._formState, name });
        _subjects.state.next({
            name: _state.mount ? name : undefined,
            values: cloneObject(_formValues),
        });
    };
    const onChange = async (event) => {
        _state.mount = true;
        const target = event.target;
        let name = target.name;
        let isFieldValueUpdated = true;
        const field = get(_fields, name);
        const _updateIsFieldValueUpdated = (fieldValue) => {
            isFieldValueUpdated =
                Number.isNaN(fieldValue) ||
                    (isDateObject(fieldValue) && isNaN(fieldValue.getTime())) ||
                    deepEqual(fieldValue, get(_formValues, name, fieldValue));
        };
        const validationModeBeforeSubmit = getValidationModes(_options.mode);
        const validationModeAfterSubmit = getValidationModes(_options.reValidateMode);
        if (field) {
            let error;
            let isValid;
            const fieldValue = target.type
                ? getFieldValue(field._f)
                : getEventValue(event);
            const isBlurEvent = event.type === EVENTS.BLUR || event.type === EVENTS.FOCUS_OUT;
            const shouldSkipValidation = (!hasValidation(field._f) &&
                !_options.resolver &&
                !get(_formState.errors, name) &&
                !field._f.deps) ||
                skipValidation(isBlurEvent, get(_formState.touchedFields, name), _formState.isSubmitted, validationModeAfterSubmit, validationModeBeforeSubmit);
            const watched = isWatched(name, _names, isBlurEvent);
            set(_formValues, name, fieldValue);
            if (isBlurEvent) {
                if (!target || !target.readOnly) {
                    field._f.onBlur && field._f.onBlur(event);
                    delayErrorCallback && delayErrorCallback(0);
                }
            }
            else if (field._f.onChange) {
                field._f.onChange(event);
            }
            const fieldState = updateTouchAndDirty(name, fieldValue, isBlurEvent);
            const shouldRender = !isEmptyObject(fieldState) || watched;
            !isBlurEvent &&
                _subjects.state.next({
                    name,
                    type: event.type,
                    values: cloneObject(_formValues),
                });
            if (shouldSkipValidation) {
                if (_proxyFormState.isValid || _proxySubscribeFormState.isValid) {
                    if (_options.mode === 'onBlur') {
                        if (isBlurEvent) {
                            _setValid();
                        }
                    }
                    else if (!isBlurEvent) {
                        _setValid();
                    }
                }
                return (shouldRender &&
                    _subjects.state.next({ name, ...(watched ? {} : fieldState) }));
            }
            !isBlurEvent && watched && _subjects.state.next({ ..._formState });
            if (_options.resolver) {
                const { errors } = await _runSchema([name]);
                _updateIsFieldValueUpdated(fieldValue);
                if (isFieldValueUpdated) {
                    const previousErrorLookupResult = schemaErrorLookup(_formState.errors, _fields, name);
                    const errorLookupResult = schemaErrorLookup(errors, _fields, previousErrorLookupResult.name || name);
                    error = errorLookupResult.error;
                    name = errorLookupResult.name;
                    isValid = isEmptyObject(errors);
                }
            }
            else {
                _updateIsValidating([name], true);
                error = (await validateField(field, _names.disabled, _formValues, shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation))[name];
                _updateIsValidating([name]);
                _updateIsFieldValueUpdated(fieldValue);
                if (isFieldValueUpdated) {
                    if (error) {
                        isValid = false;
                    }
                    else if (_proxyFormState.isValid ||
                        _proxySubscribeFormState.isValid) {
                        isValid = await executeBuiltInValidation(_fields, true);
                    }
                }
            }
            if (isFieldValueUpdated) {
                field._f.deps &&
                    (!Array.isArray(field._f.deps) || field._f.deps.length > 0) &&
                    trigger(field._f.deps);
                shouldRenderByError(name, isValid, error, fieldState);
            }
        }
    };
    const _focusInput = (ref, key) => {
        if (get(_formState.errors, key) && ref.focus) {
            ref.focus();
            return 1;
        }
        return;
    };
    const trigger = async (name, options = {}) => {
        let isValid;
        let validationResult;
        const fieldNames = convertToArrayPayload(name);
        if (_options.resolver) {
            const errors = await executeSchemaAndUpdateState(isUndefined(name) ? name : fieldNames);
            isValid = isEmptyObject(errors);
            validationResult = name
                ? !fieldNames.some((name) => get(errors, name))
                : isValid;
        }
        else if (name) {
            validationResult = (await Promise.all(fieldNames.map(async (fieldName) => {
                const field = get(_fields, fieldName);
                return await executeBuiltInValidation(field && field._f ? { [fieldName]: field } : field);
            }))).every(Boolean);
            !(!validationResult && !_formState.isValid) && _setValid();
        }
        else {
            validationResult = isValid = await executeBuiltInValidation(_fields);
        }
        _subjects.state.next({
            ...(!isString(name) ||
                ((_proxyFormState.isValid || _proxySubscribeFormState.isValid) &&
                    isValid !== _formState.isValid)
                ? {}
                : { name }),
            ...(_options.resolver || !name ? { isValid } : {}),
            errors: _formState.errors,
        });
        options.shouldFocus &&
            !validationResult &&
            iterateFieldsByAction(_fields, _focusInput, name ? fieldNames : _names.mount);
        return validationResult;
    };
    const getValues = (fieldNames, config) => {
        let values = {
            ...(_state.mount ? _formValues : _defaultValues),
        };
        if (config) {
            values = extractFormValues(config.dirtyFields ? _formState.dirtyFields : _formState.touchedFields, values);
        }
        return isUndefined(fieldNames)
            ? values
            : isString(fieldNames)
                ? get(values, fieldNames)
                : fieldNames.map((name) => get(values, name));
    };
    const getFieldState = (name, formState) => ({
        invalid: !!get((formState || _formState).errors, name),
        isDirty: !!get((formState || _formState).dirtyFields, name),
        error: get((formState || _formState).errors, name),
        isValidating: !!get(_formState.validatingFields, name),
        isTouched: !!get((formState || _formState).touchedFields, name),
    });
    const clearErrors = (name) => {
        name &&
            convertToArrayPayload(name).forEach((inputName) => unset(_formState.errors, inputName));
        _subjects.state.next({
            errors: name ? _formState.errors : {},
        });
    };
    const setError = (name, error, options) => {
        const ref = (get(_fields, name, { _f: {} })._f || {}).ref;
        const currentError = get(_formState.errors, name) || {};
        // Don't override existing error messages elsewhere in the object tree.
        const { ref: currentRef, message, type, ...restOfErrorTree } = currentError;
        set(_formState.errors, name, {
            ...restOfErrorTree,
            ...error,
            ref,
        });
        _subjects.state.next({
            name,
            errors: _formState.errors,
            isValid: false,
        });
        options && options.shouldFocus && ref && ref.focus && ref.focus();
    };
    const watch = (name, defaultValue) => isFunction(name)
        ? _subjects.state.subscribe({
            next: (payload) => 'values' in payload &&
                name(_getWatch(undefined, defaultValue), payload),
        })
        : _getWatch(name, defaultValue, true);
    const _subscribe = (props) => _subjects.state.subscribe({
        next: (formState) => {
            if (shouldSubscribeByName(props.name, formState.name, props.exact) &&
                shouldRenderFormState(formState, props.formState || _proxyFormState, _setFormState, props.reRenderRoot)) {
                props.callback({
                    values: { ..._formValues },
                    ..._formState,
                    ...formState,
                    defaultValues: _defaultValues,
                });
            }
        },
    }).unsubscribe;
    const subscribe = (props) => {
        _state.mount = true;
        _proxySubscribeFormState = {
            ..._proxySubscribeFormState,
            ...props.formState,
        };
        return _subscribe({
            ...props,
            formState: _proxySubscribeFormState,
        });
    };
    const unregister = (name, options = {}) => {
        for (const fieldName of name ? convertToArrayPayload(name) : _names.mount) {
            _names.mount.delete(fieldName);
            _names.array.delete(fieldName);
            if (!options.keepValue) {
                unset(_fields, fieldName);
                unset(_formValues, fieldName);
            }
            !options.keepError && unset(_formState.errors, fieldName);
            !options.keepDirty && unset(_formState.dirtyFields, fieldName);
            !options.keepTouched && unset(_formState.touchedFields, fieldName);
            !options.keepIsValidating &&
                unset(_formState.validatingFields, fieldName);
            !_options.shouldUnregister &&
                !options.keepDefaultValue &&
                unset(_defaultValues, fieldName);
        }
        _subjects.state.next({
            values: cloneObject(_formValues),
        });
        _subjects.state.next({
            ..._formState,
            ...(!options.keepDirty ? {} : { isDirty: _getDirty() }),
        });
        !options.keepIsValid && _setValid();
    };
    const _setDisabledField = ({ disabled, name, }) => {
        if ((isBoolean(disabled) && _state.mount) ||
            !!disabled ||
            _names.disabled.has(name)) {
            disabled ? _names.disabled.add(name) : _names.disabled.delete(name);
        }
    };
    const register = (name, options = {}) => {
        let field = get(_fields, name);
        const disabledIsDefined = isBoolean(options.disabled) || isBoolean(_options.disabled);
        set(_fields, name, {
            ...(field || {}),
            _f: {
                ...(field && field._f ? field._f : { ref: { name } }),
                name,
                mount: true,
                ...options,
            },
        });
        _names.mount.add(name);
        if (field) {
            _setDisabledField({
                disabled: isBoolean(options.disabled)
                    ? options.disabled
                    : _options.disabled,
                name,
            });
        }
        else {
            updateValidAndValue(name, true, options.value);
        }
        return {
            ...(disabledIsDefined
                ? { disabled: options.disabled || _options.disabled }
                : {}),
            ...(_options.progressive
                ? {
                    required: !!options.required,
                    min: getRuleValue(options.min),
                    max: getRuleValue(options.max),
                    minLength: getRuleValue(options.minLength),
                    maxLength: getRuleValue(options.maxLength),
                    pattern: getRuleValue(options.pattern),
                }
                : {}),
            name,
            onChange,
            onBlur: onChange,
            ref: (ref) => {
                if (ref) {
                    register(name, options);
                    field = get(_fields, name);
                    const fieldRef = isUndefined(ref.value)
                        ? ref.querySelectorAll
                            ? ref.querySelectorAll('input,select,textarea')[0] || ref
                            : ref
                        : ref;
                    const radioOrCheckbox = isRadioOrCheckbox(fieldRef);
                    const refs = field._f.refs || [];
                    if (radioOrCheckbox
                        ? refs.find((option) => option === fieldRef)
                        : fieldRef === field._f.ref) {
                        return;
                    }
                    set(_fields, name, {
                        _f: {
                            ...field._f,
                            ...(radioOrCheckbox
                                ? {
                                    refs: [
                                        ...refs.filter(live),
                                        fieldRef,
                                        ...(Array.isArray(get(_defaultValues, name)) ? [{}] : []),
                                    ],
                                    ref: { type: fieldRef.type, name },
                                }
                                : { ref: fieldRef }),
                        },
                    });
                    updateValidAndValue(name, false, undefined, fieldRef);
                }
                else {
                    field = get(_fields, name, {});
                    if (field._f) {
                        field._f.mount = false;
                    }
                    (_options.shouldUnregister || options.shouldUnregister) &&
                        !(isNameInFieldArray(_names.array, name) && _state.action) &&
                        _names.unMount.add(name);
                }
            },
        };
    };
    const _focusError = () => _options.shouldFocusError &&
        iterateFieldsByAction(_fields, _focusInput, _names.mount);
    const _disableForm = (disabled) => {
        if (isBoolean(disabled)) {
            _subjects.state.next({ disabled });
            iterateFieldsByAction(_fields, (ref, name) => {
                const currentField = get(_fields, name);
                if (currentField) {
                    ref.disabled = currentField._f.disabled || disabled;
                    if (Array.isArray(currentField._f.refs)) {
                        currentField._f.refs.forEach((inputRef) => {
                            inputRef.disabled = currentField._f.disabled || disabled;
                        });
                    }
                }
            }, 0, false);
        }
    };
    const handleSubmit = (onValid, onInvalid) => async (e) => {
        let onValidError = undefined;
        if (e) {
            e.preventDefault && e.preventDefault();
            e.persist &&
                e.persist();
        }
        let fieldValues = cloneObject(_formValues);
        _subjects.state.next({
            isSubmitting: true,
        });
        if (_options.resolver) {
            const { errors, values } = await _runSchema();
            _formState.errors = errors;
            fieldValues = cloneObject(values);
        }
        else {
            await executeBuiltInValidation(_fields);
        }
        if (_names.disabled.size) {
            for (const name of _names.disabled) {
                unset(fieldValues, name);
            }
        }
        unset(_formState.errors, 'root');
        if (isEmptyObject(_formState.errors)) {
            _subjects.state.next({
                errors: {},
            });
            try {
                await onValid(fieldValues, e);
            }
            catch (error) {
                onValidError = error;
            }
        }
        else {
            if (onInvalid) {
                await onInvalid({ ..._formState.errors }, e);
            }
            _focusError();
            setTimeout(_focusError);
        }
        _subjects.state.next({
            isSubmitted: true,
            isSubmitting: false,
            isSubmitSuccessful: isEmptyObject(_formState.errors) && !onValidError,
            submitCount: _formState.submitCount + 1,
            errors: _formState.errors,
        });
        if (onValidError) {
            throw onValidError;
        }
    };
    const resetField = (name, options = {}) => {
        if (get(_fields, name)) {
            if (isUndefined(options.defaultValue)) {
                setValue(name, cloneObject(get(_defaultValues, name)));
            }
            else {
                setValue(name, options.defaultValue);
                set(_defaultValues, name, cloneObject(options.defaultValue));
            }
            if (!options.keepTouched) {
                unset(_formState.touchedFields, name);
            }
            if (!options.keepDirty) {
                unset(_formState.dirtyFields, name);
                _formState.isDirty = options.defaultValue
                    ? _getDirty(name, cloneObject(get(_defaultValues, name)))
                    : _getDirty();
            }
            if (!options.keepError) {
                unset(_formState.errors, name);
                _proxyFormState.isValid && _setValid();
            }
            _subjects.state.next({ ..._formState });
        }
    };
    const _reset = (formValues, keepStateOptions = {}) => {
        const updatedValues = formValues ? cloneObject(formValues) : _defaultValues;
        const cloneUpdatedValues = cloneObject(updatedValues);
        const isEmptyResetValues = isEmptyObject(formValues);
        const values = isEmptyResetValues ? _defaultValues : cloneUpdatedValues;
        if (!keepStateOptions.keepDefaultValues) {
            _defaultValues = updatedValues;
        }
        if (!keepStateOptions.keepValues) {
            if (keepStateOptions.keepDirtyValues) {
                const fieldsToCheck = new Set([
                    ..._names.mount,
                    ...Object.keys(getDirtyFields(_defaultValues, _formValues)),
                ]);
                for (const fieldName of Array.from(fieldsToCheck)) {
                    get(_formState.dirtyFields, fieldName)
                        ? set(values, fieldName, get(_formValues, fieldName))
                        : setValue(fieldName, get(values, fieldName));
                }
            }
            else {
                if (isWeb && isUndefined(formValues)) {
                    for (const name of _names.mount) {
                        const field = get(_fields, name);
                        if (field && field._f) {
                            const fieldReference = Array.isArray(field._f.refs)
                                ? field._f.refs[0]
                                : field._f.ref;
                            if (isHTMLElement(fieldReference)) {
                                const form = fieldReference.closest('form');
                                if (form) {
                                    form.reset();
                                    break;
                                }
                            }
                        }
                    }
                }
                if (keepStateOptions.keepFieldsRef) {
                    for (const fieldName of _names.mount) {
                        setValue(fieldName, get(values, fieldName));
                    }
                }
                else {
                    _fields = {};
                }
            }
            _formValues = _options.shouldUnregister
                ? keepStateOptions.keepDefaultValues
                    ? cloneObject(_defaultValues)
                    : {}
                : cloneObject(values);
            _subjects.array.next({
                values: { ...values },
            });
            _subjects.state.next({
                values: { ...values },
            });
        }
        _names = {
            mount: keepStateOptions.keepDirtyValues ? _names.mount : new Set(),
            unMount: new Set(),
            array: new Set(),
            disabled: new Set(),
            watch: new Set(),
            watchAll: false,
            focus: '',
        };
        _state.mount =
            !_proxyFormState.isValid ||
                !!keepStateOptions.keepIsValid ||
                !!keepStateOptions.keepDirtyValues;
        _state.watch = !!_options.shouldUnregister;
        _subjects.state.next({
            submitCount: keepStateOptions.keepSubmitCount
                ? _formState.submitCount
                : 0,
            isDirty: isEmptyResetValues
                ? false
                : keepStateOptions.keepDirty
                    ? _formState.isDirty
                    : !!(keepStateOptions.keepDefaultValues &&
                        !deepEqual(formValues, _defaultValues)),
            isSubmitted: keepStateOptions.keepIsSubmitted
                ? _formState.isSubmitted
                : false,
            dirtyFields: isEmptyResetValues
                ? {}
                : keepStateOptions.keepDirtyValues
                    ? keepStateOptions.keepDefaultValues && _formValues
                        ? getDirtyFields(_defaultValues, _formValues)
                        : _formState.dirtyFields
                    : keepStateOptions.keepDefaultValues && formValues
                        ? getDirtyFields(_defaultValues, formValues)
                        : keepStateOptions.keepDirty
                            ? _formState.dirtyFields
                            : {},
            touchedFields: keepStateOptions.keepTouched
                ? _formState.touchedFields
                : {},
            errors: keepStateOptions.keepErrors ? _formState.errors : {},
            isSubmitSuccessful: keepStateOptions.keepIsSubmitSuccessful
                ? _formState.isSubmitSuccessful
                : false,
            isSubmitting: false,
            defaultValues: _defaultValues,
        });
    };
    const reset = (formValues, keepStateOptions) => _reset(isFunction(formValues)
        ? formValues(_formValues)
        : formValues, keepStateOptions);
    const setFocus = (name, options = {}) => {
        const field = get(_fields, name);
        const fieldReference = field && field._f;
        if (fieldReference) {
            const fieldRef = fieldReference.refs
                ? fieldReference.refs[0]
                : fieldReference.ref;
            if (fieldRef.focus) {
                fieldRef.focus();
                options.shouldSelect &&
                    isFunction(fieldRef.select) &&
                    fieldRef.select();
            }
        }
    };
    const _setFormState = (updatedFormState) => {
        _formState = {
            ..._formState,
            ...updatedFormState,
        };
    };
    const _resetDefaultValues = () => isFunction(_options.defaultValues) &&
        _options.defaultValues().then((values) => {
            reset(values, _options.resetOptions);
            _subjects.state.next({
                isLoading: false,
            });
        });
    const methods = {
        control: {
            register,
            unregister,
            getFieldState,
            handleSubmit,
            setError,
            _subscribe,
            _runSchema,
            _focusError,
            _getWatch,
            _getDirty,
            _setValid,
            _setFieldArray,
            _setDisabledField,
            _setErrors,
            _getFieldArray,
            _reset,
            _resetDefaultValues,
            _removeUnmounted,
            _disableForm,
            _subjects,
            _proxyFormState,
            get _fields() {
                return _fields;
            },
            get _formValues() {
                return _formValues;
            },
            get _state() {
                return _state;
            },
            set _state(value) {
                _state = value;
            },
            get _defaultValues() {
                return _defaultValues;
            },
            get _names() {
                return _names;
            },
            set _names(value) {
                _names = value;
            },
            get _formState() {
                return _formState;
            },
            get _options() {
                return _options;
            },
            set _options(value) {
                _options = {
                    ..._options,
                    ...value,
                };
            },
        },
        subscribe,
        trigger,
        register,
        handleSubmit,
        watch,
        setValue,
        getValues,
        reset,
        resetField,
        clearErrors,
        unregister,
        setError,
        setFocus,
        getFieldState,
    };
    return {
        ...methods,
        formControl: methods,
    };
}

var generateId = () => {
    if (typeof crypto !== 'undefined' && crypto.randomUUID) {
        return crypto.randomUUID();
    }
    const d = typeof performance === 'undefined' ? Date.now() : performance.now() * 1000;
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {
        const r = (Math.random() * 16 + d) % 16 | 0;
        return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);
    });
};

var getFocusFieldName = (name, index, options = {}) => options.shouldFocus || isUndefined(options.shouldFocus)
    ? options.focusName ||
        `${name}.${isUndefined(options.focusIndex) ? index : options.focusIndex}.`
    : '';

var appendAt = (data, value) => [
    ...data,
    ...convertToArrayPayload(value),
];

var fillEmptyArray = (value) => Array.isArray(value) ? value.map(() => undefined) : undefined;

function insert(data, index, value) {
    return [
        ...data.slice(0, index),
        ...convertToArrayPayload(value),
        ...data.slice(index),
    ];
}

var moveArrayAt = (data, from, to) => {
    if (!Array.isArray(data)) {
        return [];
    }
    if (isUndefined(data[to])) {
        data[to] = undefined;
    }
    data.splice(to, 0, data.splice(from, 1)[0]);
    return data;
};

var prependAt = (data, value) => [
    ...convertToArrayPayload(value),
    ...convertToArrayPayload(data),
];

function removeAtIndexes(data, indexes) {
    let i = 0;
    const temp = [...data];
    for (const index of indexes) {
        temp.splice(index - i, 1);
        i++;
    }
    return compact(temp).length ? temp : [];
}
var removeArrayAt = (data, index) => isUndefined(index)
    ? []
    : removeAtIndexes(data, convertToArrayPayload(index).sort((a, b) => a - b));

var swapArrayAt = (data, indexA, indexB) => {
    [data[indexA], data[indexB]] = [data[indexB], data[indexA]];
};

var updateAt = (fieldValues, index, value) => {
    fieldValues[index] = value;
    return fieldValues;
};

/**
 * A custom hook that exposes convenient methods to perform operations with a list of dynamic inputs that need to be appended, updated, removed etc. • [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn) • [Video](https://youtu.be/4MrbfGSFY2A)
 *
 * @remarks
 * [API](https://react-hook-form.com/docs/usefieldarray) • [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn)
 *
 * @param props - useFieldArray props
 *
 * @returns methods - functions to manipulate with the Field Arrays (dynamic inputs) {@link UseFieldArrayReturn}
 *
 * @example
 * ```tsx
 * function App() {
 *   const { register, control, handleSubmit, reset, trigger, setError } = useForm({
 *     defaultValues: {
 *       test: []
 *     }
 *   });
 *   const { fields, append } = useFieldArray({
 *     control,
 *     name: "test"
 *   });
 *
 *   return (
 *     <form onSubmit={handleSubmit(data => console.log(data))}>
 *       {fields.map((item, index) => (
 *          <input key={item.id} {...register(`test.${index}.firstName`)}  />
 *       ))}
 *       <button type="button" onClick={() => append({ firstName: "bill" })}>
 *         append
 *       </button>
 *       <input type="submit" />
 *     </form>
 *   );
 * }
 * ```
 */
function useFieldArray(props) {
    const methods = useFormContext();
    const { control = methods.control, name, keyName = 'id', shouldUnregister, rules, } = props;
    const [fields, setFields] = react__WEBPACK_IMPORTED_MODULE_0__.useState(control._getFieldArray(name));
    const ids = react__WEBPACK_IMPORTED_MODULE_0__.useRef(control._getFieldArray(name).map(generateId));
    const _actioned = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);
    control._names.array.add(name);
    react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => rules &&
        control.register(name, rules), [control, rules, name]);
    useIsomorphicLayoutEffect(() => control._subjects.array.subscribe({
        next: ({ values, name: fieldArrayName, }) => {
            if (fieldArrayName === name || !fieldArrayName) {
                const fieldValues = get(values, name);
                if (Array.isArray(fieldValues)) {
                    setFields(fieldValues);
                    ids.current = fieldValues.map(generateId);
                }
            }
        },
    }).unsubscribe, [control, name]);
    const updateValues = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((updatedFieldArrayValues) => {
        _actioned.current = true;
        control._setFieldArray(name, updatedFieldArrayValues);
    }, [control, name]);
    const append = (value, options) => {
        const appendValue = convertToArrayPayload(cloneObject(value));
        const updatedFieldArrayValues = appendAt(control._getFieldArray(name), appendValue);
        control._names.focus = getFocusFieldName(name, updatedFieldArrayValues.length - 1, options);
        ids.current = appendAt(ids.current, appendValue.map(generateId));
        updateValues(updatedFieldArrayValues);
        setFields(updatedFieldArrayValues);
        control._setFieldArray(name, updatedFieldArrayValues, appendAt, {
            argA: fillEmptyArray(value),
        });
    };
    const prepend = (value, options) => {
        const prependValue = convertToArrayPayload(cloneObject(value));
        const updatedFieldArrayValues = prependAt(control._getFieldArray(name), prependValue);
        control._names.focus = getFocusFieldName(name, 0, options);
        ids.current = prependAt(ids.current, prependValue.map(generateId));
        updateValues(updatedFieldArrayValues);
        setFields(updatedFieldArrayValues);
        control._setFieldArray(name, updatedFieldArrayValues, prependAt, {
            argA: fillEmptyArray(value),
        });
    };
    const remove = (index) => {
        const updatedFieldArrayValues = removeArrayAt(control._getFieldArray(name), index);
        ids.current = removeArrayAt(ids.current, index);
        updateValues(updatedFieldArrayValues);
        setFields(updatedFieldArrayValues);
        !Array.isArray(get(control._fields, name)) &&
            set(control._fields, name, undefined);
        control._setFieldArray(name, updatedFieldArrayValues, removeArrayAt, {
            argA: index,
        });
    };
    const insert$1 = (index, value, options) => {
        const insertValue = convertToArrayPayload(cloneObject(value));
        const updatedFieldArrayValues = insert(control._getFieldArray(name), index, insertValue);
        control._names.focus = getFocusFieldName(name, index, options);
        ids.current = insert(ids.current, index, insertValue.map(generateId));
        updateValues(updatedFieldArrayValues);
        setFields(updatedFieldArrayValues);
        control._setFieldArray(name, updatedFieldArrayValues, insert, {
            argA: index,
            argB: fillEmptyArray(value),
        });
    };
    const swap = (indexA, indexB) => {
        const updatedFieldArrayValues = control._getFieldArray(name);
        swapArrayAt(updatedFieldArrayValues, indexA, indexB);
        swapArrayAt(ids.current, indexA, indexB);
        updateValues(updatedFieldArrayValues);
        setFields(updatedFieldArrayValues);
        control._setFieldArray(name, updatedFieldArrayValues, swapArrayAt, {
            argA: indexA,
            argB: indexB,
        }, false);
    };
    const move = (from, to) => {
        const updatedFieldArrayValues = control._getFieldArray(name);
        moveArrayAt(updatedFieldArrayValues, from, to);
        moveArrayAt(ids.current, from, to);
        updateValues(updatedFieldArrayValues);
        setFields(updatedFieldArrayValues);
        control._setFieldArray(name, updatedFieldArrayValues, moveArrayAt, {
            argA: from,
            argB: to,
        }, false);
    };
    const update = (index, value) => {
        const updateValue = cloneObject(value);
        const updatedFieldArrayValues = updateAt(control._getFieldArray(name), index, updateValue);
        ids.current = [...updatedFieldArrayValues].map((item, i) => !item || i === index ? generateId() : ids.current[i]);
        updateValues(updatedFieldArrayValues);
        setFields([...updatedFieldArrayValues]);
        control._setFieldArray(name, updatedFieldArrayValues, updateAt, {
            argA: index,
            argB: updateValue,
        }, true, false);
    };
    const replace = (value) => {
        const updatedFieldArrayValues = convertToArrayPayload(cloneObject(value));
        ids.current = updatedFieldArrayValues.map(generateId);
        updateValues([...updatedFieldArrayValues]);
        setFields([...updatedFieldArrayValues]);
        control._setFieldArray(name, [...updatedFieldArrayValues], (data) => data, {}, true, false);
    };
    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
        control._state.action = false;
        isWatched(name, control._names) &&
            control._subjects.state.next({
                ...control._formState,
            });
        if (_actioned.current &&
            (!getValidationModes(control._options.mode).isOnSubmit ||
                control._formState.isSubmitted) &&
            !getValidationModes(control._options.reValidateMode).isOnSubmit) {
            if (control._options.resolver) {
                control._runSchema([name]).then((result) => {
                    const error = get(result.errors, name);
                    const existingError = get(control._formState.errors, name);
                    if (existingError
                        ? (!error && existingError.type) ||
                            (error &&
                                (existingError.type !== error.type ||
                                    existingError.message !== error.message))
                        : error && error.type) {
                        error
                            ? set(control._formState.errors, name, error)
                            : unset(control._formState.errors, name);
                        control._subjects.state.next({
                            errors: control._formState.errors,
                        });
                    }
                });
            }
            else {
                const field = get(control._fields, name);
                if (field &&
                    field._f &&
                    !(getValidationModes(control._options.reValidateMode).isOnSubmit &&
                        getValidationModes(control._options.mode).isOnSubmit)) {
                    validateField(field, control._names.disabled, control._formValues, control._options.criteriaMode === VALIDATION_MODE.all, control._options.shouldUseNativeValidation, true).then((error) => !isEmptyObject(error) &&
                        control._subjects.state.next({
                            errors: updateFieldArrayRootError(control._formState.errors, error, name),
                        }));
                }
            }
        }
        control._subjects.state.next({
            name,
            values: cloneObject(control._formValues),
        });
        control._names.focus &&
            iterateFieldsByAction(control._fields, (ref, key) => {
                if (control._names.focus &&
                    key.startsWith(control._names.focus) &&
                    ref.focus) {
                    ref.focus();
                    return 1;
                }
                return;
            });
        control._names.focus = '';
        control._setValid();
        _actioned.current = false;
    }, [fields, name, control]);
    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
        !get(control._formValues, name) && control._setFieldArray(name);
        return () => {
            const updateMounted = (name, value) => {
                const field = get(control._fields, name);
                if (field && field._f) {
                    field._f.mount = value;
                }
            };
            control._options.shouldUnregister || shouldUnregister
                ? control.unregister(name)
                : updateMounted(name, false);
        };
    }, [name, control, keyName, shouldUnregister]);
    return {
        swap: react__WEBPACK_IMPORTED_MODULE_0__.useCallback(swap, [updateValues, name, control]),
        move: react__WEBPACK_IMPORTED_MODULE_0__.useCallback(move, [updateValues, name, control]),
        prepend: react__WEBPACK_IMPORTED_MODULE_0__.useCallback(prepend, [updateValues, name, control]),
        append: react__WEBPACK_IMPORTED_MODULE_0__.useCallback(append, [updateValues, name, control]),
        remove: react__WEBPACK_IMPORTED_MODULE_0__.useCallback(remove, [updateValues, name, control]),
        insert: react__WEBPACK_IMPORTED_MODULE_0__.useCallback(insert$1, [updateValues, name, control]),
        update: react__WEBPACK_IMPORTED_MODULE_0__.useCallback(update, [updateValues, name, control]),
        replace: react__WEBPACK_IMPORTED_MODULE_0__.useCallback(replace, [updateValues, name, control]),
        fields: react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => fields.map((field, index) => ({
            ...field,
            [keyName]: ids.current[index] || generateId(),
        })), [fields, keyName]),
    };
}

/**
 * Custom hook to manage the entire form.
 *
 * @remarks
 * [API](https://react-hook-form.com/docs/useform) • [Demo](https://codesandbox.io/s/react-hook-form-get-started-ts-5ksmm) • [Video](https://www.youtube.com/watch?v=RkXv4AXXC_4)
 *
 * @param props - form configuration and validation parameters.
 *
 * @returns methods - individual functions to manage the form state. {@link UseFormReturn}
 *
 * @example
 * ```tsx
 * function App() {
 *   const { register, handleSubmit, watch, formState: { errors } } = useForm();
 *   const onSubmit = data => console.log(data);
 *
 *   console.log(watch("example"));
 *
 *   return (
 *     <form onSubmit={handleSubmit(onSubmit)}>
 *       <input defaultValue="test" {...register("example")} />
 *       <input {...register("exampleRequired", { required: true })} />
 *       {errors.exampleRequired && <span>This field is required</span>}
 *       <button>Submit</button>
 *     </form>
 *   );
 * }
 * ```
 */
function useForm(props = {}) {
    const _formControl = react__WEBPACK_IMPORTED_MODULE_0__.useRef(undefined);
    const _values = react__WEBPACK_IMPORTED_MODULE_0__.useRef(undefined);
    const [formState, updateFormState] = react__WEBPACK_IMPORTED_MODULE_0__.useState({
        isDirty: false,
        isValidating: false,
        isLoading: isFunction(props.defaultValues),
        isSubmitted: false,
        isSubmitting: false,
        isSubmitSuccessful: false,
        isValid: false,
        submitCount: 0,
        dirtyFields: {},
        touchedFields: {},
        validatingFields: {},
        errors: props.errors || {},
        disabled: props.disabled || false,
        isReady: false,
        defaultValues: isFunction(props.defaultValues)
            ? undefined
            : props.defaultValues,
    });
    if (!_formControl.current) {
        if (props.formControl) {
            _formControl.current = {
                ...props.formControl,
                formState,
            };
            if (props.defaultValues && !isFunction(props.defaultValues)) {
                props.formControl.reset(props.defaultValues, props.resetOptions);
            }
        }
        else {
            const { formControl, ...rest } = createFormControl(props);
            _formControl.current = {
                ...rest,
                formState,
            };
        }
    }
    const control = _formControl.current.control;
    control._options = props;
    useIsomorphicLayoutEffect(() => {
        const sub = control._subscribe({
            formState: control._proxyFormState,
            callback: () => updateFormState({ ...control._formState }),
            reRenderRoot: true,
        });
        updateFormState((data) => ({
            ...data,
            isReady: true,
        }));
        control._formState.isReady = true;
        return sub;
    }, [control]);
    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => control._disableForm(props.disabled), [control, props.disabled]);
    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
        if (props.mode) {
            control._options.mode = props.mode;
        }
        if (props.reValidateMode) {
            control._options.reValidateMode = props.reValidateMode;
        }
    }, [control, props.mode, props.reValidateMode]);
    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
        if (props.errors) {
            control._setErrors(props.errors);
            control._focusError();
        }
    }, [control, props.errors]);
    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
        props.shouldUnregister &&
            control._subjects.state.next({
                values: control._getWatch(),
            });
    }, [control, props.shouldUnregister]);
    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
        if (control._proxyFormState.isDirty) {
            const isDirty = control._getDirty();
            if (isDirty !== formState.isDirty) {
                control._subjects.state.next({
                    isDirty,
                });
            }
        }
    }, [control, formState.isDirty]);
    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
        if (props.values && !deepEqual(props.values, _values.current)) {
            control._reset(props.values, {
                keepFieldsRef: true,
                ...control._options.resetOptions,
            });
            _values.current = props.values;
            updateFormState((state) => ({ ...state }));
        }
        else {
            control._resetDefaultValues();
        }
    }, [control, props.values]);
    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
        if (!control._state.mount) {
            control._setValid();
            control._state.mount = true;
        }
        if (control._state.watch) {
            control._state.watch = false;
            control._subjects.state.next({ ...control._formState });
        }
        control._removeUnmounted();
    });
    _formControl.current.formState = getProxyFormState(formState, control);
    return _formControl.current;
}


//# sourceMappingURL=index.esm.mjs.map


/***/ }),

/***/ "./node_modules/react-intersection-observer/dist/index.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/react-intersection-observer/dist/index.mjs ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   InView: () => (/* binding */ InView),
/* harmony export */   defaultFallbackInView: () => (/* binding */ defaultFallbackInView),
/* harmony export */   observe: () => (/* binding */ observe),
/* harmony export */   useInView: () => (/* binding */ useInView)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
"use client";
var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);

// src/InView.tsx


// src/observe.ts
var observerMap = /* @__PURE__ */ new Map();
var RootIds = /* @__PURE__ */ new WeakMap();
var rootId = 0;
var unsupportedValue = void 0;
function defaultFallbackInView(inView) {
  unsupportedValue = inView;
}
function getRootId(root) {
  if (!root) return "0";
  if (RootIds.has(root)) return RootIds.get(root);
  rootId += 1;
  RootIds.set(root, rootId.toString());
  return RootIds.get(root);
}
function optionsToId(options) {
  return Object.keys(options).sort().filter(
    (key) => options[key] !== void 0
  ).map((key) => {
    return `${key}_${key === "root" ? getRootId(options.root) : options[key]}`;
  }).toString();
}
function createObserver(options) {
  const id = optionsToId(options);
  let instance = observerMap.get(id);
  if (!instance) {
    const elements = /* @__PURE__ */ new Map();
    let thresholds;
    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        var _a;
        const inView = entry.isIntersecting && thresholds.some((threshold) => entry.intersectionRatio >= threshold);
        if (options.trackVisibility && typeof entry.isVisible === "undefined") {
          entry.isVisible = inView;
        }
        (_a = elements.get(entry.target)) == null ? void 0 : _a.forEach((callback) => {
          callback(inView, entry);
        });
      });
    }, options);
    thresholds = observer.thresholds || (Array.isArray(options.threshold) ? options.threshold : [options.threshold || 0]);
    instance = {
      id,
      observer,
      elements
    };
    observerMap.set(id, instance);
  }
  return instance;
}
function observe(element, callback, options = {}, fallbackInView = unsupportedValue) {
  if (typeof window.IntersectionObserver === "undefined" && fallbackInView !== void 0) {
    const bounds = element.getBoundingClientRect();
    callback(fallbackInView, {
      isIntersecting: fallbackInView,
      target: element,
      intersectionRatio: typeof options.threshold === "number" ? options.threshold : 0,
      time: 0,
      boundingClientRect: bounds,
      intersectionRect: bounds,
      rootBounds: bounds
    });
    return () => {
    };
  }
  const { id, observer, elements } = createObserver(options);
  const callbacks = elements.get(element) || [];
  if (!elements.has(element)) {
    elements.set(element, callbacks);
  }
  callbacks.push(callback);
  observer.observe(element);
  return function unobserve() {
    callbacks.splice(callbacks.indexOf(callback), 1);
    if (callbacks.length === 0) {
      elements.delete(element);
      observer.unobserve(element);
    }
    if (elements.size === 0) {
      observer.disconnect();
      observerMap.delete(id);
    }
  };
}

// src/InView.tsx
function isPlainChildren(props) {
  return typeof props.children !== "function";
}
var InView = class extends react__WEBPACK_IMPORTED_MODULE_0__.Component {
  constructor(props) {
    super(props);
    __publicField(this, "node", null);
    __publicField(this, "_unobserveCb", null);
    __publicField(this, "handleNode", (node) => {
      if (this.node) {
        this.unobserve();
        if (!node && !this.props.triggerOnce && !this.props.skip) {
          this.setState({ inView: !!this.props.initialInView, entry: void 0 });
        }
      }
      this.node = node ? node : null;
      this.observeNode();
    });
    __publicField(this, "handleChange", (inView, entry) => {
      if (inView && this.props.triggerOnce) {
        this.unobserve();
      }
      if (!isPlainChildren(this.props)) {
        this.setState({ inView, entry });
      }
      if (this.props.onChange) {
        this.props.onChange(inView, entry);
      }
    });
    this.state = {
      inView: !!props.initialInView,
      entry: void 0
    };
  }
  componentDidMount() {
    this.unobserve();
    this.observeNode();
  }
  componentDidUpdate(prevProps) {
    if (prevProps.rootMargin !== this.props.rootMargin || prevProps.root !== this.props.root || prevProps.threshold !== this.props.threshold || prevProps.skip !== this.props.skip || prevProps.trackVisibility !== this.props.trackVisibility || prevProps.delay !== this.props.delay) {
      this.unobserve();
      this.observeNode();
    }
  }
  componentWillUnmount() {
    this.unobserve();
  }
  observeNode() {
    if (!this.node || this.props.skip) return;
    const {
      threshold,
      root,
      rootMargin,
      trackVisibility,
      delay,
      fallbackInView
    } = this.props;
    this._unobserveCb = observe(
      this.node,
      this.handleChange,
      {
        threshold,
        root,
        rootMargin,
        // @ts-ignore
        trackVisibility,
        // @ts-ignore
        delay
      },
      fallbackInView
    );
  }
  unobserve() {
    if (this._unobserveCb) {
      this._unobserveCb();
      this._unobserveCb = null;
    }
  }
  render() {
    const { children } = this.props;
    if (typeof children === "function") {
      const { inView, entry } = this.state;
      return children({ inView, entry, ref: this.handleNode });
    }
    const {
      as,
      triggerOnce,
      threshold,
      root,
      rootMargin,
      onChange,
      skip,
      trackVisibility,
      delay,
      initialInView,
      fallbackInView,
      ...props
    } = this.props;
    return react__WEBPACK_IMPORTED_MODULE_0__.createElement(
      as || "div",
      { ref: this.handleNode, ...props },
      children
    );
  }
};

// src/useInView.tsx

function useInView({
  threshold,
  delay,
  trackVisibility,
  rootMargin,
  root,
  triggerOnce,
  skip,
  initialInView,
  fallbackInView,
  onChange
} = {}) {
  var _a;
  const [ref, setRef] = react__WEBPACK_IMPORTED_MODULE_0__.useState(null);
  const callback = react__WEBPACK_IMPORTED_MODULE_0__.useRef(onChange);
  const [state, setState] = react__WEBPACK_IMPORTED_MODULE_0__.useState({
    inView: !!initialInView,
    entry: void 0
  });
  callback.current = onChange;
  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(
    () => {
      if (skip || !ref) return;
      let unobserve;
      unobserve = observe(
        ref,
        (inView, entry) => {
          setState({
            inView,
            entry
          });
          if (callback.current) callback.current(inView, entry);
          if (entry.isIntersecting && triggerOnce && unobserve) {
            unobserve();
            unobserve = void 0;
          }
        },
        {
          root,
          rootMargin,
          threshold,
          // @ts-ignore
          trackVisibility,
          // @ts-ignore
          delay
        },
        fallbackInView
      );
      return () => {
        if (unobserve) {
          unobserve();
        }
      };
    },
    // We break the rule here, because we aren't including the actual `threshold` variable
    // eslint-disable-next-line react-hooks/exhaustive-deps
    [
      // If the threshold is an array, convert it to a string, so it won't change between renders.
      Array.isArray(threshold) ? threshold.toString() : threshold,
      ref,
      root,
      rootMargin,
      triggerOnce,
      skip,
      trackVisibility,
      fallbackInView,
      delay
    ]
  );
  const entryTarget = (_a = state.entry) == null ? void 0 : _a.target;
  const previousEntryTarget = react__WEBPACK_IMPORTED_MODULE_0__.useRef(void 0);
  if (!ref && entryTarget && !triggerOnce && !skip && previousEntryTarget.current !== entryTarget) {
    previousEntryTarget.current = entryTarget;
    setState({
      inView: !!initialInView,
      entry: void 0
    });
  }
  const result = [setRef, state.inView, state.entry];
  result.ref = result[0];
  result.inView = result[1];
  result.entry = result[2];
  return result;
}

//# sourceMappingURL=index.mjs.map

/***/ }),

/***/ "./node_modules/react-is/cjs/react-is.development.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-is/cjs/react-is.development.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */





if (true) {
  (function() {
'use strict';

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol.for;
var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
// (unstable) APIs that have been removed. Can we remove the symbols?

var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;

function isValidElementType(type) {
  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
}

function typeOf(object) {
  if (typeof object === 'object' && object !== null) {
    var $$typeof = object.$$typeof;

    switch ($$typeof) {
      case REACT_ELEMENT_TYPE:
        var type = object.type;

        switch (type) {
          case REACT_ASYNC_MODE_TYPE:
          case REACT_CONCURRENT_MODE_TYPE:
          case REACT_FRAGMENT_TYPE:
          case REACT_PROFILER_TYPE:
          case REACT_STRICT_MODE_TYPE:
          case REACT_SUSPENSE_TYPE:
            return type;

          default:
            var $$typeofType = type && type.$$typeof;

            switch ($$typeofType) {
              case REACT_CONTEXT_TYPE:
              case REACT_FORWARD_REF_TYPE:
              case REACT_LAZY_TYPE:
              case REACT_MEMO_TYPE:
              case REACT_PROVIDER_TYPE:
                return $$typeofType;

              default:
                return $$typeof;
            }

        }

      case REACT_PORTAL_TYPE:
        return $$typeof;
    }
  }

  return undefined;
} // AsyncMode is deprecated along with isAsyncMode

var AsyncMode = REACT_ASYNC_MODE_TYPE;
var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
var ContextConsumer = REACT_CONTEXT_TYPE;
var ContextProvider = REACT_PROVIDER_TYPE;
var Element = REACT_ELEMENT_TYPE;
var ForwardRef = REACT_FORWARD_REF_TYPE;
var Fragment = REACT_FRAGMENT_TYPE;
var Lazy = REACT_LAZY_TYPE;
var Memo = REACT_MEMO_TYPE;
var Portal = REACT_PORTAL_TYPE;
var Profiler = REACT_PROFILER_TYPE;
var StrictMode = REACT_STRICT_MODE_TYPE;
var Suspense = REACT_SUSPENSE_TYPE;
var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated

function isAsyncMode(object) {
  {
    if (!hasWarnedAboutDeprecatedIsAsyncMode) {
      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint

      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
    }
  }

  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
}
function isConcurrentMode(object) {
  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
}
function isContextConsumer(object) {
  return typeOf(object) === REACT_CONTEXT_TYPE;
}
function isContextProvider(object) {
  return typeOf(object) === REACT_PROVIDER_TYPE;
}
function isElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}
function isForwardRef(object) {
  return typeOf(object) === REACT_FORWARD_REF_TYPE;
}
function isFragment(object) {
  return typeOf(object) === REACT_FRAGMENT_TYPE;
}
function isLazy(object) {
  return typeOf(object) === REACT_LAZY_TYPE;
}
function isMemo(object) {
  return typeOf(object) === REACT_MEMO_TYPE;
}
function isPortal(object) {
  return typeOf(object) === REACT_PORTAL_TYPE;
}
function isProfiler(object) {
  return typeOf(object) === REACT_PROFILER_TYPE;
}
function isStrictMode(object) {
  return typeOf(object) === REACT_STRICT_MODE_TYPE;
}
function isSuspense(object) {
  return typeOf(object) === REACT_SUSPENSE_TYPE;
}

exports.AsyncMode = AsyncMode;
exports.ConcurrentMode = ConcurrentMode;
exports.ContextConsumer = ContextConsumer;
exports.ContextProvider = ContextProvider;
exports.Element = Element;
exports.ForwardRef = ForwardRef;
exports.Fragment = Fragment;
exports.Lazy = Lazy;
exports.Memo = Memo;
exports.Portal = Portal;
exports.Profiler = Profiler;
exports.StrictMode = StrictMode;
exports.Suspense = Suspense;
exports.isAsyncMode = isAsyncMode;
exports.isConcurrentMode = isConcurrentMode;
exports.isContextConsumer = isContextConsumer;
exports.isContextProvider = isContextProvider;
exports.isElement = isElement;
exports.isForwardRef = isForwardRef;
exports.isFragment = isFragment;
exports.isLazy = isLazy;
exports.isMemo = isMemo;
exports.isPortal = isPortal;
exports.isProfiler = isProfiler;
exports.isStrictMode = isStrictMode;
exports.isSuspense = isSuspense;
exports.isValidElementType = isValidElementType;
exports.typeOf = typeOf;
  })();
}


/***/ }),

/***/ "./node_modules/react-is/index.js":
/*!****************************************!*\
  !*** ./node_modules/react-is/index.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


if (false) // removed by dead control flow
{} else {
  module.exports = __webpack_require__(/*! ./cjs/react-is.development.js */ "./node_modules/react-is/cjs/react-is.development.js");
}


/***/ }),

/***/ "./node_modules/react-swipeable/es/index.js":
/*!**************************************************!*\
  !*** ./node_modules/react-swipeable/es/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DOWN: () => (/* binding */ DOWN),
/* harmony export */   LEFT: () => (/* binding */ LEFT),
/* harmony export */   RIGHT: () => (/* binding */ RIGHT),
/* harmony export */   UP: () => (/* binding */ UP),
/* harmony export */   useSwipeable: () => (/* binding */ useSwipeable)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);


const LEFT = "Left";
const RIGHT = "Right";
const UP = "Up";
const DOWN = "Down";

/* global document */
const defaultProps = {
    delta: 10,
    preventScrollOnSwipe: false,
    rotationAngle: 0,
    trackMouse: false,
    trackTouch: true,
    swipeDuration: Infinity,
    touchEventOptions: { passive: true },
};
const initialState = {
    first: true,
    initial: [0, 0],
    start: 0,
    swiping: false,
    xy: [0, 0],
};
const mouseMove = "mousemove";
const mouseUp = "mouseup";
const touchEnd = "touchend";
const touchMove = "touchmove";
const touchStart = "touchstart";
function getDirection(absX, absY, deltaX, deltaY) {
    if (absX > absY) {
        if (deltaX > 0) {
            return RIGHT;
        }
        return LEFT;
    }
    else if (deltaY > 0) {
        return DOWN;
    }
    return UP;
}
function rotateXYByAngle(pos, angle) {
    if (angle === 0)
        return pos;
    const angleInRadians = (Math.PI / 180) * angle;
    const x = pos[0] * Math.cos(angleInRadians) + pos[1] * Math.sin(angleInRadians);
    const y = pos[1] * Math.cos(angleInRadians) - pos[0] * Math.sin(angleInRadians);
    return [x, y];
}
function getHandlers(set, handlerProps) {
    const onStart = (event) => {
        const isTouch = "touches" in event;
        // if more than a single touch don't track, for now...
        if (isTouch && event.touches.length > 1)
            return;
        set((state, props) => {
            // setup mouse listeners on document to track swipe since swipe can leave container
            if (props.trackMouse && !isTouch) {
                document.addEventListener(mouseMove, onMove);
                document.addEventListener(mouseUp, onUp);
            }
            const { clientX, clientY } = isTouch ? event.touches[0] : event;
            const xy = rotateXYByAngle([clientX, clientY], props.rotationAngle);
            props.onTouchStartOrOnMouseDown &&
                props.onTouchStartOrOnMouseDown({ event });
            return Object.assign(Object.assign(Object.assign({}, state), initialState), { initial: xy.slice(), xy, start: event.timeStamp || 0 });
        });
    };
    const onMove = (event) => {
        set((state, props) => {
            const isTouch = "touches" in event;
            // Discount a swipe if additional touches are present after
            // a swipe has started.
            if (isTouch && event.touches.length > 1) {
                return state;
            }
            // if swipe has exceeded duration stop tracking
            if (event.timeStamp - state.start > props.swipeDuration) {
                return state.swiping ? Object.assign(Object.assign({}, state), { swiping: false }) : state;
            }
            const { clientX, clientY } = isTouch ? event.touches[0] : event;
            const [x, y] = rotateXYByAngle([clientX, clientY], props.rotationAngle);
            const deltaX = x - state.xy[0];
            const deltaY = y - state.xy[1];
            const absX = Math.abs(deltaX);
            const absY = Math.abs(deltaY);
            const time = (event.timeStamp || 0) - state.start;
            const velocity = Math.sqrt(absX * absX + absY * absY) / (time || 1);
            const vxvy = [deltaX / (time || 1), deltaY / (time || 1)];
            const dir = getDirection(absX, absY, deltaX, deltaY);
            // if swipe is under delta and we have not started to track a swipe: skip update
            const delta = typeof props.delta === "number"
                ? props.delta
                : props.delta[dir.toLowerCase()] ||
                    defaultProps.delta;
            if (absX < delta && absY < delta && !state.swiping)
                return state;
            const eventData = {
                absX,
                absY,
                deltaX,
                deltaY,
                dir,
                event,
                first: state.first,
                initial: state.initial,
                velocity,
                vxvy,
            };
            // call onSwipeStart if present and is first swipe event
            eventData.first && props.onSwipeStart && props.onSwipeStart(eventData);
            // call onSwiping if present
            props.onSwiping && props.onSwiping(eventData);
            // track if a swipe is cancelable (handler for swiping or swiped(dir) exists)
            // so we can call preventDefault if needed
            let cancelablePageSwipe = false;
            if (props.onSwiping ||
                props.onSwiped ||
                props[`onSwiped${dir}`]) {
                cancelablePageSwipe = true;
            }
            if (cancelablePageSwipe &&
                props.preventScrollOnSwipe &&
                props.trackTouch &&
                event.cancelable) {
                event.preventDefault();
            }
            return Object.assign(Object.assign({}, state), { 
                // first is now always false
                first: false, eventData, swiping: true });
        });
    };
    const onEnd = (event) => {
        set((state, props) => {
            let eventData;
            if (state.swiping && state.eventData) {
                // if swipe is less than duration fire swiped callbacks
                if (event.timeStamp - state.start < props.swipeDuration) {
                    eventData = Object.assign(Object.assign({}, state.eventData), { event });
                    props.onSwiped && props.onSwiped(eventData);
                    const onSwipedDir = props[`onSwiped${eventData.dir}`];
                    onSwipedDir && onSwipedDir(eventData);
                }
            }
            else {
                props.onTap && props.onTap({ event });
            }
            props.onTouchEndOrOnMouseUp && props.onTouchEndOrOnMouseUp({ event });
            return Object.assign(Object.assign(Object.assign({}, state), initialState), { eventData });
        });
    };
    const cleanUpMouse = () => {
        // safe to just call removeEventListener
        document.removeEventListener(mouseMove, onMove);
        document.removeEventListener(mouseUp, onUp);
    };
    const onUp = (e) => {
        cleanUpMouse();
        onEnd(e);
    };
    /**
     * The value of passive on touchMove depends on `preventScrollOnSwipe`:
     * - true => { passive: false }
     * - false => { passive: true } // Default
     *
     * NOTE: When preventScrollOnSwipe is true, we attempt to call preventDefault to prevent scroll.
     *
     * props.touchEventOptions can also be set for all touch event listeners,
     * but for `touchmove` specifically when `preventScrollOnSwipe` it will
     * supersede and force passive to false.
     *
     */
    const attachTouch = (el, props) => {
        let cleanup = () => { };
        if (el && el.addEventListener) {
            const baseOptions = Object.assign(Object.assign({}, defaultProps.touchEventOptions), props.touchEventOptions);
            // attach touch event listeners and handlers
            const tls = [
                [touchStart, onStart, baseOptions],
                // preventScrollOnSwipe option supersedes touchEventOptions.passive
                [
                    touchMove,
                    onMove,
                    Object.assign(Object.assign({}, baseOptions), (props.preventScrollOnSwipe ? { passive: false } : {})),
                ],
                [touchEnd, onEnd, baseOptions],
            ];
            tls.forEach(([e, h, o]) => el.addEventListener(e, h, o));
            // return properly scoped cleanup method for removing listeners, options not required
            cleanup = () => tls.forEach(([e, h]) => el.removeEventListener(e, h));
        }
        return cleanup;
    };
    const onRef = (el) => {
        // "inline" ref functions are called twice on render, once with null then again with DOM element
        // ignore null here
        if (el === null)
            return;
        set((state, props) => {
            // if the same DOM el as previous just return state
            if (state.el === el)
                return state;
            const addState = {};
            // if new DOM el clean up old DOM and reset cleanUpTouch
            if (state.el && state.el !== el && state.cleanUpTouch) {
                state.cleanUpTouch();
                addState.cleanUpTouch = void 0;
            }
            // only attach if we want to track touch
            if (props.trackTouch && el) {
                addState.cleanUpTouch = attachTouch(el, props);
            }
            // store event attached DOM el for comparison, clean up, and re-attachment
            return Object.assign(Object.assign(Object.assign({}, state), { el }), addState);
        });
    };
    // set ref callback to attach touch event listeners
    const output = {
        ref: onRef,
    };
    // if track mouse attach mouse down listener
    if (handlerProps.trackMouse) {
        output.onMouseDown = onStart;
    }
    return [output, attachTouch];
}
function updateTransientState(state, props, previousProps, attachTouch) {
    // if trackTouch is off or there is no el, then remove handlers if necessary and exit
    if (!props.trackTouch || !state.el) {
        if (state.cleanUpTouch) {
            state.cleanUpTouch();
        }
        return Object.assign(Object.assign({}, state), { cleanUpTouch: undefined });
    }
    // trackTouch is on, so if there are no handlers attached, attach them and exit
    if (!state.cleanUpTouch) {
        return Object.assign(Object.assign({}, state), { cleanUpTouch: attachTouch(state.el, props) });
    }
    // trackTouch is on and handlers are already attached, so if preventScrollOnSwipe changes value,
    // remove and reattach handlers (this is required to update the passive option when attaching
    // the handlers)
    if (props.preventScrollOnSwipe !== previousProps.preventScrollOnSwipe ||
        props.touchEventOptions.passive !== previousProps.touchEventOptions.passive) {
        state.cleanUpTouch();
        return Object.assign(Object.assign({}, state), { cleanUpTouch: attachTouch(state.el, props) });
    }
    return state;
}
function useSwipeable(options) {
    const { trackMouse } = options;
    const transientState = react__WEBPACK_IMPORTED_MODULE_0__.useRef(Object.assign({}, initialState));
    const transientProps = react__WEBPACK_IMPORTED_MODULE_0__.useRef(Object.assign({}, defaultProps));
    // track previous rendered props
    const previousProps = react__WEBPACK_IMPORTED_MODULE_0__.useRef(Object.assign({}, transientProps.current));
    previousProps.current = Object.assign({}, transientProps.current);
    // update current render props & defaults
    transientProps.current = Object.assign(Object.assign({}, defaultProps), options);
    // Force defaults for config properties
    let defaultKey;
    for (defaultKey in defaultProps) {
        if (transientProps.current[defaultKey] === void 0) {
            transientProps.current[defaultKey] = defaultProps[defaultKey];
        }
    }
    const [handlers, attachTouch] = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => getHandlers((stateSetter) => (transientState.current = stateSetter(transientState.current, transientProps.current)), { trackMouse }), [trackMouse]);
    transientState.current = updateTransientState(transientState.current, transientProps.current, previousProps.current, attachTouch);
    return handlers;
}


//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/style-value-types/dist/valueTypes.cjs.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-value-types/dist/valueTypes.cjs.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({ value: true }));

const clamp = (min, max) => (v) => Math.max(Math.min(v, max), min);
const sanitize = (v) => (v % 1 ? Number(v.toFixed(5)) : v);
const floatRegex = /(-)?([\d]*\.?[\d])+/g;
const colorRegex = /(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2,3}\s*\/*\s*[\d\.]+%?\))/gi;
const singleColorRegex = /^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2,3}\s*\/*\s*[\d\.]+%?\))$/i;
function isString(v) {
    return typeof v === 'string';
}

const number = {
    test: (v) => typeof v === 'number',
    parse: parseFloat,
    transform: (v) => v,
};
const alpha = Object.assign(Object.assign({}, number), { transform: clamp(0, 1) });
const scale = Object.assign(Object.assign({}, number), { default: 1 });

const createUnitType = (unit) => ({
    test: (v) => isString(v) && v.endsWith(unit) && v.split(' ').length === 1,
    parse: parseFloat,
    transform: (v) => `${v}${unit}`,
});
const degrees = createUnitType('deg');
const percent = createUnitType('%');
const px = createUnitType('px');
const vh = createUnitType('vh');
const vw = createUnitType('vw');
const progressPercentage = Object.assign(Object.assign({}, percent), { parse: (v) => percent.parse(v) / 100, transform: (v) => percent.transform(v * 100) });

const isColorString = (type, testProp) => (v) => {
    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||
        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));
};
const splitColor = (aName, bName, cName) => (v) => {
    if (!isString(v))
        return v;
    const [a, b, c, alpha] = v.match(floatRegex);
    return {
        [aName]: parseFloat(a),
        [bName]: parseFloat(b),
        [cName]: parseFloat(c),
        alpha: alpha !== undefined ? parseFloat(alpha) : 1,
    };
};

const hsla = {
    test: isColorString('hsl', 'hue'),
    parse: splitColor('hue', 'saturation', 'lightness'),
    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {
        return ('hsla(' +
            Math.round(hue) +
            ', ' +
            percent.transform(sanitize(saturation)) +
            ', ' +
            percent.transform(sanitize(lightness)) +
            ', ' +
            sanitize(alpha.transform(alpha$1)) +
            ')');
    },
};

const clampRgbUnit = clamp(0, 255);
const rgbUnit = Object.assign(Object.assign({}, number), { transform: (v) => Math.round(clampRgbUnit(v)) });
const rgba = {
    test: isColorString('rgb', 'red'),
    parse: splitColor('red', 'green', 'blue'),
    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => 'rgba(' +
        rgbUnit.transform(red) +
        ', ' +
        rgbUnit.transform(green) +
        ', ' +
        rgbUnit.transform(blue) +
        ', ' +
        sanitize(alpha.transform(alpha$1)) +
        ')',
};

function parseHex(v) {
    let r = '';
    let g = '';
    let b = '';
    let a = '';
    if (v.length > 5) {
        r = v.substr(1, 2);
        g = v.substr(3, 2);
        b = v.substr(5, 2);
        a = v.substr(7, 2);
    }
    else {
        r = v.substr(1, 1);
        g = v.substr(2, 1);
        b = v.substr(3, 1);
        a = v.substr(4, 1);
        r += r;
        g += g;
        b += b;
        a += a;
    }
    return {
        red: parseInt(r, 16),
        green: parseInt(g, 16),
        blue: parseInt(b, 16),
        alpha: a ? parseInt(a, 16) / 255 : 1,
    };
}
const hex = {
    test: isColorString('#'),
    parse: parseHex,
    transform: rgba.transform,
};

const color = {
    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),
    parse: (v) => {
        if (rgba.test(v)) {
            return rgba.parse(v);
        }
        else if (hsla.test(v)) {
            return hsla.parse(v);
        }
        else {
            return hex.parse(v);
        }
    },
    transform: (v) => {
        return isString(v)
            ? v
            : v.hasOwnProperty('red')
                ? rgba.transform(v)
                : hsla.transform(v);
    },
};

const colorToken = '${c}';
const numberToken = '${n}';
function test(v) {
    var _a, _b, _c, _d;
    return (isNaN(v) &&
        isString(v) &&
        ((_b = (_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0) + ((_d = (_c = v.match(colorRegex)) === null || _c === void 0 ? void 0 : _c.length) !== null && _d !== void 0 ? _d : 0) > 0);
}
function analyse(v) {
    if (typeof v === 'number')
        v = `${v}`;
    const values = [];
    let numColors = 0;
    const colors = v.match(colorRegex);
    if (colors) {
        numColors = colors.length;
        v = v.replace(colorRegex, colorToken);
        values.push(...colors.map(color.parse));
    }
    const numbers = v.match(floatRegex);
    if (numbers) {
        v = v.replace(floatRegex, numberToken);
        values.push(...numbers.map(number.parse));
    }
    return { values, numColors, tokenised: v };
}
function parse(v) {
    return analyse(v).values;
}
function createTransformer(v) {
    const { values, numColors, tokenised } = analyse(v);
    const numValues = values.length;
    return (v) => {
        let output = tokenised;
        for (let i = 0; i < numValues; i++) {
            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors ? color.transform(v[i]) : sanitize(v[i]));
        }
        return output;
    };
}
const convertNumbersToZero = (v) => typeof v === 'number' ? 0 : v;
function getAnimatableNone(v) {
    const parsed = parse(v);
    const transformer = createTransformer(v);
    return transformer(parsed.map(convertNumbersToZero));
}
const complex = { test, parse, createTransformer, getAnimatableNone };

const maxDefaults = new Set(['brightness', 'contrast', 'saturate', 'opacity']);
function applyDefaultFilter(v) {
    let [name, value] = v.slice(0, -1).split('(');
    if (name === 'drop-shadow')
        return v;
    const [number] = value.match(floatRegex) || [];
    if (!number)
        return v;
    const unit = value.replace(number, '');
    let defaultValue = maxDefaults.has(name) ? 1 : 0;
    if (number !== value)
        defaultValue *= 100;
    return name + '(' + defaultValue + unit + ')';
}
const functionRegex = /([a-z-]*)\(.*?\)/g;
const filter = Object.assign(Object.assign({}, complex), { getAnimatableNone: (v) => {
        const functions = v.match(functionRegex);
        return functions ? functions.map(applyDefaultFilter).join(' ') : v;
    } });

exports.alpha = alpha;
exports.color = color;
exports.complex = complex;
exports.degrees = degrees;
exports.filter = filter;
exports.hex = hex;
exports.hsla = hsla;
exports.number = number;
exports.percent = percent;
exports.progressPercentage = progressPercentage;
exports.px = px;
exports.rgbUnit = rgbUnit;
exports.rgba = rgba;
exports.scale = scale;
exports.vh = vh;
exports.vw = vw;


/***/ })

}]);
//# sourceMappingURL=vendors-node_modules_material-tailwind_react_index_js-node_modules_react-countup_build_index_-791a35.js.map?ver=6a7933f67a05bccab440